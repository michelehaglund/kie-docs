<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE book [
<!ENTITY % BOOK_ENTITIES SYSTEM "master.ent">
%BOOK_ENTITIES;
<!ENTITY % sgml.features "IGNORE">
<!ENTITY % xml.features "INCLUDE">
<!ENTITY % DOCBOOK_ENTS PUBLIC "-//OASIS//ENTITIES DocBook Character Entities V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/dbcentx.mod">
%DOCBOOK_ENTS;
]>
<book version="5.0" xml:lang="en-US" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
	<?asciidoc-toc ?><?asciidoc-numbered ?>
	<info>
		<title>Getting started with Red Hat Process Automation Manager</title>
		<subtitle></subtitle>
		 <date>2021-01-28</date>
		<productname>Red Hat Process Automation Manager</productname>
		<productnumber>7.10</productnumber>
		<abstract>
			<para>
				This document describes how to get started with decision services, process services, and planning solutions in Red Hat Process Automation Manager.
			</para>
		</abstract>
		<xi:include href="Common_Content/Legal_Notice.xml" xmlns:xi="http://www.w3.org/2001/XInclude" />
	</info>
	<preface>
		<title>Preface</title>
		<simpara>
			As a developer of business decisions and processes , you can use Red Hat Process Automation Manager to develop decision services and process services using a variety of available assets. You can also use Red Hat Business Optimizer to find the optimal solution to planning problems based on a set of limited resources and under specific constraints.
		</simpara>
	</preface>
	<preface xml:id="snip-conscious-language_getting-started">
		<title>Making open source more inclusive</title>
		<simpara>
			Red Hat is committed to replacing problematic language in our code, documentation, and web properties. We are beginning with these four terms: master, slave, blacklist, and whitelist. Because of the enormity of this endeavor, these changes will be implemented gradually over several upcoming releases. For more details, see <link xlink:href="https://www.redhat.com/en/blog/making-open-source-more-inclusive-eradicating-problematic-language"><emphasis>our CTO Chris Wright’s message</emphasis></link>.
		</simpara>
	</preface>
	<part xml:id="assembly-getting-started-decision-services">
		<title>Getting started with decision services in Red Hat Process Automation Manager</title>
		<partintro>
			<simpara>
				As a business rules developer, you can use Business Central in Red Hat Process Automation Manager or the Red Hat Process Automation Manager DMN modeler in VSCode to design a variety of decision services. Red Hat Process Automation Manager provides example projects with example business assets directly in Business Central as a reference. This document describes how to create and test an example traffic violation project based on the <emphasis role="strong">Traffic_Violation</emphasis> sample project included in Business Central. This sample project uses a Decision Model and Notation (DMN) model to define driver penalty and suspension rules in a traffic violation decision service. You can follow the steps in this document to create the project and the assets it contains, or open and review the existing <emphasis role="strong">Traffic_Violation</emphasis> sample project.
			</simpara>
			<simpara>
				For more information about the DMN components and implementation in Red Hat Process Automation Manager, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/developing_decision_services_in_red_hat_process_automation_manager#assembly-dmn-models"><emphasis>Designing a decision service using DMN models</emphasis></link>.
			</simpara>
			<itemizedlist>
				<title>Prerequisites</title>
				<listitem>
					<simpara>
						Red Hat JBoss Enterprise Application Platform 7.3 is installed. For installation information, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.3/html-single/installation_guide/"><emphasis>Red Hat JBoss Enterprise Application Platform 7.3 Installation Guide</emphasis></link>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Red Hat Process Automation Manager is installed and configured with KIE Server. For more information see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/installing_and_configuring_red_hat_process_automation_manager#assembly-install-on-eap"><emphasis>Installing and configuring Red Hat Process Automation Manager on Red Hat JBoss EAP 7.3</emphasis></link>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Red Hat Process Automation Manager is running and you can log in to Business Central with the <literal>developer</literal> role. For more information, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/installing_and_configuring_red_hat_process_automation_manager#assembly-planning"><emphasis>Planning a Red Hat Process Automation Manager installation</emphasis></link>.
					</simpara>
				</listitem>
			</itemizedlist>
		</partintro>
		<chapter xml:id="decision-examples-central-con_getting-started-decision-services">
			<title>Sample projects and business assets in Business Central</title>
			<simpara>
				Business Central contains sample projects with business assets that you can use as a reference for the rules, processes, or other assets that you create in your own Red Hat Process Automation Manager projects. Each sample project is designed differently to demonstrate process automation, decision management, or business optimization assets and logic in Red Hat Process Automation Manager.
			</simpara>
			<note>
				<simpara>
					Red Hat does not provide support for the sample code included in the Red Hat Process Automation Manager distribution.
				</simpara>
			</note>
			<simpara>
				The following sample projects are available in Business Central:
			</simpara>
			<itemizedlist>
				<listitem>
					<simpara>
						<emphasis role="strong">Course_Scheduling</emphasis>: (Business optimization) Course scheduling and curriculum decision process. Assigns lectures to rooms and determines a student’s curriculum based on factors, such as course conflicts and class room capacity.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<emphasis role="strong">Dinner_Party</emphasis>: (Business optimization) Guest seating optimization using guided decision tables. Assigns guest seating based on each guest’s job type, political beliefs, and known relationships.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<emphasis role="strong">Employee_Rostering</emphasis>: (Business optimization) Employee rostering optimization using decision and solver assets. Assigns employees to shifts based on skills.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<emphasis role="strong">Evaluation_Process</emphasis>: (Process automation) Evaluation process using business process assets. Evaluates employees based on performance.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<emphasis role="strong">IT_Orders</emphasis>: (Process automation and case management) Ordering case using business process and case management assets. Places an IT hardware order based on needs and approvals.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<emphasis role="strong">Mortgages</emphasis>: (Decision management with rules) Loan approval process using rule-based decision assets. Determines loan eligibility based on applicant data and qualifications.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<emphasis role="strong">Mortgage_Process</emphasis>: (Process automation) Loan approval process using business process and decision assets. Determines loan eligibility based on applicant data and qualifications.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<emphasis role="strong">OptaCloud</emphasis>: (Business optimization) Resource allocation optimization using decision and solver assets. Assigns processes to computers with limited resources.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<emphasis role="strong">Traffic_Violation</emphasis>: (Decision management with DMN) Traffic violation decision service using a Decision Model and Notation (DMN) model. Determines driver penalty and suspension based on traffic violations.
					</simpara>
				</listitem>
			</itemizedlist>
			<section xml:id="decision-examples-central-proc_getting-started-decision-services">
				<title>Accessing sample projects and business assets in Business Central</title>
				<simpara>
					You can use the sample projects in Business Central to explore business assets as a reference for the rules or other assets that you create in your own Red Hat Process Automation Manager projects.
				</simpara>
				<itemizedlist>
					<title>Prerequisites</title>
					<listitem>
						<simpara>
							Business Central is installed and running. For installation options, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/installing_and_configuring_red_hat_process_automation_manager#assembly-planning"><emphasis>Planning a Red Hat Process Automation Manager installation</emphasis></link>.
						</simpara>
					</listitem>
				</itemizedlist>
				<orderedlist numeration="arabic">
					<title>Procedure</title>
					<listitem>
						<simpara>
							In Business Central, go to <emphasis role="strong">Menu</emphasis> → <emphasis role="strong">Design</emphasis> → <emphasis role="strong">Projects</emphasis>. If there are existing projects, you can access the samples by clicking on the <emphasis role="strong">MySpace</emphasis> default space and selecting <emphasis role="strong">Try Samples</emphasis> from the <emphasis role="strong">Add Project</emphasis> drop-down menu. If there are no existing projects, click <emphasis role="strong">Try samples</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Review the descriptions for each sample project to determine which project you want to explore. Each sample project is designed differently to demonstrate process automation, decision management, or business optimization assets and logic in Red Hat Process Automation Manager.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Select one or more sample projects and click <emphasis role="strong">Ok</emphasis> to add the projects to your space.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							In the <emphasis role="strong">Projects</emphasis> page of your space, select one of the sample projects to view the assets for that project.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Select each asset to explore how the project is designed to achieve the specified goal or workflow. Some of the sample projects contain more than one page of assets. Click the left or right arrows in the upper-right corner to view the full asset list.
						</simpara>
						<figure>
							<title>Asset page selection</title>
							<mediaobject>
								<imageobject>
									<imagedata fileref="images/_images/getting-started/next-page.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>Navigate through asset pages</phrase>
								</textobject>
							</mediaobject>
						</figure>
					</listitem>
					<listitem>
						<simpara>
							In the upper-right corner of the project <emphasis role="strong">Assets</emphasis> page, click <emphasis role="strong">Build</emphasis> to build the sample project or <emphasis role="strong">Deploy</emphasis> to build the project and then deploy it to KIE Server.
						</simpara>
						<note>
							<simpara>
								You can also select the <emphasis role="strong">Build &amp; Install</emphasis> option to build the project and publish the KJAR file to the configured Maven repository without deploying to a KIE Server. In a development environment, you can click <emphasis role="strong">Deploy</emphasis> to deploy the built KJAR file to a KIE Server without stopping any running instances (if applicable), or click <emphasis role="strong">Redeploy</emphasis> to deploy the built KJAR file and replace all instances. The next time you deploy or redeploy the built KJAR, the previous deployment unit (KIE container) is automatically updated in the same target KIE Server. In a production environment, the <emphasis role="strong">Redeploy</emphasis> option is disabled and you can click <emphasis role="strong">Deploy</emphasis> only to deploy the built KJAR file to a new deployment unit (KIE container) on a KIE Server.
							</simpara>
							<simpara>
								To configure the KIE Server environment mode, set the <literal>org.kie.server.mode</literal> system property to <literal>org.kie.server.mode=development</literal> or <literal>org.kie.server.mode=production</literal>. To configure the deployment behavior for a corresponding project in Business Central, go to project <emphasis role="strong">Settings</emphasis> → <emphasis role="strong">General Settings</emphasis> → <emphasis role="strong">Version</emphasis>, toggle the <emphasis role="strong">Development Mode</emphasis> option, and click <emphasis role="strong">Save</emphasis>. By default, KIE Server and all new projects in Business Central are in development mode. You cannot deploy a project with <emphasis role="strong">Development Mode</emphasis> turned on or with a manually added <literal>SNAPSHOT</literal> version suffix to a KIE Server that is in production mode.
							</simpara>
						</note>
						<simpara>
							To review project deployment details, click <emphasis role="strong">View deployment details</emphasis> in the deployment banner at the top of the screen or in the <emphasis role="strong">Deploy</emphasis> drop-down menu. This option directs you to the <emphasis role="strong">Menu</emphasis> → <emphasis role="strong">Deploy</emphasis> → <emphasis role="strong">Execution Servers</emphasis> page.
						</simpara>
					</listitem>
				</orderedlist>
			</section>
		</chapter>
		<chapter xml:id="con-BPMN-DMN-modelers_getting-started-decision-services">
			<title>Red Hat Process Automation Manager BPMN and DMN modelers</title>
			<simpara>
				Red Hat Process Automation Manager provides the following extensions or applications that you can use to design Business Process Model and Notation (BPMN) process models and Decision Model and Notation (DMN) decision models using graphical modelers.
			</simpara>
			<itemizedlist>
				<listitem>
					<simpara>
						<emphasis role="strong">Business Central</emphasis>: Enables you to view and design BPMN models, DMN models, and test scenario files in a related embedded designer.
					</simpara>
					<simpara>
						To use Business Central, you can set up a development environment containing a Business Central to design business rules and processes, and a KIE Server to execute and test the created business rules and processes.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<emphasis role="strong">Red Hat Process Automation Manager VSCode extension</emphasis>: Enables you to view and design BPMN models, DMN models, and test scenario files in Visual Studio Code (VSCode). The VSCode extension requires VSCode 1.46.0 or later.
					</simpara>
					<simpara>
						To install the Red Hat Process Automation Manager VSCode extension, select the <emphasis role="strong">Extensions</emphasis> menu option in VSCode and search for and install the <emphasis role="strong">Red Hat Business Automation Bundle</emphasis> extension.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<emphasis role="strong">Standalone BPMN and DMN editors</emphasis>: Enable you to view and design BPMN and DMN models embedded in your web applications. To download the necessary files, you can either use the NPM artifacts from the <link xlink:href="https://npm.registry.redhat.com/">NPM registry</link> or download the JavaScript files directly for the DMN standalone editor library at <literal><link xlink:href="https://&lt;YOUR_PAGE&gt;/dmn/index.js">https://&lt;YOUR_PAGE&gt;/dmn/index.js</link></literal> and for the BPMN standalone editor library at <literal><link xlink:href="https://&lt;YOUR_PAGE&gt;/bpmn/index.js">https://&lt;YOUR_PAGE&gt;/bpmn/index.js</link></literal>.
					</simpara>
				</listitem>
			</itemizedlist>
			<section xml:id="proc-vscode-extension_getting-started-decision-services">
				<title>Installing the Red Hat Process Automation Manager VSCode extension bundle</title>
				<simpara>
					Red Hat Process Automation Manager provides a <emphasis role="strong">Red Hat Business Automation Bundle</emphasis> VSCode extension that enables you to design Decision Model and Notation (DMN) decision models, Business Process Model and Notation (BPMN) 2.0 business processes, and test scenarios directly in VSCode. Red Hat Process Automation Manager also provides individual <emphasis role="strong">DMN Editor</emphasis> and <emphasis role="strong">BPMN Editor</emphasis> VSCode extensions for DMN or BPMN support only, if needed.
				</simpara>
				<itemizedlist>
					<title>Prerequisites</title>
					<listitem>
						<simpara>
							<link xlink:href="https://code.visualstudio.com/">VSCode</link> 1.46.0 or later is installed.
						</simpara>
					</listitem>
				</itemizedlist>
				<orderedlist numeration="arabic">
					<title>Procedure</title>
					<listitem>
						<simpara>
							In your VSCode IDE, select the <emphasis role="strong">Extensions</emphasis> menu option and search for <emphasis role="strong">Red Hat Business Automation Bundle</emphasis> for DMN, BPMN, and test scenario file support.
						</simpara>
						<simpara>
							For DMN or BPMN file support only, you can also search for the individual <emphasis role="strong">DMN Editor</emphasis> or <emphasis role="strong">BPMN Editor</emphasis> extensions.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							When the <emphasis role="strong">Red Hat Business Automation Bundle</emphasis> extension appears in VSCode, select it and click <emphasis role="strong">Install</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							For optimal VSCode editor behavior, after the extension installation is complete, reload or close and re-launch your instance of VSCode.
						</simpara>
					</listitem>
				</orderedlist>
				<simpara>
					After you install the VSCode extension bundle, any <literal>.dmn</literal>, <literal>.bpmn</literal>, or <literal>.bpmn2</literal> files that you open in VSCode are automatically displayed as graphical models. Additionally, any <literal>.scesim</literal> files that you open are automatically displayed as tabular test scenario models for testing the functionality of your business decisions.
				</simpara>
				<simpara>
					If the DMN, BPMN, or test scenario modelers open only the XML source of a DMN, BPMN, or test scenario file and displays an error message, review the reported errors and the model file to ensure that all elements are correctly defined.
				</simpara>
				<note>
					<simpara>
						For new DMN or BPMN models, you can also enter <literal>dmn.new</literal> or <literal>bpmn.new</literal> in a web browser to design your DMN or BPMN model in the online modeler. When you finish creating your model, you can click <emphasis role="strong">Download</emphasis> in the online modeler page to import your DMN or BPMN file into your Red Hat Process Automation Manager project in VSCode.
					</simpara>
				</note>
			</section>
			<section xml:id="proc-standalone-editors_getting-started-decision-services">
				<title>Configuring the Red Hat Process Automation Manager standalone editors</title>
				<simpara>
					Red Hat Process Automation Manager provides standalone editors that are distributed in a self-contained library providing an all-in-one JavaScript file for each editor. The JavaScript file uses a comprehensive API to set and control the editor.
				</simpara>
				<simpara>
					You can install the standalone editors in three ways:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							Download each JavaScript file manually
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Use the NPM package
						</simpara>
					</listitem>
				</itemizedlist>
				<orderedlist numeration="arabic">
					<title>Procedure</title>
					<listitem>
						<simpara>
							Install the standalone editors using one of the following methods:
						</simpara>
						<simpara>
							<emphasis role="strong">Download each JavaScript file manually</emphasis>: For this method, follow these steps:
						</simpara>
						<orderedlist numeration="loweralpha">
							<listitem>
								<simpara>
									Download the JavaScript files.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Add the downloaded Javascript files to your hosted application.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Add the following <literal>&lt;script&gt;</literal> tag to your HTML page:
								</simpara>
								<formalpara>
									<title>Script tag for your HTML page for the DMN editor</title>
									<para>
										
<screen>&lt;script src="https://&lt;YOUR_PAGE&gt;/dmn/index.js"&gt;&lt;/script&gt;</screen>
									</para>
								</formalpara>
								<formalpara>
									<title>Script tag for your HTML page for the BPMN editor</title>
									<para>
										
<screen>&lt;script src="https://&lt;YOUR_PAGE&gt;/bpmn/index.js"&gt;&lt;/script&gt;</screen>
									</para>
								</formalpara>
							</listitem>
						</orderedlist>
						<simpara>
							<emphasis role="strong">Use the NPM package</emphasis>: For this method, follow these steps:
						</simpara>
						<orderedlist numeration="loweralpha">
							<listitem>
								<simpara>
									Add the NPM package to your <literal>package.json</literal> file:
								</simpara>
								<formalpara>
									<title>Adding the NPM package</title>
									<para>
										
<screen>npm install @redhat/kogito-tooling-kie-editors-standalone</screen>
									</para>
								</formalpara>
							</listitem>
							<listitem>
								<simpara>
									Import each editor library to your TypeScript file:
								</simpara>
								<formalpara>
									<title>Importing each editor</title>
									<para>
										
<screen>import * as DmnEditor from "@redhat/kogito-tooling-kie-editors-standalone/dist/dmn"
import * as BpmnEditor from "@redhat/kogito-tooling-kie-editors-standalone/dist/bpmn"</screen>
									</para>
								</formalpara>
							</listitem>
						</orderedlist>
					</listitem>
					<listitem>
						<simpara>
							After you install the standalone editors, open the required editor by using the provided editor API, as shown in the following example for opening a DMN editor. The API is the same for each editor.
						</simpara>
						<formalpara>
							<title>Opening the DMN standalone editor</title>
							<para>
								
<programlisting language="java" linenumbering="unnumbered">const editor = DmnEditor.open({
  container: document.getElementById("dmn-editor-container"),
  initialContent: Promise.resolve(""),
  readOnly: false,
  origin: "",
  resources: new Map([
    [
      "MyIncludedModel.dmn",
      {
        contentType: "text",
        content: Promise.resolve("")
      }
    ]
  ])
});</programlisting>
							</para>
						</formalpara>
						<simpara>
							Use the following parameters with the editor API:
						</simpara>
						<table colsep="1" frame="all" rowsep="1">
							<title>Example parameters</title>
							<tgroup cols="2">
								<colspec colname="col_1" colwidth="40*"></colspec>
								<colspec colname="col_2" colwidth="60*"></colspec>
								<thead>
									<row>
										<entry align="left" valign="top">Parameter</entry>
										<entry align="left" valign="top">Description</entry>
									</row>
								</thead>
								<tbody>
									<row>
										<entry align="left" valign="top">
										<simpara>
											<literal>container</literal>
										</simpara>
										</entry>
										<entry align="left" valign="top">
										<simpara>
											HTML element in which the editor is appended.
										</simpara>
										</entry>
									</row>
									<row>
										<entry align="left" valign="top">
										<simpara>
											<literal>initialContent</literal>
										</simpara>
										</entry>
										<entry align="left" valign="top">
										<simpara>
											Promise to a DMN model content. This parameter can be empty, as shown in the following examples:
										</simpara>
										<itemizedlist>
											<listitem>
												<simpara>
													<literal>Promise.resolve("")</literal>
												</simpara>
											</listitem>
											<listitem>
												<simpara>
													<literal>Promise.resolve("&lt;DIAGRAM_CONTENT_DIRECTLY_HERE&gt;")</literal>
												</simpara>
											</listitem>
											<listitem>
												<simpara>
													<literal>fetch("MyDmnModel.dmn").then(content ⇒ content.text())</literal>
												</simpara>
											</listitem>
										</itemizedlist>
										</entry>
									</row>
									<row>
										<entry align="left" valign="top">
										<simpara>
											<literal>readOnly</literal> (Optional)
										</simpara>
										</entry>
										<entry align="left" valign="top">
										<simpara>
											Enables you to allow changes in the editor. Set to <literal>false</literal> (default) to allow content editing and <literal>true</literal> for read-only mode in editor.
										</simpara>
										<note>
											<simpara>
												Only the DMN editor supports read-only mode for now.
											</simpara>
										</note>
										</entry>
									</row>
									<row>
										<entry align="left" valign="top">
										<simpara>
											<literal>origin</literal> (Optional)
										</simpara>
										</entry>
										<entry align="left" valign="top">
										<simpara>
											Origin of the repository. The default value is <literal>window.location.origin</literal>.
										</simpara>
										</entry>
									</row>
									<row>
										<entry align="left" valign="top">
										<simpara>
											<literal>resources</literal> (Optional)
										</simpara>
										</entry>
										<entry align="left" valign="top">
										<simpara>
											Map of resources for the editor. For example, this parameter is used to provide included models for the DMN editor or work item definitions for the BPMN editor. Each entry in the map contains a resource name and an object that consists of <literal>content-type</literal> (<literal>text</literal> or <literal>binary</literal>) and <literal>content</literal> (similar to the <literal>initialContent</literal> parameter).
										</simpara>
										</entry>
									</row>
								</tbody>
							</tgroup>
						</table>
						<simpara>
							The returned object contains the methods that are required to manipulate the editor.
						</simpara>
						<table colsep="1" frame="all" rowsep="1">
							<title>Returned object methods</title>
							<tgroup cols="2">
								<colspec colname="col_1" colwidth="40*"></colspec>
								<colspec colname="col_2" colwidth="60*"></colspec>
								<thead>
									<row>
										<entry align="left" valign="top">Method</entry>
										<entry align="left" valign="top">Description</entry>
									</row>
								</thead>
								<tbody>
									<row>
										<entry align="left" valign="top">
										<simpara>
											<literal>getContent(): Promise&lt;string&gt;</literal>
										</simpara>
										</entry>
										<entry align="left" valign="top">
										<simpara>
											Returns a promise containing the editor content.
										</simpara>
										</entry>
									</row>
									<row>
										<entry align="left" valign="top">
										<simpara>
											<literal>setContent(content: string): void</literal>
										</simpara>
										</entry>
										<entry align="left" valign="top">
										<simpara>
											Sets the content of the editor.
										</simpara>
										</entry>
									</row>
									<row>
										<entry align="left" valign="top">
										<simpara>
											<literal>getPreview(): Promise&lt;string&gt;</literal>
										</simpara>
										</entry>
										<entry align="left" valign="top">
										<simpara>
											Returns a promise containing an SVG string of the current diagram.
										</simpara>
										</entry>
									</row>
									<row>
										<entry align="left" valign="top">
										<simpara>
											<literal>subscribeToContentChanges(callback: (isDirty: boolean) ⇒ void): (isDirty: boolean) ⇒ void</literal>
										</simpara>
										</entry>
										<entry align="left" valign="top">
										<simpara>
											Sets a callback to be called when the content changes in the editor and returns the same callback to be used for unsubscription.
										</simpara>
										</entry>
									</row>
									<row>
										<entry align="left" valign="top">
										<simpara>
											<literal>unsubscribeToContentChanges(callback: (isDirty: boolean) ⇒ void): void</literal>
										</simpara>
										</entry>
										<entry align="left" valign="top">
										<simpara>
											Unsubscribes the passed callback when the content changes in the editor.
										</simpara>
										</entry>
									</row>
									<row>
										<entry align="left" valign="top">
										<simpara>
											<literal>markAsSaved(): void</literal>
										</simpara>
										</entry>
										<entry align="left" valign="top">
										<simpara>
											Resets the editor state that indicates that the content in the editor is saved. Also, it activates the subscribed callbacks related to content change.
										</simpara>
										</entry>
									</row>
									<row>
										<entry align="left" valign="top">
										<simpara>
											<literal>undo(): void</literal>
										</simpara>
										</entry>
										<entry align="left" valign="top">
										<simpara>
											Undoes the last change in the editor. Also, it activates the subscribed callbacks related to content change.
										</simpara>
										</entry>
									</row>
									<row>
										<entry align="left" valign="top">
										<simpara>
											<literal>redo(): void</literal>
										</simpara>
										</entry>
										<entry align="left" valign="top">
										<simpara>
											Redoes the last undone change in the editor. Also, it activates the subscribed callbacks related to content change.
										</simpara>
										</entry>
									</row>
									<row>
										<entry align="left" valign="top">
										<simpara>
											<literal>close(): void</literal>
										</simpara>
										</entry>
										<entry align="left" valign="top">
										<simpara>
											Closes the editor.
										</simpara>
										</entry>
									</row>
									<row>
										<entry align="left" valign="top">
										<simpara>
											<literal>getElementPosition(selector: string): Promise&lt;Rect&gt;</literal>
										</simpara>
										</entry>
										<entry align="left" valign="top">
										<simpara>
											Provides an alternative to extend the standard query selector when an element lives inside a canvas or a video component. The <literal>selector</literal> parameter must follow the <literal>&lt;PROVIDER&gt;:::&lt;SELECT&gt;</literal> format, such as <literal>Canvas:::MySquare</literal> or <literal>Video:::PresenterHand</literal>. This method returns a <literal>Rect</literal> representing the element position.
										</simpara>
										</entry>
									</row>
									<row>
										<entry align="left" valign="top">
										<simpara>
											<literal>envelopeApi: MessageBusClientApi&lt;KogitoEditorEnvelopeApi&gt;</literal>
										</simpara>
										</entry>
										<entry align="left" valign="top">
										<simpara>
											This is an advanced editor API. For more information about advanced editor API, see <link xlink:href="https://github.com/kiegroup/kogito-tooling/blob/master/packages/envelope-bus/src/api/index.ts#L43-L56">MessageBusClientApi</link> and <link xlink:href="https://github.com/kiegroup/kogito-tooling/blob/master/packages/editor/src/api/KogitoEditorEnvelopeApi.ts#L34-L41">KogitoEditorEnvelopeApi</link>.
										</simpara>
										</entry>
									</row>
								</tbody>
							</tgroup>
						</table>
					</listitem>
				</orderedlist>
			</section>
		</chapter>
		<chapter xml:id="dmn-gs-new-project-creating-proc">
			<title>Creating the traffic violations project</title>
			<simpara>
				For this example, create a new project called <literal>traffic-violation</literal>. A project is a container for assets such as data objects, DMN assets, and test scenarios. This example project that you are creating is similar to the existing <emphasis role="strong">Traffic_Violation</emphasis> sample project in Business Central.
			</simpara>
			<orderedlist numeration="arabic">
				<title>Procedure</title>
				<listitem>
					<simpara>
						In Business Central, go to <emphasis role="strong">Menu</emphasis> → <emphasis role="strong">Design</emphasis> → <emphasis role="strong">Projects</emphasis>.
					</simpara>
					<simpara>
						Red Hat Process Automation Manager provides a default space called <emphasis role="strong">MySpace</emphasis>, as shown in the following image. You can use the default space to create and test example projects.
					</simpara>
					<figure>
						<title>Default space</title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="images/_images/getting-started/spaces-teams.png" format="PNG" />
							</imageobject>
							<textobject>
								<phrase>spaces teams</phrase>
							</textobject>
						</mediaobject>
					</figure>
				</listitem>
				<listitem>
					<simpara>
						Click <emphasis role="strong">Add Project</emphasis>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Enter <literal>traffic-violation</literal> in the <emphasis role="strong">Name</emphasis> field.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Click <emphasis role="strong">Add</emphasis>.
					</simpara>
					<figure>
						<title>Add Project window</title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="images/_images/dmn/dmn-new-project-gs.png" format="PNG" />
							</imageobject>
							<textobject>
								<phrase>dmn new project gs</phrase>
							</textobject>
						</mediaobject>
					</figure>
					<simpara>
						The <emphasis role="strong">Assets</emphasis> view of the project opens.
					</simpara>
				</listitem>
			</orderedlist>
		</chapter>
		<chapter xml:id="dmn-con_getting-started-decision-services">
			<title>Decision Model and Notation (DMN)</title>
			<simpara>
				Decision Model and Notation (DMN) is a standard established by the Object Management Group (OMG) for describing and modeling operational decisions. DMN defines an XML schema that enables DMN models to be shared between DMN-compliant platforms and across organizations so that business analysts and business rules developers can collaborate in designing and implementing DMN decision services. The DMN standard is similar to and can be used together with the Business Process Model and Notation (BPMN) standard for designing and modeling business processes.
			</simpara>
			<simpara>
				For more information about the background and applications of DMN, see the OMG <link xlink:href="https://www.omg.org/spec/DMN">Decision Model and Notation specification</link>.
			</simpara>
			<section xml:id="dmn-gs-creating-drd-proc">
				<title>Creating the traffic violations DMN decision requirements diagram (DRD)</title>
				<simpara>
					A decision requirements diagram (DRD) is a visual representation of your DMN model. Use the DMN designer in Business Central to design the DRD for the traffic violations project and to define the decision logic of the DRD components.
				</simpara>
				<figure>
					<title>DRD for the Traffic Violations example</title>
					<mediaobject>
						<imageobject>
							<imagedata fileref="images/_images/dmn/dmn-traffic-violations-drd.png" format="PNG" />
						</imageobject>
						<textobject>
							<phrase>dmn traffic violations drd</phrase>
						</textobject>
					</mediaobject>
				</figure>
				<itemizedlist>
					<title>Prerequisites</title>
					<listitem>
						<simpara>
							You have created the traffic violations project in Business Central.
						</simpara>
					</listitem>
				</itemizedlist>
				<orderedlist numeration="arabic">
					<title>Procedure</title>
					<listitem>
						<simpara>
							On the <emphasis role="strong">traffic-violation</emphasis> project’s home page, click <emphasis role="strong">Add Asset</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							On the <emphasis role="strong">Add Asset</emphasis> page, click <emphasis role="strong">DMN</emphasis>. The <emphasis role="strong">Create new DMN</emphasis> window is opened.
						</simpara>
						<orderedlist numeration="loweralpha">
							<listitem>
								<simpara>
									In the <emphasis role="strong">Create new DMN</emphasis> window, enter <literal>Traffic Violation</literal> in the <emphasis role="strong">DMN</emphasis> name field.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									From the <emphasis role="strong">Package</emphasis> list, select <literal>com.myspace.traffic_violation</literal>.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Click <emphasis role="strong">Ok</emphasis>. The DMN asset in the DMN designer is opened.
								</simpara>
							</listitem>
						</orderedlist>
					</listitem>
					<listitem>
						<simpara>
							In the DMN designer canvas, drag two <emphasis role="strong">DMN Input Data</emphasis> input nodes onto the canvas.
						</simpara>
						<figure>
							<title>DMN Input Data nodes</title>
							<mediaobject>
								<imageobject>
									<imagedata fileref="images/_images/dmn/library_objects.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>library objects</phrase>
								</textobject>
							</mediaobject>
						</figure>
					</listitem>
					<listitem>
						<simpara>
							In the upper-right corner, click the 
							<inlinemediaobject>
								<imageobject>
									<imagedata fileref="images/_images/getting-started/diagram_properties.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>diagram properties</phrase>
								</textobject>
							</inlinemediaobject>
							 icon.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Double-click the input nodes and rename one to <literal>Driver</literal> and the other to <literal>Violation</literal>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Drag a <emphasis role="strong">DMN Decision</emphasis> decision node onto the canvas.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Double-click the decision node and rename it to <literal>Fine</literal>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click the <emphasis role="strong">Violation</emphasis> input node, select the <emphasis role="strong">Create DMN Information Requirement</emphasis> icon and click the <literal>Fine</literal> decision node to link the two nodes.
						</simpara>
						<figure>
							<title>Create DMN Information Requirement icon</title>
							<mediaobject>
								<imageobject>
									<imagedata fileref="images/_images/dmn/info-requirement.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>info requirement</phrase>
								</textobject>
							</mediaobject>
						</figure>
					</listitem>
					<listitem>
						<simpara>
							Drag a <emphasis role="strong">DMN Decision</emphasis> decision node onto the canvas.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Double-click the decision node and rename it to <literal>Should the driver be suspended?</literal>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click the <emphasis role="strong">Driver</emphasis> input node, select the <emphasis role="strong">Create DMN Information Requirement</emphasis> icon and click the <emphasis role="strong">Should the driver be suspended?</emphasis> decision node to link the two nodes.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click the <emphasis role="strong">Fine</emphasis> decision node, select the <emphasis role="strong">Create DMN Information Requirement</emphasis> icon, and select the <emphasis role="strong">Should the driver be suspended?</emphasis> decision node.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">Save</emphasis>.
						</simpara>
						<note>
							<simpara>
								As you periodically save a DRD, the DMN designer performs a static validation of the DMN model and might produce error messages until the model is defined completely. After you finish defining the DMN model completely, if any errors remain, troubleshoot the specified problems accordingly.
							</simpara>
						</note>
					</listitem>
				</orderedlist>
			</section>
			<section xml:id="dmn-gs-creating-custom-datatypes-proc">
				<title>Creating the traffic violations DMN custom data types</title>
				<simpara>
					DMN data types determine the structure of the data that you use within a table, column, or field in a DMN boxed expression for defining decision logic. You can use default DMN data types (such as string, number, or boolean) or you can create custom data types to specify additional fields and constraints that you want to implement for the boxed expression values. Use the DMN designer’s <emphasis role="strong">Data Types</emphasis> tab in Business Central to define the custom data types for the traffic violations project.
				</simpara>
				<figure>
					<title>The custom data types tab</title>
					<mediaobject>
						<imageobject>
							<imagedata fileref="images/_images/dmn/dmn-custom-datatypes-tab.png" format="PNG" />
						</imageobject>
						<textobject>
							<phrase>dmn custom datatypes tab</phrase>
						</textobject>
					</mediaobject>
				</figure>
				<simpara>
					The following tables list the <literal>tDriver</literal>, <literal>tViolation</literal>, and <literal>tFine</literal> custom data types that you will create for this project.
				</simpara>
				<table colsep="1" frame="all" rowsep="1">
					<title><literal>tDriver</literal> custom data type</title>
					<tgroup cols="2">
						<colspec colname="col_1" colwidth="50*"></colspec>
						<colspec colname="col_2" colwidth="50*"></colspec>
						<thead>
							<row>
								<entry align="left" valign="top">Name</entry>
								<entry align="left" valign="top">Type</entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry align="left" valign="top">
								<simpara>
									tDriver
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									Structure
								</simpara>
								</entry>
							</row>
							<row>
								<entry align="left" valign="top">
								<simpara>
									Name
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									string
								</simpara>
								</entry>
							</row>
							<row>
								<entry align="left" valign="top">
								<simpara>
									Age
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									number
								</simpara>
								</entry>
							</row>
							<row>
								<entry align="left" valign="top">
								<simpara>
									State
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									string
								</simpara>
								</entry>
							</row>
							<row>
								<entry align="left" valign="top">
								<simpara>
									City
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									string
								</simpara>
								</entry>
							</row>
							<row>
								<entry align="left" valign="top">
								<simpara>
									Points
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									number
								</simpara>
								</entry>
							</row>
						</tbody>
					</tgroup>
				</table>
				<table colsep="1" frame="all" rowsep="1">
					<title><literal>tViolation</literal> custom data type</title>
					<tgroup cols="2">
						<colspec colname="col_1" colwidth="50*"></colspec>
						<colspec colname="col_2" colwidth="50*"></colspec>
						<thead>
							<row>
								<entry align="left" valign="top">Name</entry>
								<entry align="left" valign="top">Type</entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry align="left" valign="top">
								<simpara>
									tViolation
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									Structure
								</simpara>
								</entry>
							</row>
							<row>
								<entry align="left" valign="top">
								<simpara>
									Code
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									string
								</simpara>
								</entry>
							</row>
							<row>
								<entry align="left" valign="top">
								<simpara>
									Date
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									date
								</simpara>
								</entry>
							</row>
							<row>
								<entry align="left" valign="top">
								<simpara>
									Type
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									string
								</simpara>
								</entry>
							</row>
							<row>
								<entry align="left" valign="top">
								<simpara>
									Speed Limit
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									number
								</simpara>
								</entry>
							</row>
							<row>
								<entry align="left" valign="top">
								<simpara>
									Actual Speed
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									number
								</simpara>
								</entry>
							</row>
						</tbody>
					</tgroup>
				</table>
				<table colsep="1" frame="all" rowsep="1">
					<title><literal>tFine</literal> custom data type</title>
					<tgroup cols="2">
						<colspec colname="col_1" colwidth="50*"></colspec>
						<colspec colname="col_2" colwidth="50*"></colspec>
						<thead>
							<row>
								<entry align="left" valign="top">Name</entry>
								<entry align="left" valign="top">Type</entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry align="left" valign="top">
								<simpara>
									tFine
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									Structure
								</simpara>
								</entry>
							</row>
							<row>
								<entry align="left" valign="top">
								<simpara>
									Amount
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									number
								</simpara>
								</entry>
							</row>
							<row>
								<entry align="left" valign="top">
								<simpara>
									Points
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									number
								</simpara>
								</entry>
							</row>
						</tbody>
					</tgroup>
				</table>
				<itemizedlist>
					<title>Prerequisites</title>
					<listitem>
						<simpara>
							You created the traffic violations DMN decision requirements diagram (DRDs) in Business Central.
						</simpara>
					</listitem>
				</itemizedlist>
				<orderedlist numeration="arabic">
					<title>Procedure</title>
					<listitem>
						<simpara>
							To create the <literal>tDriver</literal> custom data type, click <emphasis role="strong">Add a custom Data Type</emphasis> on the <emphasis role="strong">Data Types</emphasis> tab, enter <literal>tDriver</literal> in the <emphasis role="strong">Name</emphasis> field, and select <literal>Structure</literal> from the <emphasis role="strong">Type</emphasis> list.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click the check mark to the right of the new data type to save your changes.
						</simpara>
						<figure>
							<title>The tDriver custom data type</title>
							<mediaobject>
								<imageobject>
									<imagedata fileref="images/_images/dmn/dmn-tDriver-custom-datatype.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>dmn tDriver custom datatype</phrase>
								</textobject>
							</mediaobject>
						</figure>
					</listitem>
					<listitem>
						<simpara>
							Add each of the following nested data types to the <literal>tDriver</literal> structured data type by clicking the plus sign next to <literal>tDriver</literal> for each new nested data type. Click the check mark to the right of each new data type to save your changes.
						</simpara>
						<itemizedlist>
							<listitem>
								<simpara>
									<literal>Name</literal> (string)
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<literal>Age</literal> (number)
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<literal>State</literal> (string)
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<literal>City</literal> (string)
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<literal>Points</literal> (number)
								</simpara>
							</listitem>
						</itemizedlist>
					</listitem>
					<listitem>
						<simpara>
							To create the <literal>tViolation</literal> custom data type, click <emphasis role="strong">New Data Type</emphasis>, enter <literal>tViolation</literal> in the <emphasis role="strong">Name</emphasis> field, and select <literal>Structure</literal> from the <emphasis role="strong">Type</emphasis> list.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click the check mark to the right of the new data type to save your changes.
						</simpara>
						<figure>
							<title>The tViolation custom data type</title>
							<mediaobject>
								<imageobject>
									<imagedata fileref="images/_images/dmn/dmn-tViolation-custom-datatype.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>dmn tViolation custom datatype</phrase>
								</textobject>
							</mediaobject>
						</figure>
					</listitem>
					<listitem>
						<simpara>
							Add each of the following nested data types to the <literal>tViolation</literal> structured data type by clicking the plus sign next to <literal>tViolation</literal> for each new nested data type. Click the check mark to the right of each new data type to save your changes.
						</simpara>
						<itemizedlist>
							<listitem>
								<simpara>
									<literal>Code</literal> (string)
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<literal>Date</literal> (date)
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<literal>Type</literal> (string)
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<literal>Speed Limit</literal> (number)
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<literal>Actual Speed</literal> (number)
								</simpara>
							</listitem>
						</itemizedlist>
					</listitem>
					<listitem>
						<simpara>
							To add the following constraints to the <literal>Type</literal> nested data type, click the edit icon, click <emphasis role="strong">Add Constraints</emphasis>, and select <emphasis role="strong">Enumeration</emphasis> from the <emphasis role="strong">Select constraint type</emphasis> drop-down menu.
						</simpara>
						<itemizedlist>
							<listitem>
								<simpara>
									<literal>speed</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<literal>parking</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<literal>driving under the influence</literal>
								</simpara>
							</listitem>
						</itemizedlist>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">OK</emphasis>, then click the check mark to the right of the <emphasis role="strong">Type</emphasis> data type to save your changes.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							To create the <literal>tFine</literal> custom data type, click <emphasis role="strong">New Data Type</emphasis>, enter <literal>tFine</literal> in the <emphasis role="strong">Name</emphasis> field, select <literal>Structure</literal> from the <emphasis role="strong">Type</emphasis> list, and click <emphasis role="strong">Save</emphasis>.
						</simpara>
						<figure>
							<title>The tFine custom data type</title>
							<mediaobject>
								<imageobject>
									<imagedata fileref="images/_images/dmn/dmn-tFine-custom-datatype.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>dmn tFine custom datatype</phrase>
								</textobject>
							</mediaobject>
						</figure>
					</listitem>
					<listitem>
						<simpara>
							Add each of the following nested data types to the <literal>tFine</literal> structured data type by clicking the plus sign next to <literal>tFine</literal> for each new nested data type. Click the check mark to the right of each new data type to save your changes.
						</simpara>
						<itemizedlist>
							<listitem>
								<simpara>
									<literal>Amount</literal> (number)
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<literal>Points</literal> (number)
								</simpara>
							</listitem>
						</itemizedlist>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">Save</emphasis>.
						</simpara>
					</listitem>
				</orderedlist>
			</section>
			<section xml:id="dmn-gs-assigning-custom-datatypes-proc">
				<title>Assigning custom data types to the DRD input and decision nodes</title>
				<simpara>
					After you create the DMN custom data types, assign them to the appropriate <emphasis role="strong">DMN Input Data</emphasis> and <emphasis role="strong">DMN Decision</emphasis> nodes in the traffic violations DRD.
				</simpara>
				<itemizedlist>
					<title>Prerequisites</title>
					<listitem>
						<simpara>
							You have created the traffic violations DMN custom data types in Business Central.
						</simpara>
					</listitem>
				</itemizedlist>
				<orderedlist numeration="arabic">
					<title>Procedure</title>
					<listitem>
						<simpara>
							Click the <emphasis role="strong">Model</emphasis> tab on the DMN designer and click the <emphasis role="strong">Properties</emphasis> <inlinemediaobject>
								<imageobject>
									<imagedata fileref="images/_images/getting-started/diagram_properties.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>diagram properties</phrase>
								</textobject>
							</inlinemediaobject>
							 icon in the upper-right corner of the DMN designer to expose the DRD properties.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							In the DRD, select the <emphasis role="strong">Driver</emphasis> input data node and in the <emphasis role="strong">Properties</emphasis> panel, select <literal>tDriver</literal> from the <emphasis role="strong">Data type</emphasis> drop-down menu.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Select the <emphasis role="strong">Violation</emphasis> input data node and select <literal>tViolation</literal> from the <emphasis role="strong">Data type</emphasis> drop-down menu.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Select the <emphasis role="strong">Fine</emphasis> decision node and select <literal>tFine</literal> from the <emphasis role="strong">Data type</emphasis> drop-down menu.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Select the <emphasis role="strong">Should the driver be suspended?</emphasis> decision node and set the following properties:
						</simpara>
						<itemizedlist>
							<listitem>
								<simpara>
									<emphasis role="strong">Data type</emphasis>: <literal>string</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Question</emphasis>: <literal>Should the driver be suspended due to points on his driver license?</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Allowed Answers</emphasis>: <literal>Yes,No</literal>
								</simpara>
							</listitem>
						</itemizedlist>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">Save</emphasis>.
						</simpara>
					</listitem>
				</orderedlist>
				<simpara>
					You have assigned the custom data types to your DRD’s input and decision nodes.
				</simpara>
			</section>
			<section xml:id="dmn-gs-defining-decision-logic-proc">
				<title>Defining the traffic violations DMN decision logic</title>
				<simpara>
					To calculate the fine and to decide whether the driver is to be suspended or not, you can define the traffic violations DMN decision logic using a DMN decision table and context boxed expression.
				</simpara>
				<figure>
					<title>Fine expression</title>
					<mediaobject>
						<imageobject>
							<imagedata fileref="images/_images/dmn/dmn-gs-fine-decision-table.png" format="PNG" />
						</imageobject>
						<textobject>
							<phrase>dmn gs fine decision table</phrase>
						</textobject>
					</mediaobject>
				</figure>
				<figure>
					<title>Should the driver be suspended expression</title>
					<mediaobject>
						<imageobject>
							<imagedata fileref="images/_images/dmn/dmn-gs-context-table.png" format="PNG" />
						</imageobject>
						<textobject>
							<phrase>dmn gs context table</phrase>
						</textobject>
					</mediaobject>
				</figure>
				<itemizedlist>
					<title>Prerequisites</title>
					<listitem>
						<simpara>
							You have assigned the DMN custom data types to the appropriate decision and input nodes in the traffic violations DRD in Business Central.
						</simpara>
					</listitem>
				</itemizedlist>
				<orderedlist numeration="arabic">
					<title>Procedure</title>
					<listitem>
						<simpara>
							To calculate the fine, in the DMN designer canvas, select the <emphasis role="strong">Fine</emphasis> decision node and click the <emphasis role="strong">Edit</emphasis> icon to open the DMN boxed expression designer.
						</simpara>
						<figure>
							<title>Decision node edit icon</title>
							<mediaobject>
								<imageobject>
									<imagedata fileref="images/_images/dmn/decision_node_edit.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>decision node edit</phrase>
								</textobject>
							</mediaobject>
						</figure>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">Select expression</emphasis> → <emphasis role="strong">Decision Table</emphasis>.
						</simpara>
						<figure>
							<title>Select Decisiong Table logic type</title>
							<mediaobject>
								<imageobject>
									<imagedata fileref="images/_images/dmn/select_logic_type.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>select logic type</phrase>
								</textobject>
							</mediaobject>
						</figure>
					</listitem>
					<listitem>
						<simpara>
							For the <emphasis role="strong">Violation.Date</emphasis>, <emphasis role="strong">Violation.Code</emphasis>, and <emphasis role="strong">Violation.Speed Limit</emphasis> columns, right-click and select <emphasis role="strong">Delete</emphasis> for each field.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click the <emphasis role="strong">Violation.Actual Speed</emphasis> column header and enter the expression <literal>Violation.Actual Speed - Violation.Speed Limit</literal> in the <emphasis role="strong">Expression</emphasis> field."
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Enter the following values in the first row of the decision table:
						</simpara>
						<itemizedlist>
							<listitem>
								<simpara>
									<emphasis role="strong">Violation.Type</emphasis>: <literal>"speed"</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Violation.Actual Speed - Violation.Speed Limit</emphasis>: <literal>[10..30)</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Amount</emphasis>: <literal>500</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Points</emphasis>: <literal>3</literal>
								</simpara>
								<simpara>
									Right-click the first row and select <literal>Insert below</literal> to add another row.
								</simpara>
							</listitem>
						</itemizedlist>
					</listitem>
					<listitem>
						<simpara>
							Enter the following values in the second row of the decision table:
						</simpara>
						<itemizedlist>
							<listitem>
								<simpara>
									<emphasis role="strong">Violation.Type</emphasis>: <literal>"speed"</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Violation.Actual Speed - Violation.Speed Limit</emphasis>: <literal>&gt;= 30</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Amount</emphasis>: <literal>1000</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Points</emphasis>: <literal>7</literal>
								</simpara>
								<simpara>
									Right-click the second row and select <literal>Insert below</literal> to add another row.
								</simpara>
							</listitem>
						</itemizedlist>
					</listitem>
					<listitem>
						<simpara>
							Enter the following values in the third row of the decision table:
						</simpara>
						<itemizedlist>
							<listitem>
								<simpara>
									<emphasis role="strong">Violation.Type</emphasis>: <literal>"parking"</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Violation.Actual Speed - Violation.Speed Limit</emphasis>: <literal>-</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Amount</emphasis>: <literal>100</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Points</emphasis>: <literal>1</literal>
								</simpara>
								<simpara>
									Right-click the third row and select <literal>Insert below</literal> to add another row.
								</simpara>
							</listitem>
						</itemizedlist>
					</listitem>
					<listitem>
						<simpara>
							Enter the following values in the fourth row of the decision table:
						</simpara>
						<itemizedlist>
							<listitem>
								<simpara>
									<emphasis role="strong">Violation.Type</emphasis>: <literal>"driving under the influence"</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Violation.Actual Speed - Violation.Speed Limit</emphasis>: <literal>-</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Amount</emphasis>: <literal>1000</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Points</emphasis>: <literal>5</literal>
								</simpara>
							</listitem>
						</itemizedlist>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">Save</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							To define the driver suspension rule, return to the DMN designer canvas, select the <emphasis role="strong">Should the driver be suspended?</emphasis> decision node, and click the <emphasis role="strong">Edit</emphasis> icon to open the DMN boxed expression designer.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">Select expression</emphasis> → <emphasis role="strong">Context</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">ContextEntry-1</emphasis>, enter <literal>Total Points</literal> as the <emphasis role="strong">Name</emphasis>, and select <literal>number</literal> from the <emphasis role="strong">Data Type</emphasis> drop-down menu.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click the cell next to <emphasis role="strong">Total Points</emphasis>, select <literal>Literal expression</literal> from the context menu, and enter <literal>Driver.Points + Fine.Points</literal> as the expression.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							In the cell below <emphasis role="strong">Driver.Points + Fine.Points</emphasis>, select <literal>Literal Expression</literal> from the context menu, and enter <literal>if Total Points &gt;= 20 then "Yes" else "No"</literal>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">Save</emphasis>.
						</simpara>
						<simpara>
							You have defined how to calculate the fine and the context for deciding when to suspend the driver. You can navigate to the <emphasis role="strong">traffic-violation</emphasis> project page and click <emphasis role="strong">Build</emphasis> to build the example project and address any errors noted in the <emphasis role="strong">Alerts</emphasis> panel.
						</simpara>
					</listitem>
				</orderedlist>
			</section>
		</chapter>
		<chapter xml:id="test-scenarios-intro-con_getting-started-decision-services">
			<title>Test scenarios</title>
			<simpara>
				Test scenarios in Red Hat Process Automation Manager enable you to validate the functionality of business rules and business rule data (for rules-based test scenarios) or of DMN models (for DMN-based test scenarios) before deploying them into a production environment. With a test scenario, you use data from your project to set given conditions and expected results based on one or more defined business rules. When you run the scenario, the expected results and actual results of the rule instance are compared. If the expected results match the actual results, the test is successful. If the expected results do not match the actual results, then the test fails.
			</simpara>
			<simpara>
				Red Hat Process Automation Manager currently supports both the new <emphasis role="strong">Test Scenarios</emphasis> designer and the former <emphasis role="strong">Test Scenarios (Legacy)</emphasis> designer. The default designer is the new test scenarios designer, which supports testing of both rules and DMN models and provides an enhanced overall user experience with test scenarios. If required, you can continue to use the legacy test scenarios designer, which supports rule-based test scenarios only.
			</simpara>
			<simpara>
				You can run the defined test scenarios in a number of ways, for example, you can run available test scenarios at the project level or inside a specific test scenario asset. Test scenarios are independent and cannot affect or modify other test scenarios. You can run test scenarios at any time during project development in Business Central. You do not have to compile or deploy your decision service to run test scenarios.
			</simpara>
			<simpara>
				You can import data objects from different packages to the same project package as the test scenario. Assets in the same package are imported by default. After you create the necessary data objects and the test scenario, you can use the <emphasis role="strong">Data Objects</emphasis> tab of the test scenarios designer to verify that all required data objects are listed or to import other existing data objects by adding a <emphasis role="strong">New item</emphasis>.
			</simpara>
			<important>
				<simpara>
					Throughout the test scenarios documentation, all references to <emphasis>test scenarios</emphasis> and the <emphasis>test scenarios designer</emphasis> are for the new version, unless explicitly noted as the legacy version.
				</simpara>
			</important>
			<section xml:id="dmn-gs-testing-test-scenario-proc">
				<title>Testing the traffic violations using test scenarios</title>
				<simpara>
					Use the test scenarios designer in Business Central to test the DMN decision requirements diagrams (DRDs) and define decision logic for the traffic violations project.
				</simpara>
				<figure>
					<title>Test scenario for the traffic violations example</title>
					<mediaobject>
						<imageobject>
							<imagedata fileref="images/_images/dmn/dmn-gs-traffic-violation-test-scenarios.png" format="PNG" />
						</imageobject>
						<textobject>
							<phrase>dmn gs traffic violation test scenarios</phrase>
						</textobject>
					</mediaobject>
				</figure>
				<itemizedlist>
					<title>Prerequisites</title>
					<listitem>
						<simpara>
							You have successfully built the traffic violations project in Business Central.
						</simpara>
					</listitem>
				</itemizedlist>
				<orderedlist numeration="arabic">
					<title>Procedure</title>
					<listitem>
						<simpara>
							On the <emphasis role="strong">traffic-violation</emphasis> project’s home screen, click <emphasis role="strong">Add Asset</emphasis> to open the <emphasis role="strong">Add Asset</emphasis> screen.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">Test Scenario</emphasis> to open the <emphasis role="strong">Create new Test Scenario</emphasis> dialog.
						</simpara>
						<orderedlist numeration="loweralpha">
							<listitem>
								<simpara>
									Enter <literal>Violation Scenarios</literal> in the <emphasis role="strong">Test Scenario</emphasis> field.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									From the <emphasis role="strong">Package</emphasis> list, select <literal>com.myspace.traffic_violation</literal>.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Select <literal>DMN</literal> as the <emphasis role="strong">Source type</emphasis>.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Click the <emphasis role="strong">Choose DMN asset</emphasis> text field and select the path to the DMN asset.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Click <emphasis role="strong">Ok</emphasis> to open the <emphasis role="strong">Violation Scenarios</emphasis> test scenario in the <emphasis role="strong">Test Scenarios</emphasis> designer.
								</simpara>
							</listitem>
						</orderedlist>
					</listitem>
					<listitem>
						<simpara>
							Under <emphasis role="strong">Driver</emphasis> column sub-header, right-click the <emphasis role="strong">State</emphasis>, <emphasis role="strong">City</emphasis>, <emphasis role="strong">Age</emphasis>, and <emphasis role="strong">Name</emphasis> value cells and select <emphasis role="strong">Delete column</emphasis> from the context menu options to remove them.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Under <emphasis role="strong">Violation</emphasis> column sub-header, right-click the <emphasis role="strong">Date</emphasis> and <emphasis role="strong">Code</emphasis> value cells and select <emphasis role="strong">Delete column</emphasis> to remove them.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Enter the following information in the first row of the test scenarios:
						</simpara>
						<itemizedlist>
							<listitem>
								<simpara>
									<emphasis role="strong">Scenario description</emphasis>: <literal>Above speed limit: 10km/h and 30 km/h</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Points</emphasis> (under <emphasis role="strong">Given</emphasis> column header): <literal>10</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Type</emphasis>: <literal>"speed"</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Speed Limit</emphasis>: <literal>100</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Actual Speed</emphasis>: <literal>120</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Points</emphasis>: <literal>3</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Amount</emphasis>: <literal>500</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Should the driver be suspended?</emphasis>: <literal>"No"</literal>
								</simpara>
								<simpara>
									Right-click the first row and select <emphasis role="strong">Insert row below</emphasis> to add another row.
								</simpara>
							</listitem>
						</itemizedlist>
					</listitem>
					<listitem>
						<simpara>
							Enter the following information in the second row of the test scenarios:
						</simpara>
						<itemizedlist>
							<listitem>
								<simpara>
									<emphasis role="strong">Scenario description</emphasis>: <literal>Above speed limit: more than 30 km/h</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Points</emphasis> (under <emphasis role="strong">Given</emphasis> column header): <literal>10</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Type</emphasis>: <literal>"speed"</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Speed Limit</emphasis>: <literal>100</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Actual Speed</emphasis>: <literal>150</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Points</emphasis>: <literal>7</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Amount</emphasis>: <literal>1000</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Should the driver be suspended?</emphasis>: <literal>"No"</literal>
								</simpara>
								<simpara>
									Right-click the second row and select <emphasis role="strong">Insert row below</emphasis> to add another row.
								</simpara>
							</listitem>
						</itemizedlist>
					</listitem>
					<listitem>
						<simpara>
							Enter the following information in the third row of the test scenarios:
						</simpara>
						<itemizedlist>
							<listitem>
								<simpara>
									<emphasis role="strong">Scenario description</emphasis>: <literal>Parking violation</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Points</emphasis> (under <emphasis role="strong">Given</emphasis> column header): <literal>10</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Type</emphasis>: <literal>"parking"</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Speed Limit</emphasis>: leave blank
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Actual Speed</emphasis>: leave blank
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Points</emphasis>: <literal>1</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Amount</emphasis>: <literal>100</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Should the driver be suspended?</emphasis>: <literal>"No"</literal>
								</simpara>
								<simpara>
									Right-click the third row and select <emphasis role="strong">Insert row below</emphasis> to add another row.
								</simpara>
							</listitem>
						</itemizedlist>
					</listitem>
					<listitem>
						<simpara>
							Enter the following information in the fourth row of the test scenarios:
						</simpara>
						<itemizedlist>
							<listitem>
								<simpara>
									<emphasis role="strong">Scenario description</emphasis>: <literal>DUI violation</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Points</emphasis> (under <emphasis role="strong">Given</emphasis> column header): <literal>10</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Type</emphasis>: <literal>"driving under the influence"</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Speed Limit</emphasis>: leave blank
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Actual Speed</emphasis>: leave blank
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Points</emphasis>: <literal>5</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Amount</emphasis>: <literal>1000</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Should the driver be suspended?</emphasis>: <literal>"No"</literal>
								</simpara>
								<simpara>
									Right-click the fourth row and select <emphasis role="strong">Insert row below</emphasis> to add another row.
								</simpara>
							</listitem>
						</itemizedlist>
					</listitem>
					<listitem>
						<simpara>
							Enter the following information in the fifth row of the test scenarios:
						</simpara>
						<itemizedlist>
							<listitem>
								<simpara>
									<emphasis role="strong">Scenario description</emphasis>: <literal>Driver suspended</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Points</emphasis> (under <emphasis role="strong">Given</emphasis> column header): <literal>15</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Type</emphasis>: <literal>"speed"</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Speed Limit</emphasis>: <literal>100</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Actual Speed</emphasis>: <literal>140</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Points</emphasis>: <literal>7</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Amount</emphasis>: <literal>1000</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Should the driver be suspended?</emphasis>: <literal>"Yes"</literal>
								</simpara>
							</listitem>
						</itemizedlist>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">Save</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click the <emphasis role="strong">Play</emphasis> icon 
							<inlinemediaobject>
								<imageobject>
									<imagedata fileref="images/_images/dmn/dmn-play-icon.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>dmn play icon</phrase>
								</textobject>
							</inlinemediaobject>
							 to check whether the test scenarios pass or fail.
						</simpara>
						<figure>
							<title>Test scenario execution result for the traffic violations example</title>
							<mediaobject>
								<imageobject>
									<imagedata fileref="images/_images/dmn/dmn-gs-test-scenarios-execution-results.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>dmn gs test scenarios execution results</phrase>
								</textobject>
							</mediaobject>
						</figure>
						<simpara>
							In case of failure, correct the errors and run the test scenarios again.
						</simpara>
					</listitem>
				</orderedlist>
			</section>
		</chapter>
		<chapter xml:id="dmn-execution-con_getting-started-decision-services">
			<title>DMN model execution</title>
			<simpara>
				You can create or import DMN files in your Red Hat Process Automation Manager project using Business Central or package the DMN files as part of your project knowledge JAR (KJAR) file without Business Central. After you implement your DMN files in your Red Hat Process Automation Manager project, you can execute the DMN decision service by deploying the KIE container that contains it to KIE Server for remote access and interacting with the container using the KIE Server REST API.
			</simpara>
			<simpara>
				For information about including external DMN assets with your project packaging and deployment method, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/deploying_and_managing_red_hat_process_automation_manager_services#assembly-packaging-deploying"><emphasis>Packaging and deploying a Red Hat Process Automation Manager project</emphasis></link>.
			</simpara>
			<section xml:id="dmn-execution-rest-proc_getting-started-decision-services">
				<title>Executing a DMN service using the KIE Server REST API</title>
				<simpara>
					Directly interacting with the REST endpoints of KIE Server provides the most separation between the calling code and the decision logic definition. The calling code is completely free of direct dependencies, and you can implement it in an entirely different development platform such as <literal>Node.js</literal> or <literal>.NET</literal>. The examples in this section demonstrate Nix-style curl commands but provide relevant information to adapt to any REST client.
				</simpara>
				<simpara>
					For more information about the KIE Server REST API, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/deploying_and_managing_red_hat_process_automation_manager_services#assembly-kie-apis"><emphasis>Interacting with Red Hat Process Automation Manager using KIE APIs</emphasis></link>.
				</simpara>
				<itemizedlist>
					<title>Prerequisites</title>
					<listitem>
						<simpara>
							KIE Server is installed and configured, including a known user name and credentials for a user with the <literal>kie-server</literal> role. For installation options, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/installing_and_configuring_red_hat_process_automation_manager#assembly-planning"><emphasis>Planning a Red Hat Process Automation Manager installation</emphasis></link>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							You have built the DMN project as a KJAR artifact and deployed it to KIE Server. Ideally, you have built the DMN project as an executable model for more efficient execution:
						</simpara>
						
<screen>mvn clean install -DgenerateDMNModel=yes</screen>
						<simpara>
							For more information about project packaging and deployment and executable models, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/deploying_and_managing_red_hat_process_automation_manager_services#assembly-packaging-deploying"><emphasis>Packaging and deploying a Red Hat Process Automation Manager project</emphasis></link>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							You have the ID of the KIE container containing the DMN model. If more than one model is present, you must also know the model namespace and model name of the relevant model.
						</simpara>
					</listitem>
				</itemizedlist>
				<orderedlist numeration="arabic">
					<title>Procedure</title>
					<listitem>
						<simpara>
							Determine the base URL for accessing the KIE Server REST API endpoints. This requires knowing the following values (with the default local deployment values as an example):
						</simpara>
						<itemizedlist>
							<listitem>
								<simpara>
									Host (<literal>localhost</literal>)
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Port (<literal>8080</literal>)
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Root context (<literal>kie-server</literal>)
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Base REST path (<literal>services/rest/</literal>)
								</simpara>
							</listitem>
						</itemizedlist>
						<simpara>
							Example base URL in local deployment for the traffic violations project:
						</simpara>
						<simpara>
							<literal>http://localhost:8080/kie-server/services/rest/server/containers/traffic-violation_1.0.0-SNAPSHOT</literal>
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Determine user authentication requirements.
						</simpara>
						<simpara>
							When users are defined directly in the KIE Server configuration, HTTP Basic authentication is used and requires the user name and password. Successful requests require that the user have the <literal>kie-server</literal> role.
						</simpara>
						<simpara>
							The following example demonstrates how to add credentials to a curl request:
						</simpara>
						
<screen>curl -u username:password &lt;request&gt;</screen>
						<simpara>
							If KIE Server is configured with Red Hat Single Sign-On, the request must include a bearer token:
						</simpara>
						
<programlisting language="java" linenumbering="unnumbered">curl -H "Authorization: bearer $TOKEN" &lt;request&gt;</programlisting>
					</listitem>
					<listitem>
						<simpara>
							Specify the format of the request and response. The REST API endpoints work with both JSON and XML formats and are set using request headers:
						</simpara>
						<formalpara>
							<title>JSON</title>
							<para>
								
<screen>curl -H "accept: application/json" -H "content-type: application/json"</screen>
							</para>
						</formalpara>
						<formalpara>
							<title>XML</title>
							<para>
								
<screen>curl -H "accept: application/xml" -H "content-type: application/xml"</screen>
							</para>
						</formalpara>
					</listitem>
					<listitem>
						<simpara>
							Optional: Query the container for a list of deployed decision models:
						</simpara>
						<simpara>
							<emphasis role="strong">[GET]</emphasis> <literal>server/containers/{containerId}/dmn</literal>
						</simpara>
						<simpara>
							Example curl request:
						</simpara>
						
<screen>curl -u wbadmin:wbadmin -H "accept: application/xml" -X GET "http://localhost:8080/kie-server/services/rest/server/containers/traffic-violation_1.0.0-SNAPSHOT/dmn"</screen>
						<simpara>
							Sample XML output:
						</simpara>
						
<programlisting language="xml" linenumbering="unnumbered">&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;response type="SUCCESS" msg="Ok models successfully retrieved from container 'traffic-violation_1.0.0-SNAPSHOT'"&gt;
    &lt;dmn-model-info-list&gt;
        &lt;model&gt;
            &lt;model-namespace&gt;https://github.com/kiegroup/drools/kie-dmn/_60b01f4d-e407-43f7-848e-258723b5fac8&lt;/model-namespace&gt;
            &lt;model-name&gt;Traffic Violation&lt;/model-name&gt;
            &lt;model-id&gt;_2CD7D1AA-BD84-4B43-AD21-B0342ADE655A&lt;/model-id&gt;
            &lt;decisions&gt;
                &lt;dmn-decision-info&gt;
                    &lt;decision-id&gt;_23428EE8-DC8B-4067-8E67-9D7C53EC975F&lt;/decision-id&gt;
                    &lt;decision-name&gt;Fine&lt;/decision-name&gt;
                &lt;/dmn-decision-info&gt;
                &lt;dmn-decision-info&gt;
                    &lt;decision-id&gt;_B5EEE2B1-915C-44DC-BE43-C244DC066FD8&lt;/decision-id&gt;
                    &lt;decision-name&gt;Should the driver be suspended?&lt;/decision-name&gt;
                &lt;/dmn-decision-info&gt;
            &lt;/decisions&gt;
            &lt;inputs&gt;
                &lt;dmn-inputdata-info&gt;
                    &lt;inputdata-id&gt;_CEB959CD-3638-4A87-93BA-03CD0FB63AE3&lt;/inputdata-id&gt;
                    &lt;inputdata-name&gt;Violation&lt;/inputdata-name&gt;
                    &lt;inputdata-typeref&gt;
                        &lt;namespace-uri&gt;https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8&lt;/namespace-uri&gt;
                        &lt;local-part&gt;tViolation&lt;/local-part&gt;
                        &lt;prefix&gt;&lt;/prefix&gt;
                    &lt;/inputdata-typeref&gt;
                &lt;/dmn-inputdata-info&gt;
                &lt;dmn-inputdata-info&gt;
                    &lt;inputdata-id&gt;_B0E810E6-7596-430A-B5CF-67CE16863B6C&lt;/inputdata-id&gt;
                    &lt;inputdata-name&gt;Driver&lt;/inputdata-name&gt;
                    &lt;inputdata-typeref&gt;
                        &lt;namespace-uri&gt;https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8&lt;/namespace-uri&gt;
                        &lt;local-part&gt;tDriver&lt;/local-part&gt;
                        &lt;prefix&gt;&lt;/prefix&gt;
                    &lt;/inputdata-typeref&gt;
                &lt;/dmn-inputdata-info&gt;
            &lt;/inputs&gt;
            &lt;itemdefinitions&gt;
                &lt;dmn-itemdefinition-info&gt;
                    &lt;itemdefinition-id&gt;_9C758F4A-7D72-4D0F-B63F-2F5B8405980E&lt;/itemdefinition-id&gt;
                    &lt;itemdefinition-name&gt;tViolation&lt;/itemdefinition-name&gt;
                    &lt;itemdefinition-itemcomponent&gt;
                        &lt;dmn-itemdefinition-info&gt;
                            &lt;itemdefinition-id&gt;_0B6FF1E2-ACE9-4FB3-876B-5BB30B88009B&lt;/itemdefinition-id&gt;
                            &lt;itemdefinition-name&gt;Code&lt;/itemdefinition-name&gt;
                            &lt;itemdefinition-typeref&gt;
                                &lt;namespace-uri&gt;https://github.com/kiegroup/drools/kie-dmn/_60b01f4d-e407-43f7-848e-258723b5fac8&lt;/namespace-uri&gt;
                                &lt;local-part&gt;string&lt;/local-part&gt;
                                &lt;prefix&gt;&lt;/prefix&gt;
                            &lt;/itemdefinition-typeref&gt;
                            &lt;itemdefinition-itemcomponent/&gt;
                            &lt;itemdefinition-iscollection&gt;false&lt;/itemdefinition-iscollection&gt;
                        &lt;/dmn-itemdefinition-info&gt;
                        &lt;dmn-itemdefinition-info&gt;
                            &lt;itemdefinition-id&gt;_27A5DA18-3CA7-4C06-81B7-CF7F2F050E29&lt;/itemdefinition-id&gt;
                            &lt;itemdefinition-name&gt;date&lt;/itemdefinition-name&gt;
                            &lt;itemdefinition-typeref&gt;
                                &lt;namespace-uri&gt;https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8&lt;/namespace-uri&gt;
                                &lt;local-part&gt;date&lt;/local-part&gt;
                                &lt;prefix&gt;&lt;/prefix&gt;
                            &lt;/itemdefinition-typeref&gt;
                            &lt;itemdefinition-itemcomponent/&gt;
                            &lt;itemdefinition-iscollection&gt;false&lt;/itemdefinition-iscollection&gt;
                        &lt;/dmn-itemdefinition-info&gt;
                        &lt;dmn-itemdefinition-info&gt;
                            &lt;itemdefinition-id&gt;_8961969A-8A80-4F12-B568-346920C0F038&lt;/itemdefinition-id&gt;
                            &lt;itemdefinition-name&gt;type&lt;/itemdefinition-name&gt;
                            &lt;itemdefinition-typeref&gt;
                                &lt;namespace-uri&gt;https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8&lt;/namespace-uri&gt;
                                &lt;local-part&gt;string&lt;/local-part&gt;
                                &lt;prefix&gt;&lt;/prefix&gt;
                            &lt;/itemdefinition-typeref&gt;
                            &lt;itemdefinition-itemcomponent/&gt;
                            &lt;itemdefinition-iscollection&gt;false&lt;/itemdefinition-iscollection&gt;
                        &lt;/dmn-itemdefinition-info&gt;
                        &lt;dmn-itemdefinition-info&gt;
                            &lt;itemdefinition-id&gt;_7450F12A-3E95-4D5E-8DCE-2CB1FAC2BDD4&lt;/itemdefinition-id&gt;
                            &lt;itemdefinition-name&gt;speed limit&lt;/itemdefinition-name&gt;
                            &lt;itemdefinition-typeref&gt;
                                &lt;namespace-uri&gt;https://github.com/kiegroup/drools/kie-dmn/_60b01f4d-e407-43f7-848e-258723b5fac8&lt;/namespace-uri&gt;
                                &lt;local-part&gt;number&lt;/local-part&gt;
                                &lt;prefix&gt;&lt;/prefix&gt;
                            &lt;/itemdefinition-typeref&gt;
                            &lt;itemdefinition-itemcomponent/&gt;
                            &lt;itemdefinition-iscollection&gt;false&lt;/itemdefinition-iscollection&gt;
                        &lt;/dmn-itemdefinition-info&gt;
                        &lt;dmn-itemdefinition-info&gt;
                            &lt;itemdefinition-id&gt;_0A9A6F26-6C14-414D-A9BF-765E5850429A&lt;/itemdefinition-id&gt;
                            &lt;itemdefinition-name&gt;Actual Speed&lt;/itemdefinition-name&gt;
                            &lt;itemdefinition-typeref&gt;
                                &lt;namespace-uri&gt;https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8&lt;/namespace-uri&gt;
                                &lt;local-part&gt;number&lt;/local-part&gt;
                                &lt;prefix&gt;&lt;/prefix&gt;
                            &lt;/itemdefinition-typeref&gt;
                            &lt;itemdefinition-itemcomponent/&gt;
                            &lt;itemdefinition-iscollection&gt;false&lt;/itemdefinition-iscollection&gt;
                        &lt;/dmn-itemdefinition-info&gt;
                    &lt;/itemdefinition-itemcomponent&gt;
                    &lt;itemdefinition-iscollection&gt;false&lt;/itemdefinition-iscollection&gt;
                &lt;/dmn-itemdefinition-info&gt;
                &lt;dmn-itemdefinition-info&gt;
                    &lt;itemdefinition-id&gt;_13C7EFD8-B85C-43BF-94D3-14FABE39A4A0&lt;/itemdefinition-id&gt;
                    &lt;itemdefinition-name&gt;tDriver&lt;/itemdefinition-name&gt;
                    &lt;itemdefinition-itemcomponent&gt;
                        &lt;dmn-itemdefinition-info&gt;
                            &lt;itemdefinition-id&gt;_EC11744C-4160-4549-9610-2C757F40DFE8&lt;/itemdefinition-id&gt;
                            &lt;itemdefinition-name&gt;Name&lt;/itemdefinition-name&gt;
                            &lt;itemdefinition-typeref&gt;
                                &lt;namespace-uri&gt;https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8&lt;/namespace-uri&gt;
                                &lt;local-part&gt;string&lt;/local-part&gt;
                                &lt;prefix&gt;&lt;/prefix&gt;
                            &lt;/itemdefinition-typeref&gt;
                            &lt;itemdefinition-itemcomponent/&gt;
                            &lt;itemdefinition-iscollection&gt;false&lt;/itemdefinition-iscollection&gt;
                        &lt;/dmn-itemdefinition-info&gt;
                        &lt;dmn-itemdefinition-info&gt;
                            &lt;itemdefinition-id&gt;_E95BE3DB-4A51-4658-A166-02493EAAC9D2&lt;/itemdefinition-id&gt;
                            &lt;itemdefinition-name&gt;Age&lt;/itemdefinition-name&gt;
                            &lt;itemdefinition-typeref&gt;
                                &lt;namespace-uri&gt;https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8&lt;/namespace-uri&gt;
                                &lt;local-part&gt;number&lt;/local-part&gt;
                                &lt;prefix&gt;&lt;/prefix&gt;
                            &lt;/itemdefinition-typeref&gt;
                            &lt;itemdefinition-itemcomponent/&gt;
                            &lt;itemdefinition-iscollection&gt;false&lt;/itemdefinition-iscollection&gt;
                        &lt;/dmn-itemdefinition-info&gt;
                        &lt;dmn-itemdefinition-info&gt;
                            &lt;itemdefinition-id&gt;_7B3023E2-BC44-4BF3-BF7E-773C240FB9AD&lt;/itemdefinition-id&gt;
                            &lt;itemdefinition-name&gt;State&lt;/itemdefinition-name&gt;
                            &lt;itemdefinition-typeref&gt;
                                &lt;namespace-uri&gt;https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8&lt;/namespace-uri&gt;
                                &lt;local-part&gt;string&lt;/local-part&gt;
                                &lt;prefix&gt;&lt;/prefix&gt;
                            &lt;/itemdefinition-typeref&gt;
                            &lt;itemdefinition-itemcomponent/&gt;
                            &lt;itemdefinition-iscollection&gt;false&lt;/itemdefinition-iscollection&gt;
                        &lt;/dmn-itemdefinition-info&gt;
                        &lt;dmn-itemdefinition-info&gt;
                            &lt;itemdefinition-id&gt;_3D4B49DD-700C-4925-99A7-3B2B873F7800&lt;/itemdefinition-id&gt;
                            &lt;itemdefinition-name&gt;city&lt;/itemdefinition-name&gt;
                            &lt;itemdefinition-typeref&gt;
                                &lt;namespace-uri&gt;https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8&lt;/namespace-uri&gt;
                                &lt;local-part&gt;string&lt;/local-part&gt;
                                &lt;prefix&gt;&lt;/prefix&gt;
                            &lt;/itemdefinition-typeref&gt;
                            &lt;itemdefinition-itemcomponent/&gt;
                            &lt;itemdefinition-iscollection&gt;false&lt;/itemdefinition-iscollection&gt;
                        &lt;/dmn-itemdefinition-info&gt;
                        &lt;dmn-itemdefinition-info&gt;
                            &lt;itemdefinition-id&gt;_B37C49E8-B0D9-4B20-9DC6-D655BB1CA7B1&lt;/itemdefinition-id&gt;
                            &lt;itemdefinition-name&gt;Points&lt;/itemdefinition-name&gt;
                            &lt;itemdefinition-typeref&gt;
                                &lt;namespace-uri&gt;https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8&lt;/namespace-uri&gt;
                                &lt;local-part&gt;number&lt;/local-part&gt;
                                &lt;prefix&gt;&lt;/prefix&gt;
                            &lt;/itemdefinition-typeref&gt;
                            &lt;itemdefinition-itemcomponent/&gt;
                            &lt;itemdefinition-iscollection&gt;false&lt;/itemdefinition-iscollection&gt;
                        &lt;/dmn-itemdefinition-info&gt;
                    &lt;/itemdefinition-itemcomponent&gt;
                    &lt;itemdefinition-iscollection&gt;false&lt;/itemdefinition-iscollection&gt;
                &lt;/dmn-itemdefinition-info&gt;
                &lt;dmn-itemdefinition-info&gt;
                    &lt;itemdefinition-id&gt;_A4077C7E-B57A-4DEE-9C65-7769636316F3&lt;/itemdefinition-id&gt;
                    &lt;itemdefinition-name&gt;tFine&lt;/itemdefinition-name&gt;
                    &lt;itemdefinition-itemcomponent&gt;
                        &lt;dmn-itemdefinition-info&gt;
                            &lt;itemdefinition-id&gt;_79B152A8-DE83-4001-B88B-52DFF0D73B2D&lt;/itemdefinition-id&gt;
                            &lt;itemdefinition-name&gt;Amount&lt;/itemdefinition-name&gt;
                            &lt;itemdefinition-typeref&gt;
                                &lt;namespace-uri&gt;https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8&lt;/namespace-uri&gt;
                                &lt;local-part&gt;number&lt;/local-part&gt;
                                &lt;prefix&gt;&lt;/prefix&gt;
                            &lt;/itemdefinition-typeref&gt;
                            &lt;itemdefinition-itemcomponent/&gt;
                            &lt;itemdefinition-iscollection&gt;false&lt;/itemdefinition-iscollection&gt;
                        &lt;/dmn-itemdefinition-info&gt;
                        &lt;dmn-itemdefinition-info&gt;
                            &lt;itemdefinition-id&gt;_D7CB5F9C-9D55-48C2-83EE-D47045EC90D0&lt;/itemdefinition-id&gt;
                            &lt;itemdefinition-name&gt;Points&lt;/itemdefinition-name&gt;
                            &lt;itemdefinition-typeref&gt;
                                &lt;namespace-uri&gt;https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8&lt;/namespace-uri&gt;
                                &lt;local-part&gt;number&lt;/local-part&gt;
                                &lt;prefix&gt;&lt;/prefix&gt;
                            &lt;/itemdefinition-typeref&gt;
                            &lt;itemdefinition-itemcomponent/&gt;
                            &lt;itemdefinition-iscollection&gt;false&lt;/itemdefinition-iscollection&gt;
                        &lt;/dmn-itemdefinition-info&gt;
                    &lt;/itemdefinition-itemcomponent&gt;
                    &lt;itemdefinition-iscollection&gt;false&lt;/itemdefinition-iscollection&gt;
                &lt;/dmn-itemdefinition-info&gt;
            &lt;/itemdefinitions&gt;
            &lt;decisionservices/&gt;
        &lt;/model&gt;
    &lt;/dmn-model-info-list&gt;
&lt;/response&gt;</programlisting>
						<simpara>
							Sample JSON output:
						</simpara>
						
<programlisting language="json" linenumbering="unnumbered">{
  "type" : "SUCCESS",
  "msg" : "OK models successfully retrieved from container 'Traffic-Violation_1.0.0-SNAPSHOT'",
  "result" : {
    "dmn-model-info-list" : {
      "models" : [ {
        "model-namespace" : "https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8",
        "model-name" : "Traffic Violation",
        "model-id" : "_2CD7D1AA-BD84-4B43-AD21-B0342ADE655A",
        "decisions" : [ {
          "decision-id" : "_23428EE8-DC8B-4067-8E67-9D7C53EC975F",
          "decision-name" : "Fine"
        }, {
          "decision-id" : "_B5EEE2B1-915C-44DC-BE43-C244DC066FD8",
          "decision-name" : "Should the driver be suspended?"
        } ],
        "inputs" : [ {
          "inputdata-id" : "_CEB959CD-3638-4A87-93BA-03CD0FB63AE3",
          "inputdata-name" : "Violation",
          "inputdata-typeRef" : {
            "namespace-uri" : "https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8",
            "local-part" : "tViolation",
            "prefix" : ""
          }
        }, {
          "inputdata-id" : "_B0E810E6-7596-430A-B5CF-67CE16863B6C",
          "inputdata-name" : "Driver",
          "inputdata-typeRef" : {
            "namespace-uri" : "https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8",
            "local-part" : "tDriver",
            "prefix" : ""
          }
        } ],
        "itemDefinitions" : [ {
          "itemdefinition-id" : "_13C7EFD8-B85C-43BF-94D3-14FABE39A4A0",
          "itemdefinition-name" : "tDriver",
          "itemdefinition-typeRef" : null,
          "itemdefinition-itemComponent" : [ {
            "itemdefinition-id" : "_EC11744C-4160-4549-9610-2C757F40DFE8",
            "itemdefinition-name" : "Name",
            "itemdefinition-typeRef" : {
              "namespace-uri" : "https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8",
              "local-part" : "string",
              "prefix" : ""
            },
            "itemdefinition-itemComponent" : [ ],
            "itemdefinition-isCollection" : false
          }, {
            "itemdefinition-id" : "_E95BE3DB-4A51-4658-A166-02493EAAC9D2",
            "itemdefinition-name" : "Age",
            "itemdefinition-typeRef" : {
              "namespace-uri" : "https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8",
              "local-part" : "number",
              "prefix" : ""
            },
            "itemdefinition-itemComponent" : [ ],
            "itemdefinition-isCollection" : false
          }, {
            "itemdefinition-id" : "_7B3023E2-BC44-4BF3-BF7E-773C240FB9AD",
            "itemdefinition-name" : "State",
            "itemdefinition-typeRef" : {
              "namespace-uri" : "https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8",
              "local-part" : "string",
              "prefix" : ""
            },
            "itemdefinition-itemComponent" : [ ],
            "itemdefinition-isCollection" : false
          }, {
            "itemdefinition-id" : "_3D4B49DD-700C-4925-99A7-3B2B873F7800",
            "itemdefinition-name" : "City",
            "itemdefinition-typeRef" : {
              "namespace-uri" : "https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8",
              "local-part" : "string",
              "prefix" : ""
            },
            "itemdefinition-itemComponent" : [ ],
            "itemdefinition-isCollection" : false
          }, {
            "itemdefinition-id" : "_B37C49E8-B0D9-4B20-9DC6-D655BB1CA7B1",
            "itemdefinition-name" : "Points",
            "itemdefinition-typeRef" : {
              "namespace-uri" : "https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8",
              "local-part" : "number",
              "prefix" : ""
            },
            "itemdefinition-itemComponent" : [ ],
            "itemdefinition-isCollection" : false
          } ],
          "itemdefinition-isCollection" : false
        }, {
          "itemdefinition-id" : "_A4077C7E-B57A-4DEE-9C65-7769636316F3",
          "itemdefinition-name" : "tFine",
          "itemdefinition-typeRef" : null,
          "itemdefinition-itemComponent" : [ {
            "itemdefinition-id" : "_79B152A8-DE83-4001-B88B-52DFF0D73B2D",
            "itemdefinition-name" : "Amount",
            "itemdefinition-typeRef" : {
              "namespace-uri" : "https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8",
              "local-part" : "number",
              "prefix" : ""
            },
            "itemdefinition-itemComponent" : [ ],
            "itemdefinition-isCollection" : false
          }, {
            "itemdefinition-id" : "_D7CB5F9C-9D55-48C2-83EE-D47045EC90D0",
            "itemdefinition-name" : "Points",
            "itemdefinition-typeRef" : {
              "namespace-uri" : "https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8",
              "local-part" : "number",
              "prefix" : ""
            },
            "itemdefinition-itemComponent" : [ ],
            "itemdefinition-isCollection" : false
          } ],
          "itemdefinition-isCollection" : false
        }, {
          "itemdefinition-id" : "_9C758F4A-7D72-4D0F-B63F-2F5B8405980E",
          "itemdefinition-name" : "tViolation",
          "itemdefinition-typeRef" : null,
          "itemdefinition-itemComponent" : [ {
            "itemdefinition-id" : "_0B6FF1E2-ACE9-4FB3-876B-5BB30B88009B",
            "itemdefinition-name" : "Code",
            "itemdefinition-typeRef" : {
              "namespace-uri" : "https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8",
              "local-part" : "string",
              "prefix" : ""
            },
            "itemdefinition-itemComponent" : [ ],
            "itemdefinition-isCollection" : false
          }, {
            "itemdefinition-id" : "_27A5DA18-3CA7-4C06-81B7-CF7F2F050E29",
            "itemdefinition-name" : "Date",
            "itemdefinition-typeRef" : {
              "namespace-uri" : "https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8",
              "local-part" : "date",
              "prefix" : ""
            },
            "itemdefinition-itemComponent" : [ ],
            "itemdefinition-isCollection" : false
          }, {
            "itemdefinition-id" : "_8961969A-8A80-4F12-B568-346920C0F038",
            "itemdefinition-name" : "Type",
            "itemdefinition-typeRef" : {
              "namespace-uri" : "https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8",
              "local-part" : "string",
              "prefix" : ""
            },
            "itemdefinition-itemComponent" : [ ],
            "itemdefinition-isCollection" : false
          }, {
            "itemdefinition-id" : "_7450F12A-3E95-4D5E-8DCE-2CB1FAC2BDD4",
            "itemdefinition-name" : "Speed Limit",
            "itemdefinition-typeRef" : {
              "namespace-uri" : "https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8",
              "local-part" : "number",
              "prefix" : ""
            },
            "itemdefinition-itemComponent" : [ ],
            "itemdefinition-isCollection" : false
          }, {
            "itemdefinition-id" : "_0A9A6F26-6C14-414D-A9BF-765E5850429A",
            "itemdefinition-name" : "Actual Speed",
            "itemdefinition-typeRef" : {
              "namespace-uri" : "https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8",
              "local-part" : "number",
              "prefix" : ""
            },
            "itemdefinition-itemComponent" : [ ],
            "itemdefinition-isCollection" : false
          } ],
          "itemdefinition-isCollection" : false
        } ],
        "decisionServices" : [ ]
      } ]
    }
  }
}</programlisting>
					</listitem>
					<listitem>
						<simpara>
							Execute the model:
						</simpara>
						<simpara>
							<emphasis role="strong">[POST]</emphasis> <literal>server/containers/{containerId}/dmn</literal>
						</simpara>
						<note>
							<simpara>
								The attribute <literal>model-namespace</literal> is automatically generated and is different for every user. Ensure that the <literal>model-namespace</literal> and <literal>model-name</literal> attributes that you use match those of the deployed model.
							</simpara>
						</note>
						<simpara>
							Example curl request:
						</simpara>
						
<screen>curl -u wbadmin:wbadmin -H "accept: application/json" -H "content-type: application/json" -X POST "http://localhost:8080/kie-server/services/rest/server/containers/traffic-violation_1.0.0-SNAPSHOT/dmn" -d "{ \"model-namespace\" : \"https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8\", \"model-name\" : \"Traffic Violation\", \"dmn-context\" : {\"Driver\" : {\"Points\" : 15}, \"Violation\" : {\"Type\" : \"speed\", \"Actual Speed\" : 135, \"Speed Limit\" : 100}}}"</screen>
						<simpara>
							Example JSON request:
						</simpara>
						
<programlisting language="json" linenumbering="unnumbered">{
  "model-namespace" : "https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8",
  "model-name" : "Traffic Violation",
  "dmn-context" :
  {
    "Driver" :
    {
  	   "Points" : 15
    },
  	"Violation" :
    {
  		"Type" : "speed",
  		"Actual Speed" : 135,
  		"Speed Limit" : 100
  	}
  }
}</programlisting>
						<simpara>
							Example XML request (JAXB format):
						</simpara>
						
<programlisting language="xml" linenumbering="unnumbered">&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;dmn-evaluation-context&gt;
    &lt;dmn-context xsi:type="jaxbListWrapper" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
        &lt;type&gt;MAP&lt;/type&gt;
        &lt;element xsi:type="jaxbStringObjectPair" key="Violation"&gt;
            &lt;value xsi:type="jaxbListWrapper"&gt;
                &lt;type&gt;MAP&lt;/type&gt;
                &lt;element xsi:type="jaxbStringObjectPair" key="Type"&gt;
                    &lt;value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;speed&lt;/value&gt;
                &lt;/element&gt;
                &lt;element xsi:type="jaxbStringObjectPair" key="Speed Limit"&gt;
                    &lt;value xsi:type="xs:decimal" xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;100&lt;/value&gt;
                &lt;/element&gt;
                &lt;element xsi:type="jaxbStringObjectPair" key="Actual Speed"&gt;
                    &lt;value xsi:type="xs:decimal" xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;135&lt;/value&gt;
                &lt;/element&gt;
            &lt;/value&gt;
        &lt;/element&gt;
        &lt;element xsi:type="jaxbStringObjectPair" key="Driver"&gt;
            &lt;value xsi:type="jaxbListWrapper"&gt;
                &lt;type&gt;MAP&lt;/type&gt;
                &lt;element xsi:type="jaxbStringObjectPair" key="Points"&gt;
                    &lt;value xsi:type="xs:decimal" xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;15&lt;/value&gt;
                &lt;/element&gt;
            &lt;/value&gt;
        &lt;/element&gt;
    &lt;/dmn-context&gt;
&lt;/dmn-evaluation-context&gt;</programlisting>
						<note>
							<simpara>
								Regardless of the request format, the request requires the following elements:
							</simpara>
							<itemizedlist>
								<listitem>
									<simpara>
										Model namespace
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										Model name
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										Context object containing input values
									</simpara>
								</listitem>
							</itemizedlist>
						</note>
						<simpara>
							Example JSON response:
						</simpara>
						
<programlisting language="json" linenumbering="unnumbered">{
  "type": "SUCCESS",
  "msg": "OK from container 'Traffic-Violation_1.0.0-SNAPSHOT'",
  "result": {
      "dmn-evaluation-result": {
          "messages": [],
          "model-namespace": "https://github.com/kiegroup/drools/kie-dmn/_7D8116DE-ADF5-4560-A116-FE1A2EAFFF48",
          "model-name": "Traffic Violation",
          "decision-name": [],
          "dmn-context": {
              "Violation": {
                "Type": "speed",
                "Speed Limit": 100,
                "Actual Speed": 135
              },
              "Should Driver be Suspended?": "Yes",
                "Driver": {
                  "Points": 15
                },
                "Fine": {
                  "Points": 7,
                  "Amount": 1000
                }
            },
      "decision-results": {
          "_E1AF5AC2-E259-455C-96E4-596E30D3BC86": {
              "messages": [],
              "decision-id": "_E1AF5AC2-E259-455C-96E4-596E30D3BC86",
              "decision-name": "Should the Driver be Suspended?",
              "result": "Yes",
              "status": "SUCCEEDED"
            },
          "_D7F02CE0-AF50-4505-AB80-C7D6DE257920": {
              "messages": [],
              "decision-id": "_D7F02CE0-AF50-4505-AB80-C7D6DE257920",
              "decision-name": "Fine",
              "result": {
                "Points": 7,
                "Amount": 1000
              },
          "status": "SUCCEEDED"
        }
      }
    }
  }
}</programlisting>
						<simpara>
							Example XML (JAXB format) response:
						</simpara>
						
<programlisting language="xml" linenumbering="unnumbered">&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;response type="SUCCESS" msg="OK from container 'Traffic_1.0.0-SNAPSHOT'"&gt;
    &lt;dmn-evaluation-result&gt;
        &lt;model-namespace&gt;https://github.com/kiegroup/drools/kie-dmn/_A4BCA8B8-CF08-433F-93B2-A2598F19ECFF&lt;/model-namespace&gt;
        &lt;model-name&gt;Traffic Violation&lt;/model-name&gt;
        &lt;dmn-context xsi:type="jaxbListWrapper" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
            &lt;type&gt;MAP&lt;/type&gt;
            &lt;element xsi:type="jaxbStringObjectPair" key="Violation"&gt;
                &lt;value xsi:type="jaxbListWrapper"&gt;
                    &lt;type&gt;MAP&lt;/type&gt;
                    &lt;element xsi:type="jaxbStringObjectPair" key="Type"&gt;
                        &lt;value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;speed&lt;/value&gt;
                    &lt;/element&gt;
                    &lt;element xsi:type="jaxbStringObjectPair" key="Speed Limit"&gt;
                        &lt;value xsi:type="xs:decimal" xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;100&lt;/value&gt;
                    &lt;/element&gt;
                    &lt;element xsi:type="jaxbStringObjectPair" key="Actual Speed"&gt;
                        &lt;value xsi:type="xs:decimal" xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;135&lt;/value&gt;
                    &lt;/element&gt;
                &lt;/value&gt;
            &lt;/element&gt;
            &lt;element xsi:type="jaxbStringObjectPair" key="Driver"&gt;
                &lt;value xsi:type="jaxbListWrapper"&gt;
                    &lt;type&gt;MAP&lt;/type&gt;
                    &lt;element xsi:type="jaxbStringObjectPair" key="Points"&gt;
                        &lt;value xsi:type="xs:decimal" xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;15&lt;/value&gt;
                    &lt;/element&gt;
                &lt;/value&gt;
            &lt;/element&gt;
            &lt;element xsi:type="jaxbStringObjectPair" key="Fine"&gt;
                &lt;value xsi:type="jaxbListWrapper"&gt;
                    &lt;type&gt;MAP&lt;/type&gt;
                    &lt;element xsi:type="jaxbStringObjectPair" key="Points"&gt;
                        &lt;value xsi:type="xs:decimal" xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;7&lt;/value&gt;
                    &lt;/element&gt;
                    &lt;element xsi:type="jaxbStringObjectPair" key="Amount"&gt;
                        &lt;value xsi:type="xs:decimal" xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;1000&lt;/value&gt;
                    &lt;/element&gt;
                &lt;/value&gt;
            &lt;/element&gt;
            &lt;element xsi:type="jaxbStringObjectPair" key="Should the driver be suspended?"&gt;
                &lt;value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;Yes&lt;/value&gt;
            &lt;/element&gt;
        &lt;/dmn-context&gt;
        &lt;messages/&gt;
        &lt;decisionResults&gt;
            &lt;entry&gt;
                &lt;key&gt;_4055D956-1C47-479C-B3F4-BAEB61F1C929&lt;/key&gt;
                &lt;value&gt;
                    &lt;decision-id&gt;_4055D956-1C47-479C-B3F4-BAEB61F1C929&lt;/decision-id&gt;
                    &lt;decision-name&gt;Fine&lt;/decision-name&gt;
                    &lt;result xsi:type="jaxbListWrapper" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
                        &lt;type&gt;MAP&lt;/type&gt;
                        &lt;element xsi:type="jaxbStringObjectPair" key="Points"&gt;
                            &lt;value xsi:type="xs:decimal" xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;7&lt;/value&gt;
                        &lt;/element&gt;
                        &lt;element xsi:type="jaxbStringObjectPair" key="Amount"&gt;
                            &lt;value xsi:type="xs:decimal" xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;1000&lt;/value&gt;
                        &lt;/element&gt;
                    &lt;/result&gt;
                    &lt;messages/&gt;
                    &lt;status&gt;SUCCEEDED&lt;/status&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
            &lt;entry&gt;
                &lt;key&gt;_8A408366-D8E9-4626-ABF3-5F69AA01F880&lt;/key&gt;
                &lt;value&gt;
                    &lt;decision-id&gt;_8A408366-D8E9-4626-ABF3-5F69AA01F880&lt;/decision-id&gt;
                    &lt;decision-name&gt;Should the driver be suspended?&lt;/decision-name&gt;
                    &lt;result xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;Yes&lt;/result&gt;
                    &lt;messages/&gt;
                    &lt;status&gt;SUCCEEDED&lt;/status&gt;
                &lt;/value&gt;
            &lt;/entry&gt;
        &lt;/decisionResults&gt;
    &lt;/dmn-evaluation-result&gt;
&lt;/response&gt;</programlisting>
					</listitem>
				</orderedlist>
			</section>
		</chapter>
		<chapter remap="_additional_resources" xml:id="additional_resources">
			<title>Additional resources</title>
			<itemizedlist>
				<listitem>
					<simpara>
						<link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/developing_decision_services_in_red_hat_process_automation_manager#assembly-dmn-models"><emphasis>Designing a decision service using DMN models</emphasis></link>
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/developing_decision_services_in_red_hat_process_automation_manager#assembly-test-scenarios"><emphasis>Testing a decision service using test scenarios</emphasis></link>
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/deploying_and_managing_red_hat_process_automation_manager_services#assembly-managing-projects"><emphasis>Managing projects in Business Central</emphasis></link>
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/deploying_and_managing_red_hat_process_automation_manager_services#assembly-kie-apis"><emphasis>Interacting with Red Hat Process Automation Manager using KIE APIs</emphasis></link>
					</simpara>
				</listitem>
			</itemizedlist>
		</chapter>
	</part>
	<part xml:id="assembly-getting-started-process-services">
		<title>Getting started with process services in Red Hat Process Automation Manager</title>
		<partintro>
			<simpara>
				As a business rules and processes developer, you can use Business Central in Red Hat Process Automation Manager or the Red Hat Process Automation Manager BPMN modeler in VSCode to design business processes to meet specific business requirements. Red Hat Process Automation Manager provides sample projects in Business Central that contain business assets for reference purposes. This document describes how to create a new mortgage process project, data objects, and business process to familiarize yourself with Business Central and the process designer.
			</simpara>
			<simpara>
				You will then refer to the <emphasis role="strong">Mortgage_Process</emphasis> sample project included in Business Central to review the sample project’s business rules, decision tables, and forms. You will build and deploy the <emphasis role="strong">Mortgage_Process</emphasis> sample project and execute the project’s defined functionality.
			</simpara>
			<itemizedlist>
				<title>Prerequisites</title>
				<listitem>
					<simpara>
						Red Hat JBoss Enterprise Application Platform 7.3 is installed. For details, see the <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/installation_guide/"><emphasis>Red Hat JBoss Enterprise Application Platform 7.3 Installation Guide</emphasis></link>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Red Hat Process Automation Manager is installed and configured with KIE Server. For more information, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/installing_and_configuring_red_hat_process_automation_manager#assembly-install-on-eap"><emphasis>Installing and configuring Red Hat Process Automation Manager on Red Hat JBoss EAP 7.3</emphasis></link>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Red Hat Process Automation Manager is running and you can log in to Business Central with the <literal>developer</literal> role. For more information, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/installing_and_configuring_red_hat_process_automation_manager#assembly-planning"><emphasis>Planning a Red Hat Process Automation Manager installation</emphasis></link>.
					</simpara>
				</listitem>
			</itemizedlist>
		</partintro>
		<chapter xml:id="overview_business_process">
			<title>Overview</title>
			<simpara>
				Business Central enables you to automate your business processes. A business process is a diagram that describes the order in which a series of steps must be executed and consists of predefined nodes and connections. Each node represents one step in the process while the connections specify how to transition from one node to another.
			</simpara>
			<simpara>
				For example, a bank offers a housing mortgage loan service. Using Business Central, the housing mortgage department of the bank creates a complete business process for the mortgage loan.
			</simpara>
			<simpara>
				When a customer wants to buy a new property using credit, the following steps occur:
			</simpara>
			<orderedlist numeration="arabic">
				<listitem>
					<simpara>
						The customer contacts a broker at the bank who assists in filing for a mortgage loan.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						The broker collects information about the property and the customer, such as the salary of the customer, social security number, the property sale price, and the requested loan amount.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						The broker then submits a request on behalf of the customer.
					</simpara>
				</listitem>
			</orderedlist>
			<simpara>
				Whenever a customer submits a request, a new process instance is created. This ensures consistency in the quality of evaluating each request, provides complete visibility into the status of each request, and makes the process efficient and effective.
			</simpara>
		</chapter>
		<chapter xml:id="decision-examples-central-con_getting-started-process-services">
			<title>Sample projects and business assets in Business Central</title>
			<simpara>
				Business Central contains sample projects with business assets that you can use as a reference for the rules, processes, or other assets that you create in your own Red Hat Process Automation Manager projects. Each sample project is designed differently to demonstrate process automation, decision management, or business optimization assets and logic in Red Hat Process Automation Manager.
			</simpara>
			<note>
				<simpara>
					Red Hat does not provide support for the sample code included in the Red Hat Process Automation Manager distribution.
				</simpara>
			</note>
			<simpara>
				The following sample projects are available in Business Central:
			</simpara>
			<itemizedlist>
				<listitem>
					<simpara>
						<emphasis role="strong">Course_Scheduling</emphasis>: (Business optimization) Course scheduling and curriculum decision process. Assigns lectures to rooms and determines a student’s curriculum based on factors, such as course conflicts and class room capacity.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<emphasis role="strong">Dinner_Party</emphasis>: (Business optimization) Guest seating optimization using guided decision tables. Assigns guest seating based on each guest’s job type, political beliefs, and known relationships.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<emphasis role="strong">Employee_Rostering</emphasis>: (Business optimization) Employee rostering optimization using decision and solver assets. Assigns employees to shifts based on skills.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<emphasis role="strong">Evaluation_Process</emphasis>: (Process automation) Evaluation process using business process assets. Evaluates employees based on performance.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<emphasis role="strong">IT_Orders</emphasis>: (Process automation and case management) Ordering case using business process and case management assets. Places an IT hardware order based on needs and approvals.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<emphasis role="strong">Mortgages</emphasis>: (Decision management with rules) Loan approval process using rule-based decision assets. Determines loan eligibility based on applicant data and qualifications.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<emphasis role="strong">Mortgage_Process</emphasis>: (Process automation) Loan approval process using business process and decision assets. Determines loan eligibility based on applicant data and qualifications.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<emphasis role="strong">OptaCloud</emphasis>: (Business optimization) Resource allocation optimization using decision and solver assets. Assigns processes to computers with limited resources.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<emphasis role="strong">Traffic_Violation</emphasis>: (Decision management with DMN) Traffic violation decision service using a Decision Model and Notation (DMN) model. Determines driver penalty and suspension based on traffic violations.
					</simpara>
				</listitem>
			</itemizedlist>
			<section xml:id="decision-examples-central-proc_getting-started-process-services">
				<title>Accessing sample projects and business assets in Business Central</title>
				<simpara>
					You can use the sample projects in Business Central to explore business assets as a reference for the rules or other assets that you create in your own Red Hat Process Automation Manager projects.
				</simpara>
				<itemizedlist>
					<title>Prerequisites</title>
					<listitem>
						<simpara>
							Business Central is installed and running. For installation options, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/installing_and_configuring_red_hat_process_automation_manager#assembly-planning"><emphasis>Planning a Red Hat Process Automation Manager installation</emphasis></link>.
						</simpara>
					</listitem>
				</itemizedlist>
				<orderedlist numeration="arabic">
					<title>Procedure</title>
					<listitem>
						<simpara>
							In Business Central, go to <emphasis role="strong">Menu</emphasis> → <emphasis role="strong">Design</emphasis> → <emphasis role="strong">Projects</emphasis>. If there are existing projects, you can access the samples by clicking on the <emphasis role="strong">MySpace</emphasis> default space and selecting <emphasis role="strong">Try Samples</emphasis> from the <emphasis role="strong">Add Project</emphasis> drop-down menu. If there are no existing projects, click <emphasis role="strong">Try samples</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Review the descriptions for each sample project to determine which project you want to explore. Each sample project is designed differently to demonstrate process automation, decision management, or business optimization assets and logic in Red Hat Process Automation Manager.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Select one or more sample projects and click <emphasis role="strong">Ok</emphasis> to add the projects to your space.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							In the <emphasis role="strong">Projects</emphasis> page of your space, select one of the sample projects to view the assets for that project.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Select each asset to explore how the project is designed to achieve the specified goal or workflow. Some of the sample projects contain more than one page of assets. Click the left or right arrows in the upper-right corner to view the full asset list.
						</simpara>
						<figure>
							<title>Asset page selection</title>
							<mediaobject>
								<imageobject>
									<imagedata fileref="images/_images/getting-started/next-page.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>Navigate through asset pages</phrase>
								</textobject>
							</mediaobject>
						</figure>
					</listitem>
					<listitem>
						<simpara>
							In the upper-right corner of the project <emphasis role="strong">Assets</emphasis> page, click <emphasis role="strong">Build</emphasis> to build the sample project or <emphasis role="strong">Deploy</emphasis> to build the project and then deploy it to KIE Server.
						</simpara>
						<note>
							<simpara>
								You can also select the <emphasis role="strong">Build &amp; Install</emphasis> option to build the project and publish the KJAR file to the configured Maven repository without deploying to a KIE Server. In a development environment, you can click <emphasis role="strong">Deploy</emphasis> to deploy the built KJAR file to a KIE Server without stopping any running instances (if applicable), or click <emphasis role="strong">Redeploy</emphasis> to deploy the built KJAR file and replace all instances. The next time you deploy or redeploy the built KJAR, the previous deployment unit (KIE container) is automatically updated in the same target KIE Server. In a production environment, the <emphasis role="strong">Redeploy</emphasis> option is disabled and you can click <emphasis role="strong">Deploy</emphasis> only to deploy the built KJAR file to a new deployment unit (KIE container) on a KIE Server.
							</simpara>
							<simpara>
								To configure the KIE Server environment mode, set the <literal>org.kie.server.mode</literal> system property to <literal>org.kie.server.mode=development</literal> or <literal>org.kie.server.mode=production</literal>. To configure the deployment behavior for a corresponding project in Business Central, go to project <emphasis role="strong">Settings</emphasis> → <emphasis role="strong">General Settings</emphasis> → <emphasis role="strong">Version</emphasis>, toggle the <emphasis role="strong">Development Mode</emphasis> option, and click <emphasis role="strong">Save</emphasis>. By default, KIE Server and all new projects in Business Central are in development mode. You cannot deploy a project with <emphasis role="strong">Development Mode</emphasis> turned on or with a manually added <literal>SNAPSHOT</literal> version suffix to a KIE Server that is in production mode.
							</simpara>
						</note>
						<simpara>
							To review project deployment details, click <emphasis role="strong">View deployment details</emphasis> in the deployment banner at the top of the screen or in the <emphasis role="strong">Deploy</emphasis> drop-down menu. This option directs you to the <emphasis role="strong">Menu</emphasis> → <emphasis role="strong">Deploy</emphasis> → <emphasis role="strong">Execution Servers</emphasis> page.
						</simpara>
					</listitem>
				</orderedlist>
			</section>
		</chapter>
		<chapter xml:id="creating_business_project">
			<title>Creating the mortgage-process project</title>
			<simpara>
				A project is a container for assets such as data objects, business processes, guided rules, decision tables, and forms. The project that you are creating is similar to the existing <emphasis role="strong">Mortgage_Process</emphasis> sample project in Business Central.
			</simpara>
			<orderedlist numeration="arabic">
				<title>Procedure</title>
				<listitem>
					<simpara>
						In Business Central, go to <emphasis role="strong">Menu</emphasis> → <emphasis role="strong">Design</emphasis> → <emphasis role="strong">Projects</emphasis>.
					</simpara>
					<simpara>
						Red Hat Process Automation Manager provides a default space called <emphasis role="strong">MySpace</emphasis>, as shown in the following image. You can use the default space to create and test example projects.
					</simpara>
					<figure>
						<title>Default space</title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="images/_images/getting-started/spaces-teams.png" format="PNG" />
							</imageobject>
							<textobject>
								<phrase>spaces teams</phrase>
							</textobject>
						</mediaobject>
					</figure>
				</listitem>
				<listitem>
					<simpara>
						Click <emphasis role="strong">Add Project</emphasis>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Enter <literal>mortgage-process</literal> in the <emphasis role="strong">Name</emphasis> field.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Click <emphasis role="strong">Configure Advanced Options</emphasis> and modify the GAV fields with the following values:
					</simpara>
					<itemizedlist>
						<listitem>
							<simpara>
								<emphasis role="strong">Group ID</emphasis>: <literal>com.myspace</literal>
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								<emphasis role="strong">Artifact ID</emphasis>: <literal>mortgage-process</literal>
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								<emphasis role="strong">Version</emphasis>: <literal>1.0.0</literal>
							</simpara>
						</listitem>
					</itemizedlist>
				</listitem>
				<listitem>
					<simpara>
						Click <emphasis role="strong">Add</emphasis>.
					</simpara>
				</listitem>
			</orderedlist>
			<simpara>
				The <emphasis role="strong">Assets</emphasis> view of the project opens.
			</simpara>
		</chapter>
		<chapter xml:id="creating-users-proc">
			<title>Creating users</title>
			<simpara>
				You can create as many Business Central users as you require. User privileges and settings are controlled by the roles assigned to a user and the groups that a user belongs to. For this example, you must create two new users: <literal>Katy</literal> who will act as the bank’s loan manager and approver, and <literal>Bill</literal> who will act as the broker requesting the loan. For more information on creating users, see the <emphasis role="strong">Creating users</emphasis> chapter of <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/installing_and_configuring_red_hat_process_automation_manager#assembly-install-on-eap"><emphasis>Installing and configuring Red Hat Process Automation Manager on Red Hat JBoss EAP 7.3</emphasis></link>.
			</simpara>
			<simpara>
				In Business Central, you can use groups and roles to control permissions for a collection of users. You can create as many groups and roles as you want but a group must have at least one user.
			</simpara>
			<itemizedlist>
				<listitem>
					<simpara>
						For this example, the user or users working on the tasks must be assigned to one or more of the following groups and roles:
					</simpara>
					<itemizedlist>
						<listitem>
							<simpara>
								<emphasis role="strong">approver</emphasis> group: For the <emphasis role="strong">Qualify</emphasis> task
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								<emphasis role="strong">broker</emphasis> group: For the <emphasis role="strong">Correct Data</emphasis> and <emphasis role="strong">Increase Down Payment</emphasis> tasks
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								<emphasis role="strong">manager</emphasis> role: For the <emphasis role="strong">Final Approval</emphasis> task
							</simpara>
						</listitem>
					</itemizedlist>
				</listitem>
			</itemizedlist>
			<orderedlist numeration="arabic">
				<title>Procedure</title>
				<listitem>
					<simpara>
						Click the gear icon 
						<inlinemediaobject>
							<imageobject>
								<imagedata fileref="images/_images/project-data/gear-icon.png" format="PNG" />
							</imageobject>
							<textobject>
								<phrase>gear icon</phrase>
							</textobject>
						</inlinemediaobject>
						 in the upper-right corner, and click <emphasis role="strong">Users</emphasis>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Click 
						<inlinemediaobject>
							<imageobject>
								<imagedata fileref="images/_images/Designer/new-user.png" format="PNG" />
							</imageobject>
							<textobject>
								<phrase>new user</phrase>
							</textobject>
						</inlinemediaobject>
						, enter <literal>Katy</literal>, click <emphasis role="strong">Next</emphasis>, and click <emphasis role="strong">Create</emphasis>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Click <emphasis role="strong">Yes</emphasis> to set a password and enter <literal>Katy</literal> in both fields, and click <emphasis role="strong">Change</emphasis>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Enter <literal>Bill</literal>, click <emphasis role="strong">Next</emphasis>, and click <emphasis role="strong">Create</emphasis>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Click <emphasis role="strong">Yes</emphasis> to set a password and enter <literal>Bill</literal> in both fields, and click <emphasis role="strong">Change</emphasis>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Click the <emphasis role="strong">Groups</emphasis> tab and click 
						<inlinemediaobject>
							<imageobject>
								<imagedata fileref="images/_images/project-data/new_group.png" format="PNG" />
							</imageobject>
							<textobject>
								<phrase>new group</phrase>
							</textobject>
						</inlinemediaobject>
						, enter <literal>approver</literal>, and click <emphasis role="strong">Next</emphasis>
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Select <literal>Katy</literal> from the user list, and click <emphasis role="strong">Add selected users</emphasis>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Click 
						<inlinemediaobject>
							<imageobject>
								<imagedata fileref="images/_images/project-data/new_group.png" format="PNG" />
							</imageobject>
							<textobject>
								<phrase>new group</phrase>
							</textobject>
						</inlinemediaobject>
						, enter <literal>broker</literal>, and click <emphasis role="strong">Next</emphasis>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Select <literal>Bill</literal> from the user list, and click <emphasis role="strong">Add selected users</emphasis>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Click <emphasis role="strong">Users</emphasis>, select <literal>Katy</literal>, and click <emphasis role="strong">Edit</emphasis> → <emphasis role="strong">Roles</emphasis> → <emphasis role="strong">Add roles</emphasis>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Select <literal>manager</literal>, click <emphasis role="strong">Add to selected roles</emphasis>, and click <emphasis role="strong">Save</emphasis>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Click the <emphasis role="strong">Groups</emphasis> tab, and click <emphasis role="strong">Edit</emphasis> → <emphasis role="strong">Groups</emphasis> → <emphasis role="strong">Add to groups</emphasis>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Select <literal>approver</literal> and <literal>kie-server</literal>, and click <emphasis role="strong">Add to selected groups</emphasis>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Click <emphasis role="strong">Save</emphasis>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Select <literal>Bill</literal> from the user list, click <emphasis role="strong">Edit</emphasis> → <emphasis role="strong">Roles</emphasis> → <emphasis role="strong">Add roles</emphasis>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Select <literal>user</literal>, and click <emphasis role="strong">Add to selected roles</emphasis>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Click the <emphasis role="strong">Groups</emphasis> tab, select <literal>kie-server</literal>, and click <emphasis role="strong">Add to selected groups</emphasis>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Click <emphasis role="strong">Save</emphasis>.
					</simpara>
				</listitem>
			</orderedlist>
		</chapter>
		<chapter remap="_defining_a_data_model" xml:id="defining_a_data_model">
			<title>Creating the mortgage-process data objects</title>
			<simpara>
				Data objects are the building blocks for the rule assets that you create. Data objects are custom data types implemented as Java classes in specified packages of your project. These custom data types determine what data your assets and your decision services are based on.
			</simpara>
			<simpara>
				The mortgage process project uses the following data objects:
			</simpara>
			<itemizedlist>
				<listitem>
					<simpara>
						<literal>Applicant</literal>
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>Property</literal>
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>ValidationErrorDO</literal>
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>Application</literal>
					</simpara>
				</listitem>
			</itemizedlist>
			<section remap="_creating_the_applicant_data_object" xml:id="creating_the_applicant_data_object">
				<title>Creating the Applicant data object</title>
				<simpara>
					Follow these steps to create the <emphasis role="strong">Applicant</emphasis> data object, which contains information about the applicant. This is the basic information required to apply for the loan in this tutorial.
				</simpara>
				<orderedlist numeration="arabic">
					<title>Procedure</title>
					<listitem>
						<simpara>
							In Business Central, click on the <emphasis role="strong">MySpace</emphasis> default space.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">Menu</emphasis> → <emphasis role="strong">Design</emphasis> → <emphasis role="strong">Projects</emphasis> and click <emphasis role="strong">mortgage-process</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">Add Asset</emphasis> and select <emphasis role="strong">Data Object</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Enter <literal>Applicant</literal> in the <emphasis role="strong">Data Object</emphasis> field of the <emphasis role="strong">Create new Data Object</emphasis> window.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Select <literal>com.myspace.mortgage_process</literal> from the <emphasis role="strong">Package</emphasis> drop-down menu and click <emphasis role="strong">Ok</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Enter <literal>Applicant</literal> in the <emphasis role="strong">Label</emphasis> field of the <emphasis role="strong">'Applicant'- general properties</emphasis> section.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">+add field</emphasis> and input the following <emphasis role="strong">Applicant</emphasis> data object values. Click <emphasis role="strong">Create and continue</emphasis> after each addition. For the last addition, click <emphasis role="strong">Create</emphasis>.
						</simpara>
						<figure>
							<title>Applicant data object field values</title>
							<mediaobject>
								<imageobject>
									<imagedata fileref="images/_images/getting-started/field-data-applicant-dm.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>screen capture of the Applicant data object field values</phrase>
								</textobject>
							</mediaobject>
						</figure>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">Save</emphasis>.
						</simpara>
					</listitem>
				</orderedlist>
			</section>
			<section remap="_creating_the_property_data_object" xml:id="creating_the_property_data_object">
				<title>Creating the Property data object</title>
				<simpara>
					Follow these steps to create the <emphasis role="strong">Property</emphasis> data object, which contains information about the property details, such as the property age and price.
				</simpara>
				<orderedlist numeration="arabic">
					<title>Procedure</title>
					<listitem>
						<simpara>
							In Business Central, click on the <emphasis role="strong">MySpace</emphasis> default space.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">Menu</emphasis> → <emphasis role="strong">Design</emphasis> → <emphasis role="strong">Projects</emphasis> and click <emphasis role="strong">mortgage-process</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">Add Asset</emphasis> and select <emphasis role="strong">Data Object</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Enter <literal>Property</literal> in the <emphasis role="strong">Data Object</emphasis> field of the <emphasis role="strong">Create new Data Object</emphasis> window.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Select <literal>com.myspace.mortgage_process</literal> from the <emphasis role="strong">Package</emphasis> drop-down menu and click <emphasis role="strong">Ok</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Enter <literal>Property</literal> in the <emphasis role="strong">Label</emphasis> field of the <emphasis role="strong">'Property'- general properties</emphasis> section.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">+add field</emphasis> and input the following <emphasis role="strong">Property</emphasis> data object values. Click <emphasis role="strong">Create and continue</emphasis> after each addition. For the last addition, click <emphasis role="strong">Create</emphasis>.
						</simpara>
						<figure>
							<title>Property data object field values</title>
							<mediaobject>
								<imageobject>
									<imagedata fileref="images/_images/getting-started/field-data-property.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>screen capture of the Property data object field values</phrase>
								</textobject>
							</mediaobject>
						</figure>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">Save</emphasis>.
						</simpara>
					</listitem>
				</orderedlist>
			</section>
			<section remap="_creating_the_validationerrordo_data_object" xml:id="creating_the_validationerrordo_data_object">
				<title>Creating the ValidationErrorDO data object</title>
				<simpara>
					Follow these steps to create the <emphasis role="strong">ValidationErrorDO</emphasis> data object, which specifies the cause of an application error.
				</simpara>
				<orderedlist numeration="arabic">
					<title>Procedure</title>
					<listitem>
						<simpara>
							In Business Central, click on the <emphasis role="strong">MySpace</emphasis> default space.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">Menu</emphasis> → <emphasis role="strong">Design</emphasis> → <emphasis role="strong">Projects</emphasis> and click <emphasis role="strong">mortgage-process</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">Add Asset</emphasis> and select <emphasis role="strong">Data Object</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Enter <literal>ValidationErrorDO</literal> in the <emphasis role="strong">Data Object</emphasis> field of the <emphasis role="strong">Create new Data Object</emphasis> window.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Select <literal>com.myspace.mortgage_process</literal> from the <emphasis role="strong">Package</emphasis> drop-down menu and click <emphasis role="strong">Ok</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Enter <literal>ValidationErrorDO</literal> in the <emphasis role="strong">Label</emphasis> field of the <emphasis role="strong">'ValidationErrorDO'- general properties</emphasis> section.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">+add field</emphasis> and input the following <emphasis role="strong">ValidationErrorDO</emphasis> data object values. Click <emphasis role="strong">Create and continue</emphasis> after each addition. For the last addition, click <emphasis role="strong">Create</emphasis>.
						</simpara>
						<figure>
							<title>ValidationErrorDO data object field values</title>
							<mediaobject>
								<imageobject>
									<imagedata fileref="images/_images/getting-started/field-data-val-error.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>screen capture of the ValidationErrorDO data object field values</phrase>
								</textobject>
							</mediaobject>
						</figure>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">Save</emphasis>.
						</simpara>
					</listitem>
				</orderedlist>
			</section>
			<section remap="_creating_the_application_data_object" xml:id="creating_the_application_data_object">
				<title>Creating the Application data object</title>
				<simpara>
					Follow these steps to create the <emphasis role="strong">Application</emphasis> data object, which contains information about the mortgage details, such as the down payment and the mortgage amount.
				</simpara>
				<orderedlist numeration="arabic">
					<title>Procedure</title>
					<listitem>
						<simpara>
							In Business Central, click on the <emphasis role="strong">MySpace</emphasis> default space.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">Menu</emphasis> → <emphasis role="strong">Design</emphasis> → <emphasis role="strong">Projects</emphasis> and click <emphasis role="strong">mortgage-process</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">Add Asset</emphasis> and select <emphasis role="strong">Data Object</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Enter <literal>Application</literal> in the <emphasis role="strong">Data Object</emphasis> field of the <emphasis role="strong">Create new Data Object</emphasis> window.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Select <literal>com.myspace.mortgage_process</literal> from the <emphasis role="strong">Package</emphasis> drop-down menu and click <emphasis role="strong">Ok</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Enter <literal>Application</literal> in the <emphasis role="strong">Label</emphasis> field of the <emphasis role="strong">'Application'- general properties</emphasis> section.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">+add field</emphasis> and input the following <emphasis role="strong">Application</emphasis> data object values. Click <emphasis role="strong">Create and continue</emphasis> after each addition. For the last addition, click <emphasis role="strong">Create</emphasis>.
						</simpara>
						<figure>
							<title>Application data object field values</title>
							<mediaobject>
								<imageobject>
									<imagedata fileref="images/_images/getting-started/field-data-application.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>screen capture of the Application data object field values</phrase>
								</textobject>
							</mediaobject>
						</figure>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">Save</emphasis>.
						</simpara>
					</listitem>
				</orderedlist>
			</section>
		</chapter>
		<chapter remap="_business_process-con" xml:id="business_process-con">
			<title>Business processes in Business Central</title>
			<simpara>
				A business process is a diagram that describes the order in which a series of steps must be executed using a flow chart. A business process consists of a collection of nodes that are linked to each other using connections. Each of the nodes represents one step in the overall process while the connections specify how to transition from one node to the other.
			</simpara>
			<simpara>
				The sample <emphasis role="strong">Mortgage_Process</emphasis> contains the following predefined <emphasis role="strong">MortgageApprovalProcess</emphasis> business process.
			</simpara>
			<simpara>
				<inlinemediaobject>
					<imageobject>
						<imagedata fileref="images/_images/getting-started/sampleBP.png" format="PNG" />
					</imageobject>
					<textobject>
						<phrase>sampleBP</phrase>
					</textobject>
				</inlinemediaobject>
			</simpara>
			<section xml:id="business-process-proc_getting-started-process-services">
				<title>Creating the business process</title>
				<simpara>
					The following procedures guide you through the creation of tasks, connections, and gateways that make up the <emphasis role="strong">MortgageApprovalProcess</emphasis> business process. The mortgage validation business process determines whether a mortgage application contains all required data. If the specified data requirements are met, the application proceeds on to the mortgage calculation business process.
				</simpara>
				<orderedlist numeration="arabic">
					<title>Procedure</title>
					<listitem>
						<simpara>
							In Business Central, go to <emphasis role="strong">Menu</emphasis> → <emphasis role="strong">Design</emphasis> → <emphasis role="strong">Projects</emphasis> → <emphasis role="strong">mortgage-process</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">Add Asset</emphasis> → <emphasis role="strong">Business Process</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Enter the following values:
						</simpara>
						<itemizedlist>
							<listitem>
								<simpara>
									<emphasis role="strong">Business Process</emphasis>: <literal>MortgageApprovalProcess</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Package</emphasis>: Select <literal>com.myspace.mortgage_process</literal>
								</simpara>
								<simpara>
									The <emphasis role="strong">Package</emphasis> specifies the location inside the existing project where the asset will be created. In this example, it is created in <literal>com/myspace/mortgage_process</literal>.
								</simpara>
							</listitem>
						</itemizedlist>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">Ok</emphasis>. The diagram editor opens.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							In the upper-right corner, click the <emphasis role="strong">Properties</emphasis> <inlinemediaobject>
								<imageobject>
									<imagedata fileref="images/_images/getting-started/diagram_properties.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>diagram properties</phrase>
								</textobject>
							</inlinemediaobject>
							 icon.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Scroll down and expand <emphasis role="strong">Process Data</emphasis> and click 
							<inlinemediaobject>
								<imageobject>
									<imagedata fileref="images/_images/getting-started/btn_plus.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>btn plus</phrase>
								</textobject>
							</inlinemediaobject>
							 in the <emphasis role="strong">Process Variables</emphasis> section.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Enter the following values:
						</simpara>
						<itemizedlist>
							<listitem>
								<simpara>
									<emphasis role="strong">Name</emphasis>: <literal>application</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Data Type</emphasis>: <literal>Application [com.myspace.mortgage_process]</literal>
								</simpara>
							</listitem>
						</itemizedlist>
					</listitem>
				</orderedlist>
				<section remap="_creating_outgoing_connections_and_exclusive_gateways" xml:id="creating_outgoing_connections_and_exclusive_gateways">
					<title>Creating outgoing connections and exclusive gateways</title>
					<simpara>
						This section shows you how to create outgoing connections, exclusive gateways, and business rule tasks. Use exclusive gateways to make decisions and react to events based on the available data.
					</simpara>
					<simpara>
						Red Hat Process Automation Manager contains a predefined selection of node types to simplify business process creation. The predefined node panel is located on the left side of the diagram editor.
					</simpara>
					<simpara>
						<inlinemediaobject>
							<imageobject>
								<imagedata fileref="images/_images/getting-started/node_panel.png" format="PNG" />
							</imageobject>
							<textobject>
								<phrase>node panel</phrase>
							</textobject>
						</inlinemediaobject>
					</simpara>
					<orderedlist numeration="arabic">
						<title>Procedure</title>
						<listitem>
							<simpara>
								Drag a start event node onto the canvas.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Create an outgoing connection from the start event to an exclusive gateway:
							</simpara>
							<orderedlist numeration="loweralpha">
								<listitem>
									<simpara>
										On the canvas, click the start event node and click the <emphasis role="strong">Create Parallel</emphasis> icon.
									</simpara>
									<informalfigure>
									<mediaobject>
										<imageobject>
											<imagedata fileref="images/_images/getting-started/create-parallel.png" format="PNG" />
										</imageobject>
										<textobject>
											<phrase>create parallel</phrase>
										</textobject>
									</mediaobject>
									</informalfigure>
								</listitem>
								<listitem>
									<simpara>
										Hover over the 
										<inlinemediaobject>
											<imageobject>
												<imagedata fileref="images/_images/getting-started/config-icon.png" format="PNG" />
											</imageobject>
											<textobject>
												<phrase>config icon</phrase>
											</textobject>
										</inlinemediaobject>
										 icon of the parallel and click the <emphasis role="strong">Convert into Exclusive</emphasis> icon.
									</simpara>
									<informalfigure>
									<mediaobject>
										<imageobject>
											<imagedata fileref="images/_images/getting-started/exclusive-gateway.png" format="PNG" />
										</imageobject>
										<textobject>
											<phrase>exclusive gateway</phrase>
										</textobject>
									</mediaobject>
									</informalfigure>
								</listitem>
							</orderedlist>
						</listitem>
						<listitem>
							<simpara>
								Create an outgoing connection from the exclusive gateway to a business rule task:
							</simpara>
							<orderedlist numeration="loweralpha">
								<listitem>
									<simpara>
										On the canvas, click the exclusive gateway and click the <emphasis role="strong">Create Task</emphasis> icon.
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										Hover over the 
										<inlinemediaobject>
											<imageobject>
												<imagedata fileref="images/_images/getting-started/config-icon.png" format="PNG" />
											</imageobject>
											<textobject>
												<phrase>config icon</phrase>
											</textobject>
										</inlinemediaobject>
										 icon of the task and click the <emphasis role="strong">Convert into Business Rule</emphasis> icon.
									</simpara>
									<informalfigure>
									<mediaobject>
										<imageobject>
											<imagedata fileref="images/_images/getting-started/bus-rule-task.png" format="PNG" />
										</imageobject>
										<textobject>
											<phrase>bus rule task</phrase>
										</textobject>
									</mediaobject>
									</informalfigure>
								</listitem>
							</orderedlist>
						</listitem>
						<listitem>
							<simpara>
								Configure the business rule task:
							</simpara>
							<orderedlist numeration="loweralpha">
								<listitem>
									<simpara>
										Click the business rules task.
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										If the <emphasis role="strong">Properties</emphasis> panel is not open, in the upper-right corner click the <emphasis role="strong">Properties</emphasis> <inlinemediaobject>
											<imageobject>
												<imagedata fileref="images/_images/getting-started/diagram_properties.png" format="PNG" />
											</imageobject>
											<textobject>
												<phrase>diagram properties</phrase>
											</textobject>
										</inlinemediaobject>
										 icon.
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										In the <emphasis role="strong">Properties</emphasis> panel, enter <literal>Validation</literal> in the <emphasis role="strong">Name</emphasis> field.
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										Expand <emphasis role="strong">Implementation/Execution</emphasis>, select <emphasis role="strong">New</emphasis> from the <emphasis role="strong">Rule Flow Group</emphasis> menu, and input <emphasis role="strong">validation</emphasis>.
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										In the <emphasis role="strong">On Exit Action</emphasis> field, enter the following Java expression:
									</simpara>
									
<programlisting language="java" linenumbering="unnumbered">System.out.println(application.getProperty());</programlisting>
								</listitem>
								<listitem>
									<simpara>
										Expand <emphasis role="strong">Data Assignments</emphasis> and click 
										<inlinemediaobject>
											<imageobject>
												<imagedata fileref="images/_images/getting-started/btn_assign.png" format="PNG" />
											</imageobject>
											<textobject>
												<phrase>btn assign</phrase>
											</textobject>
										</inlinemediaobject>
										 next to <emphasis role="strong">Assignments</emphasis>.
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										In the <emphasis role="strong">Validation Data I/O</emphasis> window, click <emphasis role="strong">Add</emphasis> and create the following assignments:
									</simpara>
									<itemizedlist>
										<listitem>
											<simpara>
												Data Inputs and Assignements
											</simpara>
											<itemizedlist>
												<listitem>
													<simpara>
														Name: application
													</simpara>
												</listitem>
												<listitem>
													<simpara>
														Data Type: Application [com.myspace.mortgage_app]
													</simpara>
												</listitem>
												<listitem>
													<simpara>
														Source: application
													</simpara>
												</listitem>
											</itemizedlist>
										</listitem>
										<listitem>
											<simpara>
												Data Outputs and Assignements
											</simpara>
											<itemizedlist>
												<listitem>
													<simpara>
														Name: application
													</simpara>
												</listitem>
												<listitem>
													<simpara>
														Data Type: Application [com.myspace.mortgage_app]
													</simpara>
												</listitem>
												<listitem>
													<simpara>
														Target: application
													</simpara>
													<figure>
														<title>Validation Data I/O assignments</title>
														<mediaobject>
															<imageobject>
																<imagedata fileref="images/_images/getting-started/val-data-io.png" format="PNG" />
															</imageobject>
															<textobject>
																<phrase>Screen capture of the Validation Data I/O assignments</phrase>
															</textobject>
														</mediaobject>
													</figure>
												</listitem>
											</itemizedlist>
										</listitem>
									</itemizedlist>
								</listitem>
							</orderedlist>
						</listitem>
						<listitem>
							<simpara>
								Above the canvas, click <emphasis role="strong">Save</emphasis> to confirm your changes.
							</simpara>
						</listitem>
					</orderedlist>
				</section>
				<section remap="_defining_the_validation_data" xml:id="defining_the_validation_data">
					<title>Defining the validation data</title>
					<simpara>
						This section shows you how to define the validation data that determines whether the application data is correct, contains an error, or has missing information.
					</simpara>
					<orderedlist numeration="arabic">
						<title>Procedure</title>
						<listitem>
							<simpara>
								Create an outgoing connection from the <emphasis role="strong">Validation</emphasis> task to an exclusive gateway:
							</simpara>
							<orderedlist numeration="loweralpha">
								<listitem>
									<simpara>
										Click the <emphasis role="strong">Validation</emphasis> task and click the <emphasis role="strong">Create Parallel</emphasis> icon.
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										Hover over the 
										<inlinemediaobject>
											<imageobject>
												<imagedata fileref="images/_images/getting-started/config-icon.png" format="PNG" />
											</imageobject>
											<textobject>
												<phrase>config icon</phrase>
											</textobject>
										</inlinemediaobject>
										 icon of the parallel and click the <emphasis role="strong">Convert into Exclusive</emphasis> icon.
									</simpara>
									<informalfigure>
									<mediaobject>
										<imageobject>
											<imagedata fileref="images/_images/getting-started/exclusive_gateway.png" format="PNG" />
										</imageobject>
										<textobject>
											<phrase>exclusive gateway</phrase>
										</textobject>
									</mediaobject>
									</informalfigure>
								</listitem>
							</orderedlist>
						</listitem>
						<listitem>
							<simpara>
								Create an outgoing connection from the exclusive gateway to a new business rule task:
							</simpara>
							<orderedlist numeration="loweralpha">
								<listitem>
									<simpara>
										Click the exclusive gateway and click the <emphasis role="strong">Create Task</emphasis> icon.
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										Drag the new task below the exclusive gateway as shown below.
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										Hover over the 
										<inlinemediaobject>
											<imageobject>
												<imagedata fileref="images/_images/getting-started/config-icon.png" format="PNG" />
											</imageobject>
											<textobject>
												<phrase>config icon</phrase>
											</textobject>
										</inlinemediaobject>
										 icon of the task and click the <emphasis role="strong">Convert into Business Rule</emphasis> icon.
									</simpara>
									<informalfigure>
									<mediaobject>
										<imageobject>
											<imagedata fileref="images/_images/getting-started/new_br_task.png" format="PNG" />
										</imageobject>
										<textobject>
											<phrase>new br task</phrase>
										</textobject>
									</mediaobject>
									</informalfigure>
								</listitem>
								<listitem>
									<simpara>
										If the <emphasis role="strong">Properties</emphasis> panel is not open, in the upper-right corner click the <emphasis role="strong">Properties</emphasis> <inlinemediaobject>
											<imageobject>
												<imagedata fileref="images/_images/getting-started/diagram_properties.png" format="PNG" />
											</imageobject>
											<textobject>
												<phrase>diagram properties</phrase>
											</textobject>
										</inlinemediaobject>
										 icon.
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										In the <emphasis role="strong">Properties</emphasis> panel, enter <literal>Retract Validation</literal> in the <emphasis role="strong">Name</emphasis> field.
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										Expand <emphasis role="strong">Implementation/Execution</emphasis>, select <emphasis role="strong">New</emphasis> from the <emphasis role="strong">Rule Flow Group</emphasis> menu, and input <literal>error</literal>.
									</simpara>
								</listitem>
							</orderedlist>
						</listitem>
						<listitem>
							<simpara>
								Configure the connection between the exclusive gateway and the business rule task:
							</simpara>
							<orderedlist numeration="loweralpha">
								<listitem>
									<simpara>
										Click the connection.
									</simpara>
									<informalfigure>
									<mediaobject>
										<imageobject>
											<imagedata fileref="images/_images/getting-started/created-connection.png" format="PNG" />
										</imageobject>
										<textobject>
											<phrase>created connection</phrase>
										</textobject>
									</mediaobject>
									</informalfigure>
								</listitem>
								<listitem>
									<simpara>
										If the <emphasis role="strong">Properties</emphasis> panel is not open, in the upper-right corner click the <emphasis role="strong">Properties</emphasis> <inlinemediaobject>
											<imageobject>
												<imagedata fileref="images/_images/getting-started/diagram_properties.png" format="PNG" />
											</imageobject>
											<textobject>
												<phrase>diagram properties</phrase>
											</textobject>
										</inlinemediaobject>
										 icon.
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										In the <emphasis role="strong">Properties</emphasis> panel, enter <literal>Invalid</literal> in the <emphasis role="strong">Name</emphasis> field.
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										Expand <emphasis role="strong">Implementation/Execution</emphasis> and select <emphasis role="strong">Expression</emphasis> in the <emphasis role="strong">Condition Expression</emphasis> section.
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										From the list, select <emphasis role="strong">drools</emphasis> and enter <literal>ValidationErrorDO()</literal> in the <emphasis role="strong">Condition Expression</emphasis> field.
									</simpara>
									<informalfigure>
									<mediaobject>
										<imageobject>
											<imagedata fileref="images/_images/getting-started/languagedropdown.png" format="PNG" />
										</imageobject>
										<textobject>
											<phrase>languagedropdown</phrase>
										</textobject>
									</mediaobject>
									</informalfigure>
								</listitem>
							</orderedlist>
						</listitem>
						<listitem>
							<simpara>
								Create an outgoing connection from the <emphasis role="strong">Retract Validation</emphasis> task to a new user task:
							</simpara>
							<orderedlist numeration="loweralpha">
								<listitem>
									<simpara>
										Click the <emphasis role="strong">Retract Validation</emphasis> task and click the <emphasis role="strong">Create Task</emphasis> icon.
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										Drag the new task below the <emphasis role="strong">Validation</emphasis> task as shown below.
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										Hover over the 
										<inlinemediaobject>
											<imageobject>
												<imagedata fileref="images/_images/getting-started/config-icon.png" format="PNG" />
											</imageobject>
											<textobject>
												<phrase>config icon</phrase>
											</textobject>
										</inlinemediaobject>
										 icon of the task and click the <emphasis role="strong">Convert into User</emphasis> icon.
									</simpara>
									<informalfigure>
									<mediaobject>
										<imageobject>
											<imagedata fileref="images/_images/getting-started/user_task.png" format="PNG" />
										</imageobject>
										<textobject>
											<phrase>user task</phrase>
										</textobject>
									</mediaobject>
									</informalfigure>
								</listitem>
								<listitem>
									<simpara>
										Click on the new user task and in the <emphasis role="strong">Properties</emphasis> panel, enter <literal>Correct Data</literal> in the <emphasis role="strong">Name</emphasis> field.
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										Expand <emphasis role="strong">Implementation/Execution</emphasis> and enter <literal>CorrectData</literal> in the <emphasis role="strong">Task Name</emphasis> field.
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										Select <emphasis role="strong">New</emphasis> from the <emphasis role="strong">Groups</emphasis> menu, and input <literal>broker</literal>.
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										Click 
										<inlinemediaobject>
											<imageobject>
												<imagedata fileref="images/_images/getting-started/btn_assign.png" format="PNG" />
											</imageobject>
											<textobject>
												<phrase>btn assign</phrase>
											</textobject>
										</inlinemediaobject>
										 next to <emphasis role="strong">Assignments</emphasis>.
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										In the <emphasis role="strong">Correct Data Data I/O</emphasis> window, click <emphasis role="strong">Add</emphasis> and create the following assignments:
									</simpara>
									<itemizedlist>
										<listitem>
											<simpara>
												Name: application
											</simpara>
										</listitem>
										<listitem>
											<simpara>
												Data Type: Application [com.myspace.mortgage_app]
											</simpara>
										</listitem>
										<listitem>
											<simpara>
												Source: application
											</simpara>
											<itemizedlist>
												<listitem>
													<simpara>
														Data Outputs and Assignements
													</simpara>
												</listitem>
											</itemizedlist>
										</listitem>
										<listitem>
											<simpara>
												Name: application
											</simpara>
										</listitem>
										<listitem>
											<simpara>
												Data Type: Application [com.myspace.mortgage_app]
											</simpara>
										</listitem>
										<listitem>
											<simpara>
												Target: application
											</simpara>
											<figure>
												<title>Correct Data Data I/O assignments</title>
												<mediaobject>
													<imageobject>
														<imagedata fileref="images/_images/getting-started/correct-data-io.png" format="PNG" />
													</imageobject>
													<textobject>
														<phrase>Screen capture of the Correct Data Data I/O assignments</phrase>
													</textobject>
												</mediaobject>
											</figure>
										</listitem>
									</itemizedlist>
								</listitem>
								<listitem>
									<simpara>
										Above the canvas, click <emphasis role="strong">Save</emphasis> to confirm your changes.
									</simpara>
								</listitem>
							</orderedlist>
						</listitem>
						<listitem>
							<simpara>
								Click on the <emphasis role="strong">Correct Data</emphasis> user task, then click the <emphasis role="strong">Create sequence Flow</emphasis> icon and drag it back to the first exclusive gateway. Your workflow should look similar to the following diagram:
							</simpara>
							<informalfigure>
							<mediaobject>
								<imageobject>
									<imagedata fileref="images/_images/getting-started/workflow1.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>workflow1</phrase>
								</textobject>
							</mediaobject>
							</informalfigure>
						</listitem>
					</orderedlist>
				</section>
				<section remap="_calculating_the_mortgage" xml:id="calculating_the_mortgage">
					<title>Calculating the mortgage</title>
					<simpara>
						The mortgage calculation business process determines the applicant’s mortgage borrowing limit.
					</simpara>
					<orderedlist numeration="arabic">
						<title>Procedure</title>
						<listitem>
							<simpara>
								Return to the second exclusive gateway and create an outgoing connection to a new business rule task.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Click the created connection and in the <emphasis role="strong">Properties</emphasis> panel, input <literal>Valid</literal> in the <emphasis role="strong">Name</emphasis> field.
							</simpara>
							<orderedlist numeration="loweralpha">
								<listitem>
									<simpara>
										Expand <emphasis role="strong">Implementation/Execution</emphasis> and select <emphasis role="strong">Expression</emphasis> in the <emphasis role="strong">Condition Expression</emphasis> section.
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										From the list, select <emphasis role="strong">drools</emphasis> and enter <literal>not ValidationErrorDO()</literal> in the <emphasis role="strong">Condition Expression</emphasis> field.
									</simpara>
								</listitem>
							</orderedlist>
						</listitem>
						<listitem>
							<simpara>
								Click the new business rule task and in the <emphasis role="strong">Properties</emphasis> panel, input <literal>Mortgage Calculation</literal> in the <emphasis role="strong">Name</emphasis> field.
							</simpara>
							<informalfigure>
							<mediaobject>
								<imageobject>
									<imagedata fileref="images/_images/getting-started/validconnection.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>validconnection</phrase>
								</textobject>
							</mediaobject>
							</informalfigure>
							<orderedlist numeration="loweralpha">
								<listitem>
									<simpara>
										Expand <emphasis role="strong">Implementation/Execution</emphasis>, select <emphasis role="strong">New</emphasis> from the <emphasis role="strong">Rule Flow Group</emphasis> menu, and input <literal>mortgagecalculation</literal>.
									</simpara>
								</listitem>
							</orderedlist>
						</listitem>
						<listitem>
							<simpara>
								Expand <emphasis role="strong">Data Assignments</emphasis> and click 
								<inlinemediaobject>
									<imageobject>
										<imagedata fileref="images/_images/getting-started/btn_assign.png" format="PNG" />
									</imageobject>
									<textobject>
										<phrase>btn assign</phrase>
									</textobject>
								</inlinemediaobject>
								 next to <emphasis role="strong">Assignments</emphasis>.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								In the <emphasis role="strong">Mortgage Calculation Data I/O</emphasis> window, click <emphasis role="strong">Add</emphasis> to create the following assignments and click <emphasis role="strong">Save</emphasis>.
							</simpara>
							<figure>
								<title>Mortgage Calculation Data I/O assignments</title>
								<mediaobject>
									<imageobject>
										<imagedata fileref="images/_images/getting-started/mortgage-calc-assignments.png" format="PNG" />
									</imageobject>
									<textobject>
										<phrase>screen capture of the Mortgage Calculation Data I/O assignments</phrase>
									</textobject>
								</mediaobject>
							</figure>
						</listitem>
						<listitem>
							<simpara>
								Click an empty space on the canvas, scroll down, expand <emphasis role="strong">Process Data</emphasis>, and click 
								<inlinemediaobject>
									<imageobject>
										<imagedata fileref="images/_images/getting-started/btn_plus.png" format="PNG" />
									</imageobject>
									<textobject>
										<phrase>btn plus</phrase>
									</textobject>
								</inlinemediaobject>
								 next to <emphasis role="strong">Process Variables</emphasis>. Enter the following values:
							</simpara>
							<itemizedlist>
								<listitem>
									<simpara>
										<emphasis role="strong">Name</emphasis>: <literal>inlimit</literal>
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										<emphasis role="strong">Data Type</emphasis>: <literal>Boolean</literal>
									</simpara>
								</listitem>
							</itemizedlist>
						</listitem>
						<listitem>
							<simpara>
								Create an outgoing connection from the <emphasis role="strong">Mortgage Calculation</emphasis> task to a new user task.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Click the user task, enter <literal>Qualify</literal> in the <emphasis role="strong">Name</emphasis> field.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Expand <emphasis role="strong">Implementation/Execution</emphasis> and enter <literal>Qualify</literal> in the <emphasis role="strong">Task Name</emphasis> field.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Select <emphasis role="strong">New</emphasis> from the <emphasis role="strong">Groups</emphasis> menu, and input <literal>approver</literal>.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Click 
								<inlinemediaobject>
									<imageobject>
										<imagedata fileref="images/_images/getting-started/btn_assign.png" format="PNG" />
									</imageobject>
									<textobject>
										<phrase>btn assign</phrase>
									</textobject>
								</inlinemediaobject>
								 next to <emphasis role="strong">Assignments</emphasis>. In the <emphasis role="strong">Qualify Data I/O</emphasis> window, click <emphasis role="strong">Add</emphasis> to create the following assignments:
							</simpara>
							<figure>
								<title>Qualify Data I/O assignments</title>
								<mediaobject>
									<imageobject>
										<imagedata fileref="images/_images/getting-started/qualify-io.png" format="PNG" />
									</imageobject>
									<textobject>
										<phrase>Screen capture of the Qualify Data I/O assignments</phrase>
									</textobject>
								</mediaobject>
							</figure>
						</listitem>
						<listitem>
							<simpara>
								Above the canvas, click <emphasis role="strong">Save</emphasis> to confirm your changes.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Click on the <emphasis role="strong">Qualify</emphasis> user task, click on the <emphasis role="strong">Create parallel</emphasis> menu icon, and convert it to an exclusive gateway.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Drag the new exclusive gateway below the <emphasis role="strong">Qualify</emphasis> user task.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Create an outgoing connection from the exclusive gateway and connect it to a new user task.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Click the connection and input <literal>In Limit</literal> in the <emphasis role="strong">Name</emphasis> field of the <emphasis role="strong">Properties</emphasis> panel.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Expand <emphasis role="strong">Implementation/Execution</emphasis> and select <emphasis role="strong">Condition</emphasis> in the <emphasis role="strong">Condition Expression</emphasis> section.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Select <emphasis role="strong">inlimit</emphasis> from the <emphasis role="strong">Process Variable</emphasis> drop-down menu and select <emphasis role="strong">Is true</emphasis> from the <emphasis role="strong">Condition</emphasis> drop-down menu.
							</simpara>
							<informalfigure>
							<mediaobject>
								<imageobject>
									<imagedata fileref="images/_images/getting-started/inlimit-true.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>inlimit true</phrase>
								</textobject>
							</mediaobject>
							</informalfigure>
						</listitem>
						<listitem>
							<simpara>
								Click the user task, enter <literal>Final Approval</literal> in the <emphasis role="strong">Name</emphasis> field.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Expand <emphasis role="strong">Implementation/Execution</emphasis> and enter <literal>FinalApproval</literal> in the <emphasis role="strong">Task Name</emphasis> field.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Select <emphasis role="strong">New</emphasis> from the <emphasis role="strong">Groups</emphasis> menu, and input <literal>manager</literal>.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Click 
								<inlinemediaobject>
									<imageobject>
										<imagedata fileref="images/_images/getting-started/btn_assign.png" format="PNG" />
									</imageobject>
									<textobject>
										<phrase>btn assign</phrase>
									</textobject>
								</inlinemediaobject>
								 next to <emphasis role="strong">Assignments</emphasis>. In the <emphasis role="strong">Final Approval Data I/O</emphasis> window, click <emphasis role="strong">Add</emphasis> to create the following assignments:
							</simpara>
							<figure>
								<title>Final Approval Data I/O assignments</title>
								<mediaobject>
									<imageobject>
										<imagedata fileref="images/_images/getting-started/approval-io.png" format="PNG" />
									</imageobject>
									<textobject>
										<phrase>Screen capture of the Final Approval Data I/O assignments</phrase>
									</textobject>
								</mediaobject>
							</figure>
						</listitem>
						<listitem>
							<simpara>
								Above the canvas, click <emphasis role="strong">Save</emphasis> to confirm your changes.
							</simpara>
						</listitem>
					</orderedlist>
				</section>
				<section remap="_increasing_the_down_payment" xml:id="increasing_the_down_payment">
					<title>Increasing the down payment</title>
					<simpara>
						The increasing the down payment business process checks to see if the applicant qualifies for the loan by increasing their down payment. The final result is either the final loan approval, or loan denial based on the applicant’s inability to increase the down payment.
					</simpara>
					<orderedlist numeration="arabic">
						<title>Procedure</title>
						<listitem>
							<simpara>
								Click on the <emphasis role="strong">Final Approval</emphasis> user task and select <emphasis role="strong">Create End</emphasis> from the user task quick menu.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Move the end event below the <emphasis role="strong">Final Approval</emphasis> user task.
							</simpara>
							<informalfigure>
							<mediaobject>
								<imageobject>
									<imagedata fileref="images/_images/getting-started/create_end.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>create end</phrase>
								</textobject>
							</mediaobject>
							</informalfigure>
						</listitem>
						<listitem>
							<simpara>
								Return to the exclusive gateway that connects with the <emphasis role="strong">Final Approval</emphasis> user task. Create a second outgoing connection and connect it to a new user task.
							</simpara>
							<informalfigure>
							<mediaobject>
								<imageobject>
									<imagedata fileref="images/_images/getting-started/new-task.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>new task</phrase>
								</textobject>
							</mediaobject>
							</informalfigure>
						</listitem>
						<listitem>
							<simpara>
								Click the connection and input <literal>Not in Limit</literal> in the <emphasis role="strong">Name</emphasis> field of the <emphasis role="strong">Properties</emphasis> panel.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Expand <emphasis role="strong">Implementation/Execution</emphasis> and select <emphasis role="strong">Condition</emphasis> in the <emphasis role="strong">Condition Expression</emphasis> section.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Select <emphasis role="strong">inlimit</emphasis> from the <emphasis role="strong">Process Variable</emphasis> drop-down menu and select <emphasis role="strong">Is false</emphasis> from the <emphasis role="strong">Condition</emphasis> drop-down menu.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Click an empty space on the canvas, scroll down, expand <emphasis role="strong">Process Data</emphasis>, and click 
								<inlinemediaobject>
									<imageobject>
										<imagedata fileref="images/_images/getting-started/btn_plus.png" format="PNG" />
									</imageobject>
									<textobject>
										<phrase>btn plus</phrase>
									</textobject>
								</inlinemediaobject>
								 next to <emphasis role="strong">Process Variables</emphasis>. Enter the following values:
							</simpara>
							<itemizedlist>
								<listitem>
									<simpara>
										<emphasis role="strong">Name</emphasis>: <literal>incdownpayment</literal>
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										<emphasis role="strong">Data Type</emphasis>: <literal>Boolean</literal>
									</simpara>
									<informalfigure>
									<mediaobject>
										<imageobject>
											<imagedata fileref="images/_images/getting-started/proc-var-new.png" format="PNG" />
										</imageobject>
										<textobject>
											<phrase>proc var new</phrase>
										</textobject>
									</mediaobject>
									</informalfigure>
								</listitem>
							</itemizedlist>
						</listitem>
						<listitem>
							<simpara>
								Click the new user task and in the <emphasis role="strong">Properties</emphasis> panel, input <literal>Increase Down Payment</literal> in the <emphasis role="strong">Name</emphasis> field.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Expand <emphasis role="strong">Implementation/Execution</emphasis> and enter <literal>IncreaseDownPayment</literal> in the <emphasis role="strong">Task Name</emphasis> field.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Select <emphasis role="strong">New</emphasis> from the <emphasis role="strong">Groups</emphasis> menu, and input <literal>broker</literal>.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Click 
								<inlinemediaobject>
									<imageobject>
										<imagedata fileref="images/_images/getting-started/btn_assign.png" format="PNG" />
									</imageobject>
									<textobject>
										<phrase>btn assign</phrase>
									</textobject>
								</inlinemediaobject>
								 next to <emphasis role="strong">Assignments</emphasis>. In the <emphasis role="strong">Increase Down Payment Data I/O</emphasis> window, click <emphasis role="strong">Add</emphasis> to create the following assignments:
							</simpara>
							<figure>
								<title>Increase Down Payment Data I/O assignments</title>
								<mediaobject>
									<imageobject>
										<imagedata fileref="images/_images/getting-started/increase-down-io.png" format="PNG" />
									</imageobject>
									<textobject>
										<phrase>Screen capture of the Increase Down Payment Data I/O assignments</phrase>
									</textobject>
								</mediaobject>
							</figure>
						</listitem>
						<listitem>
							<simpara>
								Above the canvas, click <emphasis role="strong">Save</emphasis> to confirm your changes.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Click on the <emphasis role="strong">Increase Down Payment</emphasis> user task, click on the <emphasis role="strong">Create parallel</emphasis> menu icon, and convert it to an exclusive gateway.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Drag the new exclusive gateway below the <emphasis role="strong">Increase Down Payment</emphasis> user task.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Create an outgoing connection from the exclusive gateway to an end event.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Click the connection and input <literal>Down payment not increased</literal> in the <emphasis role="strong">Name</emphasis> field of the <emphasis role="strong">Properties</emphasis> panel.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Expand <emphasis role="strong">Implementation/Execution</emphasis> and select <emphasis role="strong">Expresssion</emphasis> in the <emphasis role="strong">Condition Expression</emphasis> section.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Input <emphasis role="strong">return !incdownpayment;</emphasis> and select <emphasis role="strong">java</emphasis> from the drop-down menu.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Create an outgoing connection from the exclusive gateway and connect it to the first exclusive gateway.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Click the connection and input <literal>Down payment increased</literal> in the <emphasis role="strong">Name</emphasis> field of the <emphasis role="strong">Properties</emphasis> panel.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Expand <emphasis role="strong">Implementation/Execution</emphasis> and select <emphasis role="strong">Expresssion</emphasis> in the <emphasis role="strong">Condition Expression</emphasis> section.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Input <emphasis role="strong">return incdownpayment;</emphasis> and select <emphasis role="strong">java</emphasis> from the drop-down menu.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Above the canvas, click <emphasis role="strong">Save</emphasis> to confirm your changes and save the entire business process.
							</simpara>
						</listitem>
					</orderedlist>
					<figure>
						<title>Final version of the business process</title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="images/_images/getting-started/finalBP.png" format="PNG" />
							</imageobject>
							<textobject>
								<phrase>Screen capture of the Final version of the business process</phrase>
							</textobject>
						</mediaobject>
					</figure>
				</section>
			</section>
		</chapter>
		<chapter xml:id="guided-rules-con_getting-started-process-services">
			<title>Guided rules</title>
			<simpara>
				Guided rules are business rules that you create in a UI-based guided rules designer in Business Central that leads you through the rule-creation process. The guided rules designer provides fields and options for acceptable input based on the data objects for the rule being defined. The guided rules that you define are compiled into Drools Rule Language (DRL) rules as with all other rule assets.
			</simpara>
			<simpara>
				All data objects related to a guided rule must be in the same project package as the guided rule. Assets in the same package are imported by default. After you create the necessary data objects and the guided rule, you can use the <emphasis role="strong">Data Objects</emphasis> tab of the guided rules designer to verify that all required data objects are listed or to import other existing data objects by adding a <emphasis role="strong">New item</emphasis>.
			</simpara>
			<section remap="_defining_business_rules" xml:id="defining_business_rules">
				<title>Viewing the <emphasis role="strong">Mortgage_Process</emphasis> business rules</title>
				<simpara>
					The goal of this chapter is to introduce you to the predefined business rules for the <emphasis role="strong">Mortgage_Process</emphasis> project. For this tutorial, you do not create and define the business rules. Instead, review the <emphasis role="strong">WHEN</emphasis> and <emphasis role="strong">THEN</emphasis> rules that are already defined in the <emphasis role="strong">Mortgage_Process</emphasis> sample project’s preconfigured business rules. For information about creating guided business rules, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/developing_decision_services_in_red_hat_process_automation_manager#assembly-guided-rules"><emphasis>Designing a decision service using guided rules</emphasis></link>.
				</simpara>
				<section remap="_viewing_the_emphasis_role_strong_validate_down_payment_emphasis_guided_rule" xml:id="viewing_the_emphasis_role_strong_validate_down_payment_emphasis_guided_rule">
					<title>Viewing the <emphasis role="strong">Validate Down Payment</emphasis> guided rule</title>
					<simpara>
						Review the <emphasis role="strong">WHEN</emphasis> and <emphasis role="strong">THEN</emphasis> rules so that you understand how the conditions are set and used later when you run the process.
					</simpara>
					<orderedlist numeration="arabic">
						<title>Procedure</title>
						<listitem>
							<simpara>
								Click <emphasis role="strong">Menu</emphasis> → <emphasis role="strong">Design</emphasis> → <emphasis role="strong">Projects</emphasis>, and click <emphasis role="strong">Mortgage_Process</emphasis>.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								From the asset list, click the right arrow to view the second page of the asset list and click the <emphasis role="strong">Validate Down Payment</emphasis> guided rule.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Review the <emphasis role="strong">Validate Down Payment</emphasis> guided rule’s <emphasis role="strong">WHEN</emphasis> and <emphasis role="strong">THEN</emphasis> conditions and values.
							</simpara>
							<informalfigure>
							<mediaobject>
								<imageobject>
									<imagedata fileref="images/_images/getting-started/validate-rules.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>validate rules</phrase>
								</textobject>
							</mediaobject>
							</informalfigure>
						</listitem>
					</orderedlist>
				</section>
				<section remap="_viewing_the_emphasis_role_strong_retractvalidationerr_emphasis_guided_rule" xml:id="viewing_the_emphasis_role_strong_retractvalidationerr_emphasis_guided_rule">
					<title>Viewing the <emphasis role="strong">RetractValidationErr</emphasis> guided rule</title>
					<simpara>
						Review the <emphasis role="strong">WHEN</emphasis> and <emphasis role="strong">THEN</emphasis> rules so that you understand how the conditions are set and used later when you run the process.
					</simpara>
					<orderedlist numeration="arabic">
						<title>Procedure</title>
						<listitem>
							<simpara>
								Click <emphasis role="strong">Menu</emphasis> → <emphasis role="strong">Design</emphasis> → <emphasis role="strong">Projects</emphasis>, and click <emphasis role="strong">Mortgage_Process</emphasis>.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								From the asset list, click the right arrow to view the second page of the asset list and click the <emphasis role="strong">RetractValidationErr</emphasis> guided rule.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Review the <emphasis role="strong">RetractValidationErr</emphasis> guided rule’s <emphasis role="strong">WHEN</emphasis> and <emphasis role="strong">THEN</emphasis> conditions and values.
							</simpara>
							<informalfigure>
							<mediaobject>
								<imageobject>
									<imagedata fileref="images/_images/getting-started/retract-val-rules.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>retract val rules</phrase>
								</textobject>
							</mediaobject>
							</informalfigure>
						</listitem>
					</orderedlist>
				</section>
			</section>
		</chapter>
		<chapter xml:id="guided-decision-tables-con_getting-started-process-services">
			<title>Guided decision tables</title>
			<simpara>
				Guided decision tables are a wizard-led alternative to spreadsheet decision tables for defining business rules in a tabular format. With guided decision tables, you are led by a UI-based wizard in Business Central that helps you define rule attributes, metadata, conditions, and actions based on specified data objects in your project. After you create your guided decision tables, the rules you defined are compiled into Drools Rule Language (DRL) rules as with all other rule assets.
			</simpara>
			<simpara>
				All data objects related to a guided decision table must be in the same project package as the guided decision table. Assets in the same package are imported by default. After you create the necessary data objects and the guided decision table, you can use the <emphasis role="strong">Data Objects</emphasis> tab of the guided decision tables designer to verify that all required data objects are listed or to import other existing data objects by adding a <emphasis role="strong">New item</emphasis>.
			</simpara>
			<section remap="_creating_decision_tables" xml:id="creating_decision_tables">
				<title>Viewing the mortgage decision table</title>
				<simpara>
					The goal of this chapter is to introduce you to the <emphasis role="strong">MortgageDecisionTable</emphasis> decision table. For this tutorial, you do not create and set the decision table conditions. Instead, review the values and the conditions that are already defined in the <emphasis role="strong">Mortgage_Process</emphasis> sample project’s <emphasis role="strong">MortgageDecisionTable</emphasis> Guided Decision Tables asset. For information about creating decision tables, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/developing_decision_services_in_red_hat_process_automation_manager#assembly-guided-decision-tables"><emphasis>Designing a decision service using guided decision tables</emphasis></link>.
				</simpara>
				<itemizedlist>
					<title>Prerequisites</title>
					<listitem>
						<simpara>
							The business rules have been defined. For more information, see <xref linkend="defining_business_rules" />.
						</simpara>
					</listitem>
				</itemizedlist>
				<orderedlist numeration="arabic">
					<title>Procedure</title>
					<listitem>
						<simpara>
							In Business Central, go to <emphasis role="strong">Menu</emphasis> → <emphasis role="strong">Design</emphasis> → <emphasis role="strong">Projects</emphasis> → <emphasis role="strong">Mortgage_Process</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Scroll down and click the <emphasis role="strong">MortgageDecisionTable</emphasis> Guided Decision Tables asset.
						</simpara>
						<simpara>
							<inlinemediaobject>
								<imageobject>
									<imagedata fileref="images/_images/getting-started/loans-guided-dt.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>loans guided dt</phrase>
								</textobject>
							</inlinemediaobject>
						</simpara>
					</listitem>
				</orderedlist>
			</section>
		</chapter>
		<chapter xml:id="business-process-forms_getting-started-process-services">
			<title>Forms in Business Central</title>
			<simpara>
				A form is a layout definition for a page, defined as HTML, that is displayed as a dialog window to the user during process and task instantiation. Task forms acquire data from a user for both the process and task instance execution, whereas process forms take input and output from process variables.
			</simpara>
			<simpara>
				The input is then mapped to the task using the data input assignment, which you can use inside of a task. When the task is completed, the data is mapped as a data output assignment to provide the data to the parent process instance.
			</simpara>
			<section remap="_creating_forms" xml:id="creating_forms">
				<title>Viewing the <emphasis role="strong">Mortgage_Process</emphasis> forms</title>
				<simpara>
					The goal of this chapter is to introduce you to the <emphasis role="strong">Mortgage_Process</emphasis> sample project’s predefined forms which are used for collecting user data for the mortgage application business process. For this tutorial, you do not create and modify the <emphasis role="strong">Mortgage_Process</emphasis> forms. Instead, review the predefined sample forms. For information about creating forms, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/developing_process_services_in_red_hat_process_automation_manager#business-process-forms"><emphasis>Designing business processes using BPMN models</emphasis></link>.
				</simpara>
				<orderedlist numeration="arabic">
					<title>Procedure</title>
					<listitem>
						<simpara>
							In Business Central, go to <emphasis role="strong">Menu</emphasis> → <emphasis role="strong">Design</emphasis> → <emphasis role="strong">Projects</emphasis> → <emphasis role="strong">Mortgage_Process</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							From the asset list, click the right arrow to view the second page of the asset list and select the <emphasis role="strong">Applicant</emphasis> form.
						</simpara>
						<figure>
							<title>Applicant sample form</title>
							<mediaobject>
								<imageobject>
									<imagedata fileref="images/_images/getting-started/applicantForm.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>screen capture of the Applicant sample form</phrase>
								</textobject>
							</mediaobject>
						</figure>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">Menu</emphasis> → <emphasis role="strong">Design</emphasis> → <emphasis role="strong">Projects</emphasis> → <emphasis role="strong">Mortgage_Process</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							From the asset list, select the <emphasis role="strong">Property</emphasis> form. The <emphasis role="strong">Property</emphasis> form is shown below:
						</simpara>
						<figure>
							<title>Property sample form</title>
							<mediaobject>
								<imageobject>
									<imagedata fileref="images/_images/getting-started/propertyForm2.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>screen capture of the Property sample form</phrase>
								</textobject>
							</mediaobject>
						</figure>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">Menu</emphasis> → <emphasis role="strong">Design</emphasis> → <emphasis role="strong">Projects</emphasis> → <emphasis role="strong">Mortgage_Process</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							From the asset list, select the <emphasis role="strong">Application</emphasis> form. The <emphasis role="strong">Application</emphasis> form is shown below:
						</simpara>
						<figure>
							<title>Application sample form</title>
							<mediaobject>
								<imageobject>
									<imagedata fileref="images/_images/getting-started/applicationForm.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>screen capture of the Application sample form</phrase>
								</textobject>
							</mediaobject>
						</figure>
					</listitem>
					<listitem>
						<simpara>
							Click the <emphasis role="strong">X</emphasis> icon in the upper-right corner to close the editor.
						</simpara>
					</listitem>
				</orderedlist>
			</section>
		</chapter>
		<chapter xml:id="deploy-app-process">
			<title>Deploying the <emphasis role="strong">MortgageApprovalProcess</emphasis> process application</title>
			<simpara>
				The following chapter instructs you how to build and deploy a new instance of the <emphasis role="strong">Mortgage_Process</emphasis> application in Red Hat Process Automation Manager.
			</simpara>
			<itemizedlist>
				<title>Prerequisites</title>
				<listitem>
					<simpara>
						KIE Server is deployed and connected to Business Central.
					</simpara>
				</listitem>
			</itemizedlist>
			<orderedlist numeration="arabic">
				<title>Procedure</title>
				<listitem>
					<simpara>
						In Business Central, go to <emphasis role="strong">Menu</emphasis> → <emphasis role="strong">Design</emphasis> → <emphasis role="strong">Projects</emphasis> → <emphasis role="strong">Mortgage_Process</emphasis>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Click <emphasis role="strong">Deploy</emphasis>.
					</simpara>
					<itemizedlist>
						<listitem>
							<simpara>
								If no KIE container (deployment unit) is included with the project name, a container with default values is automatically created.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								If an older version of the project is already deployed, go to the project settings and change the project version. When finished, save the change and click <emphasis role="strong">Deploy</emphasis>. This deploys a new version of the same project with the latest changes in place, alongside the older version(s).
							</simpara>
							<note>
								<simpara>
									You can also select the <emphasis role="strong">Build &amp; Install</emphasis> option to build the project and publish the KJAR file to the configured Maven repository without deploying to a KIE Server. In a development environment, you can click <emphasis role="strong">Deploy</emphasis> to deploy the built KJAR file to a KIE Server without stopping any running instances (if applicable), or click <emphasis role="strong">Redeploy</emphasis> to deploy the built KJAR file and replace all instances. The next time you deploy or redeploy the built KJAR, the previous deployment unit (KIE container) is automatically updated in the same target KIE Server. In a production environment, the <emphasis role="strong">Redeploy</emphasis> option is disabled and you can click <emphasis role="strong">Deploy</emphasis> only to deploy the built KJAR file to a new deployment unit (KIE container) on a KIE Server.
								</simpara>
								<simpara>
									To configure the KIE Server environment mode, set the <literal>org.kie.server.mode</literal> system property to <literal>org.kie.server.mode=development</literal> or <literal>org.kie.server.mode=production</literal>. To configure the deployment behavior for a corresponding project in Business Central, go to project <emphasis role="strong">Settings</emphasis> → <emphasis role="strong">General Settings</emphasis> → <emphasis role="strong">Version</emphasis> and toggle the <emphasis role="strong">Development Mode</emphasis> option. By default, KIE Server and all new projects in Business Central are in development mode. You cannot deploy a project with <emphasis role="strong">Development Mode</emphasis> turned on or with a manually added <literal>SNAPSHOT</literal> version suffix to a KIE Server that is in production mode.
								</simpara>
							</note>
						</listitem>
					</itemizedlist>
				</listitem>
				<listitem>
					<simpara>
						To review project deployment details, click <emphasis role="strong">View deployment details</emphasis> in the deployment banner at the top of the screen or in the <emphasis role="strong">Deploy</emphasis> drop-down menu. This option directs you to the <emphasis role="strong">Menu</emphasis> → <emphasis role="strong">Deploy</emphasis> → <emphasis role="strong">Execution Servers</emphasis> page.
					</simpara>
				</listitem>
			</orderedlist>
		</chapter>
		<chapter xml:id="executing_processes">
			<title>Executing the <emphasis role="strong">MortgageApprovalProcess</emphasis> process application</title>
			<simpara>
				Now that you have deployed the project, you can execute the project’s defined functionality. For this tutorial you input data into a mortgage application form acting as the mortgage broker. The <emphasis role="strong">MortgageApprovalProcess</emphasis> business process runs and determines whether or not the applicant has offered an acceptable down payment based on the decision rules that you defined earlier. The business process either ends the rule testing or requests that the applicant increase the down payment to proceed. If the application passes the business rule testing, the bank’s approver reviews the application and either approve or deny the loan.
			</simpara>
			<itemizedlist>
				<title>Prerequisites</title>
				<listitem>
					<simpara>
						KIE Server is deployed and connected to Business Central.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						The <emphasis role="strong">Mortgage_Process</emphasis> application has been deployed.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						The users working on the tasks are members of the following groups and roles:
					</simpara>
					<itemizedlist>
						<listitem>
							<simpara>
								<emphasis role="strong">approver</emphasis> group: For the <emphasis role="strong">Qualify</emphasis> task
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								<emphasis role="strong">broker</emphasis> group: For the <emphasis role="strong">Correct Data</emphasis> and <emphasis role="strong">Increase Down Payment</emphasis> tasks
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								<emphasis role="strong">manager</emphasis> role: For the <emphasis role="strong">Final Approval</emphasis> task
							</simpara>
						</listitem>
					</itemizedlist>
				</listitem>
			</itemizedlist>
			<orderedlist numeration="arabic">
				<title>Procedure</title>
				<listitem>
					<simpara>
						Log in to Red Hat Process Automation Manager as <literal>Bill</literal> (the broker) and click <emphasis role="strong">Menu</emphasis> → <emphasis role="strong">Manage</emphasis> → <emphasis role="strong">Process Definitions</emphasis>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Click the three vertical dots in the <emphasis role="strong">Actions</emphasis> column and select <emphasis role="strong">Start</emphasis> to start to open the <emphasis role="strong">Application</emphasis> form and input the following values in to the form fields:
					</simpara>
					<itemizedlist>
						<listitem>
							<simpara>
								<emphasis role="strong">Down Payment</emphasis>: <literal>30000</literal>
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								<emphasis role="strong">Years of amortization</emphasis>: <literal>10</literal>
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								<emphasis role="strong">Name</emphasis>: <literal>Ivo</literal>
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								<emphasis role="strong">Annual Income</emphasis>: <literal>60000</literal>
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								<emphasis role="strong">SSN</emphasis>: <literal>123456789</literal>
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								<emphasis role="strong">Age of property</emphasis>: <literal>8</literal>
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								<emphasis role="strong">Address of property</emphasis>: <literal>Brno</literal>
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								<emphasis role="strong">Locale</emphasis>: <literal>Rural</literal>
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								<emphasis role="strong">Property Sale Price</emphasis>: <literal>50000</literal>
							</simpara>
						</listitem>
					</itemizedlist>
				</listitem>
				<listitem>
					<simpara>
						Click <emphasis role="strong">Submit</emphasis> to start a new process instance. After starting the process instance, the <emphasis role="strong">Instance Details</emphasis> view opens.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Click the <emphasis role="strong">Diagram</emphasis> tab to view the process flow within the process diagram. The state of the process is highlighted as it moves through each task.
					</simpara>
					<informalfigure>
					<mediaobject>
						<imageobject>
							<imagedata fileref="images/_images/project-data/diagram-progress.png" format="PNG" />
						</imageobject>
						<textobject>
							<phrase>diagram progress</phrase>
						</textobject>
					</mediaobject>
					</informalfigure>
				</listitem>
				<listitem>
					<simpara>
						Log out of Business Central and log back in as <literal>Katy</literal>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Click <emphasis role="strong">Menu</emphasis> → <emphasis role="strong">Track</emphasis> → <emphasis role="strong">Task Inbox</emphasis>. This takes you to the <emphasis role="strong">Qualify</emphasis> form.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Click the three vertical dots in the <emphasis role="strong">Actions</emphasis> column and select and click <emphasis role="strong">Claim</emphasis>. The Qualify task <emphasis role="strong">Status</emphasis> is now <literal>Reserved</literal>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Click the <emphasis role="strong">Qualify</emphasis> task row to open and review the task information. Click <emphasis role="strong">Claim</emphasis> and then <emphasis role="strong">Start</emphasis> at the bottom of the form.
					</simpara>
					<simpara>
						The application form is now active for approval or denial.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						To approve the application, select <emphasis role="strong">Is mortgage application in limit?</emphasis> and click <emphasis role="strong">Complete</emphasis>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						In the <emphasis role="strong">Task Inbox</emphasis>, click anywhere in the <emphasis role="strong">Final Approval</emphasis> row to open the <emphasis role="strong">Final Approval</emphasis> task.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						In the <emphasis role="strong">Final Approval</emphasis> row, click the three vertical dots in the <emphasis role="strong">Actions</emphasis> column and click <emphasis role="strong">Claim</emphasis>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Click anywhere in the <emphasis role="strong">Final Approval</emphasis> row to open the <emphasis role="strong">Final Approval</emphasis> task. Click <emphasis role="strong">Start</emphasis> at the bottom of the form.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Note that the <emphasis role="strong">Inlimit</emphasis> check box is selected to reflect that that application is ready for final approval. Click <emphasis role="strong">Complete</emphasis>.
					</simpara>
				</listitem>
			</orderedlist>
			<note>
				<simpara>
					The <emphasis role="strong">Save</emphasis> and <emphasis role="strong">Release</emphasis> buttons are only used to either pause the approval process and save the instance if you are waiting on a field value, or to release the task for another user to modify.
				</simpara>
			</note>
		</chapter>
		<chapter xml:id="monitoring_proc">
			<title>Monitoring the <emphasis role="strong">MortgageApprovalProcess</emphasis> process application</title>
			<simpara>
				The following chapter shows how different bank employees, such as a system administrator or a knowledge worker, might use some of the monitoring capabilities to track an instance of the mortgage approval process.
			</simpara>
			<itemizedlist>
				<title>Prerequisites</title>
				<listitem>
					<simpara>
						KIE Server is deployed and connected to Business Central.
					</simpara>
				</listitem>
			</itemizedlist>
			<orderedlist numeration="arabic">
				<title>Procedure</title>
				<listitem>
					<simpara>
						Log in to Red Hat Process Automation Manager and click <emphasis role="strong">Menu</emphasis> → <emphasis role="strong">Manage</emphasis> → <emphasis role="strong">Process Instances</emphasis>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						In the <emphasis role="strong">Manage Process Instances</emphasis> window, you can set filters, such as <emphasis role="strong">State</emphasis>, <emphasis role="strong">Errors</emphasis>, <emphasis role="strong">Id</emphasis>, and so on.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Select <emphasis role="strong">Completed</emphasis> in the <emphasis role="strong">State</emphasis> filter to view all completed <emphasis role="strong">MortgageApprovalProcess</emphasis> instances.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Click on the completed process instance.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Click each of the following tabs to get a feel for what type of information is available to monitor a specific process instance:
					</simpara>
					<itemizedlist>
						<listitem>
							<simpara>
								<emphasis role="strong">Instance Details</emphasis>
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								<emphasis role="strong">Process Variables</emphasis>
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								<emphasis role="strong">Documents</emphasis>
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								<emphasis role="strong">Logs</emphasis>
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								<emphasis role="strong">Diagram</emphasis>
							</simpara>
						</listitem>
					</itemizedlist>
				</listitem>
				<listitem>
					<simpara>
						Click <emphasis role="strong">Menu</emphasis> → <emphasis role="strong">Track</emphasis> → <emphasis role="strong">Process Reports</emphasis>. This view contains a variety of charts that can help a senior process manager to gain an overview of all processes based on <emphasis role="strong">Type</emphasis>, <emphasis role="strong">Start Date</emphasis>, <emphasis role="strong">Running Time</emphasis>, and so on to assist with task reporting.
					</simpara>
				</listitem>
			</orderedlist>
			<section xml:id="process-instances-filters-con">
				<title>Filtering process instances using default or advanced filters</title>
				<simpara>
					Business Central now provides you with default and advanced filters to help you filter and search through running process instances. You can also create custom filters using the <emphasis role="strong">Advanced Filters</emphasis> option.
				</simpara>
				<section xml:id="process-instances-filters-proc">
					<title>Filtering process instances using default filters</title>
					<simpara>
						Filter process instances by attributes such as <emphasis role="strong">State</emphasis>, <emphasis role="strong">Errors</emphasis>, <emphasis role="strong">Filter By</emphasis>, <emphasis role="strong">Name</emphasis>, <emphasis role="strong">Start Date</emphasis>, and <emphasis role="strong">Last update</emphasis>.
					</simpara>
					<orderedlist numeration="arabic">
						<title>Procedure</title>
						<listitem>
							<simpara>
								In Business Central, go to <emphasis role="strong">Menu</emphasis> → <emphasis role="strong">Manage</emphasis> → <emphasis role="strong">Process Instances</emphasis>.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								On the <emphasis role="strong">Manage Process Instances</emphasis> page, click the filter icon on the left of the page to expand the <emphasis role="strong">Filters</emphasis> pane.
							</simpara>
							<simpara>
								This pane lists the following process attributes which you can use to filter process instances:
							</simpara>
							<itemizedlist>
								<listitem>
									<simpara>
										<emphasis role="strong">State</emphasis>: Filter process instances based on their state (<emphasis role="strong">Active</emphasis>, <emphasis role="strong">Aborted</emphasis>, <emphasis role="strong">Completed</emphasis>, <emphasis role="strong">Pending</emphasis>, and <emphasis role="strong">Suspended</emphasis>).
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										<emphasis role="strong">Errors</emphasis>: Filter process instances by errors.
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										<emphasis role="strong">Filter By</emphasis>: Filter process instances based on <emphasis role="strong">Id</emphasis>, <emphasis role="strong">Initiator</emphasis>, <emphasis role="strong">Correlation Key</emphasis>, or <emphasis role="strong">Description</emphasis> attribute.
									</simpara>
									<orderedlist numeration="lowerroman">
										<listitem>
											<simpara>
												Select the required attribute.
											</simpara>
										</listitem>
										<listitem>
											<simpara>
												Enter the search query in the text field below.
											</simpara>
										</listitem>
										<listitem>
											<simpara>
												Click <emphasis role="strong">Apply</emphasis>.
											</simpara>
										</listitem>
									</orderedlist>
								</listitem>
								<listitem>
									<simpara>
										<emphasis role="strong">Name</emphasis>: Filter process instances by definition names.
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										<emphasis role="strong">Definition Id</emphasis>: Filter process instances by process definition IDs.
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										<emphasis role="strong">Deployment Id</emphasis>: Filter process instances by process deployment IDs.
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										<emphasis role="strong">Parent Process Instance Id</emphasis>: Filter process instances by parent process instance IDs.
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										<emphasis role="strong">SLA Compliance</emphasis>: Filter process instances by SLA compliance states.
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										<emphasis role="strong">Start Date</emphasis>: Filter process instances by creation dates.
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										<emphasis role="strong">Last update</emphasis>: Filter process instances by last modified dates.
									</simpara>
								</listitem>
							</itemizedlist>
						</listitem>
					</orderedlist>
				</section>
				<section xml:id="process-instances-filters-advanced-proc">
					<title>Filtering process instances using advanced filters</title>
					<simpara>
						Use the <emphasis role="strong">Advanced Filters</emphasis> option to create custom process instance filters. The newly created custom filter is added to the <emphasis role="strong">Saved Filters</emphasis> pane, which is accessible by clicking on the star icon on the left of the <emphasis role="strong">Manage Process Instances</emphasis> page.
					</simpara>
					<orderedlist numeration="arabic">
						<title>Procedure</title>
						<listitem>
							<simpara>
								In Business Central, go to <emphasis role="strong">Menu</emphasis> → <emphasis role="strong">Manage</emphasis> → <emphasis role="strong">Process Instances</emphasis>.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								On the <emphasis role="strong">Manage Process Instances</emphasis> page, on the left of the page click the <emphasis role="strong">Advanced Filters</emphasis> icon.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								In the <emphasis role="strong">Advanced Filters</emphasis> pane, enter the name and description of the filter, and click <emphasis role="strong">Add New</emphasis>.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Select an attribute from the <emphasis role="strong">Select column</emphasis> drop-down list, for example, <emphasis role="strong">processName</emphasis>. The content of the drop-down changes to <emphasis role="strong">processName != value1</emphasis>.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Click the drop-down again and choose the required logical query. For the <emphasis role="strong">processName</emphasis> attribute, choose <emphasis role="strong">equals to</emphasis>.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Change the value of the text field to the name of the process you want to filter.
							</simpara>
							<note>
								<simpara>
									The name must match the value defined in the business process of the project.
								</simpara>
							</note>
						</listitem>
						<listitem>
							<simpara>
								Click <emphasis role="strong">Save</emphasis> and the processes are filtered according to the filter definition.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Click the star icon to open the <emphasis role="strong">Saved Filters</emphasis> pane.
							</simpara>
							<simpara>
								In the <emphasis role="strong">Saved Filters</emphasis> pane, you can view all the saved advanced filters.
							</simpara>
						</listitem>
					</orderedlist>
				</section>
			</section>
		</chapter>
		<chapter remap="_additional_resources_2" xml:id="additional_resources_2">
			<title>Additional resources</title>
			<itemizedlist>
				<listitem>
					<simpara>
						<link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/developing_process_services_in_red_hat_process_automation_manager#assembly-designing-business-processes"><emphasis>Designing business processes using BPMN models</emphasis></link>
					</simpara>
				</listitem>
			</itemizedlist>
		</chapter>
	</part>
	<part xml:id="assembly-getting-started-case-management">
		<title>Getting started with case management in Red Hat Process Automation Manager</title>
		<partintro>
			<simpara>
				As a business rules and processes developer, you can use case management assets in Business Central to create unpredictable and ad hoc case processes. Case workers or process administrators can also use Business Central for case management and execution. Red Hat Process Automation Manager provides example projects with example business assets in Business Central as a reference. This document describes how to create and test an example IT orders project based on the <emphasis role="strong">IT_Orders</emphasis> sample project included in Business Central.
			</simpara>
			<itemizedlist>
				<title>Prerequisites</title>
				<listitem>
					<simpara>
						Red Hat JBoss Enterprise Application Platform 7.3 is installed. For installation information, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.3/html-single/installation_guide/"><emphasis>Red Hat JBoss Enterprise Application Platform 7.3 Installation Guide</emphasis></link>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Red Hat Process Automation Manager is installed and configured with KIE Server. For more information see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/installing_and_configuring_red_hat_process_automation_manager#assembly-install-on-eap"><emphasis>Installing and configuring Red Hat Process Automation Manager on Red Hat JBoss EAP 7.3</emphasis></link>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Red Hat Process Automation Manager is running and you can log in to Business Central with the <literal>kie-server</literal>, <literal>user</literal>, and <literal>admin</literal> roles.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						You have reviewed the information in <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/developing_process_services_in_red_hat_process_automation_manager#assembly-designing-and-building-cases"><emphasis>Designing and building cases for case management</emphasis></link>.
					</simpara>
				</listitem>
			</itemizedlist>
		</partintro>
		<chapter xml:id="case-management-it-order-sample-proc">
			<title>Reviewing the IT_Orders sample project</title>
			<simpara>
				Before you create your own case management project, review the existing <emphasis role="strong">IT_Orders</emphasis> sample case management project in Business Central. This sample project contains predefined case management assets as a reference for your own case projects.
			</simpara>
			<important>
				<simpara>
					The business process application example includes features that are Technology Preview only. Technology Preview features are not supported with Red Hat production service level agreements (SLAs), might not be functionally complete, and are not recommended for production. These features provide early access to upcoming product features, enabling customers to test functionality and provide feedback during the development process. For more information about Red Hat Technology Preview support, see <link xlink:href="https://access.redhat.com/support/offerings/techpreview/">Technology Preview Features Support Scope</link>.
				</simpara>
			</important>
			<orderedlist numeration="arabic">
				<title>Procedure</title>
				<listitem>
					<simpara>
						In Business Central, go to <emphasis role="strong">Menu</emphasis> → <emphasis role="strong">Design</emphasis> → <emphasis role="strong">Projects</emphasis>. If there are existing projects, you can access the samples by clicking the <emphasis role="strong">MySpace</emphasis> default space and selecting <emphasis role="strong">Try Samples</emphasis> from the <emphasis role="strong">Add Project</emphasis> drop-down menu. If there are no existing projects, click <emphasis role="strong">Try samples</emphasis>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Select <emphasis role="strong">IT_Orders</emphasis> and click <emphasis role="strong">Ok</emphasis>.
					</simpara>
				</listitem>
			</orderedlist>
			<simpara>
				The <emphasis role="strong">Assets</emphasis> view of the project opens. Select each example asset to explore how the project is designed to achieve the specified goal or workflow.
			</simpara>
			<simpara>
				Review the <emphasis role="strong">orderhardware</emphasis> business process to help you understand the business process flow.
			</simpara>
			<informalfigure>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/_images/cases/itorders-orderhardware-process.png" format="PNG" />
				</imageobject>
				<textobject>
					<phrase>orderhardware Business Processes (legacy) asset</phrase>
				</textobject>
			</mediaobject>
			</informalfigure>
		</chapter>
		<chapter xml:id="case-management-creating-a-case-proc">
			<title>Creating a new IT_Orders case project</title>
			<simpara>
				Create a new <literal>IT_Orders</literal> project in Business Central to gain an understanding of all of the required assets and how they are used in the project.
			</simpara>
			<orderedlist numeration="arabic">
				<title>Procedure</title>
				<listitem>
					<simpara>
						Log in to Business Central and go to <emphasis role="strong">Menu</emphasis> → <emphasis role="strong">Design</emphasis> → <emphasis role="strong">Projects</emphasis>.
					</simpara>
					<simpara>
						Business Central provides a default space called <emphasis role="strong">MySpace</emphasis>, as shown in the following image. You can use the default space to create and test example projects.
					</simpara>
					<figure>
						<title>Default spaces</title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="images/_images/getting-started/spaces-teams-bc.png" format="PNG" />
							</imageobject>
							<textobject>
								<phrase>spaces teams bc</phrase>
							</textobject>
						</mediaobject>
					</figure>
				</listitem>
				<listitem>
					<simpara>
						Click the <emphasis role="strong">Add Project</emphasis> drop-down arrow and select the <emphasis role="strong">Case project</emphasis> option:
					</simpara>
					<figure>
						<title>Case project</title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="images/_images/cases/select-case-proj.png" format="PNG" />
							</imageobject>
							<textobject>
								<phrase>select case proj</phrase>
							</textobject>
						</mediaobject>
					</figure>
				</listitem>
				<listitem>
					<simpara>
						In the <emphasis role="strong">Add Project</emphasis> window, enter <literal>IT_Orders_New</literal> in the <emphasis role="strong">Name</emphasis> field and enter a project <emphasis role="strong">Description</emphasis>.
					</simpara>
					<figure>
						<title>Add Project window</title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="images/_images/getting-started/addproject-case.png" format="PNG" />
							</imageobject>
							<textobject>
								<phrase>addproject case</phrase>
							</textobject>
						</mediaobject>
					</figure>
				</listitem>
				<listitem>
					<simpara>
						Click <emphasis role="strong">Add</emphasis> to add the project.
					</simpara>
					<simpara>
						The <emphasis role="strong">Assets</emphasis> view of the project opens.
					</simpara>
				</listitem>
			</orderedlist>
		</chapter>
		<chapter xml:id="data-objects-con_getting-started-case-management">
			<title>Data objects</title>
			<simpara>
				Data objects are the building blocks for the rule assets that you create. Data objects are custom data types implemented as Java objects in specified packages of your project. For example, you might create a <literal>Person</literal> object with data fields <literal>Name</literal>, <literal>Address</literal>, and <literal>DateOfBirth</literal> to specify personal details for loan application rules. These custom data types determine what data your assets and your decision services are based on.
			</simpara>
			<section xml:id="order-service-data-object-proc-getting-started-case-management">
				<title>Creating the ITOrderService data object</title>
				<simpara>
					The <literal>ITOrderService</literal> data object specifies the data type that will be used to define the IT Orders variables.
				</simpara>
				<itemizedlist>
					<title>Prerequisites</title>
					<listitem>
						<simpara>
							The <emphasis role="strong">IT_Orders_New</emphasis> project is created.
						</simpara>
					</listitem>
				</itemizedlist>
				<orderedlist numeration="arabic">
					<title>Procedure</title>
					<listitem>
						<simpara>
							Click <emphasis role="strong">Add Asset</emphasis> → <emphasis role="strong">Data Object</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							In the Create new Data Object wizard, enter the following values:
						</simpara>
						<itemizedlist>
							<listitem>
								<simpara>
									Data Object: <literal>ITOrderService</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Package: <literal>com.myspace.it_orders_new</literal>
								</simpara>
							</listitem>
						</itemizedlist>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">Ok</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click 
							<inlinemediaobject>
								<imageobject>
									<imagedata fileref="images/_images/cases/plus-sign.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>plus sign</phrase>
								</textobject>
							</inlinemediaobject>
							 next to the <emphasis role="strong">Package</emphasis> drop-down menu to specify a new package for the data object.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Input <literal>org.jbpm.demo.it_orders.services</literal> and click <emphasis role="strong">Add</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">Save</emphasis>, and then click <emphasis role="strong">Yes, Move</emphasis> to confirm your changes.
						</simpara>
					</listitem>
				</orderedlist>
			</section>
			<section xml:id="survey-data-object-proc-getting-started-case-management">
				<title>Creating the Survey data object</title>
				<simpara>
					The <literal>Survey</literal> data object contains data fields, such as <emphasis role="strong">deliveredOnTime</emphasis> and <emphasis role="strong">missingEquipment.</emphasis> You will use the data and values when you design your case.
				</simpara>
				<itemizedlist>
					<title>Prerequisites</title>
					<listitem>
						<simpara>
							The <emphasis role="strong">IT_Orders_New</emphasis> project is created.
						</simpara>
					</listitem>
				</itemizedlist>
				<orderedlist numeration="arabic">
					<title>Procedure</title>
					<listitem>
						<simpara>
							In Business Central, go to <emphasis role="strong">Menu</emphasis> → <emphasis role="strong">Design</emphasis> → <emphasis role="strong">Projects</emphasis> and click <emphasis role="strong">IT_Orders_New</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">Add Asset</emphasis> → <emphasis role="strong">Data Object</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							In the <emphasis role="strong">Create new Data Object</emphasis> wizard, enter the following values:
						</simpara>
						<itemizedlist>
							<listitem>
								<simpara>
									<emphasis role="strong">Data Object</emphasis>: <literal>Survey</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Package</emphasis>: <literal>com.myspace.it_orders_new</literal>
								</simpara>
							</listitem>
						</itemizedlist>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">Ok</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Add the <emphasis role="strong">Survey</emphasis> data object constraints.
						</simpara>
						<orderedlist numeration="loweralpha">
							<listitem>
								<simpara>
									Click <emphasis role="strong">add field</emphasis>.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Enter the following values:
								</simpara>
								<itemizedlist>
									<listitem>
										<simpara>
											<emphasis role="strong">Id</emphasis>: <literal>comment</literal>
										</simpara>
									</listitem>
									<listitem>
										<simpara>
											<emphasis role="strong">Label</emphasis>: Leave empty
										</simpara>
									</listitem>
									<listitem>
										<simpara>
											<emphasis role="strong">Type</emphasis>: <literal>String</literal>
										</simpara>
									</listitem>
								</itemizedlist>
							</listitem>
							<listitem>
								<simpara>
									Click <emphasis role="strong">Create and continue</emphasis>, and then enter the following values:
								</simpara>
								<itemizedlist>
									<listitem>
										<simpara>
											<emphasis role="strong">Id</emphasis>: <literal>deliveredOnTime</literal>
										</simpara>
									</listitem>
									<listitem>
										<simpara>
											<emphasis role="strong">Label</emphasis>: Leave empty
										</simpara>
									</listitem>
									<listitem>
										<simpara>
											<emphasis role="strong">Type</emphasis>: <literal>Boolean</literal>
										</simpara>
									</listitem>
								</itemizedlist>
							</listitem>
							<listitem>
								<simpara>
									Click <emphasis role="strong">Create and continue</emphasis>, and then enter the following values:
								</simpara>
								<itemizedlist>
									<listitem>
										<simpara>
											<emphasis role="strong">Id</emphasis>: <literal>missingEquipment</literal>
										</simpara>
									</listitem>
									<listitem>
										<simpara>
											<emphasis role="strong">Label</emphasis>: Leave empty
										</simpara>
									</listitem>
									<listitem>
										<simpara>
											<emphasis role="strong">Type</emphasis>: <literal>String</literal>
										</simpara>
									</listitem>
								</itemizedlist>
							</listitem>
							<listitem>
								<simpara>
									Click <emphasis role="strong">Create and continue</emphasis>, and then enter the following values:
								</simpara>
								<itemizedlist>
									<listitem>
										<simpara>
											<emphasis role="strong">Id</emphasis>: <literal>satisfied</literal>
										</simpara>
									</listitem>
									<listitem>
										<simpara>
											<emphasis role="strong">Label</emphasis>: Leave empty
										</simpara>
									</listitem>
									<listitem>
										<simpara>
											<emphasis role="strong">Type</emphasis>: <literal>Boolean</literal>
										</simpara>
									</listitem>
								</itemizedlist>
							</listitem>
							<listitem>
								<simpara>
									Click <emphasis role="strong">Create</emphasis>.
								</simpara>
							</listitem>
						</orderedlist>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">Save</emphasis> to confirm your changes.
						</simpara>
						<figure>
							<title>Survey data object details</title>
							<mediaobject>
								<imageobject>
									<imagedata fileref="images/_images/cases/survey-do.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>survey do</phrase>
								</textobject>
							</mediaobject>
						</figure>
					</listitem>
				</orderedlist>
			</section>
		</chapter>
		<chapter xml:id="case-management-designing-IT-hardware-proc">
			<title>Designing the case definition</title>
			<simpara>
				You design cases using the process designer in Business Central. Case design is the basis of case management and sets the specific goals and tasks for each case. The case flow can be modified dynamically during run time by adding dynamic tasks or processes. In this procedure, you will create this same case definition to familiarize yourself with the case definition design process.
			</simpara>
			<simpara>
				The <emphasis role="strong">IT_Orders</emphasis> sample project in Business Central includes the following <emphasis role="strong">orderhardware</emphasis> business process case definition.
			</simpara>
			<figure>
				<title>orderhardware business process case definition</title>
				<mediaobject>
					<imageobject>
						<imagedata fileref="images/_images/cases/itorders-orderhardware-process.png" format="PNG" />
					</imageobject>
					<textobject>
						<phrase>IT Orders case design</phrase>
					</textobject>
				</mediaobject>
			</figure>
			<itemizedlist>
				<title>Prerequisites</title>
				<listitem>
					<simpara>
						You have created a new case in Business Central. For more information, see <xref linkend="case-management-creating-a-case-proc" />.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						You have created the data objects. For more information, see <xref linkend="data-objects-con_getting-started-case-management" />.
					</simpara>
				</listitem>
			</itemizedlist>
			<orderedlist numeration="arabic">
				<title>Procedure</title>
				<listitem>
					<simpara>
						In Business Central, go to <emphasis role="strong">Menu</emphasis> → <emphasis role="strong">Design</emphasis> → <emphasis role="strong">Projects</emphasis> and click <emphasis role="strong">IT_Orders_New</emphasis>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Click <emphasis role="strong">Add Asset</emphasis> → <emphasis role="strong">Case Definition</emphasis>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						In the <emphasis role="strong">Create new Case definition</emphasis> window, add the following required information:
					</simpara>
					<itemizedlist>
						<listitem>
							<simpara>
								<emphasis role="strong">Case Definition</emphasis>: Input <literal>orderhardware</literal>. This is usually the subject of the case or project that is being case managed.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								<emphasis role="strong">Package</emphasis>: Select <emphasis role="strong">com.myspace.it_orders_new</emphasis> to specify the location that the case file is created in.
							</simpara>
						</listitem>
					</itemizedlist>
				</listitem>
				<listitem>
					<simpara>
						Click <emphasis role="strong">Ok</emphasis> to open the process designer.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Define values for the case file variables that are accessible to the subprocesses, subcases, and business rules used in the case.
					</simpara>
					<orderedlist numeration="loweralpha">
						<listitem>
							<simpara>
								In the upper-right corner, click the <emphasis role="strong">Properties</emphasis> <inlinemediaobject>
									<imageobject>
										<imagedata fileref="images/_images/getting-started/diagram_properties.png" format="PNG" />
									</imageobject>
									<textobject>
										<phrase>diagram properties</phrase>
									</textobject>
								</inlinemediaobject>
								 icon.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Scroll down and expand <emphasis role="strong">Case Management</emphasis>, click 
								<inlinemediaobject>
									<imageobject>
										<imagedata fileref="images/_images/getting-started/btn_plus.png" format="PNG" />
									</imageobject>
									<textobject>
										<phrase>btn plus</phrase>
									</textobject>
								</inlinemediaobject>
								 in the <emphasis role="strong">Case File Variables</emphasis> section, and enter the following:
							</simpara>
							<figure>
								<title>orderhardware case file variables</title>
								<mediaobject>
									<imageobject>
										<imagedata fileref="images/_images/cases/case-file-vars.png" format="PNG" />
									</imageobject>
									<textobject>
										<phrase>Case file variables</phrase>
									</textobject>
								</mediaobject>
							</figure>
						</listitem>
					</orderedlist>
					<note>
						<simpara>
							The following case file variables are custom data types:
						</simpara>
						<itemizedlist>
							<listitem>
								<simpara>
									<emphasis role="strong">hwSpec</emphasis>: org.jbpm.document.Document (type in this value)
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">survey</emphasis>: Survey [com.myspace.it_orders_new] (select this value)
								</simpara>
							</listitem>
						</itemizedlist>
					</note>
				</listitem>
				<listitem>
					<simpara>
						Click <emphasis role="strong">Save</emphasis>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Define the roles involved in the case.
					</simpara>
					<orderedlist numeration="loweralpha">
						<listitem>
							<simpara>
								In the upper-right corner, click the <emphasis role="strong">Properties</emphasis> <inlinemediaobject>
									<imageobject>
										<imagedata fileref="images/_images/getting-started/diagram_properties.png" format="PNG" />
									</imageobject>
									<textobject>
										<phrase>diagram properties</phrase>
									</textobject>
								</inlinemediaobject>
								 icon.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Scroll down and expand <emphasis role="strong">Case Management</emphasis>, click 
								<inlinemediaobject>
									<imageobject>
										<imagedata fileref="images/_images/getting-started/btn_plus.png" format="PNG" />
									</imageobject>
									<textobject>
										<phrase>btn plus</phrase>
									</textobject>
								</inlinemediaobject>
								 in the <emphasis role="strong">Case Roles</emphasis> section, and enter the following:
							</simpara>
							<figure>
								<title>orderhardware case roles</title>
								<mediaobject>
									<imageobject>
										<imagedata fileref="images/_images/cases/case_roles-2.png" format="PNG" />
									</imageobject>
									<textobject>
										<phrase>Case roles</phrase>
									</textobject>
								</mediaobject>
							</figure>
							<itemizedlist>
								<listitem>
									<simpara>
										<literal>owner</literal>: The employee who is making the hardware order request. The role cardinality is set to <literal>1</literal>, which means that only one person or group can be assigned to this role.
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										<literal>manager</literal>: The employee’s manager; the person who will approve or deny the requested hardware. The role cardinality is set to <literal>1</literal>, which means that only one person or group can be assigned to this role.
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										<literal>supplier</literal>: The available suppliers of IT hardware in the system. The role cardinality is set to <literal>2</literal>, which means that more than one supplier can be assigned to this role.
									</simpara>
								</listitem>
							</itemizedlist>
						</listitem>
					</orderedlist>
				</listitem>
				<listitem>
					<simpara>
						Click <emphasis role="strong">Save</emphasis>.
					</simpara>
				</listitem>
			</orderedlist>
			<section xml:id="case-management-creating-subproc-proc">
				<title>Creating the Place order subprocess</title>
				<simpara>
					Create the <literal>Place order</literal> subprocess, which is a separate business process that is carried out by the supplier. This is a reusable process that occurs during the course of case execution as described in <xref linkend="case-management-designing-IT-hardware-proc" />.
				</simpara>
				<itemizedlist>
					<title>Prerequisites</title>
					<listitem>
						<simpara>
							You have created a new case in Business Central. For more information, see <xref linkend="case-management-creating-a-case-proc" />.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							You have created the data objects. For more information, see <xref linkend="data-objects-con_getting-started-case-management" />.
						</simpara>
					</listitem>
				</itemizedlist>
				<orderedlist numeration="arabic">
					<title>Procedure</title>
					<listitem>
						<simpara>
							In Business Central, go to <emphasis role="strong">Menu</emphasis> → <emphasis role="strong">Design</emphasis> → <emphasis role="strong">Projects</emphasis> → <emphasis role="strong">IT_Orders_New</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							From the project menu, click <emphasis role="strong">Add Asset</emphasis> → <emphasis role="strong">Business Process</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							In the <emphasis role="strong">Create new Business Process</emphasis> wizard, enter the following values:
						</simpara>
						<itemizedlist>
							<listitem>
								<simpara>
									<emphasis role="strong">Business Process</emphasis>: <literal>place-order</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Package</emphasis>: Select <literal>com.myspace.it_orders_new</literal>
								</simpara>
							</listitem>
						</itemizedlist>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">Ok</emphasis>. The diagram editor opens.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click an empty space in the canvas, and in the upper-right corner, click the <emphasis role="strong">Properties</emphasis> <inlinemediaobject>
								<imageobject>
									<imagedata fileref="images/_images/getting-started/diagram_properties.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>diagram properties</phrase>
								</textobject>
							</inlinemediaobject>
							 icon.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Scroll down and expand <emphasis role="strong">Process Data</emphasis> and click 
							<inlinemediaobject>
								<imageobject>
									<imagedata fileref="images/_images/getting-started/btn_plus.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>btn plus</phrase>
								</textobject>
							</inlinemediaobject>
							 in the <emphasis role="strong">Process Variables</emphasis> section and enter the following:
						</simpara>
						<informalfigure>
						<mediaobject>
							<imageobject>
								<imagedata fileref="images/_images/cases/proc-vars.png" format="PNG" />
							</imageobject>
							<textobject>
								<phrase>proc vars</phrase>
							</textobject>
						</mediaobject>
						</informalfigure>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">Save</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Drag a start event onto the canvas and create an outgoing connection from the start event to a task and convert the new task to a user task.
						</simpara>
						<informalfigure>
						<mediaobject>
							<imageobject>
								<imagedata fileref="images/_images/cases/start-event.png" format="PNG" />
							</imageobject>
							<textobject>
								<phrase>start event</phrase>
							</textobject>
						</mediaobject>
						</informalfigure><informalfigure>
						<mediaobject>
							<imageobject>
								<imagedata fileref="images/_images/cases/new_task.png" format="PNG" />
							</imageobject>
							<textobject>
								<phrase>new task</phrase>
							</textobject>
						</mediaobject>
						</informalfigure><informalfigure>
						<mediaobject>
							<imageobject>
								<imagedata fileref="images/_images/cases/user-task.png" format="PNG" />
							</imageobject>
							<textobject>
								<phrase>user task</phrase>
							</textobject>
						</mediaobject>
						</informalfigure>
					</listitem>
					<listitem>
						<simpara>
							Click the user task and in the <emphasis role="strong">Properties</emphasis> panel, input <literal>Place order</literal> in the <emphasis role="strong">Name</emphasis> field.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Expand <emphasis role="strong">Implementation/Execution</emphasis>, click <emphasis role="strong">Add</emphasis> below the <emphasis role="strong">Groups</emphasis> menu, click <emphasis role="strong">Select</emphasis> → <emphasis role="strong">New</emphasis>, and input <literal>supplier</literal>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click 
							<inlinemediaobject>
								<imageobject>
									<imagedata fileref="images/_images/getting-started/diagram_properties.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>diagram properties</phrase>
								</textobject>
							</inlinemediaobject>
							 in the <emphasis role="strong">Assignments</emphasis> field and add the following:
						</simpara>
						<informalfigure>
						<mediaobject>
							<imageobject>
								<imagedata fileref="images/_images/cases/place-order-io1.png" format="PNG" />
							</imageobject>
							<textobject>
								<phrase>place order io1</phrase>
							</textobject>
						</mediaobject>
						</informalfigure>
						<simpara>
							For the first input assignment, select <emphasis role="strong">Custom</emphasis> for the <emphasis role="strong">Data Type</emphasis> and input <literal>org.jbpm.document.Document</literal>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">OK</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Select the <emphasis role="strong">Skippable</emphasis> check box and enter the following text in the <emphasis role="strong">Description</emphasis> field:
						</simpara>
						<simpara>
							<literal>Approved order #{CaseId} to be placed</literal>
						</simpara>
						<informalfigure>
						<mediaobject>
							<imageobject>
								<imagedata fileref="images/_images/cases/skip-description.png" format="PNG" />
							</imageobject>
							<textobject>
								<phrase>skip description</phrase>
							</textobject>
						</mediaobject>
						</informalfigure>
					</listitem>
					<listitem>
						<simpara>
							Create an outgoing connection from the <emphasis role="strong">Place order</emphasis> user task and connect it to an end event.
						</simpara>
						<informalfigure>
						<mediaobject>
							<imageobject>
								<imagedata fileref="images/_images/cases/create-end-event.png" format="PNG" />
							</imageobject>
							<textobject>
								<phrase>create end event</phrase>
							</textobject>
						</mediaobject>
						</informalfigure><informalfigure>
						<mediaobject>
							<imageobject>
								<imagedata fileref="images/_images/cases/sub-proc.png" format="PNG" />
							</imageobject>
							<textobject>
								<phrase>sub proc</phrase>
							</textobject>
						</mediaobject>
						</informalfigure>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">Save</emphasis> to confirm your changes.
						</simpara>
					</listitem>
				</orderedlist>
			</section>
			<section xml:id="case-management-create-manager-approval-proc">
				<title>Creating the Manager approval business process</title>
				<simpara>
					The manager approval process determines whether or not the order will be placed or rejected.
				</simpara>
				<orderedlist numeration="arabic">
					<title>Procedure</title>
					<listitem>
						<simpara>
							In Business Central, go to <emphasis role="strong">Menu</emphasis> → <emphasis role="strong">Design</emphasis> → <emphasis role="strong">Projects</emphasis> → <emphasis role="strong">IT_Orders_New</emphasis> → <emphasis role="strong">orderhardware Business Processes</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Create and configure the <literal>Prepare hardware spec</literal> user task:
						</simpara>
						<orderedlist numeration="loweralpha">
							<listitem>
								<simpara>
									Expand <emphasis role="strong">Tasks</emphasis> in the <emphasis role="strong">Object Library</emphasis> and drag a user task onto the canvas and convert the new task to a user task.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Click the new user task and in the upper-right corner click the <emphasis role="strong">Properties</emphasis> <inlinemediaobject>
										<imageobject>
											<imagedata fileref="images/_images/getting-started/diagram_properties.png" format="PNG" />
										</imageobject>
										<textobject>
											<phrase>diagram properties</phrase>
										</textobject>
									</inlinemediaobject>
									 icon.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Input <literal>Prepare hardware spec</literal> in the <emphasis role="strong">Name</emphasis> field.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Expand <emphasis role="strong">Implementation/Execution</emphasis>, click <emphasis role="strong">Add</emphasis> below the <emphasis role="strong">Groups</emphasis> menu, click <emphasis role="strong">Select</emphasis> → <emphasis role="strong">New</emphasis>, and input <literal>supplier</literal>.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Input <literal>PrepareHardwareSpec</literal> in the <emphasis role="strong">Task Name</emphasis> field.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Select the <emphasis role="strong">Skippable</emphasis> check box and enter the following text in the <emphasis role="strong">Description</emphasis> field:
								</simpara>
								<simpara>
									<literal>Prepare hardware specification for #{initiator} (order number #{CaseId})</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Click 
									<inlinemediaobject>
										<imageobject>
											<imagedata fileref="images/_images/getting-started/diagram_properties.png" format="PNG" />
										</imageobject>
										<textobject>
											<phrase>diagram properties</phrase>
										</textobject>
									</inlinemediaobject>
									 in the <emphasis role="strong">Assignments</emphasis> field and add the following:
								</simpara>
								<informalfigure>
								<mediaobject>
									<imageobject>
										<imagedata fileref="images/_images/cases/hardware-spec-data.png" format="PNG" />
									</imageobject>
									<textobject>
										<phrase>Prepare hardware I/O values</phrase>
									</textobject>
								</mediaobject>
								</informalfigure>
							</listitem>
							<listitem>
								<simpara>
									Click <emphasis role="strong">OK</emphasis>.
								</simpara>
							</listitem>
						</orderedlist>
					</listitem>
					<listitem>
						<simpara>
							Create and configure the manager approval user task:
						</simpara>
						<orderedlist numeration="loweralpha">
							<listitem>
								<simpara>
									Click the <emphasis role="strong">Prepare hardware spec</emphasis> user task and create a new user task.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Click the new user task and in the upper-right corner click the <emphasis role="strong">Properties</emphasis> <inlinemediaobject>
										<imageobject>
											<imagedata fileref="images/_images/getting-started/diagram_properties.png" format="PNG" />
										</imageobject>
										<textobject>
											<phrase>diagram properties</phrase>
										</textobject>
									</inlinemediaobject>
									 icon.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Click the user task and in the <emphasis role="strong">Properties</emphasis> panel input <literal>Manager approval</literal> in the <emphasis role="strong">Name</emphasis> field.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Expand <emphasis role="strong">Implementation/Execution</emphasis>, click <emphasis role="strong">Add</emphasis> below the <emphasis role="strong">Actors</emphasis> menu, click <emphasis role="strong">Select</emphasis> → <emphasis role="strong">New</emphasis>, and input <literal>manager</literal>.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Input <literal>ManagerApproval</literal> in the <emphasis role="strong">Task Name</emphasis> field.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Click 
									<inlinemediaobject>
										<imageobject>
											<imagedata fileref="images/_images/getting-started/diagram_properties.png" format="PNG" />
										</imageobject>
										<textobject>
											<phrase>diagram properties</phrase>
										</textobject>
									</inlinemediaobject>
									 in the <emphasis role="strong">Assignments</emphasis> field and add the following:
								</simpara>
								<informalfigure>
								<mediaobject>
									<imageobject>
										<imagedata fileref="images/_images/cases/manager-approval-data.png" format="PNG" />
									</imageobject>
									<textobject>
										<phrase>Manager approval I/O values</phrase>
									</textobject>
								</mediaobject>
								</informalfigure>
							</listitem>
							<listitem>
								<simpara>
									Click <emphasis role="strong">OK</emphasis>.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Select the <emphasis role="strong">Skippable</emphasis> check box and enter the following text in the <emphasis role="strong">Description</emphasis> field:
								</simpara>
								<simpara>
									<literal>Approval request for new hardware for #{initiator} (order number #{CaseId})</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Enter the following Java expression in the <emphasis role="strong">On Exit Action</emphasis> field:
								</simpara>
								<simpara>
									<literal>kcontext.setVariable("caseFile_managerDecision", approved);</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Click <emphasis role="strong">Save</emphasis>.
								</simpara>
							</listitem>
						</orderedlist>
					</listitem>
					<listitem>
						<simpara>
							Click the <emphasis role="strong">Manager approval</emphasis> user task and create a Data-based Exclusive (XOR) gateway.
						</simpara>
						<informalfigure>
						<mediaobject>
							<imageobject>
								<imagedata fileref="images/_images/cases/xor-gateway.png" format="PNG" />
							</imageobject>
							<textobject>
								<phrase>Creating a gateway</phrase>
							</textobject>
						</mediaobject>
						</informalfigure><informalfigure>
						<mediaobject>
							<imageobject>
								<imagedata fileref="images/_images/cases/xor-gateway2.png" format="PNG" />
							</imageobject>
							<textobject>
								<phrase>Creating a Data-based Exclusive (XOR) gateway</phrase>
							</textobject>
						</mediaobject>
						</informalfigure>
					</listitem>
					<listitem>
						<simpara>
							Create and configure the <literal>Place order</literal> reusable subprocess:
						</simpara>
						<orderedlist numeration="loweralpha">
							<listitem>
								<simpara>
									From the <emphasis role="strong">Object Library</emphasis>, expand <emphasis role="strong">Subprocesses</emphasis>, click <emphasis role="strong">Reusable</emphasis>, and drag the new element to the canvas on the right side of the Data-based Exclusive (XOR) gateway.
								</simpara>
								<informalfigure>
								<mediaobject>
									<imageobject>
										<imagedata fileref="images/_images/cases/reusablegtwy.png" format="PNG" />
									</imageobject>
									<textobject>
										<phrase>Creating a reusable task</phrase>
									</textobject>
								</mediaobject>
								</informalfigure>
							</listitem>
							<listitem>
								<simpara>
									Connect the Data-based Exclusive (XOR) gateway to the subprocess.
								</simpara>
								<informalfigure>
								<mediaobject>
									<imageobject>
										<imagedata fileref="images/_images/cases/connect-sub.png" format="PNG" />
									</imageobject>
									<textobject>
										<phrase>Creating a Data-based Exclusive (XOR) gateway to subprocess</phrase>
									</textobject>
								</mediaobject>
								</informalfigure>
							</listitem>
							<listitem>
								<simpara>
									Click the new sub task and in the upper-right corner click the <emphasis role="strong">Properties</emphasis> <inlinemediaobject>
										<imageobject>
											<imagedata fileref="images/_images/getting-started/diagram_properties.png" format="PNG" />
										</imageobject>
										<textobject>
											<phrase>diagram properties</phrase>
										</textobject>
									</inlinemediaobject>
									 icon.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Input <literal>Place order</literal> in the <emphasis role="strong">Name</emphasis> field.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Expand <emphasis role="strong">Data Assignments</emphasis> and click 
									<inlinemediaobject>
										<imageobject>
											<imagedata fileref="images/_images/getting-started/diagram_properties.png" format="PNG" />
										</imageobject>
										<textobject>
											<phrase>diagram properties</phrase>
										</textobject>
									</inlinemediaobject>
									 in the <emphasis role="strong">Assignments</emphasis> field and add the following:
								</simpara>
								<informalfigure>
								<mediaobject>
									<imageobject>
										<imagedata fileref="images/_images/cases/place-order-io.png" format="PNG" />
									</imageobject>
									<textobject>
										<phrase>Place order I/O values</phrase>
									</textobject>
								</mediaobject>
								</informalfigure>
							</listitem>
							<listitem>
								<simpara>
									Click <emphasis role="strong">OK</emphasis>.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Click the connection from the Data-based Exclusive (XOR) gateway to the subprocess and click the <emphasis role="strong">Properties</emphasis> <inlinemediaobject>
										<imageobject>
											<imagedata fileref="images/_images/getting-started/diagram_properties.png" format="PNG" />
										</imageobject>
										<textobject>
											<phrase>diagram properties</phrase>
										</textobject>
									</inlinemediaobject>
									 icon.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Expand <emphasis role="strong">Implementation/Execution</emphasis>, select <emphasis role="strong">Condition</emphasis>, and set the following condition expressions.
								</simpara>
								<informalfigure>
								<mediaobject>
									<imageobject>
										<imagedata fileref="images/_images/cases/seq-flow-conds.png" format="PNG" />
									</imageobject>
									<textobject>
										<phrase>Sequence flow conditions</phrase>
									</textobject>
								</mediaobject>
								</informalfigure>
							</listitem>
							<listitem>
								<simpara>
									Click the <emphasis role="strong">Place order</emphasis> user task and create an end event.
								</simpara>
							</listitem>
						</orderedlist>
					</listitem>
					<listitem>
						<simpara>
							Create and configure the order rejected user task:
						</simpara>
						<orderedlist numeration="loweralpha">
							<listitem>
								<simpara>
									Click the Data-based Exclusive (XOR) gateway and create a new user task.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Drag the new task to align it below the <emphasis role="strong">Place order</emphasis> task.
								</simpara>
								<informalfigure>
								<mediaobject>
									<imageobject>
										<imagedata fileref="images/_images/cases/second-task.png" format="PNG" />
									</imageobject>
									<textobject>
										<phrase>Align new task</phrase>
									</textobject>
								</mediaobject>
								</informalfigure>
							</listitem>
							<listitem>
								<simpara>
									Click the new user task and in the upper-right corner click the <emphasis role="strong">Properties</emphasis> <inlinemediaobject>
										<imageobject>
											<imagedata fileref="images/_images/getting-started/diagram_properties.png" format="PNG" />
										</imageobject>
										<textobject>
											<phrase>diagram properties</phrase>
										</textobject>
									</inlinemediaobject>
									 icon.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Input <literal>Order rejected</literal> in the <emphasis role="strong">Name</emphasis> field.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Expand <emphasis role="strong">Implementation/Execution</emphasis> and input <literal>OrderRejected</literal> in the <emphasis role="strong">Task Name</emphasis> field.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Click <emphasis role="strong">Add</emphasis> below the <emphasis role="strong">Actors</emphasis> menu, click <emphasis role="strong">Select</emphasis> → <emphasis role="strong">New</emphasis>, and input <literal>owner</literal>.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Click 
									<inlinemediaobject>
										<imageobject>
											<imagedata fileref="images/_images/getting-started/diagram_properties.png" format="PNG" />
										</imageobject>
										<textobject>
											<phrase>diagram properties</phrase>
										</textobject>
									</inlinemediaobject>
									 in the <emphasis role="strong">Assignments</emphasis> field and add the following:
								</simpara>
								<informalfigure>
								<mediaobject>
									<imageobject>
										<imagedata fileref="images/_images/cases/order-rejected-io.png" format="PNG" />
									</imageobject>
									<textobject>
										<phrase>Order rejected I/O values</phrase>
									</textobject>
								</mediaobject>
								</informalfigure>
							</listitem>
							<listitem>
								<simpara>
									Click <emphasis role="strong">OK</emphasis>.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Select the <emphasis role="strong">Skippable</emphasis> check box and enter the following text in the <emphasis role="strong">Description</emphasis> field:
								</simpara>
								<simpara>
									<literal>Order #{CaseId} has been rejected by manager</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Click the <emphasis role="strong">Order rejected</emphasis> user task and create an end event.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Click <emphasis role="strong">Save</emphasis>.
								</simpara>
							</listitem>
						</orderedlist>
					</listitem>
					<listitem>
						<simpara>
							Click the connection from the Data-based Exclusive (XOR) gateway to the <emphasis role="strong">Order rejected</emphasis> user task and click the <emphasis role="strong">Properties</emphasis> <inlinemediaobject>
								<imageobject>
									<imagedata fileref="images/_images/getting-started/diagram_properties.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>diagram properties</phrase>
								</textobject>
							</inlinemediaobject>
							 icon.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Expand <emphasis role="strong">Implementation/Execution</emphasis>, select <emphasis role="strong">Condition</emphasis>, and set the following condition expressions.
						</simpara>
						<informalfigure>
						<mediaobject>
							<imageobject>
								<imagedata fileref="images/_images/cases/seq-flow-false-cond.png" format="PNG" />
							</imageobject>
							<textobject>
								<phrase>Sequence flow conditions</phrase>
							</textobject>
						</mediaobject>
						</informalfigure>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">Save</emphasis>.
						</simpara>
						<figure>
							<title>Manager approval business process</title>
							<mediaobject>
								<imageobject>
									<imagedata fileref="images/_images/cases/prep-spec-flow.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>Manager approval business process</phrase>
								</textobject>
							</mediaobject>
						</figure>
					</listitem>
				</orderedlist>
			</section>
		</chapter>
		<chapter xml:id="case-management-milestones-con">
			<title>Milestones</title>
			<simpara>
				Milestones are a special service task that can be configured in the case definition designer by adding the milestone node to the process designer palette. When creating a new case definition, a milestone configured as <literal>AdHoc Autostart</literal> is included on the design palette by default. Newly created milestones are not set to <literal>AdHoc Autostart</literal> by default.
			</simpara>
			<simpara>
				Case management milestones generally occur at the end of a stage, but they can also be the result of achieving other milestones. A milestone always requires a condition to be defined in order to track progress. Milestones react to case file data when data is added to a case. A milestone represents a single point of achievement within the case instance. It can be used to flag certain events, which can be useful for Key Performance Indicator (KPI) tracking or identifying the tasks that are still to be completed.
			</simpara>
			<simpara>
				Milestones can be in any of the following states during case execution:
			</simpara>
			<itemizedlist>
				<listitem>
					<simpara>
						<literal>Active</literal>: The condition has been defined on the milestone but it has not been met.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>Completed</literal>: The milestone condition has been met, the milestone has been achieved, and the case can proceed to the next task.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>Terminated</literal>: The milestone is no longer a part of the case process and is no longer required.
					</simpara>
				</listitem>
			</itemizedlist>
			<simpara>
				While a milestone is available or completed it can be triggered manually by a signal or automatically if <literal>AdHoc Autostart</literal> is configured when a case instance starts. Milestones can be triggered as many times as required, however, it is directly achieved when the condition is met.
			</simpara>
			<section xml:id="case-management-create-hardware-spec-milestone-proc">
				<title>Creating the Hardware spec ready milestone</title>
				<simpara>
					Create a <emphasis role="strong">HardwareSpecReady</emphasis> milestone that is reached when the required hardware specification document is completed.
				</simpara>
				<orderedlist numeration="arabic">
					<title>Procedure</title>
					<listitem>
						<simpara>
							In the process designer, expand <emphasis role="strong">Milestone</emphasis> in the <emphasis role="strong">Object Library</emphasis> and drag a new milestone on the canvas and place it on the right side of the <emphasis role="strong">Place order</emphasis> end event.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click the new milestone and in the upper-right corner click the <emphasis role="strong">Properties</emphasis> <inlinemediaobject>
								<imageobject>
									<imagedata fileref="images/_images/getting-started/diagram_properties.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>diagram properties</phrase>
								</textobject>
							</inlinemediaobject>
							 icon.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Input <literal>Hardware spec ready</literal> in the <emphasis role="strong">Name</emphasis> field.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Expand <emphasis role="strong">Implementation/Execution</emphasis> and select <emphasis role="strong">AdHoc Autostart</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Expand <emphasis role="strong">Data Assignments</emphasis>, click 
							<inlinemediaobject>
								<imageobject>
									<imagedata fileref="images/_images/getting-started/diagram_properties.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>diagram properties</phrase>
								</textobject>
							</inlinemediaobject>
							 in the <emphasis role="strong">Assignments</emphasis> field, and add the following:
						</simpara>
						<informalfigure>
						<mediaobject>
							<imageobject>
								<imagedata fileref="images/_images/cases/hardware-io.png" format="PNG" />
							</imageobject>
							<textobject>
								<phrase>HardwareSpecReady I/O values</phrase>
							</textobject>
						</mediaobject>
						</informalfigure>
						<simpara>
							Click the <emphasis role="strong">Source</emphasis> column drop-down, select <emphasis role="strong">Constant</emphasis>, and input <literal>org.kie.api.runtime.process.CaseData(data.get("hwSpec") != null)</literal>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">OK</emphasis>.
						</simpara>
					</listitem>
				</orderedlist>
			</section>
			<section xml:id="case-management-create-manager-decision-milestone-proc">
				<title>Creating the Manager decision milestone</title>
				<simpara>
					This milestone is reached when the <literal>managerDecision</literal> variable has been given a response.
				</simpara>
				<orderedlist numeration="arabic">
					<title>Procedure</title>
					<listitem>
						<simpara>
							In the process designer, expand <emphasis role="strong">Milestone</emphasis> in the <emphasis role="strong">Object Library</emphasis> and drag a new milestone onto the canvas below the <emphasis role="strong">HardwareSpecReady</emphasis> milestone.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click the new milestone and in the upper-right corner click the <emphasis role="strong">Properties</emphasis> <inlinemediaobject>
								<imageobject>
									<imagedata fileref="images/_images/getting-started/diagram_properties.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>diagram properties</phrase>
								</textobject>
							</inlinemediaobject>
							 icon.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Input <literal>Manager decision</literal> in the <emphasis role="strong">Name</emphasis> field.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Expand <emphasis role="strong">Implementation/Execution</emphasis> and select <emphasis role="strong">AdHoc Autostart</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Expand <emphasis role="strong">Data Assignments</emphasis> and click 
							<inlinemediaobject>
								<imageobject>
									<imagedata fileref="images/_images/getting-started/diagram_properties.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>diagram properties</phrase>
								</textobject>
							</inlinemediaobject>
							 in the <emphasis role="strong">Assignments</emphasis> field and add the following:
						</simpara>
						<informalfigure>
						<mediaobject>
							<imageobject>
								<imagedata fileref="images/_images/cases/manager-dec-io.png" format="PNG" />
							</imageobject>
							<textobject>
								<phrase>ManagerDecision I/O values</phrase>
							</textobject>
						</mediaobject>
						</informalfigure>
						<simpara>
							Click the <emphasis role="strong">Source</emphasis> column drop-down, select <emphasis role="strong">Constant</emphasis>, and input <literal>org.kie.api.runtime.process.CaseData(data.get("managerDecision") != null)</literal>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">OK</emphasis>.
						</simpara>
					</listitem>
				</orderedlist>
			</section>
			<section xml:id="case-management-create-order-placed-milestone-proc">
				<title>Creating the Order placed milestone</title>
				<simpara>
					This milestone is reached when the <literal>ordered</literal> variable, which is part of the <emphasis role="strong">Place order</emphasis> sub-process, has been given a response.
				</simpara>
				<orderedlist numeration="arabic">
					<title>Procedure</title>
					<listitem>
						<simpara>
							In the process designer, expand <emphasis role="strong">Milestone</emphasis> in the <emphasis role="strong">Object Library</emphasis> and drag a new milestone on the canvas below the <emphasis role="strong">Prepare hardware spec</emphasis> user task.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click the new milestone and in the upper-right corner click the <emphasis role="strong">Properties</emphasis> <inlinemediaobject>
								<imageobject>
									<imagedata fileref="images/_images/getting-started/diagram_properties.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>diagram properties</phrase>
								</textobject>
							</inlinemediaobject>
							 icon.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Input <literal>Milestone 1: Order placed</literal> in the <emphasis role="strong">Name</emphasis> field.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Expand <emphasis role="strong">Implementation/Execution</emphasis> and select <emphasis role="strong">AdHoc Autostart</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Expand <emphasis role="strong">Data Assignments</emphasis>, click 
							<inlinemediaobject>
								<imageobject>
									<imagedata fileref="images/_images/getting-started/diagram_properties.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>diagram properties</phrase>
								</textobject>
							</inlinemediaobject>
							 in the <emphasis role="strong">Assignments</emphasis> field, and add the following:
						</simpara>
						<informalfigure>
						<mediaobject>
							<imageobject>
								<imagedata fileref="images/_images/cases/milestone-evaluation-condition.png" format="PNG" />
							</imageobject>
							<textobject>
								<phrase>Milestone evaluation condition configuration</phrase>
							</textobject>
						</mediaobject>
						</informalfigure>
						<simpara>
							Click the <emphasis role="strong">Source</emphasis> column drop-down, select <emphasis role="strong">Constant</emphasis>, and input <literal>org.kie.api.runtime.process.CaseData(data.get("ordered") == true)</literal>. This means that a case variable named <literal>ordered</literal> exists with the value <literal>true</literal>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">OK</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">Milestone 1: Order placed</emphasis> and create a new script task.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click the new script task and in the upper-right corner click the <emphasis role="strong">Properties</emphasis> <inlinemediaobject>
								<imageobject>
									<imagedata fileref="images/_images/getting-started/diagram_properties.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>diagram properties</phrase>
								</textobject>
							</inlinemediaobject>
							 icon.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Input <literal>Notify requestor</literal> in the <emphasis role="strong">Name</emphasis> field.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Expand <emphasis role="strong">Implementation/Execution</emphasis> and input <literal>System.out.println("Notification::Order placed");</literal>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click the <emphasis role="strong">Notify requestor</emphasis> script task and create a signal end event.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click the signal event and in the upper-right corner click the <emphasis role="strong">Properties</emphasis>. 
							<inlinemediaobject>
								<imageobject>
									<imagedata fileref="images/_images/getting-started/diagram_properties.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>diagram properties</phrase>
								</textobject>
							</inlinemediaobject>
							 icon.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Expand <emphasis role="strong">Implementation/Execution</emphasis>, click the down arrow in the <emphasis role="strong">Signal</emphasis> field, and select <emphasis role="strong">New</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Input <literal>Milestone 2: Order shipped</literal>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click the down arrow in the <emphasis role="strong">Signal Scope</emphasis> field, select <emphasis role="strong">Process Instance</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">Save</emphasis>.
						</simpara>
						<figure>
							<title>Order placed milestone</title>
							<mediaobject>
								<imageobject>
									<imagedata fileref="images/_images/cases/notify_requestor.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>Order placed milestone</phrase>
								</textobject>
							</mediaobject>
						</figure>
					</listitem>
				</orderedlist>
			</section>
			<section xml:id="case-management-create-order-shipped-milestone-proc">
				<title>Creating the Order shipped milestone</title>
				<simpara>
					The condition for this milestone is that a case file variable named <literal>shipped</literal> is <literal>true</literal>. <literal>AdHoc Autostart</literal> is not enabled for this milestone. Instead, it is triggered by a signal event when the order is ready to be sent.
				</simpara>
				<orderedlist numeration="arabic">
					<title>Procedure</title>
					<listitem>
						<simpara>
							In the process designer, expand <emphasis role="strong">Milestone</emphasis> in the <emphasis role="strong">Object Library</emphasis> and drag a new milestone on the canvas below the <emphasis role="strong">Notify requestor</emphasis> script task.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click the new milestone and in the upper-right corner click the <emphasis role="strong">Properties</emphasis> <inlinemediaobject>
								<imageobject>
									<imagedata fileref="images/_images/getting-started/diagram_properties.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>diagram properties</phrase>
								</textobject>
							</inlinemediaobject>
							 icon.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Input <literal>Milestone 2: Order shipped</literal> in the <emphasis role="strong">Name</emphasis> field.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Expand <emphasis role="strong">Implementation/Execution</emphasis> and ensure that <emphasis role="strong">AdHoc Autostart</emphasis> is not selected.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Expand <emphasis role="strong">Data Assignments</emphasis>, click 
							<inlinemediaobject>
								<imageobject>
									<imagedata fileref="images/_images/getting-started/diagram_properties.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>diagram properties</phrase>
								</textobject>
							</inlinemediaobject>
							 in the <emphasis role="strong">Assignments</emphasis> field, and add the following:
						</simpara>
						<informalfigure>
						<mediaobject>
							<imageobject>
								<imagedata fileref="images/_images/cases/ordershippedIO.png" format="PNG" />
							</imageobject>
							<textobject>
								<phrase>Order shipped ready I/O values</phrase>
							</textobject>
						</mediaobject>
						</informalfigure>
						<simpara>
							Click the <emphasis role="strong">Source</emphasis> column drop-down, select <emphasis role="strong">Constant</emphasis>, and input <literal>org.kie.api.runtime.process.CaseData(data.get("shipped") == true)</literal>. This means that a case variable named <literal>shipped</literal> exists with the value <literal>true</literal>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">OK</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">Milestone 2: Order shipped</emphasis> and create a new script task.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click the new script task and in the upper-right corner click the <emphasis role="strong">Properties</emphasis> <inlinemediaobject>
								<imageobject>
									<imagedata fileref="images/_images/getting-started/diagram_properties.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>diagram properties</phrase>
								</textobject>
							</inlinemediaobject>
							 icon.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Input <literal>Send to tracking system</literal> in the <emphasis role="strong">Name</emphasis> field.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Expand <emphasis role="strong">Implementation/Execution</emphasis> and input <literal>System.out.println("Order added to tracking system");</literal>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click the <emphasis role="strong">Send to tracking system</emphasis> script task and create a signal end event.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click the signal event and in the upper-right corner click the <emphasis role="strong">Properties</emphasis>. 
							<inlinemediaobject>
								<imageobject>
									<imagedata fileref="images/_images/getting-started/diagram_properties.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>diagram properties</phrase>
								</textobject>
							</inlinemediaobject>
							 icon.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Expand <emphasis role="strong">Implementation/Execution</emphasis>, click the down arrow in the <emphasis role="strong">Signal</emphasis> field, and select <emphasis role="strong">New</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Input <literal>Milestone 3: Delivered to customer</literal>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click the down arrow in the <emphasis role="strong">Signal Scope</emphasis> field, select <emphasis role="strong">Process Instance</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">Save</emphasis>.
						</simpara>
						<figure>
							<title>Order shipped milestone</title>
							<mediaobject>
								<imageobject>
									<imagedata fileref="images/_images/cases/order-shipped.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>Order shipped milestone</phrase>
								</textobject>
							</mediaobject>
						</figure>
					</listitem>
				</orderedlist>
			</section>
			<section xml:id="case-management-create-delivered-milestone-proc">
				<title>Creating the Delivered to customer milestone</title>
				<simpara>
					The condition for this milestone is that a case file variable named <literal>delivered</literal> is <literal>true</literal>. <literal>AdHoc Autostart</literal> is not enabled for this milestone. Instead, it is triggered by a signal event after the order has successfully shipped to the customer.
				</simpara>
				<orderedlist numeration="arabic">
					<title>Procedure</title>
					<listitem>
						<simpara>
							In the process designer, expand <emphasis role="strong">Milestone</emphasis> in the <emphasis role="strong">Object Library</emphasis> and drag a new milestone on the canvas below the <emphasis role="strong">Send to tracking system</emphasis> script task.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click the new milestone and in the upper-right corner click the <emphasis role="strong">Properties</emphasis> <inlinemediaobject>
								<imageobject>
									<imagedata fileref="images/_images/getting-started/diagram_properties.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>diagram properties</phrase>
								</textobject>
							</inlinemediaobject>
							 icon.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Input <literal>Milestone 3: Delivered to customer</literal> in the <emphasis role="strong">Name</emphasis> field.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Expand <emphasis role="strong">Implementation/Execution</emphasis> and ensure that <emphasis role="strong">AdHoc Autostart</emphasis> is not selected.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Expand <emphasis role="strong">Data Assignments</emphasis>, click 
							<inlinemediaobject>
								<imageobject>
									<imagedata fileref="images/_images/getting-started/diagram_properties.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>diagram properties</phrase>
								</textobject>
							</inlinemediaobject>
							 in the <emphasis role="strong">Assignments</emphasis> field, and add the following:
						</simpara>
						<informalfigure>
						<mediaobject>
							<imageobject>
								<imagedata fileref="images/_images/cases/milestone3IO.png" format="PNG" />
							</imageobject>
							<textobject>
								<phrase>Delivered to customer I/O values</phrase>
							</textobject>
						</mediaobject>
						</informalfigure>
						<simpara>
							Click the <emphasis role="strong">Source</emphasis> column drop-down, select <emphasis role="strong">Constant</emphasis>, and input <literal>org.kie.api.runtime.process.CaseData(data.get("delivered") == true)</literal>. This means that a case variable named <literal>delivered</literal> exists with the value <literal>true</literal>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">OK</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">Milestone 3: Delivered to customer</emphasis> and create a new user task.
						</simpara>
						<orderedlist numeration="loweralpha">
							<listitem>
								<simpara>
									Click the new user task and in the upper-right corner click the <emphasis role="strong">Properties</emphasis> <inlinemediaobject>
										<imageobject>
											<imagedata fileref="images/_images/getting-started/diagram_properties.png" format="PNG" />
										</imageobject>
										<textobject>
											<phrase>diagram properties</phrase>
										</textobject>
									</inlinemediaobject>
									 icon.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Input <literal>Customer satisfaction survey</literal> in the <emphasis role="strong">Name</emphasis> field.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Expand <emphasis role="strong">Implementation/Execution</emphasis>, click <emphasis role="strong">Add</emphasis> below the <emphasis role="strong">Actors</emphasis> menu, click <emphasis role="strong">Select</emphasis> → <emphasis role="strong">New</emphasis>, and input <literal>owner</literal>.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Input <literal>CustomerSurvey</literal> in the <emphasis role="strong">Task Name</emphasis> field.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Select the <emphasis role="strong">Skippable</emphasis> check box and enter the following text in the in the <emphasis role="strong">Description</emphasis> field:
								</simpara>
								<simpara>
									<literal>Satisfaction survey for order #{CaseId}</literal>
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Click 
									<inlinemediaobject>
										<imageobject>
											<imagedata fileref="images/_images/getting-started/diagram_properties.png" format="PNG" />
										</imageobject>
										<textobject>
											<phrase>diagram properties</phrase>
										</textobject>
									</inlinemediaobject>
									 in the <emphasis role="strong">Assignments</emphasis> field and add the following:
								</simpara>
								<informalfigure>
								<mediaobject>
									<imageobject>
										<imagedata fileref="images/_images/cases/surveyIO.png" format="PNG" />
									</imageobject>
									<textobject>
										<phrase>survey I/O values</phrase>
									</textobject>
								</mediaobject>
								</informalfigure>
							</listitem>
							<listitem>
								<simpara>
									Click <emphasis role="strong">OK</emphasis>.
								</simpara>
							</listitem>
						</orderedlist>
					</listitem>
					<listitem>
						<simpara>
							Click the <emphasis role="strong">Customer satisfaction survey</emphasis> user task and create an end event.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Click <emphasis role="strong">Save</emphasis> to confirm your changes.
						</simpara>
						<figure>
							<title>Delivered to customer milestone</title>
							<mediaobject>
								<imageobject>
									<imagedata fileref="images/_images/cases/milestone3.png" format="PNG" />
								</imageobject>
								<textobject>
									<phrase>Delivered to customer milestone</phrase>
								</textobject>
							</mediaobject>
						</figure>
					</listitem>
				</orderedlist>
				<simpara>
					The IT Orders case can be closed after all milestone sequences are completed. However, due to the ad hoc nature of cases, the case could be reopened if, for example, the order was never received by the customer or the item is faulty. Tasks can be re-triggered or added to the case definition as required, even during run time.
				</simpara>
			</section>
		</chapter>
		<chapter xml:id="case-management-deploy-test-proc">
			<title>Deploying and testing the IT order case project</title>
			<simpara>
				After you create and define all components of the new <literal>IT_Orders_New</literal> case project, deploy and test the new project.
			</simpara>
			<itemizedlist>
				<title>Prerequisites</title>
				<listitem>
					<simpara>
						You have a running KIE Server instance connected to Business Central. For more information see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/installing_and_configuring_red_hat_process_automation_manager#assembly-install-on-eap"><emphasis>Installing and configuring Red Hat Process Automation Manager on Red Hat JBoss EAP 7.3</emphasis></link>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						You have created a new case in Business Central. For more information, see <xref linkend="case-management-creating-a-case-proc" />.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						You have created the data objects. For more information, see <xref linkend="data-objects-con_getting-started-case-management" />.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						You have created the <literal>Place order</literal> subprocess. For more information, see <xref linkend="case-management-creating-subproc-proc" />.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						You have designed the <literal>orderhardware</literal> case definition. For more information, see <xref linkend="case-management-designing-IT-hardware-proc" />.
					</simpara>
				</listitem>
			</itemizedlist>
			<orderedlist numeration="arabic">
				<title>Procedure</title>
				<listitem>
					<simpara>
						In Business Central, go to <emphasis role="strong">Menu</emphasis> → <emphasis role="strong">Design</emphasis> → <emphasis role="strong">Projects</emphasis> and click <emphasis role="strong">IT_Orders_New</emphasis>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Click <emphasis role="strong">Deploy</emphasis>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Go to <emphasis role="strong">Menu</emphasis> → <emphasis role="strong">Manage</emphasis> → <emphasis role="strong">Process Definitions</emphasis> → <emphasis role="strong">Manage Process Instances</emphasis> → <emphasis role="strong">New Process Instance</emphasis>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Go to <emphasis role="strong">Menu</emphasis> → <emphasis role="strong">Deploy</emphasis> and click <emphasis role="strong">Execution Servers</emphasis> and verify that a new container is deployed and started.
					</simpara>
					<informalfigure>
					<mediaobject>
						<imageobject>
							<imagedata fileref="images/_images/cases/new-container.png" format="PNG" />
						</imageobject>
						<textobject>
							<phrase>new container</phrase>
						</textobject>
					</mediaobject>
					</informalfigure>
				</listitem>
				<listitem>
					<simpara>
						Use the Case Management Showcase application to start a new case instance. For instructions about using the Showcase application, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/developing_process_services_in_red_hat_process_automation_manager#assembly-showcase-application"><emphasis>Using the Showcase application for case management</emphasis></link>.
					</simpara>
				</listitem>
			</orderedlist>
		</chapter>
		<chapter remap="_additional_resources_3" xml:id="additional_resources_3">
			<title>Additional resources</title>
			<itemizedlist>
				<listitem>
					<simpara>
						<link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/developing_process_services_in_red_hat_process_automation_manager#assembly-designing-and-building-cases"><emphasis>Designing and building cases for case management</emphasis></link>
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/developing_process_services_in_red_hat_process_automation_manager#assembly-showcase-application"><emphasis>Using the Showcase application for case management</emphasis></link>
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/getting_started_with_red_hat_process_automation_manager#assembly-getting-started-process-services"><emphasis>Getting started with business processes</emphasis></link>
					</simpara>
				</listitem>
			</itemizedlist>
		</chapter>
	</part>
	<part xml:id="assembly-getting-started-business-optimizer_getting-started">
		<title>Getting started with Red Hat Business Optimizer</title>
		<partintro>
			<simpara>
				As a business rules developer, you can use the Red Hat Business Optimizer to find the optimal solution to planning problems based on a set of limited resources and under specific constraints.
			</simpara>
			<simpara>
				Use this document to start developing solvers with Red Hat Business Optimizer.
			</simpara>
		</partintro>
		<chapter xml:id="optimizer-about-optimizer-con_getting-started-business-optimizer">
			<title>Introduction to Red Hat Business Optimizer</title>
			<simpara>
				Red Hat Business Optimizer is a lightweight, embeddable planning engine that optimizes planning problems. It helps normal Java programmers solve planning problems efficiently, and it combines optimization heuristics and metaheuristics with very efficient score calculations.
			</simpara>
			<simpara>
				For example, Red Hat Business Optimizer helps solve various use cases:
			</simpara>
			<itemizedlist>
				<listitem>
					<simpara>
						<emphasis>Employee/Patient Rosters</emphasis>: It helps create timetables for nurses and keeps track of patient bed management.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<emphasis>Educational Timetables</emphasis>: It helps schedule lessons, courses, exams, and conference presentations.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<emphasis>Shop Schedules</emphasis>: It tracks car assembly lines, machine queue planning, and workforce task planning.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<emphasis>Cutting Stock</emphasis>: It minimizes waste by reducing the consumption of resources such as paper and steel.
					</simpara>
				</listitem>
			</itemizedlist>
			<simpara>
				Every organization faces planning problems; that is, they provide products and services with a limited set of constrained resources (employees, assets, time, and money).
			</simpara>
			<simpara>
				Red Hat Business Optimizer is open source software under the Apache Software License 2.0. It is 100% pure Java and runs on most Java virtual machines.
			</simpara>
			<section xml:id="optimizer-planning-problem-con">
				<title>Planning problems</title>
				<simpara>
					A <emphasis>planning problem</emphasis> has an optimal goal, based on limited resources and under specific constraints. Optimal goals can be any number of things, such as:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							Maximized profits - the optimal goal results in the highest possible profit.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Minimized ecological footprint - the optimal goal has the least amount of environmental impact.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Maximized satisfaction for employees or customers - the optimal goal prioritizes the needs of employees or customers.
						</simpara>
					</listitem>
				</itemizedlist>
				<simpara>
					The ability to achieve these goals relies on the number of resources available. For example, the following resources might be limited:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							The number of people
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Amount of time
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Budget
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Physical assets, for example, machinery, vehicles, computers, buildings, and so on
						</simpara>
					</listitem>
				</itemizedlist>
				<simpara>
					You must also take into account the specific constraints related to these resources, such as the number of hours a person works, their ability to use certain machines, or compatibility between pieces of equipment.
				</simpara>
				<simpara>
					Red Hat Business Optimizer helps Java programmers solve constraint satisfaction problems efficiently. It combines optimization heuristics and metaheuristics with efficient score calculation.
				</simpara>
			</section>
			<section xml:id="optimizer-NP-complete-vs-NP-hard-con">
				<title>NP-completeness in planning problems</title>
				<simpara>
					The provided use cases are <emphasis>probably</emphasis> <link xlink:href="http://en.wikipedia.org/wiki/NP-complete">NP-complete or NP-hard</link>, which means the following statements apply:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							It is easy to verify a given solution to a problem in reasonable time.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							There is no simple way to find the optimal solution of a problem in reasonable time.
						</simpara>
					</listitem>
				</itemizedlist>
				<simpara>
					The implication is that solving your problem is probably harder than you anticipated, because the two common techniques do not suffice:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							A brute force algorithm (even a more advanced variant) takes too long.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							A quick algorithm, for example in the <link xlink:href="https://en.wikipedia.org/wiki/Bin_packing_problem">bin packing problem</link>, <emphasis>putting in the largest items first</emphasis> returns a solution that is far from optimal.
						</simpara>
					</listitem>
				</itemizedlist>
				<simpara>
					By using advanced optimization algorithms, Business Optimizer finds a good solution in reasonable time for such planning problems.
				</simpara>
			</section>
			<section xml:id="optimizer-planning-problem-search-space-con">
				<title>Solutions to planning problems</title>
				<simpara>
					A planning problem has a number of solutions.
				</simpara>
				<simpara>
					Several categories of solutions are:
				</simpara>
				<variablelist>
					<varlistentry>
						<term>Possible solution</term>
						<listitem>
							<simpara>
								A possible solution is any solution, whether or not it breaks any number of constraints. Planning problems often have an incredibly large number of possible solutions. Many of those solutions are not useful.
							</simpara>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>Feasible solution</term>
						<listitem>
							<simpara>
								A feasible solution is a solution that does not break any (negative) hard constraints. The number of feasible solutions are relative to the number of possible solutions. Sometimes there are no feasible solutions. Every feasible solution is a possible solution.
							</simpara>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>Optimal solution</term>
						<listitem>
							<simpara>
								An optimal solution is a solution with the highest score. Planning problems usually have a few optimal solutions. They always have at least one optimal solution, even in the case that there are no feasible solutions and the optimal solution is not feasible.
							</simpara>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>Best solution found</term>
						<listitem>
							<simpara>
								The best solution is the solution with the highest score found by an implementation in a given amount of time. The best solution found is likely to be feasible and, given enough time, it’s an optimal solution.
							</simpara>
						</listitem>
					</varlistentry>
				</variablelist>
				<simpara>
					Counterintuitively, the number of possible solutions is huge (if calculated correctly), even with a small data set.
				</simpara>
				<simpara>
					In the examples provided in the <literal>planner-engine</literal> distribution folder, most instances have a large number of possible solutions. As there is no guaranteed way to find the optimal solution, any implementation is forced to evaluate at least a subset of all those possible solutions.
				</simpara>
				<simpara>
					Business Optimizer supports several optimization algorithms to efficiently wade through that incredibly large number of possible solutions.
				</simpara>
				<simpara>
					Depending on the use case, some optimization algorithms perform better than others, but it is impossible to know in advance. Using Business Optimizer, you can switch the optimization algorithm by changing the solver configuration in a few lines of XML or code.
				</simpara>
			</section>
			<section xml:id="optimizer-hard-vs-soft-constraints-con">
				<title>Constraints on planning problems</title>
				<simpara>
					Usually, a planning problem has minimum two levels of constraints:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							A <emphasis>(negative) hard constraint</emphasis> must not be broken.
						</simpara>
						<simpara>
							For example, one teacher can not teach two different lessons at the same time.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							A <emphasis>(negative) soft constraint</emphasis> should not be broken if it can be avoided.
						</simpara>
						<simpara>
							For example, Teacher A does not like to teach on Friday afternoons.
						</simpara>
					</listitem>
				</itemizedlist>
				<simpara>
					Some problems also have positive constraints:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							A <emphasis>positive soft constraint (or reward)</emphasis> should be fulfilled if possible.
						</simpara>
						<simpara>
							For example, Teacher B likes to teach on Monday mornings.
						</simpara>
					</listitem>
				</itemizedlist>
				<simpara>
					Some basic problems only have hard constraints. Some problems have three or more levels of constraints, for example, hard, medium, and soft constraints.
				</simpara>
				<simpara>
					These constraints define the <emphasis>score calculation</emphasis> (otherwise known as the <emphasis>fitness function</emphasis>) of a planning problem. Each solution of a planning problem is graded with a score. With Business Optimizer, score constraints are written in an object oriented language such as Java, or in Drools rules.
				</simpara>
				<simpara>
					This type of code is flexible and scalable.
				</simpara>
			</section>
		</chapter>
		<chapter xml:id="workbench-er-tutorial-con">
			<title>Getting started with solvers in Business Central: An employee rostering example</title>
			<simpara>
				You can build and deploy the <literal>employee-rostering</literal> sample project in Business Central. The project demonstrates how to create each of the Business Central assets required to solve the shift rostering planning problem and use Red Hat Business Optimizer to find the best possible solution.
			</simpara>
			<simpara>
				You can deploy the preconfigured <literal>employee-rostering</literal> project in Business Central. Alternatively, you can create the project yourself using Business Central.
			</simpara>
			<note>
				<simpara>
					The <literal>employee-rostering</literal> sample project in Business Central does not include a data set. You must supply a data set in XML format using a REST API call.
				</simpara>
			</note>
			<section xml:id="wb-employee-rostering-example-deploying-in-central-proc">
				<title>Deploying the employee rostering sample project in Business Central</title>
				<simpara>
					Business Central includes a number of sample projects that you can use to get familiar with the product and its features. The employee rostering sample project is designed and created to demonstrate the shift rostering use case for Red Hat Business Optimizer. Use the following procedure to deploy and run the employee rostering sample in Business Central.
				</simpara>
				<itemizedlist>
					<title>Prerequisites</title>
					<listitem>
						<simpara>
							Red Hat Process Automation Manager has been downloaded and installed. For installation options, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/installing_and_configuring_red_hat_process_automation_manager#assembly-planning"><emphasis>Planning a Red Hat Process Automation Manager installation</emphasis></link>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							You have started the KIE Server and logged in to Business Central with a user that has <literal>admin</literal> permissions. For more information about getting started, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/getting_started_with_red_hat_process_automation_manager#assembly-getting-started-decision-services"><emphasis>Getting started with decision services</emphasis></link>.
						</simpara>
					</listitem>
				</itemizedlist>
				<orderedlist numeration="arabic">
					<title>Procedure</title>
					<listitem>
						<simpara>
							In Business Central, click <emphasis role="strong">Menu</emphasis> → <emphasis role="strong">Design</emphasis> → <emphasis role="strong">Projects</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							In the preconfigured <literal>MySpace</literal> space, click <emphasis role="strong">Try Samples</emphasis>.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Select <emphasis role="strong">employee-rostering</emphasis> from the list of sample projects and click <emphasis role="strong">Ok</emphasis> in the upper-right corner to import the project.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							After the asset list has complied, click <emphasis role="strong">Build &amp; Deploy</emphasis> to deploy the employee rostering example.
						</simpara>
					</listitem>
				</orderedlist>
				<simpara>
					The rest of this document explains each of the project assets and their configuration.
				</simpara>
			</section>
			<section xml:id="wb-employee-rostering-example-recreate-con">
				<title>Re-creating the employee rostering sample project</title>
				<simpara>
					The employee rostering sample project is a preconfigured project available in Business Central. You can learn about how to deploy this project in <xref linkend="wb-employee-rostering-example-deploying-in-central-proc" />.
				</simpara>
				<simpara>
					You can create the employee rostering example "from scratch". You can use the workflow in this example to create a similar project of your own in Business Central.
				</simpara>
				<section xml:id="wb-employee-rostering-example-setup-proc">
					<title>Setting up the employee rostering project</title>
					<simpara>
						To start developing a solver in Business Central, you must set up the project.
					</simpara>
					<itemizedlist>
						<title>Prerequisites</title>
						<listitem>
							<simpara>
								Red Hat Process Automation Manager has been downloaded and installed.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								You have deployed Business Central and logged in with a user that has the <literal>admin</literal> role.
							</simpara>
						</listitem>
					</itemizedlist>
					<orderedlist numeration="arabic">
						<title>Procedure</title>
						<listitem>
							<simpara>
								Create a new project in Business Central by clicking <emphasis role="strong">Menu</emphasis> → <emphasis role="strong">Design</emphasis> → <emphasis role="strong">Projects</emphasis> → <emphasis role="strong">Add Project</emphasis>.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								In the <emphasis role="strong">Add Project</emphasis> window, fill out the following fields:
							</simpara>
							<itemizedlist>
								<listitem>
									<simpara>
										<emphasis role="strong">Name</emphasis>: <literal>employee-rostering</literal>
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										<emphasis role="strong">Description</emphasis>(optional): Employee rostering problem optimization using Business Optimizer. Assigns employees to shifts based on their skill.
									</simpara>
								</listitem>
							</itemizedlist>
							<simpara>
								Optionally, click <emphasis role="strong">Configure Advanced Options</emphasis> to populate the <literal>Group ID</literal>, <literal>Artifact ID</literal>, and <literal>Version</literal> information.
							</simpara>
							<itemizedlist>
								<listitem>
									<simpara>
										<emphasis role="strong">Group ID</emphasis>: <literal>employeerostering</literal>
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										<emphasis role="strong">Artifact ID</emphasis>: <literal>employeerostering</literal>
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										<emphasis role="strong">Version</emphasis>: <literal>1.0.0-SNAPSHOT</literal>
									</simpara>
								</listitem>
							</itemizedlist>
						</listitem>
						<listitem>
							<simpara>
								Click <emphasis role="strong">Add</emphasis> to add the project to the Business Central project repository.
							</simpara>
						</listitem>
					</orderedlist>
				</section>
				<section xml:id="wb-employee-rostering-facts-vs-entities-con">
					<title>Problem facts and planning entities</title>
					<simpara>
						Each of the domain classes in the employee rostering planning problem is categorized as one of the following:
					</simpara>
					<itemizedlist>
						<listitem>
							<simpara>
								An unrelated class: not used by any of the score constraints. From a planning standpoint, this data is obsolete.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								A <emphasis>problem fact</emphasis> class: used by the score constraints, but does not change during planning (as long as the problem stays the same), for example, <literal>Shift</literal> and <literal>Employee</literal>. All the properties of a problem fact class are problem properties.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								A <emphasis>planning entity</emphasis> class: used by the score constraints and changes during planning, for example, <literal>ShiftAssignment</literal>. The properties that change during planning are <emphasis>planning variables</emphasis>. The other properties are problem properties.
							</simpara>
							<simpara>
								Ask yourself the following questions:
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								<emphasis>What class changes during planning?</emphasis>
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								<emphasis>Which class has variables that I want the <literal>Solver</literal> to change?</emphasis>
							</simpara>
							<simpara>
								That class is a planning entity.
							</simpara>
							<simpara>
								A planning entity class needs to be annotated with the <literal>@PlanningEntity</literal> annotation, or defined in Business Central using the Red Hat Business Optimizer dock in the domain designer.
							</simpara>
							<simpara>
								Each planning entity class has one or more <emphasis>planning variables</emphasis>, and must also have one or more defining properties.
							</simpara>
							<simpara>
								Most use cases have only one planning entity class, and only one planning variable per planning entity class.
							</simpara>
						</listitem>
					</itemizedlist>
				</section>
				<section xml:id="wb-employee-rostering-data-model-proc">
					<title>Creating the data model for the employee rostering project</title>
					<simpara>
						Use this section to create the data objects required to run the employee rostering sample project in Business Central.
					</simpara>
					<itemizedlist>
						<title>Prerequisites</title>
						<listitem>
							<simpara>
								You have completed the project setup described in <xref linkend="wb-employee-rostering-example-setup-proc" />.
							</simpara>
						</listitem>
					</itemizedlist>
					<orderedlist numeration="arabic">
						<title>Procedure</title>
						<listitem>
							<simpara>
								With your new project, either click <emphasis role="strong">Data Object</emphasis> in the project perspective, or click <emphasis role="strong">Add Asset</emphasis> → <emphasis role="strong">Data Object</emphasis> to create a new data object.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Name the first data object <literal>Timeslot</literal>, and select <literal>employeerostering.employeerostering</literal> as the <emphasis role="strong">Package</emphasis>.
							</simpara>
							<simpara>
								Click <emphasis role="strong">Ok</emphasis>.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								In the <emphasis role="strong">Data Objects</emphasis> perspective, click <emphasis role="strong">+add field</emphasis> to add fields to the <literal>Timeslot</literal> data object.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								In the <emphasis role="strong">id</emphasis> field, type <literal>endTime</literal>.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Click the drop-down menu next to <emphasis role="strong">Type</emphasis> and select <literal>LocalDateTime</literal>.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Click <emphasis role="strong">Create and continue</emphasis> to add another field.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Add another field with the <emphasis role="strong">id</emphasis> <literal>startTime</literal> and <emphasis role="strong">Type</emphasis> <literal>LocalDateTime</literal>.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Click <emphasis role="strong">Create</emphasis>.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Click <emphasis role="strong">Save</emphasis> in the upper-right corner to save the <literal>Timeslot</literal> data object.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Click the <emphasis role="strong">x</emphasis> in the upper-right corner to close the <emphasis role="strong">Data Objects</emphasis> perspective and return to the <emphasis role="strong">Assets</emphasis> menu.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Using the previous steps, create the following data objects and their attributes:
							</simpara>
							<table colsep="1" frame="all" rowsep="1">
								<title>Skill</title>
								<tgroup cols="2">
									<colspec colname="col_1" colwidth="50*"></colspec>
									<colspec colname="col_2" colwidth="50*"></colspec>
									<thead>
										<row>
											<entry align="left" valign="top">id</entry>
											<entry align="left" valign="top">Type</entry>
										</row>
									</thead>
									<tbody>
										<row>
											<entry align="left" valign="top">
											<simpara>
												<literal>name</literal>
											</simpara>
											</entry>
											<entry align="left" valign="top">
											<simpara>
												<literal>String</literal>
											</simpara>
											</entry>
										</row>
									</tbody>
								</tgroup>
							</table>
							<table colsep="1" frame="all" rowsep="1">
								<title>Employee</title>
								<tgroup cols="2">
									<colspec colname="col_1" colwidth="50*"></colspec>
									<colspec colname="col_2" colwidth="50*"></colspec>
									<thead>
										<row>
											<entry align="left" valign="top">id</entry>
											<entry align="left" valign="top">Type</entry>
										</row>
									</thead>
									<tbody>
										<row>
											<entry align="left" valign="top">
											<simpara>
												<literal>name</literal>
											</simpara>
											</entry>
											<entry align="left" valign="top">
											<simpara>
												<literal>String</literal>
											</simpara>
											</entry>
										</row>
										<row>
											<entry align="left" valign="top">
											<simpara>
												<literal>skills</literal>
											</simpara>
											</entry>
											<entry align="left" valign="top">
											<simpara>
												<literal>employeerostering.employeerostering.Skill[List]</literal>
											</simpara>
											</entry>
										</row>
									</tbody>
								</tgroup>
							</table>
							<table colsep="1" frame="all" rowsep="1">
								<title>Shift</title>
								<tgroup cols="2">
									<colspec colname="col_1" colwidth="50*"></colspec>
									<colspec colname="col_2" colwidth="50*"></colspec>
									<thead>
										<row>
											<entry align="left" valign="top">id</entry>
											<entry align="left" valign="top">Type</entry>
										</row>
									</thead>
									<tbody>
										<row>
											<entry align="left" valign="top">
											<simpara>
												<literal>requiredSkill</literal>
											</simpara>
											</entry>
											<entry align="left" valign="top">
											<simpara>
												<literal>employeerostering.employeerostering.Skill</literal>
											</simpara>
											</entry>
										</row>
										<row>
											<entry align="left" valign="top">
											<simpara>
												<literal>timeslot</literal>
											</simpara>
											</entry>
											<entry align="left" valign="top">
											<simpara>
												<literal>employeerostering.employeerostering.Timeslot</literal>
											</simpara>
											</entry>
										</row>
									</tbody>
								</tgroup>
							</table>
							<table colsep="1" frame="all" rowsep="1">
								<title>DayOffRequest</title>
								<tgroup cols="2">
									<colspec colname="col_1" colwidth="50*"></colspec>
									<colspec colname="col_2" colwidth="50*"></colspec>
									<thead>
										<row>
											<entry align="left" valign="top">id</entry>
											<entry align="left" valign="top">Type</entry>
										</row>
									</thead>
									<tbody>
										<row>
											<entry align="left" valign="top">
											<simpara>
												<literal>date</literal>
											</simpara>
											</entry>
											<entry align="left" valign="top">
											<simpara>
												<literal>LocalDate</literal>
											</simpara>
											</entry>
										</row>
										<row>
											<entry align="left" valign="top">
											<simpara>
												<literal>employee</literal>
											</simpara>
											</entry>
											<entry align="left" valign="top">
											<simpara>
												<literal>employeerostering.employeerostering.Employee</literal>
											</simpara>
											</entry>
										</row>
									</tbody>
								</tgroup>
							</table>
							<table colsep="1" frame="all" rowsep="1">
								<title>ShiftAssignment</title>
								<tgroup cols="2">
									<colspec colname="col_1" colwidth="50*"></colspec>
									<colspec colname="col_2" colwidth="50*"></colspec>
									<thead>
										<row>
											<entry align="left" valign="top">id</entry>
											<entry align="left" valign="top">Type</entry>
										</row>
									</thead>
									<tbody>
										<row>
											<entry align="left" valign="top">
											<simpara>
												<literal>employee</literal>
											</simpara>
											</entry>
											<entry align="left" valign="top">
											<simpara>
												<literal>employeerostering.employeerostering.Employee</literal>
											</simpara>
											</entry>
										</row>
										<row>
											<entry align="left" valign="top">
											<simpara>
												<literal>shift</literal>
											</simpara>
											</entry>
											<entry align="left" valign="top">
											<simpara>
												<literal>employeerostering.employeerostering.Shift</literal>
											</simpara>
											</entry>
										</row>
									</tbody>
								</tgroup>
							</table>
						</listitem>
					</orderedlist>
					<simpara>
						For more examples of creating data objects, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/getting_started_with_red_hat_process_automation_manager#assembly-getting-started-decision-services"><emphasis>Getting started with decision services</emphasis></link>.
					</simpara>
					<section xml:id="wb-employee-rostering-planning-entity-proc">
						<title>Creating the employee roster planning entity</title>
						<simpara>
							In order to solve the employee rostering planning problem, you must create a planning entity and a solver. The planning entity is defined in the domain designer using the attributes available in the Red Hat Business Optimizer dock.
						</simpara>
						<simpara>
							Use the following procedure to define the <literal>ShiftAssignment</literal> data object as the planning entity for the employee rostering example.
						</simpara>
						<itemizedlist>
							<title>Prerequisites</title>
							<listitem>
								<simpara>
									You have created the relevant data objects and planning entity required to run the employee rostering example by completing the procedures in <xref linkend="wb-employee-rostering-data-model-proc" />.
								</simpara>
							</listitem>
						</itemizedlist>
						<orderedlist numeration="arabic">
							<title>Procedure</title>
							<listitem>
								<simpara>
									From the project <emphasis role="strong">Assets</emphasis> menu, open the <literal>ShiftAssignment</literal> data object.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									In the <emphasis role="strong">Data Objects</emphasis> perspective, open the Red Hat Business Optimizer dock by clicking the 
									<inlinemediaobject>
										<imageobject>
											<imagedata fileref="images/_images/employee-rostering/optimizer-icon.png" format="PNG" />
										</imageobject>
										<textobject>
											<phrase>Red Hat Business Optimizer icon</phrase>
										</textobject>
									</inlinemediaobject>
									 on the right.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Select <emphasis role="strong">Planning Entity</emphasis>.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Select <literal>employee</literal> from the list of fields under the <literal>ShiftAssignment</literal> data object.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									In the Red Hat Business Optimizer dock, select <emphasis role="strong">Planning Variable</emphasis>.
								</simpara>
								<simpara>
									In the <emphasis role="strong">Value Range Id</emphasis> input field, type <literal>employeeRange</literal>. This adds the <literal>@ValueRangeProvider</literal> annotation to the planning entity, which you can view by clicking the <literal>Source</literal> tab in the designer.
								</simpara>
								<simpara>
									The value range of a planning variable is defined with the <literal>@ValueRangeProvider</literal> annotation. A <literal>@ValueRangeProvider</literal> annotation always has a property <literal>id</literal>, which is referenced by the <literal>@PlanningVariable</literal> property <literal>valueRangeProviderRefs</literal>.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Close the dock and click <emphasis role="strong">Save</emphasis> to save the data object.
								</simpara>
							</listitem>
						</orderedlist>
					</section>
					<section xml:id="wb-employee-rostering-planning-solution-proc">
						<title>Creating the employee roster planning solution</title>
						<simpara>
							The employee roster problem relies on a defined planning solution. The planning solution is defined in the domain designer using the attributes available in the Red Hat Business Optimizer dock.
						</simpara>
						<itemizedlist>
							<title>Prerequisites</title>
							<listitem>
								<simpara>
									You have created the relevant data objects and planning entity required to run the employee rostering example by completing the procedures in <xref linkend="wb-employee-rostering-data-model-proc" /> and <xref linkend="wb-employee-rostering-planning-entity-proc" />.
								</simpara>
							</listitem>
						</itemizedlist>
						<orderedlist numeration="arabic">
							<title>Procedure</title>
							<listitem>
								<simpara>
									Create a new data object with the identifier <literal>EmployeeRoster</literal>.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Create the following fields:
								</simpara>
								<table colsep="1" frame="all" rowsep="1">
									<title>EmployeeRoster</title>
									<tgroup cols="2">
										<colspec colname="col_1" colwidth="50*"></colspec>
										<colspec colname="col_2" colwidth="50*"></colspec>
										<thead>
											<row>
												<entry align="left" valign="top">id</entry>
												<entry align="left" valign="top">Type</entry>
											</row>
										</thead>
										<tbody>
											<row>
												<entry align="left" valign="top">
												<simpara>
													<literal>dayOffRequestList</literal>
												</simpara>
												</entry>
												<entry align="left" valign="top">
												<simpara>
													<literal>employeerostering.employeerostering.DayOffRequest[List]</literal>
												</simpara>
												</entry>
											</row>
											<row>
												<entry align="left" valign="top">
												<simpara>
													<literal>shiftAssignmentList</literal>
												</simpara>
												</entry>
												<entry align="left" valign="top">
												<simpara>
													<literal>employeerostering.employeerostering.ShiftAssignment[List]</literal>
												</simpara>
												</entry>
											</row>
											<row>
												<entry align="left" valign="top">
												<simpara>
													<literal>shiftList</literal>
												</simpara>
												</entry>
												<entry align="left" valign="top">
												<simpara>
													<literal>employeerostering.employeerostering.Shift[List]</literal>
												</simpara>
												</entry>
											</row>
											<row>
												<entry align="left" valign="top">
												<simpara>
													<literal>skillList</literal>
												</simpara>
												</entry>
												<entry align="left" valign="top">
												<simpara>
													<literal>employeerostering.employeerostering.Skill[List]</literal>
												</simpara>
												</entry>
											</row>
											<row>
												<entry align="left" valign="top">
												<simpara>
													<literal>timeslotList</literal>
												</simpara>
												</entry>
												<entry align="left" valign="top">
												<simpara>
													<literal>employeerostering.employeerostering.Timeslot[List]</literal>
												</simpara>
												</entry>
											</row>
										</tbody>
									</tgroup>
								</table>
							</listitem>
							<listitem>
								<simpara>
									In the <emphasis role="strong">Data Objects</emphasis> perspective, open the Red Hat Business Optimizer dock by clicking the 
									<inlinemediaobject>
										<imageobject>
											<imagedata fileref="images/_images/employee-rostering/optimizer-icon.png" format="PNG" />
										</imageobject>
										<textobject>
											<phrase>Red Hat Business Optimizer icon</phrase>
										</textobject>
									</inlinemediaobject>
									 on the right.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Select <emphasis role="strong">Planning Solution</emphasis>.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Leave the default <literal>Hard soft score</literal> as the <emphasis role="strong">Solution Score Type</emphasis>. This automatically generates a <literal>score</literal> field in the <literal>EmployeeRoster</literal> data object with the solution score as the type.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Add a new field with the following attributes:
								</simpara>
								<informaltable colsep="1" frame="all" rowsep="1">
									<tgroup cols="2">
										<colspec colname="col_1" colwidth="50*"></colspec>
										<colspec colname="col_2" colwidth="50*"></colspec>
										<thead>
											<row>
												<entry align="left" valign="top">id</entry>
												<entry align="left" valign="top">Type</entry>
											</row>
										</thead>
										<tbody>
											<row>
												<entry align="left" valign="top">
												<simpara>
													<literal>employeeList</literal>
												</simpara>
												</entry>
												<entry align="left" valign="top">
												<simpara>
													<literal>employeerostering.employeerostering.Employee[List]</literal>
												</simpara>
												</entry>
											</row>
										</tbody>
									</tgroup>
								</informaltable>
							</listitem>
							<listitem>
								<simpara>
									With the <literal>employeeList</literal> field selected, open the Red Hat Business Optimizer dock and select the <emphasis role="strong">Planning Value Range Provider</emphasis> box.
								</simpara>
								<simpara>
									In the <emphasis role="strong">id</emphasis> field, type <literal>employeeRange</literal>. Close the dock.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Click <emphasis role="strong">Save</emphasis> in the upper-right corner to save the asset.
								</simpara>
							</listitem>
						</orderedlist>
					</section>
				</section>
				<section xml:id="wb-employee-rostering-constraints-con">
					<title>Employee rostering constraints</title>
					<simpara>
						Employee rostering is a planning problem. All planning problems include constraints that must be satisfied in order to find an optimal solution.
					</simpara>
					<simpara>
						The employee rostering sample project in Business Central includes the following hard and soft constraints:
					</simpara>
					<variablelist>
						<varlistentry>
							<term>Hard constraint</term>
							<listitem>
								<itemizedlist>
									<listitem>
										<simpara>
											Employees are only assigned one shift per day.
										</simpara>
									</listitem>
									<listitem>
										<simpara>
											All shifts that require a particular employee skill are assigned an employee with that particular skill.
										</simpara>
									</listitem>
								</itemizedlist>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term>Soft constraints</term>
							<listitem>
								<itemizedlist>
									<listitem>
										<simpara>
											All employees are assigned a shift.
										</simpara>
									</listitem>
									<listitem>
										<simpara>
											If an employee requests a day off, their shift is reassigned to another employee.
										</simpara>
									</listitem>
								</itemizedlist>
							</listitem>
						</varlistentry>
					</variablelist>
					<simpara>
						Hard and soft constraints are defined in Business Central using either the free-form DRL designer, or using guided rules.
					</simpara>
					<section xml:id="drl-rules-con_getting-started-business-optimizer">
						<title>DRL (Drools Rule Language) rules</title>
						<simpara>
							DRL (Drools Rule Language) rules are business rules that you define directly in <literal>.drl</literal> text files. These DRL files are the source in which all other rule assets in Business Central are ultimately rendered. You can create and manage DRL files within the Business Central interface, or create them externally as part of a Maven or Java project using Red Hat CodeReady Studio or another integrated development environment (IDE). A DRL file can contain one or more rules that define at a minimum the rule conditions (<literal>when</literal>) and actions (<literal>then</literal>). The DRL designer in Business Central provides syntax highlighting for Java, DRL, and XML.
						</simpara>
						<simpara>
							DRL files consist of the following components:
						</simpara>
						<formalpara>
							<title>Components in a DRL file</title>
							<para>
								
<screen>package

import

function  // Optional

query  // Optional

declare   // Optional

global   // Optional

rule "rule name"
    // Attributes
    when
        // Conditions
    then
        // Actions
end

rule "rule2 name"

...</screen>
							</para>
						</formalpara>
						<simpara>
							The following example DRL rule determines the age limit in a loan application decision service:
						</simpara>
						<formalpara>
							<title>Example rule for loan application age limit</title>
							<para>
								
<screen>rule "Underage"
  salience 15
  agenda-group "applicationGroup"
  when
    $application : LoanApplication()
    Applicant( age &lt; 21 )
  then
    $application.setApproved( false );
    $application.setExplanation( "Underage" );
end</screen>
							</para>
						</formalpara>
						<simpara>
							A DRL file can contain single or multiple rules, queries, and functions, and can define resource declarations such as imports, globals, and attributes that are assigned and used by your rules and queries. The DRL package must be listed at the top of a DRL file and the rules are typically listed last. All other DRL components can follow any order.
						</simpara>
						<simpara>
							Each rule must have a unique name within the rule package. If you use the same rule name more than once in any DRL file in the package, the rules fail to compile. Always enclose rule names with double quotation marks (<literal>rule "rule name"</literal>) to prevent possible compilation errors, especially if you use spaces in rule names.
						</simpara>
						<simpara>
							All data objects related to a DRL rule must be in the same project package as the DRL file in Business Central. Assets in the same package are imported by default. Existing assets in other packages can be imported with the DRL rule.
						</simpara>
					</section>
					<section xml:id="wb-employee-rostering-optimizer-drools-rules-proc">
						<title>Defining constraints for employee rostering using the DRL designer</title>
						<simpara>
							You can create constraint definitions for the employee rostering example using the free-form DRL designer in Business Central.
						</simpara>
						<simpara>
							Use this procedure to create a <emphasis>hard constraint</emphasis> where no employee is assigned a shift that begins less than 10 hours after their previous shift ended.
						</simpara>
						<orderedlist numeration="arabic">
							<title>Procedure</title>
							<listitem>
								<simpara>
									In Business Central, go to <emphasis role="strong">Menu</emphasis> → <emphasis role="strong">Design</emphasis> → <emphasis role="strong">Projects</emphasis> and click the project name.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Click <emphasis role="strong">Add Asset</emphasis> → <emphasis role="strong">DRL file</emphasis>.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									In the <emphasis role="strong">DRL file</emphasis> name field, type <literal>ComplexScoreRules</literal>.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Select the <literal>employeerostering.employeerostering</literal> package.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Click <emphasis role="strong">+Ok</emphasis> to create the DRL file.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									In the <emphasis role="strong">Model</emphasis> tab of the DRL designer, define the <literal>Employee10HourShiftSpace</literal> rule as a DRL file:
								</simpara>
								
<screen>package employeerostering.employeerostering;

rule "Employee10HourShiftSpace"
    when
        $shiftAssignment : ShiftAssignment( $employee : employee != null, $shiftEndDateTime : shift.timeslot.endTime)
        ShiftAssignment( this != $shiftAssignment, $employee == employee, $shiftEndDateTime &lt;= shift.timeslot.endTime,
                $shiftEndDateTime.until(shift.timeslot.startTime, java.time.temporal.ChronoUnit.HOURS) &lt;10)
    then
        scoreHolder.addHardConstraintMatch(kcontext, -1);
end</screen>
							</listitem>
							<listitem>
								<simpara>
									Click <emphasis role="strong">Save</emphasis> to save the DRL file.
								</simpara>
							</listitem>
						</orderedlist>
						<simpara>
							For more information about creating DRL files, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/developing_decision_services_in_red_hat_process_automation_manager#assembly-drl-rules"><emphasis>Designing a decision service using DRL rules</emphasis></link>.
						</simpara>
					</section>
				</section>
				<section xml:id="wb-employee-rostering-guided-rule-editor-proc">
					<title>Creating rules for employee rostering using guided rules</title>
					<simpara>
						You can create rules that define hard and soft constraints for employee rostering using the guided rules designer in Business Central.
					</simpara>
					<section xml:id="guided-rules-con_getting-started-business-optimizer">
						<title>Guided rules</title>
						<simpara>
							Guided rules are business rules that you create in a UI-based guided rules designer in Business Central that leads you through the rule-creation process. The guided rules designer provides fields and options for acceptable input based on the data objects for the rule being defined. The guided rules that you define are compiled into Drools Rule Language (DRL) rules as with all other rule assets.
						</simpara>
						<simpara>
							All data objects related to a guided rule must be in the same project package as the guided rule. Assets in the same package are imported by default. After you create the necessary data objects and the guided rule, you can use the <emphasis role="strong">Data Objects</emphasis> tab of the guided rules designer to verify that all required data objects are listed or to import other existing data objects by adding a <emphasis role="strong">New item</emphasis>.
						</simpara>
					</section>
					<section xml:id="wb-employee-rostering-balance-employees-shift-rule-proc">
						<title>Creating a guided rule to balance employee shift numbers</title>
						<simpara>
							The <literal>BalanceEmployeesShiftNumber</literal> guided rule creates a soft constraint that ensures shifts are assigned to employees in a way that is balanced as evenly as possible. It does this by creating a score penalty that increases when shift distribution is less even. The score formula, implemented by the rule, incentivizes the Solver to distribute shifts in a more balanced way.
						</simpara>
						<informalfigure>
						<mediaobject>
							<imageobject>
								<imagedata fileref="images/_images/employee-rostering/BalanceEmployeesShiftNumber.png" format="PNG" />
							</imageobject>
							<textobject>
								<phrase>BalanceEmployeesShiftNumber Guided Rule</phrase>
							</textobject>
						</mediaobject>
						</informalfigure>
						<orderedlist numeration="arabic">
							<title>Procedure</title>
							<listitem>
								<simpara>
									In Business Central, go to <emphasis role="strong">Menu</emphasis> → <emphasis role="strong">Design</emphasis> → <emphasis role="strong">Projects</emphasis> and click the project name.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Click <emphasis role="strong">Add Asset</emphasis> → <emphasis role="strong">Guided Rule</emphasis>.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Enter <literal>BalanceEmployeesShiftNumber</literal> as the <emphasis role="strong">Guided Rule</emphasis> name and select the <literal>employeerostering.employeerostering</literal> <emphasis role="strong">Package</emphasis>.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Click <emphasis role="strong">Ok</emphasis> to create the rule asset.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Add a <emphasis role="strong">WHEN</emphasis> condition by clicking the 
									<inlinemediaobject>
										<imageobject>
											<imagedata fileref="images/_images/employee-rostering/5686.png" format="PNG" />
										</imageobject>
										<textobject>
											<phrase>5686</phrase>
										</textobject>
									</inlinemediaobject>
									 in the <emphasis role="strong">WHEN</emphasis> field.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Select <literal>Employee</literal> in the <emphasis role="strong">Add a condition to the rule</emphasis> window. Click <emphasis role="strong">+Ok</emphasis>.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Click the <literal>Employee</literal> condition to modify the constraints and add the variable name <literal>$employee</literal>.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Add the <emphasis role="strong">WHEN</emphasis> condition <literal>From Accumulate</literal>.
								</simpara>
								<orderedlist numeration="loweralpha">
									<listitem>
										<simpara>
											Above the <literal>From Accumulate</literal> condition, click <emphasis role="strong">click to add pattern</emphasis> and select <literal>Number</literal> as the fact type from the drop-down list.
										</simpara>
									</listitem>
									<listitem>
										<simpara>
											Add the variable name <literal>$shiftCount</literal> to the <literal>Number</literal> condition.
										</simpara>
									</listitem>
									<listitem>
										<simpara>
											Below the <literal>From Accumulate</literal> condition, click <emphasis role="strong">click to add pattern</emphasis> and select the <literal>ShiftAssignment</literal> fact type from the drop-down list.
										</simpara>
									</listitem>
									<listitem>
										<simpara>
											Add the variable name <literal>$shiftAssignment</literal> to the <literal>ShiftAssignment</literal> fact type.
										</simpara>
									</listitem>
									<listitem>
										<simpara>
											Click the <literal>ShiftAssignment</literal> condition again and from the <emphasis role="strong">Add a restriction on a field</emphasis> drop-down list, select <literal>employee</literal>.
										</simpara>
									</listitem>
									<listitem>
										<simpara>
											Select <literal>equal to</literal> from the drop-down list next to the <literal>employee</literal> constraint.
										</simpara>
									</listitem>
									<listitem>
										<simpara>
											Click the 
											<inlinemediaobject>
												<imageobject>
													<imagedata fileref="images/_images/employee-rostering/6191.png" format="PNG" />
												</imageobject>
												<textobject>
													<phrase>edit</phrase>
												</textobject>
											</inlinemediaobject>
											 icon next to the drop-down button to add a variable, and click <emphasis role="strong">Bound variable</emphasis> in the <emphasis role="strong">Field value</emphasis> window.
										</simpara>
									</listitem>
									<listitem>
										<simpara>
											Select <literal>$employee</literal> from the drop-down list.
										</simpara>
									</listitem>
									<listitem>
										<simpara>
											In the <emphasis role="strong">Function</emphasis> box type <literal>count($shiftAssignment)</literal>.
										</simpara>
									</listitem>
								</orderedlist>
							</listitem>
							<listitem>
								<simpara>
									Add the <emphasis role="strong">THEN</emphasis> condition by clicking the 
									<inlinemediaobject>
										<imageobject>
											<imagedata fileref="images/_images/employee-rostering/5686.png" format="PNG" />
										</imageobject>
										<textobject>
											<phrase>5686</phrase>
										</textobject>
									</inlinemediaobject>
									 in the <emphasis role="strong">THEN</emphasis> field.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Select <literal>Modify Soft Score</literal> in the <emphasis role="strong">Add a new action</emphasis> window. Click <emphasis role="strong">+Ok</emphasis>.
								</simpara>
								<orderedlist numeration="loweralpha">
									<listitem>
										<simpara>
											Type the following expression into the box: <literal>-($shiftCount.intValue()*$shiftCount.intValue())</literal>
										</simpara>
									</listitem>
								</orderedlist>
							</listitem>
							<listitem>
								<simpara>
									Click <emphasis role="strong">Validate</emphasis> in the upper-right corner to check all rule conditions are valid. If the rule validation fails, address any problems described in the error message, review all components in the rule, and try again to validate the rule until the rule passes.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Click <emphasis role="strong">Save</emphasis> to save the rule.
								</simpara>
							</listitem>
						</orderedlist>
						<simpara>
							For more information about creating guided rules, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/developing_decision_services_in_red_hat_process_automation_manager#assembly-guided-rules"><emphasis>Designing a decision service using guided rules</emphasis></link>.
						</simpara>
					</section>
					<section xml:id="wb-employee-rostering-one-shift-per-day-rule-proc">
						<title>Creating a guided rule for no more than one shift per day</title>
						<simpara>
							The <literal>OneEmployeeShiftPerDay</literal> guided rule creates a hard constraint that employees are not assigned more than one shift per day. In the employee rostering example, this constraint is created using the guided rule designer.
						</simpara>
						<informalfigure>
						<mediaobject>
							<imageobject>
								<imagedata fileref="images/_images/employee-rostering/OneEmployeeShiftPerDay.png" format="PNG" />
							</imageobject>
							<textobject>
								<phrase>OneEmployeeShiftPerDay Guided Rule</phrase>
							</textobject>
						</mediaobject>
						</informalfigure>
						<orderedlist numeration="arabic">
							<title>Procedure</title>
							<listitem>
								<simpara>
									In Business Central, go to <emphasis role="strong">Menu</emphasis> → <emphasis role="strong">Design</emphasis> → <emphasis role="strong">Projects</emphasis> and click the project name.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Click <emphasis role="strong">Add Asset</emphasis> → <emphasis role="strong">Guided Rule</emphasis>.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Enter <literal>OneEmployeeShiftPerDay</literal> as the <emphasis role="strong">Guided Rule</emphasis> name and select the <literal>employeerostering.employeerostering</literal> <emphasis role="strong">Package</emphasis>.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Click <emphasis role="strong">Ok</emphasis> to create the rule asset.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Add a <emphasis role="strong">WHEN</emphasis> condition by clicking the 
									<inlinemediaobject>
										<imageobject>
											<imagedata fileref="images/_images/employee-rostering/5686.png" format="PNG" />
										</imageobject>
										<textobject>
											<phrase>5686</phrase>
										</textobject>
									</inlinemediaobject>
									 in the <emphasis role="strong">WHEN</emphasis> field.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Select <emphasis role="strong">Free form DRL</emphasis> from the <emphasis role="strong">Add a condition to the rule</emphasis> window.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									In the free form DRL box, type the following condition:
								</simpara>
								
<programlisting language="java" linenumbering="unnumbered">$shiftAssignment : ShiftAssignment( employee != null )
		ShiftAssignment( this != $shiftAssignment , employee == $shiftAssignment.employee , shift.timeslot.startTime.toLocalDate() == $shiftAssignment.shift.timeslot.startTime.toLocalDate() )</programlisting>
								<simpara>
									This condition states that a shift cannot be assigned to an employee that already has another shift assignment on the same day.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Add the <emphasis role="strong">THEN</emphasis> condition by clicking the 
									<inlinemediaobject>
										<imageobject>
											<imagedata fileref="images/_images/employee-rostering/5686.png" format="PNG" />
										</imageobject>
										<textobject>
											<phrase>5686</phrase>
										</textobject>
									</inlinemediaobject>
									 in the <emphasis role="strong">THEN</emphasis> field.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Select <emphasis role="strong">Add free form DRL</emphasis> from the <emphasis role="strong">Add a new action</emphasis> window.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									In the free form DRL box, type the following condition:
								</simpara>
								
<programlisting language="java" linenumbering="unnumbered">scoreHolder.addHardConstraintMatch(kcontext, -1);</programlisting>
							</listitem>
							<listitem>
								<simpara>
									Click <emphasis role="strong">Validate</emphasis> in the upper-right corner to check all rule conditions are valid. If the rule validation fails, address any problems described in the error message, review all components in the rule, and try again to validate the rule until the rule passes.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Click <emphasis role="strong">Save</emphasis> to save the rule.
								</simpara>
							</listitem>
						</orderedlist>
						<simpara>
							For more information about creating guided rules, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/developing_decision_services_in_red_hat_process_automation_manager#assembly-guided-rules"><emphasis>Designing a decision service using guided rules</emphasis></link>.
						</simpara>
					</section>
					<section xml:id="wb-employee-rostering-shift-required-skills-met-proc">
						<title>Creating a guided rule to match skills to shift requirements</title>
						<simpara>
							The <literal>ShiftReqiredSkillsAreMet</literal> guided rule creates a hard constraint that ensures all shifts are assigned an employee with the correct set of skills. In the employee rostering example, this constraint is created using the guided rule designer.
						</simpara>
						<informalfigure>
						<mediaobject>
							<imageobject>
								<imagedata fileref="images/_images/employee-rostering/ShiftRequiredSkillsAreMet.png" format="PNG" />
							</imageobject>
							<textobject>
								<phrase>ShiftRequiredSkillsAreMet Guided Rule</phrase>
							</textobject>
						</mediaobject>
						</informalfigure>
						<orderedlist numeration="arabic">
							<title>Procedure</title>
							<listitem>
								<simpara>
									In Business Central, go to <emphasis role="strong">Menu</emphasis> → <emphasis role="strong">Design</emphasis> → <emphasis role="strong">Projects</emphasis> and click the project name.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Click <emphasis role="strong">Add Asset</emphasis> → <emphasis role="strong">Guided Rule</emphasis>.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Enter <literal>ShiftReqiredSkillsAreMet</literal> as the <emphasis role="strong">Guided Rule</emphasis> name and select the <literal>employeerostering.employeerostering</literal> <emphasis role="strong">Package</emphasis>.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Click <emphasis role="strong">Ok</emphasis> to create the rule asset.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Add a <emphasis role="strong">WHEN</emphasis> condition by clicking the 
									<inlinemediaobject>
										<imageobject>
											<imagedata fileref="images/_images/employee-rostering/5686.png" format="PNG" />
										</imageobject>
										<textobject>
											<phrase>5686</phrase>
										</textobject>
									</inlinemediaobject>
									 in the <emphasis role="strong">WHEN</emphasis> field.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Select <literal>ShiftAssignment</literal> in the <emphasis role="strong">Add a condition to the rule</emphasis> window. Click <emphasis role="strong">+Ok</emphasis>.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Click the <literal>ShiftAssignment</literal> condition, and select <literal>employee</literal> from the <emphasis role="strong">Add a restriction on a field</emphasis> drop-down list.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									In the designer, click the drop-down list next to <literal>employee</literal> and select <literal>is not null</literal>.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Click the <literal>ShiftAssignment</literal> condition, and click <emphasis role="strong">Expression editor</emphasis>.
								</simpara>
								<orderedlist numeration="loweralpha">
									<listitem>
										<simpara>
											In the designer, click <literal>[not bound]</literal> to open the <emphasis role="strong">Expression editor</emphasis>, and bind the expression to the variable <literal>$requiredSkill</literal>. Click <emphasis role="strong">Set</emphasis>.
										</simpara>
									</listitem>
									<listitem>
										<simpara>
											In the designer, next to <literal>$requiredSkill</literal>, select <literal>shift</literal> from the first drop-down list, then <literal>requiredSkill</literal> from the next drop-down list.
										</simpara>
									</listitem>
								</orderedlist>
							</listitem>
							<listitem>
								<simpara>
									Click the <literal>ShiftAssignment</literal> condition, and click <emphasis role="strong">Expression editor</emphasis>.
								</simpara>
								<orderedlist numeration="loweralpha">
									<listitem>
										<simpara>
											In the designer, next to <literal>[not bound]</literal>, select <literal>employee</literal> from the first drop-down list, then <literal>skills</literal> from the next drop-down list.
										</simpara>
									</listitem>
									<listitem>
										<simpara>
											Leave the next drop-down list as <literal>Choose</literal>.
										</simpara>
									</listitem>
									<listitem>
										<simpara>
											In the next drop-down box, change <literal>please choose</literal> to <literal>excludes</literal>.
										</simpara>
									</listitem>
									<listitem>
										<simpara>
											Click the 
											<inlinemediaobject>
												<imageobject>
													<imagedata fileref="images/_images/employee-rostering/6191.png" format="PNG" />
												</imageobject>
												<textobject>
													<phrase>edit</phrase>
												</textobject>
											</inlinemediaobject>
											 icon next to <literal>excludes</literal>, and in the <emphasis role="strong">Field value</emphasis> window, click the <emphasis role="strong">New formula</emphasis> button.
										</simpara>
									</listitem>
									<listitem>
										<simpara>
											Type <literal>$requiredSkill</literal> into the formula box.
										</simpara>
									</listitem>
								</orderedlist>
							</listitem>
							<listitem>
								<simpara>
									Add the <emphasis role="strong">THEN</emphasis> condition by clicking the 
									<inlinemediaobject>
										<imageobject>
											<imagedata fileref="images/_images/employee-rostering/5686.png" format="PNG" />
										</imageobject>
										<textobject>
											<phrase>5686</phrase>
										</textobject>
									</inlinemediaobject>
									 in the <emphasis role="strong">THEN</emphasis> field.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Select <literal>Modify Hard Score</literal> in the <emphasis role="strong">Add a new action</emphasis> window. Click <emphasis role="strong">+Ok</emphasis>.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Type <literal>-1</literal> into the score actions box.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Click <emphasis role="strong">Validate</emphasis> in the upper-right corner to check all rule conditions are valid. If the rule validation fails, address any problems described in the error message, review all components in the rule, and try again to validate the rule until the rule passes.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Click <emphasis role="strong">Save</emphasis> to save the rule.
								</simpara>
							</listitem>
						</orderedlist>
						<simpara>
							For more information about creating guided rules, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/developing_decision_services_in_red_hat_process_automation_manager#assembly-guided-rules"><emphasis>Designing a decision service using guided rules</emphasis></link>.
						</simpara>
					</section>
					<section xml:id="wb-employee-rostering-day-off-request-rule-proc">
						<title>Creating a guided rule to manage day off requests</title>
						<simpara>
							The <literal>DayOffRequest</literal> guided rule creates a soft constraint. This constraint allows a shift to be reassigned to another employee in the event the employee who was originally assigned the shift is no longer able to work that day. In the employee rostering example, this constraint is created using the guided rule designer.
						</simpara>
						<informalfigure>
						<mediaobject>
							<imageobject>
								<imagedata fileref="images/_images/employee-rostering/DayOffRequest.png" format="PNG" />
							</imageobject>
							<textobject>
								<phrase>DayOffRequest Guided Rule</phrase>
							</textobject>
						</mediaobject>
						</informalfigure>
						<orderedlist numeration="arabic">
							<title>Procedure</title>
							<listitem>
								<simpara>
									In Business Central, go to <emphasis role="strong">Menu</emphasis> → <emphasis role="strong">Design</emphasis> → <emphasis role="strong">Projects</emphasis> and click the project name.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Click <emphasis role="strong">Add Asset</emphasis> → <emphasis role="strong">Guided Rule</emphasis>.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Enter <literal>DayOffRequest</literal> as the <emphasis role="strong">Guided Rule</emphasis> name and select the <literal>employeerostering.employeerostering</literal> <emphasis role="strong">Package</emphasis>.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Click <emphasis role="strong">Ok</emphasis> to create the rule asset.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Add a <emphasis role="strong">WHEN</emphasis> condition by clicking the 
									<inlinemediaobject>
										<imageobject>
											<imagedata fileref="images/_images/employee-rostering/5686.png" format="PNG" />
										</imageobject>
										<textobject>
											<phrase>5686</phrase>
										</textobject>
									</inlinemediaobject>
									 in the <emphasis role="strong">WHEN</emphasis> field.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Select <emphasis role="strong">Free form DRL</emphasis> from the <emphasis role="strong">Add a condition to the rule</emphasis> window.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									In the free form DRL box, type the following condition:
								</simpara>
								
<programlisting language="java" linenumbering="unnumbered">$dayOffRequest : DayOffRequest( )
		ShiftAssignment( employee == $dayOffRequest.employee , shift.timeslot.startTime.toLocalDate() == $dayOffRequest.date )</programlisting>
								<simpara>
									This condition states if a shift is assigned to an employee who has made a day off request, the employee can be unassigned the shift on that day.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Add the <emphasis role="strong">THEN</emphasis> condition by clicking the 
									<inlinemediaobject>
										<imageobject>
											<imagedata fileref="images/_images/employee-rostering/5686.png" format="PNG" />
										</imageobject>
										<textobject>
											<phrase>5686</phrase>
										</textobject>
									</inlinemediaobject>
									 in the <emphasis role="strong">THEN</emphasis> field.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Select <emphasis role="strong">Add free form DRL</emphasis> from the <emphasis role="strong">Add a new action</emphasis> window.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									In the free form DRL box, type the following condition:
								</simpara>
								
<programlisting language="java" linenumbering="unnumbered">scoreHolder.addSoftConstraintMatch(kcontext, -100);</programlisting>
							</listitem>
							<listitem>
								<simpara>
									Click <emphasis role="strong">Validate</emphasis> in the upper-right corner to check all rule conditions are valid. If the rule validation fails, address any problems described in the error message, review all components in the rule, and try again to validate the rule until the rule passes.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Click <emphasis role="strong">Save</emphasis> to save the rule.
								</simpara>
							</listitem>
						</orderedlist>
						<simpara>
							For more information about creating guided rules, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/developing_decision_services_in_red_hat_process_automation_manager#assembly-guided-rules"><emphasis>Designing a decision service using guided rules</emphasis></link>.
						</simpara>
					</section>
				</section>
				<section xml:id="wb-employee-rostering-solver-configuration-proc">
					<title>Creating a solver configuration for employee rostering</title>
					<simpara>
						You can create and edit Solver configurations in Business Central. The Solver configuration designer creates a solver configuration that can be run after the project is deployed.
					</simpara>
					<itemizedlist>
						<title>Prerequisites</title>
						<listitem>
							<simpara>
								Red Hat Process Automation Manager has been downloaded and installed.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								You have created and configured all of the relevant assets for the employee rostering example.
							</simpara>
						</listitem>
					</itemizedlist>
					<orderedlist numeration="arabic">
						<title>Procedure</title>
						<listitem>
							<simpara>
								In Business Central, click <emphasis role="strong">Menu</emphasis> → <emphasis role="strong">Projects</emphasis>, and click your project to open it.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								In the <emphasis role="strong">Assets</emphasis> perspective, click <emphasis role="strong">Add Asset</emphasis> → <emphasis role="strong">Solver configuration</emphasis>
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								In the <emphasis role="strong">Create new Solver configuration</emphasis> window, type the name <literal>EmployeeRosteringSolverConfig</literal> for your Solver and click <emphasis role="strong">Ok</emphasis>.
							</simpara>
							<simpara>
								This opens the <emphasis role="strong">Solver configuration</emphasis> designer.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								In the <emphasis role="strong">Score Director Factory</emphasis> configuration section, define a KIE base that contains scoring rule definitions. The employee rostering sample project uses <literal>defaultKieBase</literal>.
							</simpara>
							<orderedlist numeration="loweralpha">
								<listitem>
									<simpara>
										Select one of the KIE sessions defined within the KIE base. The employee rostering sample project uses <literal>defaultKieSession</literal>.
									</simpara>
								</listitem>
							</orderedlist>
						</listitem>
						<listitem>
							<simpara>
								Click <emphasis role="strong">Validate</emphasis> in the upper-right corner to check the <emphasis role="strong">Score Director Factory</emphasis> configuration is correct. If validation fails, address any problems described in the error message, and try again to validate until the configuration passes.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Click <emphasis role="strong">Save</emphasis> to save the Solver configuration.
							</simpara>
						</listitem>
					</orderedlist>
				</section>
				<section xml:id="wb-employee-rostering-solver-termination-configuration-proc">
					<title>Configuring Solver termination for the employee rostering project</title>
					<simpara>
						You can configure the Solver to terminate after a specified amount of time. By default, the planning engine is given an unlimited time period to solve a problem instance.
					</simpara>
					<simpara>
						The employee rostering sample project is set up to run for 30 seconds.
					</simpara>
					<itemizedlist>
						<title>Prerequisites</title>
						<listitem>
							<simpara>
								You have created all relevant assets for the employee rostering project and created the <literal>EmployeeRosteringSolverConfig</literal> solver configuration in Business Central as described in <xref linkend="wb-employee-rostering-solver-configuration-proc" />.
							</simpara>
						</listitem>
					</itemizedlist>
					<orderedlist numeration="arabic">
						<title>Procedure</title>
						<listitem>
							<simpara>
								Open the <literal>EmployeeRosteringSolverConfig</literal> from the <emphasis role="strong">Assets</emphasis> perspective. This will open the <emphasis role="strong">Solver configuration</emphasis> designer.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								In the <emphasis role="strong">Termination</emphasis> section, click <emphasis role="strong">Add</emphasis> to create new termination element within the selected logical group.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Select the <literal>Time spent</literal> termination type from the drop-down list. This is added as an input field in the termination configuration.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Use the arrows next to the time elements to adjust the amount of time spent to 30 seconds.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Click <emphasis role="strong">Validate</emphasis> in the upper-right corner to check the <emphasis role="strong">Score Director Factory</emphasis> configuration is correct. If validation fails, address any problems described in the error message, and try again to validate until the configuration passes.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Click <emphasis role="strong">Save</emphasis> to save the Solver configuration.
							</simpara>
						</listitem>
					</orderedlist>
				</section>
			</section>
			<section xml:id="wb-employee-rostering-using-rest-proc">
				<title>Accessing the solver using the REST API</title>
				<simpara>
					After deploying or re-creating the sample solver, you can access it using the REST API.
				</simpara>
				<simpara>
					You must register a solver instance using the REST API. Then you can supply data sets and retrieve optimized solutions.
				</simpara>
				<itemizedlist>
					<title>Prerequisites</title>
					<listitem>
						<simpara>
							The employee rostering project is set up and deployed according to the previous sections in this document. You can either deploy the sample project, as described in <xref linkend="wb-employee-rostering-example-deploying-in-central-proc" />, or re-create the project, as described in <xref linkend="wb-employee-rostering-example-recreate-con" />.
						</simpara>
					</listitem>
				</itemizedlist>
				<section xml:id="wb-employee-rostering-register-solver-proc">
					<title>Registering the Solver using the REST API</title>
					<simpara>
						You must register the solver instance using the REST API before you can use the solver.
					</simpara>
					<simpara>
						Each solver instance is capable of optimizing one planning problem at a time.
					</simpara>
					<orderedlist numeration="arabic">
						<title>Procedure</title>
						<listitem>
							<simpara>
								Create a HTTP request using the following header:
							</simpara>
							
<screen>authorization: admin:admin
X-KIE-ContentType: xstream
content-type: application/xml</screen>
						</listitem>
						<listitem>
							<simpara>
								Register the Solver using the following request:
							</simpara>
							<variablelist>
								<varlistentry>
									<term>PUT</term>
									<listitem>
										<simpara>
											<literal>http://localhost:8080/kie-server/services/rest/server/containers/employeerostering_1.0.0-SNAPSHOT/solvers/EmployeeRosteringSolver</literal>
										</simpara>
									</listitem>
								</varlistentry>
								<varlistentry>
									<term>Request body</term>
									<listitem>
										
<programlisting language="xml" linenumbering="unnumbered">&lt;solver-instance&gt;
  &lt;solver-config-file&gt;employeerostering/employeerostering/EmployeeRosteringSolverConfig.solver.xml&lt;/solver-config-file&gt;
&lt;/solver-instance&gt;</programlisting>
									</listitem>
								</varlistentry>
							</variablelist>
						</listitem>
					</orderedlist>
				</section>
				<section xml:id="wb-employee-rostering-call-solver-proc">
					<title>Calling the Solver using the REST API</title>
					<simpara>
						After registering the solver instance, you can use the REST API to submit a data set to the solver and to retrieve an optimized solution.
					</simpara>
					<orderedlist numeration="arabic">
						<title>Procedure</title>
						<listitem>
							<simpara>
								Create a HTTP request using the following header:
							</simpara>
							
<screen>authorization: admin:admin
X-KIE-ContentType: xstream
content-type: application/xml</screen>
						</listitem>
						<listitem>
							<simpara>
								Submit a request to the Solver with a data set, as in the following example:
							</simpara>
							<variablelist>
								<varlistentry>
									<term>POST</term>
									<listitem>
										<simpara>
											<literal>http://localhost:8080/kie-server/services/rest/server/containers/employeerostering_1.0.0-SNAPSHOT/solvers/EmployeeRosteringSolver/state/solving</literal>
										</simpara>
									</listitem>
								</varlistentry>
								<varlistentry>
									<term>Request body</term>
									<listitem>
										
<programlisting language="xml" linenumbering="unnumbered">&lt;employeerostering.employeerostering.EmployeeRoster&gt;
  &lt;employeeList&gt;
    &lt;employeerostering.employeerostering.Employee&gt;
      &lt;name&gt;John&lt;/name&gt;
      &lt;skills&gt;
        &lt;employeerostering.employeerostering.Skill&gt;
          &lt;name&gt;reading&lt;/name&gt;
        &lt;/employeerostering.employeerostering.Skill&gt;
      &lt;/skills&gt;
    &lt;/employeerostering.employeerostering.Employee&gt;
    &lt;employeerostering.employeerostering.Employee&gt;
      &lt;name&gt;Mary&lt;/name&gt;
      &lt;skills&gt;
        &lt;employeerostering.employeerostering.Skill&gt;
          &lt;name&gt;writing&lt;/name&gt;
        &lt;/employeerostering.employeerostering.Skill&gt;
      &lt;/skills&gt;
    &lt;/employeerostering.employeerostering.Employee&gt;
    &lt;employeerostering.employeerostering.Employee&gt;
      &lt;name&gt;Petr&lt;/name&gt;
      &lt;skills&gt;
        &lt;employeerostering.employeerostering.Skill&gt;
          &lt;name&gt;speaking&lt;/name&gt;
        &lt;/employeerostering.employeerostering.Skill&gt;
      &lt;/skills&gt;
    &lt;/employeerostering.employeerostering.Employee&gt;
  &lt;/employeeList&gt;
  &lt;shiftList&gt;
    &lt;employeerostering.employeerostering.Shift&gt;
      &lt;timeslot&gt;
        &lt;startTime&gt;2017-01-01T00:00:00&lt;/startTime&gt;
        &lt;endTime&gt;2017-01-01T01:00:00&lt;/endTime&gt;
      &lt;/timeslot&gt;
      &lt;requiredSkill reference="../../../employeeList/employeerostering.employeerostering.Employee/skills/employeerostering.employeerostering.Skill"/&gt;
    &lt;/employeerostering.employeerostering.Shift&gt;
    &lt;employeerostering.employeerostering.Shift&gt;
      &lt;timeslot reference="../../employeerostering.employeerostering.Shift/timeslot"/&gt;
      &lt;requiredSkill reference="../../../employeeList/employeerostering.employeerostering.Employee[3]/skills/employeerostering.employeerostering.Skill"/&gt;
    &lt;/employeerostering.employeerostering.Shift&gt;
    &lt;employeerostering.employeerostering.Shift&gt;
      &lt;timeslot reference="../../employeerostering.employeerostering.Shift/timeslot"/&gt;
      &lt;requiredSkill reference="../../../employeeList/employeerostering.employeerostering.Employee[2]/skills/employeerostering.employeerostering.Skill"/&gt;
    &lt;/employeerostering.employeerostering.Shift&gt;
  &lt;/shiftList&gt;
  &lt;skillList&gt;
    &lt;employeerostering.employeerostering.Skill reference="../../employeeList/employeerostering.employeerostering.Employee/skills/employeerostering.employeerostering.Skill"/&gt;
    &lt;employeerostering.employeerostering.Skill reference="../../employeeList/employeerostering.employeerostering.Employee[3]/skills/employeerostering.employeerostering.Skill"/&gt;
    &lt;employeerostering.employeerostering.Skill reference="../../employeeList/employeerostering.employeerostering.Employee[2]/skills/employeerostering.employeerostering.Skill"/&gt;
  &lt;/skillList&gt;
  &lt;timeslotList&gt;
    &lt;employeerostering.employeerostering.Timeslot reference="../../shiftList/employeerostering.employeerostering.Shift/timeslot"/&gt;
  &lt;/timeslotList&gt;
  &lt;dayOffRequestList/&gt;
  &lt;shiftAssignmentList&gt;
    &lt;employeerostering.employeerostering.ShiftAssignment&gt;
      &lt;shift reference="../../../shiftList/employeerostering.employeerostering.Shift"/&gt;
    &lt;/employeerostering.employeerostering.ShiftAssignment&gt;
    &lt;employeerostering.employeerostering.ShiftAssignment&gt;
      &lt;shift reference="../../../shiftList/employeerostering.employeerostering.Shift[3]"/&gt;
    &lt;/employeerostering.employeerostering.ShiftAssignment&gt;
    &lt;employeerostering.employeerostering.ShiftAssignment&gt;
      &lt;shift reference="../../../shiftList/employeerostering.employeerostering.Shift[2]"/&gt;
    &lt;/employeerostering.employeerostering.ShiftAssignment&gt;
  &lt;/shiftAssignmentList&gt;
&lt;/employeerostering.employeerostering.EmployeeRoster&gt;</programlisting>
									</listitem>
								</varlistentry>
							</variablelist>
						</listitem>
						<listitem>
							<simpara>
								Request the best solution to the planning problem:
							</simpara>
							<variablelist>
								<varlistentry>
									<term>GET</term>
									<listitem>
										<simpara>
											<literal>http://localhost:8080/kie-server/services/rest/server/containers/employeerostering_1.0.0-SNAPSHOT/solvers/EmployeeRosteringSolver/bestsolution</literal>
										</simpara>
										<formalpara>
											<title>Example response</title>
											<para>
												
<programlisting language="xml" linenumbering="unnumbered">&lt;solver-instance&gt;
  &lt;container-id&gt;employee-rostering&lt;/container-id&gt;
  &lt;solver-id&gt;solver1&lt;/solver-id&gt;
  &lt;solver-config-file&gt;employeerostering/employeerostering/EmployeeRosteringSolverConfig.solver.xml&lt;/solver-config-file&gt;
  &lt;status&gt;NOT_SOLVING&lt;/status&gt;
  &lt;score scoreClass="org.optaplanner.core.api.score.buildin.hardsoft.HardSoftScore"&gt;0hard/0soft&lt;/score&gt;
  &lt;best-solution class="employeerostering.employeerostering.EmployeeRoster"&gt;
    &lt;employeeList&gt;
      &lt;employeerostering.employeerostering.Employee&gt;
        &lt;name&gt;John&lt;/name&gt;
        &lt;skills&gt;
          &lt;employeerostering.employeerostering.Skill&gt;
            &lt;name&gt;reading&lt;/name&gt;
          &lt;/employeerostering.employeerostering.Skill&gt;
        &lt;/skills&gt;
      &lt;/employeerostering.employeerostering.Employee&gt;
      &lt;employeerostering.employeerostering.Employee&gt;
        &lt;name&gt;Mary&lt;/name&gt;
        &lt;skills&gt;
          &lt;employeerostering.employeerostering.Skill&gt;
            &lt;name&gt;writing&lt;/name&gt;
          &lt;/employeerostering.employeerostering.Skill&gt;
        &lt;/skills&gt;
      &lt;/employeerostering.employeerostering.Employee&gt;
      &lt;employeerostering.employeerostering.Employee&gt;
        &lt;name&gt;Petr&lt;/name&gt;
        &lt;skills&gt;
          &lt;employeerostering.employeerostering.Skill&gt;
            &lt;name&gt;speaking&lt;/name&gt;
          &lt;/employeerostering.employeerostering.Skill&gt;
        &lt;/skills&gt;
      &lt;/employeerostering.employeerostering.Employee&gt;
    &lt;/employeeList&gt;
    &lt;shiftList&gt;
      &lt;employeerostering.employeerostering.Shift&gt;
        &lt;timeslot&gt;
          &lt;startTime&gt;2017-01-01T00:00:00&lt;/startTime&gt;
          &lt;endTime&gt;2017-01-01T01:00:00&lt;/endTime&gt;
        &lt;/timeslot&gt;
        &lt;requiredSkill reference="../../../employeeList/employeerostering.employeerostering.Employee/skills/employeerostering.employeerostering.Skill"/&gt;
      &lt;/employeerostering.employeerostering.Shift&gt;
      &lt;employeerostering.employeerostering.Shift&gt;
        &lt;timeslot reference="../../employeerostering.employeerostering.Shift/timeslot"/&gt;
        &lt;requiredSkill reference="../../../employeeList/employeerostering.employeerostering.Employee[3]/skills/employeerostering.employeerostering.Skill"/&gt;
      &lt;/employeerostering.employeerostering.Shift&gt;
      &lt;employeerostering.employeerostering.Shift&gt;
        &lt;timeslot reference="../../employeerostering.employeerostering.Shift/timeslot"/&gt;
        &lt;requiredSkill reference="../../../employeeList/employeerostering.employeerostering.Employee[2]/skills/employeerostering.employeerostering.Skill"/&gt;
      &lt;/employeerostering.employeerostering.Shift&gt;
    &lt;/shiftList&gt;
    &lt;skillList&gt;
      &lt;employeerostering.employeerostering.Skill reference="../../employeeList/employeerostering.employeerostering.Employee/skills/employeerostering.employeerostering.Skill"/&gt;
      &lt;employeerostering.employeerostering.Skill reference="../../employeeList/employeerostering.employeerostering.Employee[3]/skills/employeerostering.employeerostering.Skill"/&gt;
      &lt;employeerostering.employeerostering.Skill reference="../../employeeList/employeerostering.employeerostering.Employee[2]/skills/employeerostering.employeerostering.Skill"/&gt;
    &lt;/skillList&gt;
    &lt;timeslotList&gt;
      &lt;employeerostering.employeerostering.Timeslot reference="../../shiftList/employeerostering.employeerostering.Shift/timeslot"/&gt;
    &lt;/timeslotList&gt;
    &lt;dayOffRequestList/&gt;
    &lt;shiftAssignmentList/&gt;
    &lt;score&gt;0hard/0soft&lt;/score&gt;
  &lt;/best-solution&gt;
&lt;/solver-instance&gt;</programlisting>
											</para>
										</formalpara>
									</listitem>
								</varlistentry>
							</variablelist>
						</listitem>
					</orderedlist>
				</section>
			</section>
		</chapter>
		<chapter xml:id="cloudbal-tutorial-con">
			<title>Getting started with Java solvers: A cloud balancing example</title>
			<simpara>
				An example demonstrates development of a basic Red Hat Business Optimizer solver using Java code.
			</simpara>
			<simpara>
				Suppose your company owns a number of cloud computers and needs to run a number of processes on those computers. You must assign each process to a computer.
			</simpara>
			<simpara>
				The following hard constraints must be fulfilled:
			</simpara>
			<itemizedlist>
				<listitem>
					<simpara>
						Every computer must be able to handle the minimum hardware requirements of the sum of its processes:
					</simpara>
					<itemizedlist>
						<listitem>
							<simpara>
								<emphasis role="strong">CPU capacity</emphasis>: The CPU power of a computer must be at least the sum of the CPU power required by the processes assigned to that computer.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								<emphasis role="strong">Memory capacity</emphasis>: The RAM memory of a computer must be at least the sum of the RAM memory required by the processes assigned to that computer.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								<emphasis role="strong">Network capacity</emphasis>: The network bandwidth of a computer must be at least the sum of the network bandwidth required by the processes assigned to that computer.
							</simpara>
						</listitem>
					</itemizedlist>
				</listitem>
			</itemizedlist>
			<simpara>
				The following soft constraints should be optimized:
			</simpara>
			<itemizedlist>
				<listitem>
					<simpara>
						Each computer that has one or more processes assigned incurs a maintenance cost (which is fixed per computer).
					</simpara>
					<itemizedlist>
						<listitem>
							<simpara>
								<emphasis role="strong">Cost</emphasis>: Minimize the total maintenance cost.
							</simpara>
						</listitem>
					</itemizedlist>
				</listitem>
			</itemizedlist>
			<simpara>
				This problem is a form of <emphasis>bin packing</emphasis>. In the following simplified example, we assign four processes to two computers with two constraints (CPU and RAM) with a simple algorithm:
			</simpara>
			<informalfigure>
			<mediaobject>
				<imageobject>
					<imagedata align="center" fileref="images/_images/QuickStart/CloudBalancingTutorial/cloudBalanceUseCase.png" format="PNG" />
				</imageobject>
				<textobject>
					<phrase>cloudBalanceUseCase</phrase>
				</textobject>
			</mediaobject>
			</informalfigure>
			<simpara>
				The simple algorithm used here is the <emphasis>First Fit Decreasing</emphasis> algorithm, which assigns the bigger processes first and assigns the smaller processes to the remaining space. As you can see, it is not optimal, as it does not leave enough room to assign the yellow process <literal>D</literal>.
			</simpara>
			<simpara>
				Business Optimizer finds a more optimal solution by using additional, smarter algorithms. It also scales: both in data (more processes, more computers) and constraints (more hardware requirements, other constraints).
			</simpara>
			<simpara>
				The following summary applies to this example, as well as to an advanced implementation with more constraints that is described in <xref linkend="ex-machineReassignment-ref" />:
			</simpara>
			<informalfigure>
			<mediaobject>
				<imageobject>
					<imagedata align="center" fileref="images/_images/shared/cloudOptimizationValueProposition.png" format="PNG" />
				</imageobject>
				<textobject>
					<phrase>cloudOptimizationValueProposition</phrase>
				</textobject>
			</mediaobject>
			</informalfigure>
			<table colsep="1" frame="all" rowsep="1">
				<title>Cloud balancing problem size</title>
				<tgroup cols="4">
					<colspec colname="col_1" colwidth="25*"></colspec>
					<colspec colname="col_2" colwidth="25*"></colspec>
					<colspec colname="col_3" colwidth="25*"></colspec>
					<colspec colname="col_4" colwidth="25*"></colspec>
					<thead>
						<row>
							<entry align="left" valign="top">Problem size</entry>
							<entry align="left" valign="top">Computers</entry>
							<entry align="left" valign="top">Processes</entry>
							<entry align="left" valign="top">Search space</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry align="left" valign="top">
							<simpara>
								2computers-6processes
							</simpara>
							</entry>
							<entry align="left" valign="top">
							<simpara>
								2
							</simpara>
							</entry>
							<entry align="left" valign="top">
							<simpara>
								6
							</simpara>
							</entry>
							<entry align="left" valign="top">
							<simpara>
								64
							</simpara>
							</entry>
						</row>
						<row>
							<entry align="left" valign="top">
							<simpara>
								3computers-9processes
							</simpara>
							</entry>
							<entry align="left" valign="top">
							<simpara>
								3
							</simpara>
							</entry>
							<entry align="left" valign="top">
							<simpara>
								9
							</simpara>
							</entry>
							<entry align="left" valign="top">
							<simpara>
								10^4
							</simpara>
							</entry>
						</row>
						<row>
							<entry align="left" valign="top">
							<simpara>
								4computers-012processes
							</simpara>
							</entry>
							<entry align="left" valign="top">
							<simpara>
								4
							</simpara>
							</entry>
							<entry align="left" valign="top">
							<simpara>
								12
							</simpara>
							</entry>
							<entry align="left" valign="top">
							<simpara>
								10^7
							</simpara>
							</entry>
						</row>
						<row>
							<entry align="left" valign="top">
							<simpara>
								100computers-300processes
							</simpara>
							</entry>
							<entry align="left" valign="top">
							<simpara>
								100
							</simpara>
							</entry>
							<entry align="left" valign="top">
							<simpara>
								300
							</simpara>
							</entry>
							<entry align="left" valign="top">
							<simpara>
								10^600
							</simpara>
							</entry>
						</row>
						<row>
							<entry align="left" valign="top">
							<simpara>
								200computers-600processes
							</simpara>
							</entry>
							<entry align="left" valign="top">
							<simpara>
								200
							</simpara>
							</entry>
							<entry align="left" valign="top">
							<simpara>
								600
							</simpara>
							</entry>
							<entry align="left" valign="top">
							<simpara>
								10^1380
							</simpara>
							</entry>
						</row>
						<row>
							<entry align="left" valign="top">
							<simpara>
								400computers-1200processes
							</simpara>
							</entry>
							<entry align="left" valign="top">
							<simpara>
								400
							</simpara>
							</entry>
							<entry align="left" valign="top">
							<simpara>
								1200
							</simpara>
							</entry>
							<entry align="left" valign="top">
							<simpara>
								10^3122
							</simpara>
							</entry>
						</row>
						<row>
							<entry align="left" valign="top">
							<simpara>
								800computers-2400processes
							</simpara>
							</entry>
							<entry align="left" valign="top">
							<simpara>
								800
							</simpara>
							</entry>
							<entry align="left" valign="top">
							<simpara>
								2400
							</simpara>
							</entry>
							<entry align="left" valign="top">
							<simpara>
								10^6967
							</simpara>
							</entry>
						</row>
					</tbody>
				</tgroup>
			</table>
			<section xml:id="domainmodel-con">
				<title>Domain Model Design</title>
				<simpara>
					Using a <emphasis>domain model</emphasis> helps determine which classes are planning entities and which of their properties are planning variables. It also helps to simplify constraints, improve performance, and increase flexibility for future needs.
				</simpara>
				<section xml:id="cloudbal-domainmodel-proc">
					<title>Designing a domain model</title>
					<simpara>
						To create a domain model, define all the objects that represent the input data for the problem. In this example, the objects are processes and computers.
					</simpara>
					<simpara>
						A separate object in the domain model must represent a full data set of the problem, which contains the input data as well as a solution. In this example, this object holds a list of computers and a list of processes. Each process is assigned to a computer; the distribution of processes between computers is the solution.
					</simpara>
					<orderedlist numeration="arabic">
						<title>Procedure</title>
						<listitem>
							<simpara>
								Draw a class diagram of your domain model.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Normalize it to remove duplicate data.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Write down some <emphasis>sample instances</emphasis> for each class. Sample instances are entity properties that are relevant for planning purposes.
							</simpara>
							<itemizedlist>
								<listitem>
									<simpara>
										<literal>Computer</literal>: Represents a computer with certain hardware and maintenance costs.
									</simpara>
									<simpara>
										In this example, the sample instances for the <literal>Computer</literal> class are <literal>cpuPower</literal>, <literal>memory</literal>, <literal>networkBandwidth</literal>, <literal>cost</literal>.
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										<literal>Process</literal>: Represents a process with a demand. Needs to be assigned to a <literal>Computer</literal> by Planner.
									</simpara>
									<simpara>
										Sample instances for <literal>Process</literal> are <literal>requiredCpuPower</literal>, <literal>requiredMemory</literal>, and <literal>requiredNetworkBandwidth</literal>.
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										<literal>CloudBalance</literal>: Represents the distribution of processes between computers. Contains every <literal>Computer</literal> and <literal>Process</literal> for a certain data set.
									</simpara>
									<simpara>
										For an object representing the full data set and solution, a sample instance holding the <emphasis>score</emphasis> must be present. Business Optimizer can calculate and compare the scores for different solutions; the solution with the highest score is the optimal solution. Therefore, the sample instance for <literal>CloudBalance</literal> is <literal>score</literal>.
									</simpara>
								</listitem>
							</itemizedlist>
						</listitem>
						<listitem>
							<simpara>
								Determine which relationships (or fields) change during planning:
							</simpara>
							<itemizedlist>
								<listitem>
									<simpara>
										<emphasis>Planning entity</emphasis>: The class (or classes) that Business Optimizer can change during solving. In this example, it is the class <literal>Process</literal>, because we can move processes to different computers.
									</simpara>
									<itemizedlist>
										<listitem>
											<simpara>
												A class representing input data that Business Optimizer can not change is known as a <emphasis>problem fact</emphasis>.
											</simpara>
										</listitem>
									</itemizedlist>
								</listitem>
								<listitem>
									<simpara>
										<emphasis>Planning variable</emphasis>: The property (or properties) of a planning entity class that changes during solving. In this example, it is the property <literal>computer</literal> on the class <literal>Process</literal>.
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										<emphasis>Planning solution</emphasis>: The class that represents a solution to the problem. This class must represent the full data set and contain all planning entities. In this example that is the class <literal>CloudBalance</literal>.
									</simpara>
								</listitem>
							</itemizedlist>
						</listitem>
					</orderedlist>
					<simpara>
						In the UML class diagram below, the Business Optimizer concepts are already annotated:
					</simpara>
					<informalfigure>
					<mediaobject>
						<imageobject>
							<imagedata align="center" fileref="images/_images/QuickStart/CloudBalancingDomainModel/cloudBalanceClassDiagram.png" format="PNG" />
						</imageobject>
						<textobject>
							<phrase>cloudBalanceClassDiagram</phrase>
						</textobject>
					</mediaobject>
					</informalfigure>
					<simpara>
						You can find the class definitions for this example in the <literal>examples/sources/src/main/java/org/optaplanner/examples/cloudbalancing/domain</literal> directory.
					</simpara>
				</section>
				<section xml:id="cloudbal-class-computer-ref">
					<title>The <literal>Computer</literal> Class</title>
					<simpara>
						The <literal>Computer</literal> class is a Java object that stores data, sometimes known as a POJO (Plain Old Java Object). Usually, you will have more of this kind of classes with input data.
					</simpara>
					<example>
						<title>CloudComputer.java</title>
						
<programlisting language="java" linenumbering="unnumbered">public class CloudComputer ... {

    private int cpuPower;
    private int memory;
    private int networkBandwidth;
    private int cost;

    ... // getters
}</programlisting>
					</example>
				</section>
				<section xml:id="cloudbal-class-process-ref">
					<title>The <literal>Process</literal> Class</title>
					<simpara>
						The <literal>Process</literal> class is the class that is modified during solving.
					</simpara>
					<simpara>
						We need to tell Business Optimizer that it can change the property <literal>computer</literal>. To do this, annotate the class with <literal>@PlanningEntity</literal> and annotate the <literal>getComputer()</literal> getter with <literal>@PlanningVariable</literal>.
					</simpara>
					<simpara>
						Of course, the property <literal>computer</literal> needs a setter too, so Business Optimizer can change it during solving.
					</simpara>
					<example>
						<title>CloudProcess.java</title>
						
<programlisting language="java" linenumbering="unnumbered">@PlanningEntity(...)
public class CloudProcess ... {

    private int requiredCpuPower;
    private int requiredMemory;
    private int requiredNetworkBandwidth;

    private CloudComputer computer;

    ... // getters

    @PlanningVariable(valueRangeProviderRefs = {"computerRange"})
    public CloudComputer getComputer() {
        return computer;
    }

    public void setComputer(CloudComputer computer) {
        computer = computer;
    }

    // ************************************************************************
    // Complex methods
    // ************************************************************************

    ...

}</programlisting>
					</example>
					<simpara>
						Business Optimizer needs to know which values it can choose from to assign to the property <literal>computer</literal>. Those values are retrieved from the method <literal>CloudBalance.getComputerList()</literal> on the planning solution, which returns a list of all computers in the current data set.
					</simpara>
					<simpara>
						The <literal>@PlanningVariable</literal>'s <literal>valueRangeProviderRefs</literal> parameter on <literal>CloudProcess.getComputer()</literal> needs to match with the <literal>@ValueRangeProvider</literal>'s <literal>id</literal> on <literal>CloudBalance.getComputerList()</literal>.
					</simpara>
					<note>
						<simpara>
							You can also use annotations on fields instead of getters.
						</simpara>
					</note>
				</section>
				<section xml:id="cloudbal-class-cloudbalance-ref">
					<title>The <literal>CloudBalance</literal> Class</title>
					<simpara>
						The <literal>CloudBalance</literal> class has a <emphasis><phrase role="path">@PlanningSolution</phrase></emphasis> annotation.
					</simpara>
					<simpara>
						This class holds a list of all computers and processes. It represents both the planning problem and (if it is initialized) the planning solution.
					</simpara>
					<simpara>
						The <literal>CloudBalance</literal> class has the following key attributes:
					</simpara>
					<itemizedlist>
						<listitem>
							<simpara>
								It holds a collection of processes that Business Optimizer can change. We annotate the getter <literal>getProcessList()</literal> with <literal>@PlanningEntityCollectionProperty</literal>, so that Business Optimizer can retrieve the processes that it can change. To save a solution, Business Optimizer initializes a new instance of the class with the list of changed processes.
							</simpara>
							<orderedlist numeration="arabic">
								<listitem>
									<simpara>
										It also has a <literal>@PlanningScore</literal> annotated property <literal>score</literal>, which is the <literal>Score</literal> of that solution in its current state. Business Optimizer automatically updates it when it calculates a <literal>Score</literal> for a solution instance; therefore, this property needs a setter.
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										Especially for score calculation with Drools, the property <literal>computerList</literal> needs to be annotated with a <literal>@ProblemFactCollectionProperty</literal> so that Business Optimizer can retrieve a list of computers (problem facts) and make it available to the decision engine.
									</simpara>
								</listitem>
							</orderedlist>
						</listitem>
					</itemizedlist>
					<example>
						<title>CloudBalance.java</title>
						
<programlisting language="java" linenumbering="unnumbered">@PlanningSolution
public class CloudBalance ... {

    private List&lt;CloudComputer&gt; computerList;

    private List&lt;CloudProcess&gt; processList;

    private HardSoftScore score;

    @ValueRangeProvider(id = "computerRange")
    @ProblemFactCollectionProperty
    public List&lt;CloudComputer&gt; getComputerList() {
        return computerList;
    }

    @PlanningEntityCollectionProperty
    public List&lt;CloudProcess&gt; getProcessList() {
        return processList;
    }

    @PlanningScore
    public HardSoftScore getScore() {
        return score;
    }

    public void setScore(HardSoftScore score) {
        this.score = score;
    }

    ...
}</programlisting>
					</example>
				</section>
			</section>
			<section xml:id="cloudbal-helloworld-proc">
				<title>Running the Cloud Balancing Hello World</title>
				<simpara>
					You can run a sample "hello world" application to demonstrate the solver.
				</simpara>
				<orderedlist numeration="arabic">
					<title>Procedure</title>
					<listitem>
						<simpara>
							Download and configure the examples in your preferred IDE. For instructions on downloading and configuring examples in an IDE, see <xref linkend="optimizer-running-the-examples-in-an-IDE-proc" />.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Create a run configuration with the following main class: <literal>org.optaplanner.examples.cloudbalancing.app.CloudBalancingHelloWorld</literal>
						</simpara>
						<simpara>
							By default, the Cloud Balancing Hello World is configured to run for 120 seconds.
						</simpara>
					</listitem>
				</orderedlist>
				<formalpara>
					<title>Result</title>
					<para>
						The application executes the following code:
					</para>
				</formalpara>
				<example>
					<title>CloudBalancingHelloWorld.java</title>
					
<programlisting language="java" linenumbering="unnumbered">public class CloudBalancingHelloWorld {

    public static void main(String[] args) {
        // Build the Solver
        SolverFactory&lt;CloudBalance&gt; solverFactory = SolverFactory.createFromXmlResource("org/optaplanner/examples/cloudbalancing/solver/cloudBalancingSolverConfig.xml");
        Solver&lt;CloudBalance&gt; solver = solverFactory.buildSolver();

        // Load a problem with 400 computers and 1200 processes
        CloudBalance unsolvedCloudBalance = new CloudBalancingGenerator().createCloudBalance(400, 1200);

        // Solve the problem
        CloudBalance solvedCloudBalance = solver.solve(unsolvedCloudBalance);

        // Display the result
        System.out.println("\nSolved cloudBalance with 400 computers and 1200 processes:\n" + toDisplayString(solvedCloudBalance));
    }

    ...
}</programlisting>
				</example>
				<simpara>
					The code example does the following:
				</simpara>
				<orderedlist numeration="arabic">
					<listitem>
						<simpara>
							Build the <literal>Solver</literal> based on a solver configuration (in this case an XML file, <literal>cloudBalancingSolverConfig.xml</literal>, from the classpath).
						</simpara>
						<simpara>
							Building the <literal>Solver</literal> is the most complicated part of this procedure. For more details, see <xref linkend="cloudbal-solver-configuraton-ref" />.
						</simpara>
						
<programlisting language="java" linenumbering="unnumbered">        SolverFactory&lt;CloudBalance&gt; solverFactory = SolverFactory.createFromXmlResource(
                "org/optaplanner/examples/cloudbalancing/solver/cloudBalancingSolverConfig.xml");
        Solver solver&lt;CloudBalance&gt; = solverFactory.buildSolver();</programlisting>
					</listitem>
					<listitem>
						<simpara>
							Load the problem.
						</simpara>
						<simpara>
							<literal>CloudBalancingGenerator</literal> generates a random problem: you will replace this with a class that loads a real problem, for example from a database.
						</simpara>
						
<programlisting language="java" linenumbering="unnumbered">        CloudBalance unsolvedCloudBalance = new CloudBalancingGenerator().createCloudBalance(400, 1200);</programlisting>
					</listitem>
					<listitem>
						<simpara>
							Solve the problem.
						</simpara>
						
<programlisting language="java" linenumbering="unnumbered">        CloudBalance solvedCloudBalance = solver.solve(unsolvedCloudBalance);</programlisting>
					</listitem>
					<listitem>
						<simpara>
							Display the result.
						</simpara>
						
<programlisting language="java" linenumbering="unnumbered">        System.out.println("\nSolved cloudBalance with 400 computers and 1200 processes:\n"
                + toDisplayString(solvedCloudBalance));</programlisting>
					</listitem>
				</orderedlist>
			</section>
			<section xml:id="cloudbal-solver-configuraton-ref">
				<title>Solver Configuration</title>
				<simpara>
					The solver configuration file determines how the solving process works; it is considered a part of the code. The file is named <literal>examples/sources/src/main/resources/org/optaplanner/examples/cloudbalancing/solver/cloudBalancingSolverConfig.xml</literal>.
				</simpara>
				<example>
					<title>cloudBalancingSolverConfig.xml</title>
					
<programlisting language="xml" linenumbering="unnumbered">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;solver&gt;
  &lt;!-- Domain model configuration --&gt;
  &lt;scanAnnotatedClasses/&gt;

  &lt;!-- Score configuration --&gt;
  &lt;scoreDirectorFactory&gt;
    &lt;easyScoreCalculatorClass&gt;org.optaplanner.examples.cloudbalancing.optional.score.CloudBalancingEasyScoreCalculator&lt;/easyScoreCalculatorClass&gt;
    &lt;!--&lt;scoreDrl&gt;org/optaplanner/examples/cloudbalancing/solver/cloudBalancingScoreRules.drl&lt;/scoreDrl&gt;--&gt;
  &lt;/scoreDirectorFactory&gt;

  &lt;!-- Optimization algorithms configuration --&gt;
  &lt;termination&gt;
    &lt;secondsSpentLimit&gt;30&lt;/secondsSpentLimit&gt;
  &lt;/termination&gt;
&lt;/solver&gt;</programlisting>
				</example>
				<simpara>
					This solver configuration consists of three parts:
				</simpara>
				<orderedlist numeration="arabic">
					<listitem>
						<simpara>
							<emphasis role="strong">Domain model configuration</emphasis>: <emphasis>What can Business Optimizer change?</emphasis>
						</simpara>
						<simpara>
							We need to make Business Optimizer aware of our domain classes. In this configuration, it will automatically scan all classes in your classpath (for a <literal>@PlanningEntity</literal> or <literal>@PlanningSolution</literal> annotation):
						</simpara>
						
<programlisting language="xml" linenumbering="unnumbered">  &lt;scanAnnotatedClasses/&gt;</programlisting>
					</listitem>
					<listitem>
						<simpara>
							<emphasis role="strong">Score configuration</emphasis>: <emphasis>How should Business Optimizer optimize the planning variables? What is our goal?</emphasis>
						</simpara>
						<simpara>
							Since we have hard and soft constraints, we use a <literal>HardSoftScore</literal>. But we need to tell Business Optimizer how to calculate the score, depending on our business requirements. Further down, we will look into two alternatives to calculate the score: using a basic Java implementation and using Drools DRL.
						</simpara>
						
<programlisting language="xml" linenumbering="unnumbered">  &lt;scoreDirectorFactory&gt;
    &lt;easyScoreCalculatorClass&gt;org.optaplanner.examples.cloudbalancing.optional.score.CloudBalancingEasyScoreCalculator&lt;/easyScoreCalculatorClass&gt;
    &lt;!--&lt;scoreDrl&gt;org/optaplanner/examples/cloudbalancing/solver/cloudBalancingScoreRules.drl&lt;/scoreDrl&gt;--&gt;
  &lt;/scoreDirectorFactory&gt;</programlisting>
					</listitem>
					<listitem>
						<simpara>
							<emphasis role="strong">Optimization algorithms configuration</emphasis>: <emphasis>How should Business Optimizer optimize it?</emphasis> In this case, we use the default optimization algorithms (because no explicit optimization algorithms are configured) for 30 seconds:
						</simpara>
						
<programlisting language="xml" linenumbering="unnumbered">  &lt;termination&gt;
    &lt;secondsSpentLimit&gt;30&lt;/secondsSpentLimit&gt;
  &lt;/termination&gt;</programlisting>
						<simpara>
							Business Optimizer should get a good result in seconds (and even in less than 15 milliseconds if the real-time planning feature is used), but the more time it has, the better the result will be. Advanced use cases might use different termination criteria than a hard time limit.
						</simpara>
						<simpara>
							The default algorithms will already easily surpass human planners and most in-house implementations. You can use the advanced Benchmarker feature to power tweak to get even better results.
						</simpara>
					</listitem>
				</orderedlist>
			</section>
			<section xml:id="cloudbal-score-con">
				<title>Score Configuration</title>
				<simpara>
					Business Optimizer will search for the <literal>Solution</literal> with the highest <literal>Score</literal>. This example uses a <literal>HardSoftScore</literal>, which means Business Optimizer will look for the solution with no hard constraints broken (fulfill hardware requirements) and as little as possible soft constraints broken (minimize maintenance cost).
				</simpara>
				<informalfigure>
				<mediaobject>
					<imageobject>
						<imagedata align="center" fileref="images/_images/QuickStart/CloudBalancingScoreConfiguration/scoreComparisonCloudBalancing.png" format="PNG" />
					</imageobject>
					<textobject>
						<phrase>scoreComparisonCloudBalancing</phrase>
					</textobject>
				</mediaobject>
				</informalfigure>
				<simpara>
					Of course, Business Optimizer needs to be told about these domain-specific score constraints. You can define constraints using the Java or Drools languages.
				</simpara>
				<section xml:id="cloudbal-score-java-proc">
					<title>Configuring score calculation using Java</title>
					<simpara>
						One way to define a score function is to implement the interface <literal>EasyScoreCalculator</literal> in plain Java.
					</simpara>
					<orderedlist numeration="arabic">
						<title>Procedure</title>
						<listitem>
							<simpara>
								In the <literal>cloudBalancingSolverConfig.xml</literal> file, add or uncomment the setting:
							</simpara>
							
<programlisting language="xml" linenumbering="unnumbered">  &lt;scoreDirectorFactory&gt;
    &lt;easyScoreCalculatorClass&gt;org.optaplanner.examples.cloudbalancing.optional.score.CloudBalancingEasyScoreCalculator&lt;/easyScoreCalculatorClass&gt;
  &lt;/scoreDirectorFactory&gt;</programlisting>
						</listitem>
						<listitem>
							<simpara>
								Implement the <literal>calculateScore(Solution)</literal> method to return a <literal>HardSoftScore</literal> instance.
							</simpara>
							<example>
								<title>CloudBalancingEasyScoreCalculator.java</title>
								
<programlisting language="java" linenumbering="unnumbered">public class CloudBalancingEasyScoreCalculator implements EasyScoreCalculator&lt;CloudBalance&gt; {

    /**
     * A very simple implementation. The double loop can easily be removed by using Maps as shown in
     * {@link CloudBalancingMapBasedEasyScoreCalculator#calculateScore(CloudBalance)}.
     */
    public HardSoftScore calculateScore(CloudBalance cloudBalance) {
        int hardScore = 0;
        int softScore = 0;
        for (CloudComputer computer : cloudBalance.getComputerList()) {
            int cpuPowerUsage = 0;
            int memoryUsage = 0;
            int networkBandwidthUsage = 0;
            boolean used = false;

            // Calculate usage
            for (CloudProcess process : cloudBalance.getProcessList()) {
                if (computer.equals(process.getComputer())) {
                    cpuPowerUsage += process.getRequiredCpuPower();
                    memoryUsage += process.getRequiredMemory();
                    networkBandwidthUsage += process.getRequiredNetworkBandwidth();
                    used = true;
                }
            }

            // Hard constraints
            int cpuPowerAvailable = computer.getCpuPower() - cpuPowerUsage;
            if (cpuPowerAvailable &lt; 0) {
                hardScore += cpuPowerAvailable;
            }
            int memoryAvailable = computer.getMemory() - memoryUsage;
            if (memoryAvailable &lt; 0) {
                hardScore += memoryAvailable;
            }
            int networkBandwidthAvailable = computer.getNetworkBandwidth() - networkBandwidthUsage;
            if (networkBandwidthAvailable &lt; 0) {
                hardScore += networkBandwidthAvailable;
            }

            // Soft constraints
            if (used) {
                softScore -= computer.getCost();
            }
        }
        return HardSoftScore.valueOf(hardScore, softScore);
    }

}</programlisting>
							</example>
						</listitem>
					</orderedlist>
					<simpara>
						Even if we optimize the code above to use <literal>Map</literal>s to iterate through the <literal>processList</literal> only once, <emphasis>it is still slow</emphasis> because it does not do incremental score calculation.
					</simpara>
					<simpara>
						To fix that, either use incremental Java score calculation or Drools score calculation. Incremental Java score calculation is not covered in this guide.
					</simpara>
				</section>
				<section xml:id="cloudbal-score-drools-proc">
					<title>Configuring score calculation using Drools</title>
					<simpara>
						You can use Drools rule language (DRL) to define constraints. Drools score calculation uses incremental calculation, where every score constraint is written as one or more score rules.
					</simpara>
					<simpara>
						Using the decision engine for score calculation enables you to integrate with other Drools technologies, such as decision tables (XLS or web based), Business Central, and other supported features.
					</simpara>
					<orderedlist numeration="arabic">
						<title>Procedure</title>
						<listitem>
							<simpara>
								Add a <literal>scoreDrl</literal> resource in the classpath to use the decision engine as a score function. In the <literal>cloudBalancingSolverConfig.xml</literal> file, add or uncomment the setting:
							</simpara>
							
<programlisting language="xml" linenumbering="unnumbered">  &lt;scoreDirectorFactory&gt;
    &lt;scoreDrl&gt;org/optaplanner/examples/cloudbalancing/solver/cloudBalancingScoreRules.drl&lt;/scoreDrl&gt;
  &lt;/scoreDirectorFactory&gt;</programlisting>
						</listitem>
						<listitem>
							<simpara>
								Create the hard constraints. These constraints ensure that all computers have enough CPU, RAM and network bandwidth to support all their processes:
							</simpara>
							<example>
								<title>cloudBalancingScoreRules.drl - Hard Constraints</title>
								
<screen>...

import org.optaplanner.examples.cloudbalancing.domain.CloudBalance;
import org.optaplanner.examples.cloudbalancing.domain.CloudComputer;
import org.optaplanner.examples.cloudbalancing.domain.CloudProcess;

global HardSoftScoreHolder scoreHolder;

// ############################################################################
// Hard constraints
// ############################################################################

rule "requiredCpuPowerTotal"
    when
        $computer : CloudComputer($cpuPower : cpuPower)
        accumulate(
            CloudProcess(
                computer == $computer,
                $requiredCpuPower : requiredCpuPower);
            $requiredCpuPowerTotal : sum($requiredCpuPower);
            $requiredCpuPowerTotal &gt; $cpuPower
        )
    then
        scoreHolder.addHardConstraintMatch(kcontext, $cpuPower - $requiredCpuPowerTotal);
end

rule "requiredMemoryTotal"
    ...
end

rule "requiredNetworkBandwidthTotal"
    ...
end</screen>
							</example>
						</listitem>
						<listitem>
							<simpara>
								Create a soft constraint. This constraint minimizes the maintenance cost. It is applied only if hard constraints are met:
							</simpara>
							<example>
								<title>cloudBalancingScoreRules.drl - Soft Constraints</title>
								
<screen>// ############################################################################
// Soft constraints
// ############################################################################

rule "computerCost"
    when
        $computer : CloudComputer($cost : cost)
        exists CloudProcess(computer == $computer)
    then
        scoreHolder.addSoftConstraintMatch(kcontext, - $cost);
end</screen>
							</example>
						</listitem>
					</orderedlist>
				</section>
			</section>
			<section xml:id="cloudbal-further-con">
				<title>Further development of the solver</title>
				<simpara>
					Now that this example works, you can try developing it further. For example, you can enrich the domain model and add extra constraints such as these:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							Each <literal>Process</literal> belongs to a <literal>Service</literal>. A computer might crash, so processes running the same service should (or must) be assigned to different computers.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Each <literal>Computer</literal> is located in a <literal>Building</literal>. A building might burn down, so processes of the same services should (or must) be assigned to computers in different buildings.
						</simpara>
					</listitem>
				</itemizedlist>
			</section>
		</chapter>
		<chapter xml:id="examples-con">
			<title>Examples provided with Red Hat Business Optimizer</title>
			<simpara>
				Several Red Hat Business Optimizer examples are shipped with Red Hat Process Automation Manager. You can review the code for examples and modify it as necessary to suit your needs.
			</simpara>
			<note>
				<simpara>
					Red Hat does not provide support for the example code included in the Red Hat Process Automation Manager distribution.
				</simpara>
			</note>
			<section xml:id="examples-download-run-con">
				<title>Downloading and running the examples</title>
				<simpara>
					You can download the Red Hat Business Optimizer examples from the Red Hat Software Downloads website and run them.
				</simpara>
				<section xml:id="examples-download-proc">
					<title>Downloading Red Hat Business Optimizer examples</title>
					<simpara>
						You can download the examples as a part of the Red Hat Process Automation Manager add-ons package.
					</simpara>
					<orderedlist numeration="arabic">
						<title>Procedure</title>
						<listitem>
							<simpara>
								Download the <literal>rhpam-7.10.0-add-ons.zip</literal> file from the <link xlink:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?downloadType=distributions&amp;product=rhpam&amp;productChanged=yes">Software Downloads</link> page.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Decompress the file.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Decompress the <literal>rhpam-7.10-planner-engine.zip</literal> file from the decompressed directory.
							</simpara>
						</listitem>
					</orderedlist>
					<formalpara>
						<title>Result</title>
						<para>
							In the decompressed <literal>rhpam-7.10-planner-engine</literal> directory, you can find example source code under the following subdirectories: * <literal>examples/sources/src/main/java/org/optaplanner/examples</literal> * <literal>examples/sources/src/main/resources/org/optaplanner/examples</literal> * <literal>webexamples/sources/src/main/java/org/optaplanner/examples</literal> * <literal>webexamples/sources/src/main/resources/org/optaplanner/examples</literal>
						</para>
					</formalpara>
					<simpara>
						The table of examples in <xref linkend="examples-table-ref" /> lists directory names that are used for individual examples.
					</simpara>
				</section>
				<section xml:id="optimizer-running-the-examples-proc">
					<title>Running Business Optimizer examples</title>
					<simpara>
						Red Hat Business Optimizer includes a number of examples to demonstrate a variety of use cases.
					</simpara>
					<itemizedlist>
						<title>Prerequisites</title>
						<listitem>
							<simpara>
								You have downloaded and decompressed the examples. For instructions about these actions, see <xref linkend="examples-download-proc" />.
							</simpara>
						</listitem>
					</itemizedlist>
					<orderedlist numeration="arabic">
						<title>Procedure</title>
						<listitem>
							<simpara>
								In the <literal>rhpam-7.10.0-planner-engine</literal> folder, open the <literal>examples</literal> directory and use the appropriate script to run the examples:
							</simpara>
							<simpara>
								Linux or Mac:
							</simpara>
							
<screen>$ cd examples
$ ./runExamples.sh</screen>
							<simpara>
								Windows:
							</simpara>
							
<screen>$ cd examples
$ runExamples.bat</screen>
						</listitem>
					</orderedlist>
					<simpara>
						Select and run an example from the GUI application window:
					</simpara>
					<informalfigure>
					<mediaobject>
						<imageobject>
							<imagedata fileref="images/_images/PlannerIntroduction/DownloadAndRunTheExamples/plannerExamplesAppScreenshot.png" format="PNG" />
						</imageobject>
						<textobject>
							<phrase>plannerExamplesAppScreenshot</phrase>
						</textobject>
					</mediaobject>
					</informalfigure>
					<note>
						<simpara>
							Red Hat Business Optimizer itself has no GUI dependencies. It runs just as well on a server or a mobile JVM as it does on the desktop.
						</simpara>
					</note>
				</section>
				<section xml:id="optimizer-running-the-examples-in-an-IDE-proc">
					<title>Running the Red Hat Business Optimizer examples in an IDE (IntelliJ, Eclipse, or Netbeans)</title>
					<simpara>
						If you use an integrated development environment (IDE), such as IntelliJ, Eclipse, or Netbeans, you can run your downloaded Red Hat Business Optimizer examples within your development environment.
					</simpara>
					<itemizedlist>
						<title>Prerequisites</title>
						<listitem>
							<simpara>
								You have downloaded and extracted the examples. For instructions about these actions, see <xref linkend="examples-download-proc" />.
							</simpara>
						</listitem>
					</itemizedlist>
					<orderedlist numeration="arabic">
						<title>Procedure</title>
						<listitem>
							<simpara>
								Open the Red Hat Business Optimizer examples as a new project:
							</simpara>
							<orderedlist numeration="loweralpha">
								<listitem>
									<simpara>
										For IntelliJ or Netbeans, open <literal>examples/sources/pom.xml</literal> as the new project. The Maven integration guides you through the rest of the installation; skip the rest of the steps in this procedure.
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										For Eclipse, open a new project for the directory <literal>examples/sources</literal>.
									</simpara>
								</listitem>
							</orderedlist>
						</listitem>
						<listitem>
							<simpara>
								Add all the JARs to the classpath from the directory <literal>binaries</literal> and the directory <literal>examples/binaries</literal> , except for the <literal>examples/binaries/optaplanner-examples-*.jar</literal> file.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Add the Java source directory <literal>src/main/java</literal> and the Java resources directory <literal>src/main/resources</literal>.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Create a run configuration:
							</simpara>
							<itemizedlist>
								<listitem>
									<simpara>
										Main class: <literal>org.optaplanner.examples.app.OptaPlannerExamplesApp</literal>
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										VM parameters (optional): <literal>-Xmx512M -server -Dorg.optaplanner.examples.dataDir=examples/sources/data</literal>
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										Working directory: <literal>examples/sources</literal>
									</simpara>
								</listitem>
							</itemizedlist>
						</listitem>
						<listitem>
							<simpara>
								Run the run configuration.
							</simpara>
						</listitem>
					</orderedlist>
				</section>
				<section xml:id="optimizer-running-webexamples-proc">
					<title>Running the web examples</title>
					<simpara>
						Besides the GUI examples, Red Hat Process Automation Manager also includes a set of web examples for Red Hat Business Optimizer. The web examples include:
					</simpara>
					<itemizedlist>
						<listitem>
							<simpara>
								Vehicle routing: Calculating the shortest possible route to pick up all items required for a number of different customers using either <link xlink:href="http://leafletjs.com/">Leaflet</link> or <link xlink:href="http://google.com/maps">Google Maps</link> visualizations.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Cloud balancing: Assigning processes across computers with different specifications and costs.
							</simpara>
						</listitem>
					</itemizedlist>
					<itemizedlist>
						<title>Prerequisites</title>
						<listitem>
							<simpara>
								You have downloaded and extracted the Red Hat Business Optimizer examples from the Red Hat Process Automation Manager add-ons package. For instructions, see <xref linkend="examples-download-proc" />.
							</simpara>
						</listitem>
					</itemizedlist>
					<simpara>
						The web examples require several JEE APIs to run, such as the following APIs:
					</simpara>
					<itemizedlist>
						<listitem>
							<simpara>
								Servlet
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								JAX-RS
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								CDI
							</simpara>
						</listitem>
					</itemizedlist>
					<simpara>
						These APIs are not required for Business Optimizer itself.
					</simpara>
					<orderedlist numeration="arabic">
						<title>Procedure</title>
						<listitem>
							<simpara>
								Download a JEE application server, such as JBoss EAP or <link xlink:href="http://www.wildfly.org/">WildFly</link> and unzip it.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								In the decompressed <literal>rhpam-7.10.0-planner-engine</literal> directory, open the subdirectory <literal>webexamples/binaries</literal> and deploy the <literal>optaplanner-webexamples-*.war</literal> file on the JEE application server.
							</simpara>
							<simpara>
								If using JBoss EAP in standalone mode, this can be done by adding the <literal>optaplanner-webexamples-*.war</literal> file to the <literal>JBOSS_home/standalone/deployments</literal> folder.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Open the following address in a web browser: http://localhost:8080/optaplanner-webexamples/.
							</simpara>
						</listitem>
					</orderedlist>
				</section>
			</section>
			<section xml:id="examples-table-ref">
				<title>Table of Business Optimizer examples</title>
				<simpara>
					Some of the Business Optimizer examples solve problems that are presented in academic contests. The <literal>Contest</literal> column in the following table lists the contests. It also identifies an example as being either <emphasis>realistic</emphasis> or <emphasis>unrealistic</emphasis> for the purpose of a contest. A <emphasis>realistic contest</emphasis> is <emphasis>an official, independent contest</emphasis>:
				</simpara>
				<simpara>
					A <emphasis>realistic contest</emphasis> is an official, independent contest that meets the following standards:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							Clearly defined real-world use cases
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Real-world constraints
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Multiple real-world datasets
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Reproducible results within a specific time limit on specific hardware
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Serious participation from the academic and/or enterprise Operations Research community.
						</simpara>
					</listitem>
				</itemizedlist>
				<simpara>
					Realistic contests provide an objective comparison of Business Optimizer with competitive software and academic research.
				</simpara>
				<table colsep="1" frame="all" rowsep="1">
					<title>Examples overview</title>
					<tgroup cols="5">
						<colspec colname="col_1" colwidth="13*"></colspec>
						<colspec colname="col_2" colwidth="25*"></colspec>
						<colspec colname="col_3" colwidth="25*"></colspec>
						<colspec colname="col_4" colwidth="13*"></colspec>
						<colspec colname="col_5" colwidth="25*"></colspec>
						<thead>
							<row>
								<entry align="left" valign="top">Example</entry>
								<entry align="left" valign="top">Domain</entry>
								<entry align="left" valign="top">Size</entry>
								<entry align="left" valign="top">Contest</entry>
								<entry align="left" valign="top">Directory name</entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry align="left" valign="top">
								<simpara>
									<link linkend="ex-nQueens-ref">N queens</link>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									1 entity class
								</simpara>
								<simpara>
									(1 variable)
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									Entity ⇐ <literal>256</literal>
								</simpara>
								<simpara>
									Value ⇐ <literal>256</literal>
								</simpara>
								<simpara>
									Search space ⇐ <literal>10^616</literal>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									Pointless (cheatable)
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									<literal>nqueens</literal>
								</simpara>
								</entry>
							</row>
							<row>
								<entry align="left" valign="top">
								<simpara>
									<link linkend="ex-cloudBalancing-ref">Cloud balancing</link>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									1 entity class
								</simpara>
								<simpara>
									(1 variable)
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									Entity ⇐ <literal>2400</literal>
								</simpara>
								<simpara>
									Value ⇐ <literal>800</literal>
								</simpara>
								<simpara>
									Search space ⇐ <literal>10^6967</literal>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									No (Defined by us)
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									<literal>cloudbalancing</literal>
								</simpara>
								</entry>
							</row>
							<row>
								<entry align="left" valign="top">
								<simpara>
									<link linkend="ex-tsp-ref">Traveling salesman</link>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									1 entity class
								</simpara>
								<simpara>
									(1 chained variable)
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									Entity ⇐ <literal>980</literal>
								</simpara>
								<simpara>
									Value ⇐ <literal>980</literal>
								</simpara>
								<simpara>
									Search space ⇐ <literal>10^2504</literal>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									Unrealistic <link xlink:href="http://www.math.uwaterloo.ca/tsp/">TSP web</link>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									<literal>tsp</literal>
								</simpara>
								</entry>
							</row>
							<row>
								<entry align="left" valign="top">
								<simpara>
									<link linkend="ex-dinnerParty-ref">Dinner party</link>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									1 entity class
								</simpara>
								<simpara>
									(1 variable)
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									Entity ⇐ <literal>144</literal>
								</simpara>
								<simpara>
									Value ⇐ <literal>72</literal>
								</simpara>
								<simpara>
									Search space ⇐ <literal>10^310</literal>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									Unrealistic
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									<literal>dinnerParty</literal>
								</simpara>
								</entry>
							</row>
							<row>
								<entry align="left" valign="top">
								<simpara>
									<link linkend="ex-tennis-ref">Tennis club scheduling</link>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									1 entity class
								</simpara>
								<simpara>
									(1 variable)
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									Entity ⇐ <literal>72</literal>
								</simpara>
								<simpara>
									Value ⇐ <literal>7</literal>
								</simpara>
								<simpara>
									Search space ⇐ <literal>10^60</literal>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									No (Defined by us)
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									<literal>tennis</literal>
								</simpara>
								</entry>
							</row>
							<row>
								<entry align="left" valign="top">
								<simpara>
									<link linkend="ex-meetingScheduling-ref">Meeting scheduling</link>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									1 entity class
								</simpara>
								<simpara>
									(2 variables)
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									Entity ⇐ <literal>10</literal>
								</simpara>
								<simpara>
									Value ⇐ <literal>320</literal> and ⇐ <literal>5</literal>
								</simpara>
								<simpara>
									Search space ⇐ <literal>10^320</literal>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									No (Defined by us)
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									<literal>meetingscheduling</literal>
								</simpara>
								</entry>
							</row>
							<row>
								<entry align="left" valign="top">
								<simpara>
									<link linkend="ex-curriculumCourse-ref">Course timetabling</link>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									1 entity class
								</simpara>
								<simpara>
									(2 variables)
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									Entity ⇐ <literal>434</literal>
								</simpara>
								<simpara>
									Value ⇐ <literal>25</literal> and ⇐ <literal>20</literal>
								</simpara>
								<simpara>
									Search space ⇐ <literal>10^1171</literal>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									Realistic <link xlink:href="http://www.cs.qub.ac.uk/itc2007/curriculmcourse/course_curriculm_index.htm">ITC 2007 track 3</link>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									<literal>curriculumCourse</literal>
								</simpara>
								</entry>
							</row>
							<row>
								<entry align="left" valign="top">
								<simpara>
									<link linkend="ex-machineReassignment-ref">Machine reassignment</link>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									1 entity class
								</simpara>
								<simpara>
									(1 variable)
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									Entity ⇐ <literal>50000</literal>
								</simpara>
								<simpara>
									Value ⇐ <literal>5000</literal>
								</simpara>
								<simpara>
									Search space ⇐ <literal>10^184948</literal>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									Nearly realistic <link xlink:href="http://challenge.roadef.org/2012/en/">ROADEF 2012</link>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									<literal>machineReassignment</literal>
								</simpara>
								</entry>
							</row>
							<row>
								<entry align="left" valign="top">
								<simpara>
									<link linkend="ex-vehicleRouting-ref">Vehicle routing</link>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									1 entity class
								</simpara>
								<simpara>
									(1 chained variable)
								</simpara>
								<simpara>
									1 shadow entity class
								</simpara>
								<simpara>
									(1 automatic shadow variable)
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									Entity ⇐ <literal>2740</literal>
								</simpara>
								<simpara>
									Value ⇐ <literal>2795</literal>
								</simpara>
								<simpara>
									Search space ⇐ <literal>10^8380</literal>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									Unrealistic <link xlink:href="http://neo.lcc.uma.es/vrp/">VRP web</link>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									<literal>vehiclerouting</literal>
								</simpara>
								</entry>
							</row>
							<row>
								<entry align="left" valign="top">
								<simpara>
									<link linkend="ex-vehicleRouting-ref">Vehicle routing</link> with time windows
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									All of Vehicle routing
								</simpara>
								<simpara>
									(1 shadow variable)
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									Entity ⇐ <literal>2740</literal>
								</simpara>
								<simpara>
									Value ⇐ <literal>2795</literal>
								</simpara>
								<simpara>
									Search space ⇐ <literal>10^8380</literal>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									Unrealistic <link xlink:href="http://neo.lcc.uma.es/vrp/">VRP web</link>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									<literal>vehiclerouting</literal>
								</simpara>
								</entry>
							</row>
							<row>
								<entry align="left" valign="top">
								<simpara>
									<link linkend="ex-projectJobScheduling-ref">Project job scheduling</link>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									1 entity class
								</simpara>
								<simpara>
									(2 variables)
								</simpara>
								<simpara>
									(1 shadow variable)
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									Entity ⇐ <literal>640</literal>
								</simpara>
								<simpara>
									Value ⇐ <literal>?</literal> and ⇐ <literal>?</literal>
								</simpara>
								<simpara>
									Search space ⇐ <literal>?</literal>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									Nearly realistic <link xlink:href="http://gent.cs.kuleuven.be/mista2013challenge/">MISTA 2013</link>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									<literal>projectjobscheduling</literal>
								</simpara>
								</entry>
							</row>
							<row>
								<entry align="left" valign="top">
								<simpara>
									<link linkend="ex-taskAssigning-ref">Task assigning</link>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									1 entity class
								</simpara>
								<simpara>
									(1 chained variable)
								</simpara>
								<simpara>
									(1 shadow variable)
								</simpara>
								<simpara>
									1 shadow entity class
								</simpara>
								<simpara>
									(1 automatic shadow variable)
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									Entity ⇐ <literal>500</literal>
								</simpara>
								<simpara>
									Value ⇐ <literal>520</literal>
								</simpara>
								<simpara>
									Search space ⇐ <literal>10^1168</literal>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									No Defined by us
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									<literal>taskassigning</literal>
								</simpara>
								</entry>
							</row>
							<row>
								<entry align="left" valign="top">
								<simpara>
									<link linkend="ex-examination-ref">Exam timetabling</link>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									2 entity classes (same hierarchy)
								</simpara>
								<simpara>
									(2 variables)
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									Entity ⇐ <literal>1096</literal>
								</simpara>
								<simpara>
									Value ⇐ <literal>80</literal> and ⇐ <literal>49</literal>
								</simpara>
								<simpara>
									Search space ⇐ <literal>10^3374</literal>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									Realistic <link xlink:href="http://www.cs.qub.ac.uk/itc2007/examtrack/exam_track_index.htm">ITC 2007 track 1</link>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									<literal>examination</literal>
								</simpara>
								</entry>
							</row>
							<row>
								<entry align="left" valign="top">
								<simpara>
									<link linkend="ex-nurseRostering-ref">Nurse rostering</link>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									1 entity class
								</simpara>
								<simpara>
									(1 variable)
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									Entity ⇐ <literal>752</literal>
								</simpara>
								<simpara>
									Value ⇐ <literal>50</literal>
								</simpara>
								<simpara>
									Search space ⇐ <literal>10^1277</literal>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									Realistic <link xlink:href="http://www.kuleuven-kortrijk.be/nrpcompetition">INRC 2010</link>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									<literal>nurserostering</literal>
								</simpara>
								</entry>
							</row>
							<row>
								<entry align="left" valign="top">
								<simpara>
									<link linkend="ex-travelingTournament-ref">Traveling tournament</link>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									1 entity class
								</simpara>
								<simpara>
									(1 variable)
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									Entity ⇐ <literal>1560</literal>
								</simpara>
								<simpara>
									Value ⇐ <literal>78</literal>
								</simpara>
								<simpara>
									Search space ⇐ <literal>10^2301</literal>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									Unrealistic <link xlink:href="http://mat.tepper.cmu.edu/TOURN/">TTP</link>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									<literal>travelingtournament</literal>
								</simpara>
								</entry>
							</row>
							<row>
								<entry align="left" valign="top">
								<simpara>
									<link linkend="ex-cheapTimeScheduling-ref">Cheap time scheduling</link>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									1 entity class
								</simpara>
								<simpara>
									(2 variables)
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									Entity ⇐ <literal>500</literal>
								</simpara>
								<simpara>
									Value ⇐ <literal>100</literal> and ⇐ <literal>288</literal>
								</simpara>
								<simpara>
									Search space ⇐ <literal>10^20078</literal>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									Nearly realistic <link xlink:href="https://web.archive.org/web/20170223060433/http://iconchallenge.insight-centre.org/challenge-energy">ICON Energy</link>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									<literal>cheaptimescheduling</literal>
								</simpara>
								</entry>
							</row>
							<row>
								<entry align="left" valign="top">
								<simpara>
									<link linkend="ex-investment-ref">Investment</link>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									1 entity class
								</simpara>
								<simpara>
									(1 variable)
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									Entity ⇐ <literal>11</literal>
								</simpara>
								<simpara>
									Value = <literal>1000</literal>
								</simpara>
								<simpara>
									Search space ⇐ <literal>10^4</literal>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									No Defined by us
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									<literal>investment</literal>
								</simpara>
								</entry>
							</row>
							<row>
								<entry align="left" valign="top">
								<simpara>
									<link linkend="ex-conferenceScheduling-ref">Conference scheduling</link>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									1 entity class
								</simpara>
								<simpara>
									(2 variables)
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									Entity ⇐ <literal>216</literal>
								</simpara>
								<simpara>
									Value ⇐ <literal>18</literal> and ⇐ <literal>20</literal>
								</simpara>
								<simpara>
									Search space ⇐ <literal>10^552</literal>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									No Defined by us
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									<literal>conferencescheduling</literal>
								</simpara>
								</entry>
							</row>
							<row>
								<entry align="left" valign="top">
								<simpara>
									<link linkend="ex-rockTour-ref">Rock tour</link>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									1 entity class
								</simpara>
								<simpara>
									(1 chained variable)
								</simpara>
								<simpara>
									(4 shadow variables)
								</simpara>
								<simpara>
									1 shadow entity class
								</simpara>
								<simpara>
									(1 automatic shadow variable)
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									Entity ⇐ <literal>47</literal>
								</simpara>
								<simpara>
									Value ⇐ <literal>48</literal>
								</simpara>
								<simpara>
									Search space ⇐ <literal>10^59</literal>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									No Defined by us
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									<literal>rocktour</literal>
								</simpara>
								</entry>
							</row>
							<row>
								<entry align="left" valign="top">
								<simpara>
									<link linkend="ex-flightCrewScheduling-ref">Flight crew scheduling</link>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									1 entity class
								</simpara>
								<simpara>
									(1 variable)
								</simpara>
								<simpara>
									1 shadow entity class
								</simpara>
								<simpara>
									(1 automatic shadow variable)
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									Entity ⇐ <literal>4375</literal>
								</simpara>
								<simpara>
									Value ⇐ <literal>750</literal>
								</simpara>
								<simpara>
									Search space ⇐ <literal>10^12578</literal>
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									No Defined by us
								</simpara>
								</entry>
								<entry align="left" valign="top">
								<simpara>
									<literal>flightcrewscheduling</literal>
								</simpara>
								</entry>
							</row>
						</tbody>
					</tgroup>
				</table>
			</section>
			<section xml:id="ex-nQueens-ref">
				<title>N queens</title>
				<simpara>
					Place <emphasis>n</emphasis> queens on a <emphasis>n</emphasis> sized chessboard so that no two queens can attack each other. The most common <emphasis>n</emphasis> queens puzzle is the eight queens puzzle, with <emphasis>n = 8</emphasis>:
				</simpara>
				<informalfigure>
				<mediaobject>
					<imageobject>
						<imagedata align="center" fileref="images/_images/UseCasesAndExamples/NQueens/nQueensScreenshot.png" format="PNG" />
					</imageobject>
					<textobject>
						<phrase>nQueensScreenshot</phrase>
					</textobject>
				</mediaobject>
				</informalfigure>
				<simpara>
					Constraints:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							Use a chessboard of <emphasis>n</emphasis> columns and <emphasis>n</emphasis> rows.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Place <emphasis>n</emphasis> queens on the chessboard.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							No two queens can attack each other. A queen can attack any other queen on the same horizontal, vertical or diagonal line.
						</simpara>
					</listitem>
				</itemizedlist>
				<simpara>
					This documentation heavily uses the four queens puzzle as the primary example.
				</simpara>
				<simpara>
					A proposed solution could be:
				</simpara>
				<figure>
					<title>A wrong solution for the Four queens puzzle</title>
					<mediaobject>
						<imageobject>
							<imagedata align="center" fileref="images/_images/UseCasesAndExamples/NQueens/partiallySolvedNQueens04Explained.png" format="PNG" />
						</imageobject>
						<textobject>
							<phrase>partiallySolvedNQueens04Explained</phrase>
						</textobject>
					</mediaobject>
				</figure>
				<simpara>
					The above solution is wrong because queens <literal>A1</literal> and <literal>B0</literal> can attack each other (so can queens <literal>B0</literal> and <literal>D0</literal>). Removing queen <literal>B0</literal> would respect the "no two queens can attack each other" constraint, but would break the "place <emphasis>n</emphasis> queens" constraint.
				</simpara>
				<simpara>
					Below is a correct solution:
				</simpara>
				<figure>
					<title>A correct solution for the Four queens puzzle</title>
					<mediaobject>
						<imageobject>
							<imagedata align="center" fileref="images/_images/UseCasesAndExamples/NQueens/solvedNQueens04.png" format="PNG" />
						</imageobject>
						<textobject>
							<phrase>solvedNQueens04</phrase>
						</textobject>
					</mediaobject>
				</figure>
				<simpara>
					All the constraints have been met, so the solution is correct.
				</simpara>
				<simpara>
					Note that most <emphasis>n</emphasis> queens puzzles have multiple correct solutions. We will focus on finding a single correct solution for a given <emphasis>n</emphasis>, not on finding the number of possible correct solutions for a given <emphasis>n</emphasis>.
				</simpara>
				<formalpara xml:id="nQueensProblemSize">
					<title>Problem size</title>
					<para>
						
<screen>4queens   has   4 queens with a search space of    256.
8queens   has   8 queens with a search space of   10^7.
16queens  has  16 queens with a search space of  10^19.
32queens  has  32 queens with a search space of  10^48.
64queens  has  64 queens with a search space of 10^115.
256queens has 256 queens with a search space of 10^616.</screen>
					</para>
				</formalpara>
				<simpara>
					The implementation of the <emphasis>n</emphasis> queens example has not been optimized because it functions as a beginner example. Nevertheless, it can easily handle 64 queens. With a few changes it has been shown to easily handle 5000 queens and more.
				</simpara>
				<section xml:id="nQueensDomainModel">
					<title>Domain model for N queens</title>
					<simpara>
						This example uses the domain model to solve the four queens problem.
					</simpara>
					<itemizedlist>
						<listitem>
							<simpara>
								<emphasis role="strong">Creating a Domain Model</emphasis>
							</simpara>
							<simpara>
								A good domain model will make it easier to understand and solve your planning problem.
							</simpara>
							<simpara>
								This is the domain model for the <emphasis>n</emphasis> queens example:
							</simpara>
							
<programlisting language="java" linenumbering="unnumbered">public class Column {

    private int index;

    // ... getters and setters
}</programlisting>
							
<programlisting language="java" linenumbering="unnumbered">public class Row {

    private int index;

    // ... getters and setters
}</programlisting>
							
<programlisting language="java" linenumbering="unnumbered">public class Queen {

    private Column column;
    private Row row;

    public int getAscendingDiagonalIndex() {...}
    public int getDescendingDiagonalIndex() {...}

    // ... getters and setters
}</programlisting>
						</listitem>
						<listitem>
							<simpara>
								<emphasis role="strong">Calculating the Search Space.</emphasis>
							</simpara>
							<simpara>
								A <literal>Queen</literal> instance has a <literal>Column</literal> (for example: 0 is column A, 1 is column B, …​) and a <literal>Row</literal> (its row, for example: 0 is row 0, 1 is row 1, …​).
							</simpara>
							<simpara>
								The ascending diagonal line and the descending diagonal line can be calculated based on the column and the row.
							</simpara>
							<simpara>
								The column and row indexes start from the upper left corner of the chessboard.
							</simpara>
							
<programlisting language="java" linenumbering="unnumbered">public class NQueens {

    private int n;
    private List&lt;Column&gt; columnList;
    private List&lt;Row&gt; rowList;

    private List&lt;Queen&gt; queenList;

    private SimpleScore score;

    // ... getters and setters
}</programlisting>
							<orderedlist numeration="arabic">
								<listitem>
									<simpara>
										<emphasis role="strong">Finding the Solution</emphasis>
									</simpara>
									<simpara>
										A single <literal>NQueens</literal> instance contains a list of all <literal>Queen</literal> instances. It is the <literal>Solution</literal> implementation which will be supplied to, solved by, and retrieved from the Solver.
									</simpara>
								</listitem>
							</orderedlist>
						</listitem>
					</itemizedlist>
					<simpara>
						Notice that in the four queens example, NQueens’s <literal>getN()</literal> method will always return four.
					</simpara>
					<figure>
						<title>A solution for Four Queens</title>
						<mediaobject>
							<imageobject>
								<imagedata align="center" fileref="images/_images/UseCasesAndExamples/NQueens/partiallySolvedNQueens04Explained.png" format="PNG" />
							</imageobject>
							<textobject>
								<phrase>partiallySolvedNQueens04Explained</phrase>
							</textobject>
						</mediaobject>
					</figure>
					<table colsep="1" frame="all" rowsep="1">
						<title>Details of the solution in the domain model</title>
						<tgroup cols="5">
							<colspec colname="col_1" colwidth="9*"></colspec>
							<colspec colname="col_2" colwidth="18*"></colspec>
							<colspec colname="col_3" colwidth="18*"></colspec>
							<colspec colname="col_4" colwidth="27*"></colspec>
							<colspec colname="col_5" colwidth="27*"></colspec>
							<thead>
								<row>
									<entry align="left" valign="top"></entry>
									<entry align="left" valign="top">columnIndex</entry>
									<entry align="left" valign="top">rowIndex</entry>
									<entry align="left" valign="top">ascendingDiagonalIndex (columnIndex + rowIndex)</entry>
									<entry align="left" valign="top">descendingDiagonalIndex (columnIndex - rowIndex)</entry>
								</row>
							</thead>
							<tbody>
								<row>
									<entry align="left" valign="top">
									<simpara>
										A1
									</simpara>
									</entry>
									<entry align="left" valign="top">
									<simpara>
										0
									</simpara>
									</entry>
									<entry align="left" valign="top">
									<simpara>
										1
									</simpara>
									</entry>
									<entry align="left" valign="top">
									<simpara>
										<emphasis role="strong">1 (**)</emphasis>
									</simpara>
									</entry>
									<entry align="left" valign="top">
									<simpara>
										-1
									</simpara>
									</entry>
								</row>
								<row>
									<entry align="left" valign="top">
									<simpara>
										B0
									</simpara>
									</entry>
									<entry align="left" valign="top">
									<simpara>
										1
									</simpara>
									</entry>
									<entry align="left" valign="top">
									<simpara>
										<emphasis role="strong">0 (*)</emphasis>
									</simpara>
									</entry>
									<entry align="left" valign="top">
									<simpara>
										<emphasis role="strong">1 (**)</emphasis>
									</simpara>
									</entry>
									<entry align="left" valign="top">
									<simpara>
										1
									</simpara>
									</entry>
								</row>
								<row>
									<entry align="left" valign="top">
									<simpara>
										C2
									</simpara>
									</entry>
									<entry align="left" valign="top">
									<simpara>
										2
									</simpara>
									</entry>
									<entry align="left" valign="top">
									<simpara>
										2
									</simpara>
									</entry>
									<entry align="left" valign="top">
									<simpara>
										4
									</simpara>
									</entry>
									<entry align="left" valign="top">
									<simpara>
										0
									</simpara>
									</entry>
								</row>
								<row>
									<entry align="left" valign="top">
									<simpara>
										D0
									</simpara>
									</entry>
									<entry align="left" valign="top">
									<simpara>
										3
									</simpara>
									</entry>
									<entry align="left" valign="top">
									<simpara>
										<emphasis role="strong">0 (*)</emphasis>
									</simpara>
									</entry>
									<entry align="left" valign="top">
									<simpara>
										3
									</simpara>
									</entry>
									<entry align="left" valign="top">
									<simpara>
										3
									</simpara>
									</entry>
								</row>
							</tbody>
						</tgroup>
					</table>
					<simpara>
						When two queens share the same column, row or diagonal line, such as (*) and (**), they can attack each other.
					</simpara>
				</section>
			</section>
			<section xml:id="ex-cloudBalancing-ref">
				<title>Cloud balancing</title>
				<simpara>
					For information about this example, see <xref linkend="cloudbal-tutorial-con" />.
				</simpara>
			</section>
			<section xml:id="ex-tsp-ref">
				<title>Traveling salesman (TSP - Traveling Salesman Problem)</title>
				<simpara>
					Given a list of cities, find the shortest tour for a salesman that visits each city exactly once.
				</simpara>
				<simpara>
					The problem is defined by <link xlink:href="https://en.wikipedia.org/wiki/Travelling_salesman_problem">Wikipedia</link>. It is <link xlink:href="http://www.math.uwaterloo.ca/tsp/">one of the most intensively studied problems</link> in computational mathematics. Yet, in the real world, it is often only part of a planning problem, along with other constraints, such as employee shift rostering constraints.
				</simpara>
				<formalpara>
					<title>Problem size</title>
					<para>
						
<screen>dj38     has  38 cities with a search space of   10^43.
europe40 has  40 cities with a search space of   10^46.
st70     has  70 cities with a search space of   10^98.
pcb442   has 442 cities with a search space of  10^976.
lu980    has 980 cities with a search space of 10^2504.</screen>
					</para>
				</formalpara>
				<formalpara>
					<title>Problem difficulty</title>
					<para>
						Despite TSP’s simple definition, the problem is surprisingly hard to solve. Because it is an NP-hard problem (like most planning problems), the optimal solution for a specific problem dataset can change a lot when that problem dataset is slightly altered:
					</para>
				</formalpara>
				<informalfigure>
				<mediaobject>
					<imageobject>
						<imagedata align="center" fileref="images/_images/UseCasesAndExamples/TravellingSalesman/tspOptimalSolutionVolatility.png" format="PNG" />
					</imageobject>
					<textobject>
						<phrase>tspOptimalSolutionVolatility</phrase>
					</textobject>
				</mediaobject>
				</informalfigure>
			</section>
			<section xml:id="ex-dinnerParty-ref">
				<title>Dinner party</title>
				<simpara>
					Miss Manners is throwing another dinner party.
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							This time she invited 144 guests and prepared 12 round tables with 12 seats each.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Every guest should sit next to someone (left and right) of the opposite gender.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							And that neighbour should have at least one hobby in common with the guest.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							At every table, there should be two politicians, two doctors, two socialites, two coaches, two teachers and two programmers.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							And the two politicians, two doctors, two coaches and two programmers should not be the same kind at a table.
						</simpara>
					</listitem>
				</itemizedlist>
				<simpara>
					Drools Expert also has the normal Miss Manners example (which is much smaller) and employs an exhaustive heuristic to solve it. Planner’s implementation is far more scalable because it uses heuristics to find the best solution and Drools Expert to calculate the score of each solution.
				</simpara>
				<formalpara>
					<title>Problem size</title>
					<para>
						
<screen>wedding01 has 18 jobs, 144 guests, 288 hobby practicians, 12 tables and 144 seats with a search space of 10^310.</screen>
					</para>
				</formalpara>
			</section>
			<section xml:id="ex-tennis-ref">
				<title>Tennis club scheduling</title>
				<simpara>
					Every week the tennis club has four teams playing round robin against each other. Assign those four spots to the teams fairly.
				</simpara>
				<simpara>
					Hard constraints:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							Conflict: A team can only play once per day.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Unavailability: Some teams are unavailable on some dates.
						</simpara>
					</listitem>
				</itemizedlist>
				<simpara>
					Medium constraints:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							Fair assignment: All teams should play an (almost) equal number of times.
						</simpara>
					</listitem>
				</itemizedlist>
				<simpara>
					Soft constraints:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							Evenly confrontation: Each team should play against every other team an equal number of times.
						</simpara>
					</listitem>
				</itemizedlist>
				<formalpara>
					<title>Problem size</title>
					<para>
						
<screen>munich-7teams has 7 teams, 18 days, 12 unavailabilityPenalties and 72 teamAssignments with a search space of 10^60.</screen>
					</para>
				</formalpara>
				<figure>
					<title>Domain model</title>
					<mediaobject>
						<imageobject>
							<imagedata align="center" fileref="images/_images/UseCasesAndExamples/TennisScheduling/tennisClassDiagram.png" format="PNG" />
						</imageobject>
						<textobject>
							<phrase>tennisClassDiagram</phrase>
						</textobject>
					</mediaobject>
				</figure>
			</section>
			<section xml:id="ex-meetingScheduling-ref">
				<title>Meeting scheduling</title>
				<simpara>
					Assign each meeting to a starting time and a room. Meetings have different durations.
				</simpara>
				<simpara>
					Hard constraints:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							Room conflict: two meetings must not use the same room at the same time.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Required attendance: A person cannot have two required meetings at the same time.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Required room capacity: A meeting must not be in a room that doesn’t fit all of the meeting’s attendees.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Start and end on same day: A meeting shouldn’t be scheduled over multiple days.
						</simpara>
					</listitem>
				</itemizedlist>
				<simpara>
					Medium constraints:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							Preferred attendance: A person cannot have two preferred meetings at the same time, nor a preferred and a required meeting at the same time.
						</simpara>
					</listitem>
				</itemizedlist>
				<simpara>
					Soft constraints:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							Sooner rather than later: Schedule all meetings as soon as possible.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							A break between meetings: Any two meetings should have at least one time grain break between them.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Overlapping meetings: To minimize the number of meetings in parallel so people don’t have to choose one meeting over the other.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Assign larger rooms first: If a larger room is available any meeting should be assigned to that room in order to accommodate as many people as possible even if they haven’t signed up to that meeting.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Room stability: If a person has two consecutive meetings with two or less time grains break between them they better be in the same room.
						</simpara>
					</listitem>
				</itemizedlist>
				<formalpara>
					<title>Problem size</title>
					<para>
						
<screen>50meetings-160timegrains-5rooms  has  50 meetings, 160 timeGrains and 5 rooms with a search space of 10^145.
100meetings-320timegrains-5rooms has 100 meetings, 320 timeGrains and 5 rooms with a search space of 10^320.
200meetings-640timegrains-5rooms has 200 meetings, 640 timeGrains and 5 rooms with a search space of 10^701.
400meetings-1280timegrains-5rooms has 400 meetings, 1280 timeGrains and 5 rooms with a search space of 10^1522.
800meetings-2560timegrains-5rooms has 800 meetings, 2560 timeGrains and 5 rooms with a search space of 10^3285.</screen>
					</para>
				</formalpara>
			</section>
			<section xml:id="ex-curriculumCourse-ref">
				<title>Course timetabling (ITC 2007 Track 3 - Curriculum Course Scheduling)</title>
				<simpara>
					Schedule each lecture into a timeslot and into a room.
				</simpara>
				<simpara>
					Hard constraints:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							Teacher conflict: A teacher must not have two lectures in the same period.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Curriculum conflict: A curriculum must not have two lectures in the same period.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Room occupancy: Two lectures must not be in the same room in the same period.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Unavailable period (specified per dataset): A specific lecture must not be assigned to a specific period.
						</simpara>
					</listitem>
				</itemizedlist>
				<simpara>
					Soft constraints:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							Room capacity: A room’s capacity should not be less than the number of students in its lecture.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Minimum working days: Lectures of the same course should be spread out into a minimum number of days.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Curriculum compactness: Lectures belonging to the same curriculum should be adjacent to each other (so in consecutive periods).
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Room stability: Lectures of the same course should be assigned to the same room.
						</simpara>
					</listitem>
				</itemizedlist>
				<simpara>
					The problem is defined by <link xlink:href="http://www.cs.qub.ac.uk/itc2007/curriculmcourse/course_curriculm_index.htm">the International Timetabling Competition 2007 track 3</link>.
				</simpara>
				<formalpara>
					<title>Problem size</title>
					<para>
						
<screen>comp01 has 24 teachers,  14 curricula,  30 courses, 160 lectures, 30 periods,  6 rooms and   53 unavailable period constraints with a search space of  10^360.
comp02 has 71 teachers,  70 curricula,  82 courses, 283 lectures, 25 periods, 16 rooms and  513 unavailable period constraints with a search space of  10^736.
comp03 has 61 teachers,  68 curricula,  72 courses, 251 lectures, 25 periods, 16 rooms and  382 unavailable period constraints with a search space of  10^653.
comp04 has 70 teachers,  57 curricula,  79 courses, 286 lectures, 25 periods, 18 rooms and  396 unavailable period constraints with a search space of  10^758.
comp05 has 47 teachers, 139 curricula,  54 courses, 152 lectures, 36 periods,  9 rooms and  771 unavailable period constraints with a search space of  10^381.
comp06 has 87 teachers,  70 curricula, 108 courses, 361 lectures, 25 periods, 18 rooms and  632 unavailable period constraints with a search space of  10^957.
comp07 has 99 teachers,  77 curricula, 131 courses, 434 lectures, 25 periods, 20 rooms and  667 unavailable period constraints with a search space of 10^1171.
comp08 has 76 teachers,  61 curricula,  86 courses, 324 lectures, 25 periods, 18 rooms and  478 unavailable period constraints with a search space of  10^859.
comp09 has 68 teachers,  75 curricula,  76 courses, 279 lectures, 25 periods, 18 rooms and  405 unavailable period constraints with a search space of  10^740.
comp10 has 88 teachers,  67 curricula, 115 courses, 370 lectures, 25 periods, 18 rooms and  694 unavailable period constraints with a search space of  10^981.
comp11 has 24 teachers,  13 curricula,  30 courses, 162 lectures, 45 periods,  5 rooms and   94 unavailable period constraints with a search space of  10^381.
comp12 has 74 teachers, 150 curricula,  88 courses, 218 lectures, 36 periods, 11 rooms and 1368 unavailable period constraints with a search space of  10^566.
comp13 has 77 teachers,  66 curricula,  82 courses, 308 lectures, 25 periods, 19 rooms and  468 unavailable period constraints with a search space of  10^824.
comp14 has 68 teachers,  60 curricula,  85 courses, 275 lectures, 25 periods, 17 rooms and  486 unavailable period constraints with a search space of  10^722.</screen>
					</para>
				</formalpara>
				<figure>
					<title>Domain model</title>
					<mediaobject>
						<imageobject>
							<imagedata align="center" fileref="images/_images/UseCasesAndExamples/CourseTimetabling/curriculumCourseClassDiagram.png" format="PNG" />
						</imageobject>
						<textobject>
							<phrase>curriculumCourseClassDiagram</phrase>
						</textobject>
					</mediaobject>
				</figure>
			</section>
			<section xml:id="ex-machineReassignment-ref">
				<title>Machine reassignment (Google ROADEF 2012)</title>
				<simpara>
					Assign each process to a machine. All processes already have an original (unoptimized) assignment. Each process requires an amount of each resource (such as CPU or RAM). This is a more complex version of the Cloud Balancing example.
				</simpara>
				<simpara>
					Hard constraints:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							Maximum capacity: The maximum capacity for each resource for each machine must not be exceeded.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Conflict: Processes of the same service must run on distinct machines.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Spread: Processes of the same service must be spread out across locations.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Dependency: The processes of a service depending on another service must run in the neighborhood of a process of the other service.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Transient usage: Some resources are transient and count towards the maximum capacity of both the original machine as the newly assigned machine.
						</simpara>
					</listitem>
				</itemizedlist>
				<simpara>
					Soft constraints:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							Load: The safety capacity for each resource for each machine should not be exceeded.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Balance: Leave room for future assignments by balancing the available resources on each machine.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Process move cost: A process has a move cost.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Service move cost: A service has a move cost.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Machine move cost: Moving a process from machine A to machine B has another A-B specific move cost.
						</simpara>
					</listitem>
				</itemizedlist>
				<simpara>
					The problem is defined by <link xlink:href="http://challenge.roadef.org/2012/en/">the Google ROADEF/EURO Challenge 2012</link>.
				</simpara>
				<informalfigure>
				<mediaobject>
					<imageobject>
						<imagedata align="center" fileref="images/_images/UseCasesAndExamples/MachineReassignment/cloudOptimizationIsLikeTetris.png" format="PNG" />
					</imageobject>
					<textobject>
						<phrase>cloudOptimizationIsLikeTetris</phrase>
					</textobject>
				</mediaobject>
				</informalfigure>
				<figure xml:id="machineReassignmentValueProposition">
					<title>Value proposition</title>
					<mediaobject>
						<imageobject>
							<imagedata align="center" fileref="images/_images/shared/cloudOptimizationValueProposition.png" format="PNG" />
						</imageobject>
						<textobject>
							<phrase>cloudOptimizationValueProposition</phrase>
						</textobject>
					</mediaobject>
				</figure>
				<formalpara>
					<title>Problem size</title>
					<para>
						
<screen>model_a1_1 has  2 resources,  1 neighborhoods,   4 locations,    4 machines,    79 services,   100 processes and 1 balancePenalties with a search space of     10^60.
model_a1_2 has  4 resources,  2 neighborhoods,   4 locations,  100 machines,   980 services,  1000 processes and 0 balancePenalties with a search space of   10^2000.
model_a1_3 has  3 resources,  5 neighborhoods,  25 locations,  100 machines,   216 services,  1000 processes and 0 balancePenalties with a search space of   10^2000.
model_a1_4 has  3 resources, 50 neighborhoods,  50 locations,   50 machines,   142 services,  1000 processes and 1 balancePenalties with a search space of   10^1698.
model_a1_5 has  4 resources,  2 neighborhoods,   4 locations,   12 machines,   981 services,  1000 processes and 1 balancePenalties with a search space of   10^1079.
model_a2_1 has  3 resources,  1 neighborhoods,   1 locations,  100 machines,  1000 services,  1000 processes and 0 balancePenalties with a search space of   10^2000.
model_a2_2 has 12 resources,  5 neighborhoods,  25 locations,  100 machines,   170 services,  1000 processes and 0 balancePenalties with a search space of   10^2000.
model_a2_3 has 12 resources,  5 neighborhoods,  25 locations,  100 machines,   129 services,  1000 processes and 0 balancePenalties with a search space of   10^2000.
model_a2_4 has 12 resources,  5 neighborhoods,  25 locations,   50 machines,   180 services,  1000 processes and 1 balancePenalties with a search space of   10^1698.
model_a2_5 has 12 resources,  5 neighborhoods,  25 locations,   50 machines,   153 services,  1000 processes and 0 balancePenalties with a search space of   10^1698.
model_b_1  has 12 resources,  5 neighborhoods,  10 locations,  100 machines,  2512 services,  5000 processes and 0 balancePenalties with a search space of  10^10000.
model_b_2  has 12 resources,  5 neighborhoods,  10 locations,  100 machines,  2462 services,  5000 processes and 1 balancePenalties with a search space of  10^10000.
model_b_3  has  6 resources,  5 neighborhoods,  10 locations,  100 machines, 15025 services, 20000 processes and 0 balancePenalties with a search space of  10^40000.
model_b_4  has  6 resources,  5 neighborhoods,  50 locations,  500 machines,  1732 services, 20000 processes and 1 balancePenalties with a search space of  10^53979.
model_b_5  has  6 resources,  5 neighborhoods,  10 locations,  100 machines, 35082 services, 40000 processes and 0 balancePenalties with a search space of  10^80000.
model_b_6  has  6 resources,  5 neighborhoods,  50 locations,  200 machines, 14680 services, 40000 processes and 1 balancePenalties with a search space of  10^92041.
model_b_7  has  6 resources,  5 neighborhoods,  50 locations, 4000 machines, 15050 services, 40000 processes and 1 balancePenalties with a search space of 10^144082.
model_b_8  has  3 resources,  5 neighborhoods,  10 locations,  100 machines, 45030 services, 50000 processes and 0 balancePenalties with a search space of 10^100000.
model_b_9  has  3 resources,  5 neighborhoods, 100 locations, 1000 machines,  4609 services, 50000 processes and 1 balancePenalties with a search space of 10^150000.
model_b_10 has  3 resources,  5 neighborhoods, 100 locations, 5000 machines,  4896 services, 50000 processes and 1 balancePenalties with a search space of 10^184948.</screen>
					</para>
				</formalpara>
				<figure>
					<title>Domain model</title>
					<mediaobject>
						<imageobject>
							<imagedata align="center" fileref="images/_images/UseCasesAndExamples/MachineReassignment/machineReassignmentClassDiagram.png" format="PNG" />
						</imageobject>
						<textobject>
							<phrase>machineReassignmentClassDiagram</phrase>
						</textobject>
					</mediaobject>
				</figure>
			</section>
			<section xml:id="ex-vehicleRouting-ref">
				<title>Vehicle routing</title>
				<simpara>
					Using a fleet of vehicles, pick up the objects of each customer and bring them to the depot. Each vehicle can service multiple customers, but it has a limited capacity.
				</simpara>
				<informalfigure>
				<mediaobject>
					<imageobject>
						<imagedata align="center" fileref="images/_images/UseCasesAndExamples/VehicleRouting/vehicleRoutingUseCase.png" format="PNG" />
					</imageobject>
					<textobject>
						<phrase>vehicleRoutingUseCase</phrase>
					</textobject>
				</mediaobject>
				</informalfigure>
				<simpara>
					Besides the basic case (CVRP), there is also a variant with time windows (CVRPTW).
				</simpara>
				<simpara>
					Hard constraints:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							Vehicle capacity: a vehicle cannot carry more items then its capacity.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Time windows (only in CVRPTW):
						</simpara>
						<itemizedlist>
							<listitem>
								<simpara>
									Travel time: Traveling from one location to another takes time.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Customer service duration: a vehicle must stay at the customer for the length of the service duration.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Customer ready time: a vehicle may arrive before the customer’s ready time, but it must wait until the ready time before servicing.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Customer due time: a vehicle must arrive on time, before the customer’s due time.
								</simpara>
							</listitem>
						</itemizedlist>
					</listitem>
				</itemizedlist>
				<simpara>
					Soft constraints:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							Total distance: minimize the total distance driven (fuel consumption) of all vehicles.
						</simpara>
					</listitem>
				</itemizedlist>
				<simpara>
					The capacitated vehicle routing problem (CVRP) and its timewindowed variant (CVRPTW) are defined by <link xlink:href="http://neo.lcc.uma.es/vrp/">the VRP web</link>.
				</simpara>
				<figure>
					<title>Value proposition</title>
					<mediaobject>
						<imageobject>
							<imagedata align="center" fileref="images/_images/UseCasesAndExamples/VehicleRouting/vehicleRoutingValueProposition.png" format="PNG" />
						</imageobject>
						<textobject>
							<phrase>vehicleRoutingValueProposition</phrase>
						</textobject>
					</mediaobject>
				</figure>
				<formalpara>
					<title>Problem size</title>
					<para>
						CVRP instances (without time windows):
					</para>
				</formalpara>
				
<screen>belgium-n50-k10             has  1 depots, 10 vehicles and   49 customers with a search space of   10^74.
belgium-n100-k10            has  1 depots, 10 vehicles and   99 customers with a search space of  10^170.
belgium-n500-k20            has  1 depots, 20 vehicles and  499 customers with a search space of 10^1168.
belgium-n1000-k20           has  1 depots, 20 vehicles and  999 customers with a search space of 10^2607.
belgium-n2750-k55           has  1 depots, 55 vehicles and 2749 customers with a search space of 10^8380.
belgium-road-km-n50-k10     has  1 depots, 10 vehicles and   49 customers with a search space of   10^74.
belgium-road-km-n100-k10    has  1 depots, 10 vehicles and   99 customers with a search space of  10^170.
belgium-road-km-n500-k20    has  1 depots, 20 vehicles and  499 customers with a search space of 10^1168.
belgium-road-km-n1000-k20   has  1 depots, 20 vehicles and  999 customers with a search space of 10^2607.
belgium-road-km-n2750-k55   has  1 depots, 55 vehicles and 2749 customers with a search space of 10^8380.
belgium-road-time-n50-k10   has  1 depots, 10 vehicles and   49 customers with a search space of   10^74.
belgium-road-time-n100-k10  has  1 depots, 10 vehicles and   99 customers with a search space of  10^170.
belgium-road-time-n500-k20  has  1 depots, 20 vehicles and  499 customers with a search space of 10^1168.
belgium-road-time-n1000-k20 has  1 depots, 20 vehicles and  999 customers with a search space of 10^2607.
belgium-road-time-n2750-k55 has  1 depots, 55 vehicles and 2749 customers with a search space of 10^8380.
belgium-d2-n50-k10          has  2 depots, 10 vehicles and   48 customers with a search space of   10^74.
belgium-d3-n100-k10         has  3 depots, 10 vehicles and   97 customers with a search space of  10^170.
belgium-d5-n500-k20         has  5 depots, 20 vehicles and  495 customers with a search space of 10^1168.
belgium-d8-n1000-k20        has  8 depots, 20 vehicles and  992 customers with a search space of 10^2607.
belgium-d10-n2750-k55       has 10 depots, 55 vehicles and 2740 customers with a search space of 10^8380.

A-n32-k5  has 1 depots,  5 vehicles and  31 customers with a search space of  10^40.
A-n33-k5  has 1 depots,  5 vehicles and  32 customers with a search space of  10^41.
A-n33-k6  has 1 depots,  6 vehicles and  32 customers with a search space of  10^42.
A-n34-k5  has 1 depots,  5 vehicles and  33 customers with a search space of  10^43.
A-n36-k5  has 1 depots,  5 vehicles and  35 customers with a search space of  10^46.
A-n37-k5  has 1 depots,  5 vehicles and  36 customers with a search space of  10^48.
A-n37-k6  has 1 depots,  6 vehicles and  36 customers with a search space of  10^49.
A-n38-k5  has 1 depots,  5 vehicles and  37 customers with a search space of  10^49.
A-n39-k5  has 1 depots,  5 vehicles and  38 customers with a search space of  10^51.
A-n39-k6  has 1 depots,  6 vehicles and  38 customers with a search space of  10^52.
A-n44-k7  has 1 depots,  7 vehicles and  43 customers with a search space of  10^61.
A-n45-k6  has 1 depots,  6 vehicles and  44 customers with a search space of  10^62.
A-n45-k7  has 1 depots,  7 vehicles and  44 customers with a search space of  10^63.
A-n46-k7  has 1 depots,  7 vehicles and  45 customers with a search space of  10^65.
A-n48-k7  has 1 depots,  7 vehicles and  47 customers with a search space of  10^68.
A-n53-k7  has 1 depots,  7 vehicles and  52 customers with a search space of  10^77.
A-n54-k7  has 1 depots,  7 vehicles and  53 customers with a search space of  10^79.
A-n55-k9  has 1 depots,  9 vehicles and  54 customers with a search space of  10^82.
A-n60-k9  has 1 depots,  9 vehicles and  59 customers with a search space of  10^91.
A-n61-k9  has 1 depots,  9 vehicles and  60 customers with a search space of  10^93.
A-n62-k8  has 1 depots,  8 vehicles and  61 customers with a search space of  10^94.
A-n63-k9  has 1 depots,  9 vehicles and  62 customers with a search space of  10^97.
A-n63-k10 has 1 depots, 10 vehicles and  62 customers with a search space of  10^98.
A-n64-k9  has 1 depots,  9 vehicles and  63 customers with a search space of  10^99.
A-n65-k9  has 1 depots,  9 vehicles and  64 customers with a search space of 10^101.
A-n69-k9  has 1 depots,  9 vehicles and  68 customers with a search space of 10^108.
A-n80-k10 has 1 depots, 10 vehicles and  79 customers with a search space of 10^130.
F-n45-k4  has 1 depots,  4 vehicles and  44 customers with a search space of  10^60.
F-n72-k4  has 1 depots,  4 vehicles and  71 customers with a search space of 10^108.
F-n135-k7 has 1 depots,  7 vehicles and 134 customers with a search space of 10^240.</screen>
				<simpara>
					CVRPTW instances (with time windows):
				</simpara>
				
<screen>belgium-tw-d2-n50-k10    has  2 depots, 10 vehicles and   48 customers with a search space of   10^74.
belgium-tw-d3-n100-k10   has  3 depots, 10 vehicles and   97 customers with a search space of  10^170.
belgium-tw-d5-n500-k20   has  5 depots, 20 vehicles and  495 customers with a search space of 10^1168.
belgium-tw-d8-n1000-k20  has  8 depots, 20 vehicles and  992 customers with a search space of 10^2607.
belgium-tw-d10-n2750-k55 has 10 depots, 55 vehicles and 2740 customers with a search space of 10^8380.
belgium-tw-n50-k10       has  1 depots, 10 vehicles and   49 customers with a search space of   10^74.
belgium-tw-n100-k10      has  1 depots, 10 vehicles and   99 customers with a search space of  10^170.
belgium-tw-n500-k20      has  1 depots, 20 vehicles and  499 customers with a search space of 10^1168.
belgium-tw-n1000-k20     has  1 depots, 20 vehicles and  999 customers with a search space of 10^2607.
belgium-tw-n2750-k55     has  1 depots, 55 vehicles and 2749 customers with a search space of 10^8380.

Solomon_025_C101       has 1 depots,  25 vehicles and   25 customers with a search space of   10^40.
Solomon_025_C201       has 1 depots,  25 vehicles and   25 customers with a search space of   10^40.
Solomon_025_R101       has 1 depots,  25 vehicles and   25 customers with a search space of   10^40.
Solomon_025_R201       has 1 depots,  25 vehicles and   25 customers with a search space of   10^40.
Solomon_025_RC101      has 1 depots,  25 vehicles and   25 customers with a search space of   10^40.
Solomon_025_RC201      has 1 depots,  25 vehicles and   25 customers with a search space of   10^40.
Solomon_100_C101       has 1 depots,  25 vehicles and  100 customers with a search space of  10^185.
Solomon_100_C201       has 1 depots,  25 vehicles and  100 customers with a search space of  10^185.
Solomon_100_R101       has 1 depots,  25 vehicles and  100 customers with a search space of  10^185.
Solomon_100_R201       has 1 depots,  25 vehicles and  100 customers with a search space of  10^185.
Solomon_100_RC101      has 1 depots,  25 vehicles and  100 customers with a search space of  10^185.
Solomon_100_RC201      has 1 depots,  25 vehicles and  100 customers with a search space of  10^185.
Homberger_0200_C1_2_1  has 1 depots,  50 vehicles and  200 customers with a search space of  10^429.
Homberger_0200_C2_2_1  has 1 depots,  50 vehicles and  200 customers with a search space of  10^429.
Homberger_0200_R1_2_1  has 1 depots,  50 vehicles and  200 customers with a search space of  10^429.
Homberger_0200_R2_2_1  has 1 depots,  50 vehicles and  200 customers with a search space of  10^429.
Homberger_0200_RC1_2_1 has 1 depots,  50 vehicles and  200 customers with a search space of  10^429.
Homberger_0200_RC2_2_1 has 1 depots,  50 vehicles and  200 customers with a search space of  10^429.
Homberger_0400_C1_4_1  has 1 depots, 100 vehicles and  400 customers with a search space of  10^978.
Homberger_0400_C2_4_1  has 1 depots, 100 vehicles and  400 customers with a search space of  10^978.
Homberger_0400_R1_4_1  has 1 depots, 100 vehicles and  400 customers with a search space of  10^978.
Homberger_0400_R2_4_1  has 1 depots, 100 vehicles and  400 customers with a search space of  10^978.
Homberger_0400_RC1_4_1 has 1 depots, 100 vehicles and  400 customers with a search space of  10^978.
Homberger_0400_RC2_4_1 has 1 depots, 100 vehicles and  400 customers with a search space of  10^978.
Homberger_0600_C1_6_1  has 1 depots, 150 vehicles and  600 customers with a search space of 10^1571.
Homberger_0600_C2_6_1  has 1 depots, 150 vehicles and  600 customers with a search space of 10^1571.
Homberger_0600_R1_6_1  has 1 depots, 150 vehicles and  600 customers with a search space of 10^1571.
Homberger_0600_R2_6_1  has 1 depots, 150 vehicles and  600 customers with a search space of 10^1571.
Homberger_0600_RC1_6_1 has 1 depots, 150 vehicles and  600 customers with a search space of 10^1571.
Homberger_0600_RC2_6_1 has 1 depots, 150 vehicles and  600 customers with a search space of 10^1571.
Homberger_0800_C1_8_1  has 1 depots, 200 vehicles and  800 customers with a search space of 10^2195.
Homberger_0800_C2_8_1  has 1 depots, 200 vehicles and  800 customers with a search space of 10^2195.
Homberger_0800_R1_8_1  has 1 depots, 200 vehicles and  800 customers with a search space of 10^2195.
Homberger_0800_R2_8_1  has 1 depots, 200 vehicles and  800 customers with a search space of 10^2195.
Homberger_0800_RC1_8_1 has 1 depots, 200 vehicles and  800 customers with a search space of 10^2195.
Homberger_0800_RC2_8_1 has 1 depots, 200 vehicles and  800 customers with a search space of 10^2195.
Homberger_1000_C110_1  has 1 depots, 250 vehicles and 1000 customers with a search space of 10^2840.
Homberger_1000_C210_1  has 1 depots, 250 vehicles and 1000 customers with a search space of 10^2840.
Homberger_1000_R110_1  has 1 depots, 250 vehicles and 1000 customers with a search space of 10^2840.
Homberger_1000_R210_1  has 1 depots, 250 vehicles and 1000 customers with a search space of 10^2840.
Homberger_1000_RC110_1 has 1 depots, 250 vehicles and 1000 customers with a search space of 10^2840.
Homberger_1000_RC210_1 has 1 depots, 250 vehicles and 1000 customers with a search space of 10^2840.</screen>
				<section xml:id="vehicleRoutingDomainModel">
					<title>Domain model for Vehicle routing</title>
					<informalfigure>
					<mediaobject>
						<imageobject>
							<imagedata align="center" fileref="images/_images/UseCasesAndExamples/VehicleRouting/vehicleRoutingClassDiagram.png" format="PNG" />
						</imageobject>
						<textobject>
							<phrase>vehicleRoutingClassDiagram</phrase>
						</textobject>
					</mediaobject>
					</informalfigure>
					<simpara>
						The vehicle routing with timewindows domain model makes heavily use of the shadow variable feature. This allows it to express its constraints more naturally, because properties such as <literal>arrivalTime</literal> and <literal>departureTime</literal>, are directly available on the domain model.
					</simpara>
					<formalpara>
						<title>Road Distances Instead of Air Distances</title>
						<para>
							In the real world, vehicles cannot follow a straight line from location to location: they have to use roads and highways. From a business point of view, this matters a lot:
						</para>
					</formalpara>
					<informalfigure>
					<mediaobject>
						<imageobject>
							<imagedata align="center" fileref="images/_images/UseCasesAndExamples/VehicleRouting/vehicleRoutingDistanceType.png" format="PNG" />
						</imageobject>
						<textobject>
							<phrase>vehicleRoutingDistanceType</phrase>
						</textobject>
					</mediaobject>
					</informalfigure>
					<simpara>
						For the optimization algorithm, this does not matter much, as long as the distance between two points can be looked up (and are preferably precalculated). The road cost does not even need to be a distance, it can also be travel time, fuel cost, or a weighted function of those. There are several technologies available to precalculate road costs, such as <link xlink:href="https://graphhopper.com/">GraphHopper</link> (embeddable, offline Java engine), <link xlink:href="http://open.mapquestapi.com/directions/#matrix">Open MapQuest</link> (web service) and <link xlink:href="https://developers.google.com/maps/documentation/webservices/client-library">Google Maps Client API</link> (web service).
					</simpara>
					<informalfigure>
					<mediaobject>
						<imageobject>
							<imagedata align="center" fileref="images/_images/UseCasesAndExamples/VehicleRouting/integrationWithRealMaps.png" format="PNG" />
						</imageobject>
						<textobject>
							<phrase>integrationWithRealMaps</phrase>
						</textobject>
					</mediaobject>
					</informalfigure>
					<simpara>
						There are also several technologies to render it, such as <link xlink:href="http://leafletjs.com">Leaflet</link> and <link xlink:href="https://developers.google.com/maps/">Google Maps for developers</link>: the <literal>optaplanner-webexamples-*.war</literal> has an example which demonstrates such rendering:
					</simpara>
					<informalfigure>
					<mediaobject>
						<imageobject>
							<imagedata align="center" fileref="images/_images/UseCasesAndExamples/VehicleRouting/vehicleRoutingLeafletAndGoogleMaps.png" format="PNG" />
						</imageobject>
						<textobject>
							<phrase>vehicleRoutingLeafletAndGoogleMaps</phrase>
						</textobject>
					</mediaobject>
					</informalfigure>
					<simpara>
						It is even possible to render the actual road routes with GraphHopper or Google Map Directions, but because of route overlaps on highways, it can become harder to see the standstill order:
					</simpara>
					<informalfigure>
					<mediaobject>
						<imageobject>
							<imagedata align="center" fileref="images/_images/UseCasesAndExamples/VehicleRouting/vehicleRoutingGoogleMapsDirections.png" format="PNG" />
						</imageobject>
						<textobject>
							<phrase>vehicleRoutingGoogleMapsDirections</phrase>
						</textobject>
					</mediaobject>
					</informalfigure>
					<simpara>
						Take special care that the road costs between two points use the same optimization criteria as the one used in Planner. For example, GraphHopper etc will by default return the fastest route, not the shortest route. Don’t use the km (or miles) distances of the fastest GPS routes to optimize the shortest trip in Planner: this leads to a suboptimal solution as shown below:
					</simpara>
					<informalfigure>
					<mediaobject>
						<imageobject>
							<imagedata align="center" fileref="images/_images/UseCasesAndExamples/VehicleRouting/roadDistanceTriangleInequality.png" format="PNG" />
						</imageobject>
						<textobject>
							<phrase>roadDistanceTriangleInequality</phrase>
						</textobject>
					</mediaobject>
					</informalfigure>
					<simpara>
						Contrary to popular belief, most users do not want the shortest route: they want the fastest route instead. They prefer highways over normal roads. They prefer normal roads over dirt roads. In the real world, the fastest and shortest route are rarely the same.
					</simpara>
				</section>
			</section>
			<section xml:id="ex-projectJobScheduling-ref">
				<title>Project job scheduling</title>
				<simpara>
					Schedule all jobs in time and execution mode to minimize project delays. Each job is part of a project. A job can be executed in different ways: each way is an execution mode that implies a different duration but also different resource usages. This is a form of flexible <emphasis>job shop scheduling</emphasis>.
				</simpara>
				<informalfigure>
				<mediaobject>
					<imageobject>
						<imagedata align="center" fileref="images/_images/UseCasesAndExamples/ProjectJobScheduling/projectJobSchedulingUseCase.png" format="PNG" />
					</imageobject>
					<textobject>
						<phrase>projectJobSchedulingUseCase</phrase>
					</textobject>
				</mediaobject>
				</informalfigure>
				<simpara>
					Hard constraints:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							Job precedence: a job can only start when all its predecessor jobs are finished.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Resource capacity: do not use more resources than available.
						</simpara>
						<itemizedlist>
							<listitem>
								<simpara>
									Resources are local (shared between jobs of the same project) or global (shared between all jobs)
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Resources are renewable (capacity available per day) or nonrenewable (capacity available for all days)
								</simpara>
							</listitem>
						</itemizedlist>
					</listitem>
				</itemizedlist>
				<simpara>
					Medium constraints:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							Total project delay: minimize the duration (makespan) of each project.
						</simpara>
					</listitem>
				</itemizedlist>
				<simpara>
					Soft constraints:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							Total makespan: minimize the duration of the whole multi-project schedule.
						</simpara>
					</listitem>
				</itemizedlist>
				<simpara>
					The problem is defined by <link xlink:href="http://gent.cs.kuleuven.be/mista2013challenge/">the MISTA 2013 challenge</link>.
				</simpara>
				<formalpara>
					<title>Problem size</title>
					<para>
						
<screen>Schedule A-1  has  2 projects,  24 jobs,   64 execution modes,  7 resources and  150 resource requirements.
Schedule A-2  has  2 projects,  44 jobs,  124 execution modes,  7 resources and  420 resource requirements.
Schedule A-3  has  2 projects,  64 jobs,  184 execution modes,  7 resources and  630 resource requirements.
Schedule A-4  has  5 projects,  60 jobs,  160 execution modes, 16 resources and  390 resource requirements.
Schedule A-5  has  5 projects, 110 jobs,  310 execution modes, 16 resources and  900 resource requirements.
Schedule A-6  has  5 projects, 160 jobs,  460 execution modes, 16 resources and 1440 resource requirements.
Schedule A-7  has 10 projects, 120 jobs,  320 execution modes, 22 resources and  900 resource requirements.
Schedule A-8  has 10 projects, 220 jobs,  620 execution modes, 22 resources and 1860 resource requirements.
Schedule A-9  has 10 projects, 320 jobs,  920 execution modes, 31 resources and 2880 resource requirements.
Schedule A-10 has 10 projects, 320 jobs,  920 execution modes, 31 resources and 2970 resource requirements.
Schedule B-1  has 10 projects, 120 jobs,  320 execution modes, 31 resources and  900 resource requirements.
Schedule B-2  has 10 projects, 220 jobs,  620 execution modes, 22 resources and 1740 resource requirements.
Schedule B-3  has 10 projects, 320 jobs,  920 execution modes, 31 resources and 3060 resource requirements.
Schedule B-4  has 15 projects, 180 jobs,  480 execution modes, 46 resources and 1530 resource requirements.
Schedule B-5  has 15 projects, 330 jobs,  930 execution modes, 46 resources and 2760 resource requirements.
Schedule B-6  has 15 projects, 480 jobs, 1380 execution modes, 46 resources and 4500 resource requirements.
Schedule B-7  has 20 projects, 240 jobs,  640 execution modes, 61 resources and 1710 resource requirements.
Schedule B-8  has 20 projects, 440 jobs, 1240 execution modes, 42 resources and 3180 resource requirements.
Schedule B-9  has 20 projects, 640 jobs, 1840 execution modes, 61 resources and 5940 resource requirements.
Schedule B-10 has 20 projects, 460 jobs, 1300 execution modes, 42 resources and 4260 resource requirements.</screen>
					</para>
				</formalpara>
			</section>
			<section xml:id="ex-taskAssigning-ref">
				<title>Task assigning</title>
				<simpara>
					Assign each task to a spot in an employee’s queue. Each task has a duration which is affected by the employee’s affinity level with the task’s customer.
				</simpara>
				<simpara>
					Hard constraints:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							Skill: Each task requires one or more skills. The employee must possess all these skills.
						</simpara>
					</listitem>
				</itemizedlist>
				<simpara>
					Soft level 0 constraints:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							Critical tasks: Complete critical tasks first, sooner than major and minor tasks.
						</simpara>
					</listitem>
				</itemizedlist>
				<simpara>
					Soft level 1 constraints:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							Minimize makespan: Reduce the time to complete all tasks.
						</simpara>
						<itemizedlist>
							<listitem>
								<simpara>
									Start with the longest working employee first, then the second longest working employee and so forth, to create fairness and load balancing.
								</simpara>
							</listitem>
						</itemizedlist>
					</listitem>
				</itemizedlist>
				<simpara>
					Soft level 2 constraints:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							Major tasks: Complete major tasks as soon as possible, sooner than minor tasks.
						</simpara>
					</listitem>
				</itemizedlist>
				<simpara>
					Soft level 3 constraints:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							Minor tasks: Complete minor tasks as soon as possible.
						</simpara>
					</listitem>
				</itemizedlist>
				<figure>
					<title>Value proposition</title>
					<mediaobject>
						<imageobject>
							<imagedata align="center" fileref="images/_images/UseCasesAndExamples/TaskAssigning/taskAssigningValueProposition.png" format="PNG" />
						</imageobject>
						<textobject>
							<phrase>taskAssigningValueProposition</phrase>
						</textobject>
					</mediaobject>
				</figure>
				<formalpara>
					<title>Problem size</title>
					<para>
						
<screen>24tasks-8employees   has  24 tasks, 6 skills,  8 employees,   4 task types and  4 customers with a search space of   10^30.
50tasks-5employees   has  50 tasks, 5 skills,  5 employees,  10 task types and 10 customers with a search space of   10^69.
100tasks-5employees  has 100 tasks, 5 skills,  5 employees,  20 task types and 15 customers with a search space of  10^164.
500tasks-20employees has 500 tasks, 6 skills, 20 employees, 100 task types and 60 customers with a search space of 10^1168.</screen>
					</para>
				</formalpara>
				<figure>
					<title>Domain model</title>
					<mediaobject>
						<imageobject>
							<imagedata align="center" fileref="images/_images/UseCasesAndExamples/TaskAssigning/taskAssigningClassDiagram.png" format="PNG" />
						</imageobject>
						<textobject>
							<phrase>taskAssigningClassDiagram</phrase>
						</textobject>
					</mediaobject>
				</figure>
			</section>
			<section xml:id="ex-examination-ref">
				<title>Exam timetabling (ITC 2007 track 1 - Examination)</title>
				<simpara>
					Schedule each exam into a period and into a room. Multiple exams can share the same room during the same period.
				</simpara>
				<informalfigure>
				<mediaobject>
					<imageobject>
						<imagedata align="center" fileref="images/_images/UseCasesAndExamples/ExamTimetabling/examinationTimetablingUseCase.png" format="PNG" />
					</imageobject>
					<textobject>
						<phrase>examinationTimetablingUseCase</phrase>
					</textobject>
				</mediaobject>
				</informalfigure>
				<simpara>
					Hard constraints:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							Exam conflict: Two exams that share students must not occur in the same period.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Room capacity: A room’s seating capacity must suffice at all times.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Period duration: A period’s duration must suffice for all of its exams.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Period related hard constraints (specified per dataset):
						</simpara>
						<itemizedlist>
							<listitem>
								<simpara>
									Coincidence: Two specified exams must use the same period (but possibly another room).
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Exclusion: Two specified exams must not use the same period.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									After: A specified exam must occur in a period after another specified exam’s period.
								</simpara>
							</listitem>
						</itemizedlist>
					</listitem>
					<listitem>
						<simpara>
							Room related hard constraints (specified per dataset):
						</simpara>
						<itemizedlist>
							<listitem>
								<simpara>
									Exclusive: One specified exam should not have to share its room with any other exam.
								</simpara>
							</listitem>
						</itemizedlist>
					</listitem>
				</itemizedlist>
				<simpara>
					Soft constraints (each of which has a parametrized penalty):
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							The same student should not have two exams in a row.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							The same student should not have two exams on the same day.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Period spread: Two exams that share students should be a number of periods apart.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Mixed durations: Two exams that share a room should not have different durations.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Front load: Large exams should be scheduled earlier in the schedule.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Period penalty (specified per dataset): Some periods have a penalty when used.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Room penalty (specified per dataset): Some rooms have a penalty when used.
						</simpara>
					</listitem>
				</itemizedlist>
				<simpara>
					It uses large test data sets of real-life universities.
				</simpara>
				<simpara>
					The problem is defined by <link xlink:href="http://www.cs.qub.ac.uk/itc2007/examtrack/exam_track_index.htm">the International Timetabling Competition 2007 track 1</link>. Geoffrey De Smet finished 4th in that competition with a very early version of Planner. Many improvements have been made since then.
				</simpara>
				<formalpara xml:id="examinationProblemSize">
					<title>Problem Size</title>
					<para>
						
<screen>exam_comp_set1 has  7883 students,  607 exams, 54 periods,  7 rooms,  12 period constraints and  0 room constraints with a search space of 10^1564.
exam_comp_set2 has 12484 students,  870 exams, 40 periods, 49 rooms,  12 period constraints and  2 room constraints with a search space of 10^2864.
exam_comp_set3 has 16365 students,  934 exams, 36 periods, 48 rooms, 168 period constraints and 15 room constraints with a search space of 10^3023.
exam_comp_set4 has  4421 students,  273 exams, 21 periods,  1 rooms,  40 period constraints and  0 room constraints with a search space of  10^360.
exam_comp_set5 has  8719 students, 1018 exams, 42 periods,  3 rooms,  27 period constraints and  0 room constraints with a search space of 10^2138.
exam_comp_set6 has  7909 students,  242 exams, 16 periods,  8 rooms,  22 period constraints and  0 room constraints with a search space of  10^509.
exam_comp_set7 has 13795 students, 1096 exams, 80 periods, 15 rooms,  28 period constraints and  0 room constraints with a search space of 10^3374.
exam_comp_set8 has  7718 students,  598 exams, 80 periods,  8 rooms,  20 period constraints and  1 room constraints with a search space of 10^1678.</screen>
					</para>
				</formalpara>
				<section remap="_domain_model_for_exam_timetabling" xml:id="domain_model_for_exam_timetabling">
					<title>Domain model for Exam timetabling</title>
					<simpara>
						The following diagram shows the main examination domain classes:
					</simpara>
					<figure>
						<title>Examination domain class diagram</title>
						<mediaobject>
							<imageobject>
								<imagedata align="center" fileref="images/_images/UseCasesAndExamples/ExamTimetabling/examinationDomainDiagram.png" format="PNG" />
							</imageobject>
							<textobject>
								<phrase>examinationDomainDiagram</phrase>
							</textobject>
						</mediaobject>
					</figure>
					<simpara>
						Notice that we’ve split up the exam concept into an <literal>Exam</literal> class and a <literal>Topic</literal> class. The <literal>Exam</literal> instances change during solving (this is the planning entity class), when their period or room property changes. The <literal>Topic</literal>, <literal>Period</literal> and <literal>Room</literal> instances never change during solving (these are problem facts, just like some other classes).
					</simpara>
				</section>
			</section>
			<section xml:id="ex-nurseRostering-ref">
				<title>Nurse rostering (INRC 2010)</title>
				<simpara>
					For each shift, assign a nurse to work that shift.
				</simpara>
				<informalfigure>
				<mediaobject>
					<imageobject>
						<imagedata align="center" fileref="images/_images/UseCasesAndExamples/NurseRostering/employeeShiftRosteringUseCase.png" format="PNG" />
					</imageobject>
					<textobject>
						<phrase>employeeShiftRosteringUseCase</phrase>
					</textobject>
				</mediaobject>
				</informalfigure>
				<simpara>
					Hard constraints:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							<emphasis role="strong">No unassigned shifts</emphasis> (built-in): Every shift need to be assigned to an employee.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							<emphasis role="strong">Shift conflict</emphasis>: An employee can have only one shift per day.
						</simpara>
					</listitem>
				</itemizedlist>
				<simpara>
					Soft constraints:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							Contract obligations. The business frequently violates these, so they decided to define these as soft constraints instead of hard constraints.
						</simpara>
						<itemizedlist>
							<listitem>
								<simpara>
									<emphasis role="strong">Minimum and maximum assignments</emphasis>: Each employee needs to work more than x shifts and less than y shifts (depending on their contract).
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Minimum and maximum consecutive working days</emphasis>: Each employee needs to work between x and y days in a row (depending on their contract).
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Minimum and maximum consecutive free days</emphasis>: Each employee needs to be free between x and y days in a row (depending on their contract).
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Minimum and maximum consecutive working weekends</emphasis>: Each employee needs to work between x and y weekends in a row (depending on their contract).
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Complete weekends</emphasis>: Each employee needs to work every day in a weekend or not at all.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Identical shift types during weekend</emphasis>: Each weekend shift for the same weekend of the same employee must be the same shift type.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Unwanted patterns</emphasis>: A combination of unwanted shift types in a row. For example: a late shift followed by an early shift followed by a late shift.
								</simpara>
							</listitem>
						</itemizedlist>
					</listitem>
					<listitem>
						<simpara>
							Employee wishes:
						</simpara>
						<itemizedlist>
							<listitem>
								<simpara>
									<emphasis role="strong">Day on request</emphasis>: An employee wants to work on a specific day.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Day off request</emphasis>: An employee does not want to work on a specific day.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Shift on request</emphasis>: An employee wants to be assigned to a specific shift.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									<emphasis role="strong">Shift off request</emphasis>: An employee does not want to be assigned to a specific shift.
								</simpara>
							</listitem>
						</itemizedlist>
					</listitem>
					<listitem>
						<simpara>
							<emphasis role="strong">Alternative skill</emphasis>: An employee assigned to a skill should have a proficiency in every skill required by that shift.
						</simpara>
					</listitem>
				</itemizedlist>
				<simpara>
					The problem is defined by <link xlink:href="http://www.kuleuven-kortrijk.be/nrpcompetition">the International Nurse Rostering Competition 2010</link>.
				</simpara>
				<figure>
					<title>Value proposition</title>
					<mediaobject>
						<imageobject>
							<imagedata align="center" fileref="images/_images/UseCasesAndExamples/NurseRostering/employeeRosteringValueProposition.png" format="PNG" />
						</imageobject>
						<textobject>
							<phrase>employeeRosteringValueProposition</phrase>
						</textobject>
					</mediaobject>
				</figure>
				<formalpara>
					<title>Problem size</title>
					<para>
						There are three dataset types:
					</para>
				</formalpara>
				<itemizedlist>
					<listitem>
						<simpara>
							sprint: must be solved in seconds.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							medium: must be solved in minutes.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							long: must be solved in hours.
						</simpara>
					</listitem>
				</itemizedlist>
				
<screen>toy1          has 1 skills, 3 shiftTypes, 2 patterns, 1 contracts,  6 employees,  7 shiftDates,  35 shiftAssignments and   0 requests with a search space of   10^27.
toy2          has 1 skills, 3 shiftTypes, 3 patterns, 2 contracts, 20 employees, 28 shiftDates, 180 shiftAssignments and 140 requests with a search space of  10^234.

sprint01      has 1 skills, 4 shiftTypes, 3 patterns, 4 contracts, 10 employees, 28 shiftDates, 152 shiftAssignments and 150 requests with a search space of  10^152.
sprint02      has 1 skills, 4 shiftTypes, 3 patterns, 4 contracts, 10 employees, 28 shiftDates, 152 shiftAssignments and 150 requests with a search space of  10^152.
sprint03      has 1 skills, 4 shiftTypes, 3 patterns, 4 contracts, 10 employees, 28 shiftDates, 152 shiftAssignments and 150 requests with a search space of  10^152.
sprint04      has 1 skills, 4 shiftTypes, 3 patterns, 4 contracts, 10 employees, 28 shiftDates, 152 shiftAssignments and 150 requests with a search space of  10^152.
sprint05      has 1 skills, 4 shiftTypes, 3 patterns, 4 contracts, 10 employees, 28 shiftDates, 152 shiftAssignments and 150 requests with a search space of  10^152.
sprint06      has 1 skills, 4 shiftTypes, 3 patterns, 4 contracts, 10 employees, 28 shiftDates, 152 shiftAssignments and 150 requests with a search space of  10^152.
sprint07      has 1 skills, 4 shiftTypes, 3 patterns, 4 contracts, 10 employees, 28 shiftDates, 152 shiftAssignments and 150 requests with a search space of  10^152.
sprint08      has 1 skills, 4 shiftTypes, 3 patterns, 4 contracts, 10 employees, 28 shiftDates, 152 shiftAssignments and 150 requests with a search space of  10^152.
sprint09      has 1 skills, 4 shiftTypes, 3 patterns, 4 contracts, 10 employees, 28 shiftDates, 152 shiftAssignments and 150 requests with a search space of  10^152.
sprint10      has 1 skills, 4 shiftTypes, 3 patterns, 4 contracts, 10 employees, 28 shiftDates, 152 shiftAssignments and 150 requests with a search space of  10^152.
sprint_hint01 has 1 skills, 4 shiftTypes, 8 patterns, 3 contracts, 10 employees, 28 shiftDates, 152 shiftAssignments and 150 requests with a search space of  10^152.
sprint_hint02 has 1 skills, 4 shiftTypes, 0 patterns, 3 contracts, 10 employees, 28 shiftDates, 152 shiftAssignments and 150 requests with a search space of  10^152.
sprint_hint03 has 1 skills, 4 shiftTypes, 8 patterns, 3 contracts, 10 employees, 28 shiftDates, 152 shiftAssignments and 150 requests with a search space of  10^152.
sprint_late01 has 1 skills, 4 shiftTypes, 8 patterns, 3 contracts, 10 employees, 28 shiftDates, 152 shiftAssignments and 150 requests with a search space of  10^152.
sprint_late02 has 1 skills, 3 shiftTypes, 4 patterns, 3 contracts, 10 employees, 28 shiftDates, 144 shiftAssignments and 139 requests with a search space of  10^144.
sprint_late03 has 1 skills, 4 shiftTypes, 8 patterns, 3 contracts, 10 employees, 28 shiftDates, 160 shiftAssignments and 150 requests with a search space of  10^160.
sprint_late04 has 1 skills, 4 shiftTypes, 8 patterns, 3 contracts, 10 employees, 28 shiftDates, 160 shiftAssignments and 150 requests with a search space of  10^160.
sprint_late05 has 1 skills, 4 shiftTypes, 8 patterns, 3 contracts, 10 employees, 28 shiftDates, 152 shiftAssignments and 150 requests with a search space of  10^152.
sprint_late06 has 1 skills, 4 shiftTypes, 0 patterns, 3 contracts, 10 employees, 28 shiftDates, 152 shiftAssignments and 150 requests with a search space of  10^152.
sprint_late07 has 1 skills, 4 shiftTypes, 0 patterns, 3 contracts, 10 employees, 28 shiftDates, 152 shiftAssignments and 150 requests with a search space of  10^152.
sprint_late08 has 1 skills, 4 shiftTypes, 0 patterns, 3 contracts, 10 employees, 28 shiftDates, 152 shiftAssignments and   0 requests with a search space of  10^152.
sprint_late09 has 1 skills, 4 shiftTypes, 0 patterns, 3 contracts, 10 employees, 28 shiftDates, 152 shiftAssignments and   0 requests with a search space of  10^152.
sprint_late10 has 1 skills, 4 shiftTypes, 0 patterns, 3 contracts, 10 employees, 28 shiftDates, 152 shiftAssignments and 150 requests with a search space of  10^152.

medium01      has 1 skills, 4 shiftTypes, 0 patterns, 4 contracts, 31 employees, 28 shiftDates, 608 shiftAssignments and 403 requests with a search space of  10^906.
medium02      has 1 skills, 4 shiftTypes, 0 patterns, 4 contracts, 31 employees, 28 shiftDates, 608 shiftAssignments and 403 requests with a search space of  10^906.
medium03      has 1 skills, 4 shiftTypes, 0 patterns, 4 contracts, 31 employees, 28 shiftDates, 608 shiftAssignments and 403 requests with a search space of  10^906.
medium04      has 1 skills, 4 shiftTypes, 0 patterns, 4 contracts, 31 employees, 28 shiftDates, 608 shiftAssignments and 403 requests with a search space of  10^906.
medium05      has 1 skills, 4 shiftTypes, 0 patterns, 4 contracts, 31 employees, 28 shiftDates, 608 shiftAssignments and 403 requests with a search space of  10^906.
medium_hint01 has 1 skills, 4 shiftTypes, 7 patterns, 4 contracts, 30 employees, 28 shiftDates, 428 shiftAssignments and 390 requests with a search space of  10^632.
medium_hint02 has 1 skills, 4 shiftTypes, 7 patterns, 3 contracts, 30 employees, 28 shiftDates, 428 shiftAssignments and 390 requests with a search space of  10^632.
medium_hint03 has 1 skills, 4 shiftTypes, 7 patterns, 4 contracts, 30 employees, 28 shiftDates, 428 shiftAssignments and 390 requests with a search space of  10^632.
medium_late01 has 1 skills, 4 shiftTypes, 7 patterns, 4 contracts, 30 employees, 28 shiftDates, 424 shiftAssignments and 390 requests with a search space of  10^626.
medium_late02 has 1 skills, 4 shiftTypes, 7 patterns, 3 contracts, 30 employees, 28 shiftDates, 428 shiftAssignments and 390 requests with a search space of  10^632.
medium_late03 has 1 skills, 4 shiftTypes, 0 patterns, 4 contracts, 30 employees, 28 shiftDates, 428 shiftAssignments and 390 requests with a search space of  10^632.
medium_late04 has 1 skills, 4 shiftTypes, 7 patterns, 3 contracts, 30 employees, 28 shiftDates, 416 shiftAssignments and 390 requests with a search space of  10^614.
medium_late05 has 2 skills, 5 shiftTypes, 7 patterns, 4 contracts, 30 employees, 28 shiftDates, 452 shiftAssignments and 390 requests with a search space of  10^667.

long01        has 2 skills, 5 shiftTypes, 3 patterns, 3 contracts, 49 employees, 28 shiftDates, 740 shiftAssignments and 735 requests with a search space of 10^1250.
long02        has 2 skills, 5 shiftTypes, 3 patterns, 3 contracts, 49 employees, 28 shiftDates, 740 shiftAssignments and 735 requests with a search space of 10^1250.
long03        has 2 skills, 5 shiftTypes, 3 patterns, 3 contracts, 49 employees, 28 shiftDates, 740 shiftAssignments and 735 requests with a search space of 10^1250.
long04        has 2 skills, 5 shiftTypes, 3 patterns, 3 contracts, 49 employees, 28 shiftDates, 740 shiftAssignments and 735 requests with a search space of 10^1250.
long05        has 2 skills, 5 shiftTypes, 3 patterns, 3 contracts, 49 employees, 28 shiftDates, 740 shiftAssignments and 735 requests with a search space of 10^1250.
long_hint01   has 2 skills, 5 shiftTypes, 9 patterns, 3 contracts, 50 employees, 28 shiftDates, 740 shiftAssignments and   0 requests with a search space of 10^1257.
long_hint02   has 2 skills, 5 shiftTypes, 7 patterns, 3 contracts, 50 employees, 28 shiftDates, 740 shiftAssignments and   0 requests with a search space of 10^1257.
long_hint03   has 2 skills, 5 shiftTypes, 7 patterns, 3 contracts, 50 employees, 28 shiftDates, 740 shiftAssignments and   0 requests with a search space of 10^1257.
long_late01   has 2 skills, 5 shiftTypes, 9 patterns, 3 contracts, 50 employees, 28 shiftDates, 752 shiftAssignments and   0 requests with a search space of 10^1277.
long_late02   has 2 skills, 5 shiftTypes, 9 patterns, 4 contracts, 50 employees, 28 shiftDates, 752 shiftAssignments and   0 requests with a search space of 10^1277.
long_late03   has 2 skills, 5 shiftTypes, 9 patterns, 3 contracts, 50 employees, 28 shiftDates, 752 shiftAssignments and   0 requests with a search space of 10^1277.
long_late04   has 2 skills, 5 shiftTypes, 9 patterns, 4 contracts, 50 employees, 28 shiftDates, 752 shiftAssignments and   0 requests with a search space of 10^1277.
long_late05   has 2 skills, 5 shiftTypes, 9 patterns, 3 contracts, 50 employees, 28 shiftDates, 740 shiftAssignments and   0 requests with a search space of 10^1257.</screen>
				<figure>
					<title>Domain model</title>
					<mediaobject>
						<imageobject>
							<imagedata align="center" fileref="images/_images/UseCasesAndExamples/NurseRostering/nurseRosteringClassDiagram.png" format="PNG" />
						</imageobject>
						<textobject>
							<phrase>nurseRosteringClassDiagram</phrase>
						</textobject>
					</mediaobject>
				</figure>
			</section>
			<section xml:id="ex-travelingTournament-ref">
				<title>Traveling tournament problem (TTP)</title>
				<simpara>
					Schedule matches between <emphasis>n</emphasis> teams.
				</simpara>
				<informalfigure>
				<mediaobject>
					<imageobject>
						<imagedata align="center" fileref="images/_images/UseCasesAndExamples/TravellingTournament/travelingTournamentUseCase.png" format="PNG" />
					</imageobject>
					<textobject>
						<phrase>travelingTournamentUseCase</phrase>
					</textobject>
				</mediaobject>
				</informalfigure>
				<simpara>
					Hard constraints:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							Each team plays twice against every other team: once home and once away.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Each team has exactly one match on each timeslot.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							No team must have more than three consecutive home or three consecutive away matches.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							No repeaters: no two consecutive matches of the same two opposing teams.
						</simpara>
					</listitem>
				</itemizedlist>
				<simpara>
					Soft constraints:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							Minimize the total distance traveled by all teams.
						</simpara>
					</listitem>
				</itemizedlist>
				<simpara>
					The problem is defined on <link xlink:href="http://mat.tepper.cmu.edu/TOURN/">Michael Trick’s website (which contains the world records too)</link>.
				</simpara>
				<formalpara>
					<title>Problem size</title>
					<para>
						
<screen>1-nl04     has  6 days,  4 teams and   12 matches with a search space of    10^5.
1-nl06     has 10 days,  6 teams and   30 matches with a search space of   10^19.
1-nl08     has 14 days,  8 teams and   56 matches with a search space of   10^43.
1-nl10     has 18 days, 10 teams and   90 matches with a search space of   10^79.
1-nl12     has 22 days, 12 teams and  132 matches with a search space of  10^126.
1-nl14     has 26 days, 14 teams and  182 matches with a search space of  10^186.
1-nl16     has 30 days, 16 teams and  240 matches with a search space of  10^259.
2-bra24    has 46 days, 24 teams and  552 matches with a search space of  10^692.
3-nfl16    has 30 days, 16 teams and  240 matches with a search space of  10^259.
3-nfl18    has 34 days, 18 teams and  306 matches with a search space of  10^346.
3-nfl20    has 38 days, 20 teams and  380 matches with a search space of  10^447.
3-nfl22    has 42 days, 22 teams and  462 matches with a search space of  10^562.
3-nfl24    has 46 days, 24 teams and  552 matches with a search space of  10^692.
3-nfl26    has 50 days, 26 teams and  650 matches with a search space of  10^838.
3-nfl28    has 54 days, 28 teams and  756 matches with a search space of  10^999.
3-nfl30    has 58 days, 30 teams and  870 matches with a search space of 10^1175.
3-nfl32    has 62 days, 32 teams and  992 matches with a search space of 10^1367.
4-super04  has  6 days,  4 teams and   12 matches with a search space of    10^5.
4-super06  has 10 days,  6 teams and   30 matches with a search space of   10^19.
4-super08  has 14 days,  8 teams and   56 matches with a search space of   10^43.
4-super10  has 18 days, 10 teams and   90 matches with a search space of   10^79.
4-super12  has 22 days, 12 teams and  132 matches with a search space of  10^126.
4-super14  has 26 days, 14 teams and  182 matches with a search space of  10^186.
5-galaxy04 has  6 days,  4 teams and   12 matches with a search space of    10^5.
5-galaxy06 has 10 days,  6 teams and   30 matches with a search space of   10^19.
5-galaxy08 has 14 days,  8 teams and   56 matches with a search space of   10^43.
5-galaxy10 has 18 days, 10 teams and   90 matches with a search space of   10^79.
5-galaxy12 has 22 days, 12 teams and  132 matches with a search space of  10^126.
5-galaxy14 has 26 days, 14 teams and  182 matches with a search space of  10^186.
5-galaxy16 has 30 days, 16 teams and  240 matches with a search space of  10^259.
5-galaxy18 has 34 days, 18 teams and  306 matches with a search space of  10^346.
5-galaxy20 has 38 days, 20 teams and  380 matches with a search space of  10^447.
5-galaxy22 has 42 days, 22 teams and  462 matches with a search space of  10^562.
5-galaxy24 has 46 days, 24 teams and  552 matches with a search space of  10^692.
5-galaxy26 has 50 days, 26 teams and  650 matches with a search space of  10^838.
5-galaxy28 has 54 days, 28 teams and  756 matches with a search space of  10^999.
5-galaxy30 has 58 days, 30 teams and  870 matches with a search space of 10^1175.
5-galaxy32 has 62 days, 32 teams and  992 matches with a search space of 10^1367.
5-galaxy34 has 66 days, 34 teams and 1122 matches with a search space of 10^1576.
5-galaxy36 has 70 days, 36 teams and 1260 matches with a search space of 10^1801.
5-galaxy38 has 74 days, 38 teams and 1406 matches with a search space of 10^2042.
5-galaxy40 has 78 days, 40 teams and 1560 matches with a search space of 10^2301.</screen>
					</para>
				</formalpara>
			</section>
			<section xml:id="ex-cheapTimeScheduling-ref">
				<title>Cheap time scheduling</title>
				<simpara>
					Schedule all tasks in time and on a machine to minimize power cost. Power prices differs in time. This is a form of <emphasis>job shop scheduling</emphasis>.
				</simpara>
				<simpara>
					Hard constraints:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							Start time limits: Each task must start between its earliest start and latest start limit.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Maximum capacity: The maximum capacity for each resource for each machine must not be exceeded.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Startup and shutdown: Each machine must be active in the periods during which it has assigned tasks. Between tasks it is allowed to be idle to avoid startup and shutdown costs.
						</simpara>
					</listitem>
				</itemizedlist>
				<simpara>
					Medium constraints:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							Power cost: Minimize the total power cost of the whole schedule.
						</simpara>
						<itemizedlist>
							<listitem>
								<simpara>
									Machine power cost: Each active or idle machine consumes power, which infers a power cost (depending on the power price during that time).
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Task power cost: Each task consumes power too, which infers a power cost (depending on the power price during its time).
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Machine startup and shutdown cost: Every time a machine starts up or shuts down, an extra cost is inflicted.
								</simpara>
							</listitem>
						</itemizedlist>
					</listitem>
				</itemizedlist>
				<simpara>
					Soft constraints (addendum to the original problem definition):
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							Start early: Prefer starting a task sooner rather than later.
						</simpara>
					</listitem>
				</itemizedlist>
				<simpara>
					The problem is defined by <link xlink:href="https://web.archive.org/web/20180318013828/http://iconchallenge.insight-centre.org/">the ICON challenge</link>.
				</simpara>
				<formalpara>
					<title>Problem size</title>
					<para>
						
<screen>sample01   has 3 resources,   2 machines, 288 periods and   25 tasks with a search space of    10^53.
sample02   has 3 resources,   2 machines, 288 periods and   50 tasks with a search space of   10^114.
sample03   has 3 resources,   2 machines, 288 periods and  100 tasks with a search space of   10^226.
sample04   has 3 resources,   5 machines, 288 periods and  100 tasks with a search space of   10^266.
sample05   has 3 resources,   2 machines, 288 periods and  250 tasks with a search space of   10^584.
sample06   has 3 resources,   5 machines, 288 periods and  250 tasks with a search space of   10^673.
sample07   has 3 resources,   2 machines, 288 periods and 1000 tasks with a search space of  10^2388.
sample08   has 3 resources,   5 machines, 288 periods and 1000 tasks with a search space of  10^2748.
sample09   has 4 resources,  20 machines, 288 periods and 2000 tasks with a search space of  10^6668.
instance00 has 1 resources,  10 machines, 288 periods and  200 tasks with a search space of   10^595.
instance01 has 1 resources,  10 machines, 288 periods and  200 tasks with a search space of   10^599.
instance02 has 1 resources,  10 machines, 288 periods and  200 tasks with a search space of   10^599.
instance03 has 1 resources,  10 machines, 288 periods and  200 tasks with a search space of   10^591.
instance04 has 1 resources,  10 machines, 288 periods and  200 tasks with a search space of   10^590.
instance05 has 2 resources,  25 machines, 288 periods and  200 tasks with a search space of   10^667.
instance06 has 2 resources,  25 machines, 288 periods and  200 tasks with a search space of   10^660.
instance07 has 2 resources,  25 machines, 288 periods and  200 tasks with a search space of   10^662.
instance08 has 2 resources,  25 machines, 288 periods and  200 tasks with a search space of   10^651.
instance09 has 2 resources,  25 machines, 288 periods and  200 tasks with a search space of   10^659.
instance10 has 2 resources,  20 machines, 288 periods and  500 tasks with a search space of  10^1657.
instance11 has 2 resources,  20 machines, 288 periods and  500 tasks with a search space of  10^1644.
instance12 has 2 resources,  20 machines, 288 periods and  500 tasks with a search space of  10^1637.
instance13 has 2 resources,  20 machines, 288 periods and  500 tasks with a search space of  10^1659.
instance14 has 2 resources,  20 machines, 288 periods and  500 tasks with a search space of  10^1643.
instance15 has 3 resources,  40 machines, 288 periods and  500 tasks with a search space of  10^1782.
instance16 has 3 resources,  40 machines, 288 periods and  500 tasks with a search space of  10^1778.
instance17 has 3 resources,  40 machines, 288 periods and  500 tasks with a search space of  10^1764.
instance18 has 3 resources,  40 machines, 288 periods and  500 tasks with a search space of  10^1769.
instance19 has 3 resources,  40 machines, 288 periods and  500 tasks with a search space of  10^1778.
instance20 has 3 resources,  50 machines, 288 periods and 1000 tasks with a search space of  10^3689.
instance21 has 3 resources,  50 machines, 288 periods and 1000 tasks with a search space of  10^3678.
instance22 has 3 resources,  50 machines, 288 periods and 1000 tasks with a search space of  10^3706.
instance23 has 3 resources,  50 machines, 288 periods and 1000 tasks with a search space of  10^3676.
instance24 has 3 resources,  50 machines, 288 periods and 1000 tasks with a search space of  10^3681.
instance25 has 3 resources,  60 machines, 288 periods and 1000 tasks with a search space of  10^3774.
instance26 has 3 resources,  60 machines, 288 periods and 1000 tasks with a search space of  10^3737.
instance27 has 3 resources,  60 machines, 288 periods and 1000 tasks with a search space of  10^3744.
instance28 has 3 resources,  60 machines, 288 periods and 1000 tasks with a search space of  10^3731.
instance29 has 3 resources,  60 machines, 288 periods and 1000 tasks with a search space of  10^3746.
instance30 has 4 resources,  70 machines, 288 periods and 2000 tasks with a search space of  10^7718.
instance31 has 4 resources,  70 machines, 288 periods and 2000 tasks with a search space of  10^7740.
instance32 has 4 resources,  70 machines, 288 periods and 2000 tasks with a search space of  10^7686.
instance33 has 4 resources,  70 machines, 288 periods and 2000 tasks with a search space of  10^7672.
instance34 has 4 resources,  70 machines, 288 periods and 2000 tasks with a search space of  10^7695.
instance35 has 4 resources,  80 machines, 288 periods and 2000 tasks with a search space of  10^7807.
instance36 has 4 resources,  80 machines, 288 periods and 2000 tasks with a search space of  10^7814.
instance37 has 4 resources,  80 machines, 288 periods and 2000 tasks with a search space of  10^7764.
instance38 has 4 resources,  80 machines, 288 periods and 2000 tasks with a search space of  10^7736.
instance39 has 4 resources,  80 machines, 288 periods and 2000 tasks with a search space of  10^7783.
instance40 has 4 resources,  90 machines, 288 periods and 4000 tasks with a search space of 10^15976.
instance41 has 4 resources,  90 machines, 288 periods and 4000 tasks with a search space of 10^15935.
instance42 has 4 resources,  90 machines, 288 periods and 4000 tasks with a search space of 10^15887.
instance43 has 4 resources,  90 machines, 288 periods and 4000 tasks with a search space of 10^15896.
instance44 has 4 resources,  90 machines, 288 periods and 4000 tasks with a search space of 10^15885.
instance45 has 4 resources, 100 machines, 288 periods and 5000 tasks with a search space of 10^20173.
instance46 has 4 resources, 100 machines, 288 periods and 5000 tasks with a search space of 10^20132.
instance47 has 4 resources, 100 machines, 288 periods and 5000 tasks with a search space of 10^20126.
instance48 has 4 resources, 100 machines, 288 periods and 5000 tasks with a search space of 10^20110.
instance49 has 4 resources, 100 machines, 288 periods and 5000 tasks with a search space of 10^20078.</screen>
					</para>
				</formalpara>
			</section>
			<section xml:id="ex-investment-ref">
				<title>Investment asset class allocation (Portfolio Optimization)</title>
				<simpara>
					Decide the relative quantity to invest in each asset class.
				</simpara>
				<simpara>
					Hard constraints:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							Risk maximum: the total standard deviation must not be higher than the standard deviation maximum.
						</simpara>
						<itemizedlist>
							<listitem>
								<simpara>
									Total standard deviation calculation takes asset class correlations into account by applying <link xlink:href="https://en.wikipedia.org/wiki/Modern_portfolio_theory">Markowitz Portfolio Theory</link>.
								</simpara>
							</listitem>
						</itemizedlist>
					</listitem>
					<listitem>
						<simpara>
							Region maximum: Each region has a quantity maximum.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Sector maximum: Each sector has a quantity maximum.
						</simpara>
					</listitem>
				</itemizedlist>
				<simpara>
					Soft constraints:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							Maximize expected return.
						</simpara>
					</listitem>
				</itemizedlist>
				<formalpara>
					<title>Problem size</title>
					<para>
						
<screen>de_smet_1 has 1 regions, 3 sectors and 11 asset classes with a search space of 10^4.
irrinki_1 has 2 regions, 3 sectors and 6 asset classes with a search space of 10^3.</screen>
					</para>
				</formalpara>
				<simpara>
					Larger datasets have not been created or tested yet, but should not pose a problem. A good source of data is <link xlink:href="https://www.portfoliovisualizer.com/asset-correlations">this Asset Correlation website</link>.
				</simpara>
			</section>
			<section xml:id="ex-conferenceScheduling-ref">
				<title>Conference scheduling</title>
				<simpara>
					Assign each conference talk to a timeslot and a room. Timeslots can overlap. Read/write to/from an <literal>*.xlsx</literal> file that can be edited with LibreOffice or Excel too.
				</simpara>
				<simpara>
					Hard constraints:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							Talk type of timeslot: The type of a talk must match the timeslot’s talk type.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Room unavailable timeslots: A talk’s room must be available during the talk’s timeslot.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Room conflict: Two talks can’t use the same room during overlapping timeslots.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Speaker unavailable timeslots: Every talk’s speaker must be available during the talk’s timeslot.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Speaker conflict: Two talks can’t share a speaker during overlapping timeslots.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Generic purpose timeslot and room tags
						</simpara>
						<itemizedlist>
							<listitem>
								<simpara>
									Speaker required timeslot tag: If a speaker has a required timeslot tag, then all his/her talks must be assigned to a timeslot with that tag.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Speaker prohibited timeslot tag: If a speaker has a prohibited timeslot tag, then all his/her talks cannot be assigned to a timeslot with that tag.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Talk required timeslot tag: If a talk has a required timeslot tag, then it must be assigned to a timeslot with that tag.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Talk prohibited timeslot tag: If a talk has a prohibited timeslot tag, then it cannot be assigned to a timeslot with that tag.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Speaker required room tag: If a speaker has a required room tag, then all his/her talks must be assigned to a room with that tag.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Speaker prohibited room tag: If a speaker has a prohibited room tag, then all his/her talks cannot be assigned to a room with that tag.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Talk required room tag: If a talk has a required room tag, then it must be assigned to a room with that tag.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Talk prohibited room tag: If a talk has a prohibited room tag, then it cannot be assigned to a room with that tag.
								</simpara>
							</listitem>
						</itemizedlist>
					</listitem>
					<listitem>
						<simpara>
							Talk mutually-exclusive-talks tag: Talks that share such a tag must not be scheduled in overlapping timeslots.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Talk prerequisite talks: A talk must be scheduled after all its prerequisite talks.
						</simpara>
					</listitem>
				</itemizedlist>
				<simpara>
					Soft constraints:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							Theme track conflict: Minimize the number of talks that share a same theme tag during overlapping timeslots.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Sector conflict: Minimize the number of talks that share a same sector tag during overlapping timeslots.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Content audience level flow violation: For every content tag, schedule the introductory talks before the advanced talks.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Audience level diversity: For every timeslot, maximize the number of talks with a different audience level.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Language diversity: For every timeslot, maximize the number of talks with a different language.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Generic purpose timeslot and room tags
						</simpara>
						<itemizedlist>
							<listitem>
								<simpara>
									Speaker preferred timeslot tag: If a speaker has a preferred timeslot tag, then all his/her talks should be assigned to a timeslot with that tag.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Speaker undesired timeslot tag: If a speaker has an undesired timeslot tag, then all his/her talks should not be assigned to a timeslot with that tag.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Talk preferred timeslot tag: If a talk has a preferred timeslot tag, then it should be assigned to a timeslot with that tag.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Talk undesired timeslot tag: If a talk has an undesired timeslot tag, then it should not be assigned to a timeslot with that tag.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Speaker preferred room tag: If a speaker has a preferred room tag, then all his/her talks should be assigned to a room with that tag.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Speaker undesired room tag: If a speaker has an undesired room tag, then all his/her talks should not be assigned to a room with that tag.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Talk preferred room tag: If a talk has a preferred room tag, then it should be assigned to a room with that tag.
								</simpara>
							</listitem>
							<listitem>
								<simpara>
									Talk undesired room tag: If a talk has an undesired room tag, then it should not be assigned to a room with that tag.
								</simpara>
							</listitem>
						</itemizedlist>
					</listitem>
					<listitem>
						<simpara>
							Same day talks: All talks that share a same theme tag or content tag should be scheduled in the minimum number of days (ideally in the same day).
						</simpara>
					</listitem>
				</itemizedlist>
				<figure>
					<title>Value proposition</title>
					<mediaobject>
						<imageobject>
							<imagedata align="center" fileref="images/_images/UseCasesAndExamples/ConferenceScheduling/conferenceSchedulingValueProposition.png" format="PNG" />
						</imageobject>
						<textobject>
							<phrase>conferenceSchedulingValueProposition</phrase>
						</textobject>
					</mediaobject>
				</figure>
				<formalpara>
					<title>Problem size</title>
					<para>
						
<screen>18talks-6timeslots-5rooms    has  18 talks,  6 timeslots and  5 rooms with a search space of  10^26.
36talks-12timeslots-5rooms   has  36 talks, 12 timeslots and  5 rooms with a search space of  10^64.
72talks-12timeslots-10rooms  has  72 talks, 12 timeslots and 10 rooms with a search space of 10^149.
108talks-18timeslots-10rooms has 108 talks, 18 timeslots and 10 rooms with a search space of 10^243.
216talks-18timeslots-20rooms has 216 talks, 18 timeslots and 20 rooms with a search space of 10^552.</screen>
					</para>
				</formalpara>
			</section>
			<section xml:id="ex-rockTour-ref">
				<title>Rock tour</title>
				<simpara>
					Drive the rock bus from show to show, but schedule shows only on available days.
				</simpara>
				<simpara>
					Hard constraints:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							Schedule every required show.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Schedule as many shows as possible.
						</simpara>
					</listitem>
				</itemizedlist>
				<simpara>
					Medium constraints:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							Maximize revenue opportunity.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Minimize driving time.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Visit sooner than later.
						</simpara>
					</listitem>
				</itemizedlist>
				<simpara>
					Soft constraints:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							Avoid long driving times.
						</simpara>
					</listitem>
				</itemizedlist>
				<formalpara>
					<title>Problem size</title>
					<para>
						
<screen>47shows has 47 shows with a search space of 10^59.</screen>
					</para>
				</formalpara>
			</section>
			<section xml:id="ex-flightCrewScheduling-ref">
				<title>Flight crew scheduling</title>
				<simpara>
					Assign flights to pilots and flight attendants.
				</simpara>
				<simpara>
					Hard constraints:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							Required skill: each flight assignment has a required skill. For example, flight AB0001 requires 2 pilots and 3 flight attendants.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Flight conflict: each employee can only attend one flight at the same time
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Transfer between two flights: between two flights, an employee must be able to transfer from the arrival airport to the departure airport. For example, Ann arrives in Brussels at 10:00 and departs in Amsterdam at 15:00.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Employee unavailability: the employee must be available on the day of the flight. For example, Ann is on PTO on 1-Feb.
						</simpara>
					</listitem>
				</itemizedlist>
				<simpara>
					Soft constraints:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							First assignment departing from home
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Last assignment arriving at home
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							Load balance flight duration total per employee
						</simpara>
					</listitem>
				</itemizedlist>
				<formalpara>
					<title>Problem size</title>
					<para>
						
<screen>175flights-7days-Europe  has 2 skills, 50 airports, 150 employees, 175 flights and  875 flight assignments with a search space of  10^1904.
700flights-28days-Europe has 2 skills, 50 airports, 150 employees, 700 flights and 3500 flight assignments with a search space of  10^7616.
875flights-7days-Europe  has 2 skills, 50 airports, 750 employees, 875 flights and 4375 flight assignments with a search space of 10^12578.
175flights-7days-US      has 2 skills, 48 airports, 150 employees, 175 flights and  875 flight assignments with a search space of  10^1904.</screen>
					</para>
				</formalpara>
			</section>
		</chapter>
	</part>
	<appendix xml:id="versioning-information">
		<title>Versioning information</title>
		<simpara>
			Documentation last updated on Monday, January 18, 2021.
		</simpara>
	</appendix>
	<appendix xml:id="author-group">
		<title>Contact information</title>
		<simpara>
			Red Hat Process Automation Manager documentation team: <link xlink:href="mailto:brms-docs@redhat.com">brms-docs@redhat.com</link>
		</simpara>
	</appendix>
</book>

