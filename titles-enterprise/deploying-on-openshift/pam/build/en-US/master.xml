<?xml version="1.0" encoding="UTF-8"?>
<?asciidoc-toc?>
<?asciidoc-numbered?>
<book xmlns="http://docbook.org/ns/docbook" xmlns:xl="http://www.w3.org/1999/xlink" version="5.0">
<info>
<title>Deploying Red Hat Process Automation Manager on Red Hat OpenShift Container Platform</title>
<date>2021-01-26</date>
<productname>Red Hat Process Automation Manager</productname>
<productnumber>7.10</productnumber>
<subtitle>
</subtitle>
<abstract>
	<para>This document describes how to deploy a variety of Red Hat Process Automation Manager environments on Red Hat OpenShift Container Platform, such as an authoring environment, a managed server environment, an immutable server environment, and other supported environment options.</para>
</abstract>
<xi:include href="Common_Content/Legal_Notice.xml" xmlns:xi="http://www.w3.org/2001/XInclude" />
</info>
<preface>
<title>Preface</title>
<simpara>As a developer or system administrator, you can deploy a variety of Red Hat Process Automation Manager environments on Red Hat OpenShift Container Platform, such as an authoring environment, a managed server environment, an immutable server environment, and other supported environment options.</simpara>
</preface>
<preface xml:id="snip-conscious-language_deploying-on-openshift">
<title>Making open source more inclusive</title>
<simpara>Red Hat is committed to replacing problematic language in our code, documentation, and web properties. We are beginning with these four terms: master, slave, blacklist, and whitelist. Because of the enormity of this endeavor, these changes will be implemented gradually over several upcoming releases. For more details, see <link xl:href="https://www.redhat.com/en/blog/making-open-source-more-inclusive-eradicating-problematic-language"><emphasis>our CTO Chris Wright&#8217;s message</emphasis></link>.</simpara>
</preface>
<part xml:id="assembly-openshift-operator">
<title>Deploying a Red Hat Process Automation Manager environment on Red Hat OpenShift Container Platform using Operators</title>
<partintro>
<simpara>As a system engineer, you can deploy a Red Hat Process Automation Manager environment on Red Hat OpenShift Container Platform version 4 to provide an infrastructure to develop or execute
services, process applications,
and other business assets. You can use OpenShift Operators to deploy the environment defined in a structured YAML file and to maintain and modify this environment as necessary.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>A Red Hat OpenShift Container Platform version 4 environment is available. For the exact versions of Red Hat OpenShift Container Platform that the current release supports, see <link xl:href="https://access.redhat.com/articles/3405381">Red Hat Process Automation Manager 7 Supported Configurations</link>.</simpara>
</listitem>
<listitem>
<simpara>The OpenShift project for the deployment is created.</simpara>
</listitem>
<listitem>
<simpara>You are logged into the project using the OpenShift web console.</simpara>
</listitem>
<listitem>
<simpara>The following resources are available on the OpenShift cluster. Depending on the application load, higher resource allocation might be necessary for acceptable performance.</simpara>
<itemizedlist>
<listitem>
<simpara>For an authoring environment, 4 gigabytes of memory and 2 virtual CPU cores for the Business Central pod. In a high-availability deployment, these resources are required for each replica and two replicas are created by default.</simpara>
</listitem>
<listitem>
<simpara>For a production or immutable environment, 2 gigabytes of memory and 1 virtual CPU core for each replica of the Business Central Monitoring pod.</simpara>
</listitem>
<listitem>
<simpara>2 gigabytes of memory and 1 virtual CPU core for each replica of each KIE Server pod.</simpara>
</listitem>
<listitem>
<simpara>1 gigabyte of memory and half a virtual CPU core for each replica of a Smart Router pod.</simpara>
</listitem>
<listitem>
<simpara>In a high-availability authoring deployment, additional resources according to the configured defaults are required for the
MySQL, Red Hat AMQ, and Red Hat Data Grid
pods.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Dynamic persistent volume (PV) provisioning is enabled. Alternatively, if dynamic PV provisioning is not enabled,  enough persistent volumes must be available. By default, the deployed components require the following PV sizes:</simpara>
<itemizedlist>
<listitem>
<simpara>Each KIE Server deployment by default requires one 1Gi PV for the database. You can change the database PV size. You can deploy multiple KIE Servers; each requires a separate database PV. This requirement does not apply if you use an external database server.</simpara>
</listitem>
<listitem>
<simpara>By default, Business Central requires one 1Gi PV. You can change the PV size for Business Central persistent storage.</simpara>
</listitem>
<listitem>
<simpara>Business Central Monitoring requires one 64Mi PV.</simpara>
</listitem>
<listitem>
<simpara>Smart Router requires one 64Mi PV.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>If you intend to deploy a high-availability authoring
environment or any environment with Business Central Monitoring pods,
your OpenShift environment supports persistent volumes with <literal>ReadWriteMany</literal> mode. If your environment does not support this mode, you can use NFS to provision the volumes. For information about access mode support in OpenShift public and dedicated clouds, see <link xl:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/4.6/html/storage/understanding-persistent-storage#pv-access-modes_understanding-persistent-storage">Access Modes</link> in Red Hat OpenShift Container Platform documentation.</simpara>
</listitem>
</itemizedlist>
</partintro>
<chapter xml:id="ba-openshift-overview-con_openshift-operator">
<title>Overview of Red Hat Process Automation Manager on Red Hat OpenShift Container Platform</title>
<simpara>You can deploy Red Hat Process Automation Manager into a Red Hat OpenShift Container Platform environment.</simpara>
<simpara>In this solution, components of Red Hat Process Automation Manager are deployed as separate OpenShift pods. You can scale each of the pods up and down individually to provide as few or as many containers as required for a particular component. You can use standard OpenShift methods to manage the pods and balance the load.</simpara>
<simpara>The following key components of Red Hat Process Automation Manager are available on OpenShift:</simpara>
<itemizedlist>
<listitem>
<simpara>KIE Server, also known as <emphasis>Execution Server</emphasis>, is the infrastructure element that runs decision
services, process applications,
and other deployable assets (collectively referred to as <emphasis>services</emphasis>) . All logic of the services runs on execution servers.</simpara>
<simpara>A database server is normally required for KIE Server. You can provide a database server in another OpenShift pod or configure an execution server on OpenShift to use any other database server. Alternatively, KIE Server can use an H2 database; in this case, you cannot scale the pod.</simpara>
<simpara>In some templates, you can scale up a KIE Server pod to provide as many copies as required, running on the same host or different hosts. As you scale a pod up or down, all of its copies
use the same database server and
run the same services. OpenShift provides load balancing and a request can be handled by any of the pods.</simpara>
<simpara>You can deploy a separate KIE Server pod to run a different group of services. That pod can also be scaled up or down. You can have as many separate replicated KIE Server pods as required.</simpara>
</listitem>
<listitem>
<simpara>Business Central is a web-based interactive environment used for authoring services. It also provides a management
and monitoring
console. You can use Business Central to develop services and deploy them to KIE Servers.
You can also use Business Central to monitor the execution of processes.</simpara>
<simpara>Business Central is a centralized application. However, you can configure it for high availability, where multiple pods run and share the same data.</simpara>
<simpara>Business Central includes a Git repository that holds the source for the services that you develop on it. It also includes a built-in Maven repository. Depending on configuration, Business Central can place the compiled services (KJAR files) into the built-in Maven repository or (if configured) into an external Maven repository.</simpara>
</listitem>
<listitem>
<simpara>Business Central Monitoring is a web-based management and monitoring console. It can manage the deployment of services to KIE Servers and provide monitoring information, but does not include authoring capabilities. You can use this component to manage staging and production environments.</simpara>
</listitem>
<listitem>
<simpara>Smart Router is an optional layer between KIE Servers and other components that interact with them. When your environment includes many services running on different KIE Servers, Smart Router provides a single endpoint to all client applications. A client application can make a REST API call that requires any service. Smart Router automatically calls the KIE Server that can process a particular request.</simpara>
</listitem>
</itemizedlist>
<simpara>You can arrange these and other components into various environment configurations within OpenShift.</simpara>
<section xml:id="architecture-authoring-con-openshift-operator">
<title>Architecture of an authoring environment</title>
<simpara>In Red Hat Process Automation Manager, the Business Central component provides a web-based interactive user interface for authoring services. The KIE Server component runs the services.</simpara>
<simpara>The KIE Server uses a database server to store the state of process services.</simpara>
<simpara>You can also use Business Central to deploy services onto a KIE Server.  You can use several KIE Servers to run different services and control the servers from the same Business Central.</simpara>
<bridgehead xml:id="_single_authoring_environment" renderas="sect3">Single authoring environment</bridgehead>
<simpara>In a single authoring environment, only one instance of Business Central is running. Multiple users can access its web interface at the same time, however the performance can be limited and there is no failover capability.</simpara>
<simpara>Business Central includes a built-in Maven repository that stores the built versions of the services that you develop (KJAR files/artifacts). You can use your continuous integration and continuous deployment (CICD) tools to retrieve these artifacts from the repository and move them as necessary.</simpara>
<simpara>Business Central saves the source code in a built-in Git repository, stored in the <literal>.niogit</literal> directory. It uses a built-in indexing mechanism to index the assets in your services.</simpara>
<simpara>Business Central uses persistent storage for the Maven repository and for the Git repository.</simpara>
<simpara>A single authoring environment, by default, includes one KIE Server.
This KIE Server uses a built-in H2 database engine to store the state of process services.</simpara>
<simpara>A single authoring environment can use the <emphasis>controller strategy</emphasis>.
Business Central includes the <emphasis>Controller</emphasis>, a component that can manage KIE Servers. When you configure a KIE Server to connect to Business Central, the KIE Server uses a REST API to connect to the Controller. This connection opens a persistent WebSocket. In an OpenShift deployment that uses the controller strategy, each KIE Server is initially configured to connect to the Business Central Controller.</simpara>
<simpara>When you use the Business Central user interface to deploy or manage a service on the KIE Server, the KIE Server receives the request through the Controller connection WebSocket. To deploy a service, the KIE Server requests the necessary artifact from the Maven repository that is a part of Business Central.</simpara>
<simpara>Client applications use a REST API to use services that run on the KIE Server.</simpara>
<figure>
<title>Architecture diagram for a single authoring environment</title>
<mediaobject>
<imageobject>
<imagedata fileref="_images/Overview/architecture-authoring-nonha.svg"/>
</imageobject>
<textobject><phrase>architecture authoring nonha</phrase></textobject>
</mediaobject>
</figure>
<bridgehead xml:id="_clustering_kie_servers_and_using_multiple_kie_servers" renderas="sect3">Clustering KIE Servers and using multiple KIE Servers</bridgehead>
<simpara>You can scale a KIE Server pod to run a clustered KIE Server environment.
To scale a KIE Server, you must ensure that it uses a database server in a separate pod or an external database server, and not a built-in H2 database engine.</simpara>
<simpara>In a clustered deployment, several instances of the KIE Server run the same services. These servers can connect to the Business Central Controller using the same server ID, so they can receive the same requests from the controller. Red Hat OpenShift Container Platform provides load-balancing between the servers.
Decision services and business optimizer services that run on a clustered KIE Server
must be stateless, because requests from the same client might be processed by different instances.</simpara>
<simpara>You can also deploy several independent KIE Servers to run different services. In this case, the servers connect to the Business Central Controller with different server ID values. You can use the Business Central UI to deploy services to each of the servers.</simpara>
<bridgehead xml:id="_smart_router" renderas="sect3">Smart Router</bridgehead>
<simpara>The optional Smart Router component provides a layer between client applications and KIE Servers. It can be useful if you are using several independent KIE Servers.</simpara>
<simpara>The client application can use services running on different KIE Servers, but always connects to the Smart Router. The Smart Router automatically passes the request to the KIE Servers that runs the required service. The Smart Router also enables management of service versions and provides an additional load-balancing layer.</simpara>
<bridgehead xml:id="_high_availability_authoring_environment" renderas="sect3">High-availability authoring environment</bridgehead>
<simpara>In a high-availability (HA) authoring environment, the Business Central pod is scaled, so several instances of Business Central are running. Red Hat OpenShift Container Platform provides load balancing for user requests. This environment provides optimal performance for multiple users and supports failover.</simpara>
<simpara>Each instance of Business Central includes the Maven repository for the built artifacts and uses the <literal>.niogit</literal> Git repository for source code. The instances use shared persistent storage for the repositories. A persistent volume with <literal>ReadWriteMany</literal> access is required for this storage.</simpara>
<simpara>An instance of Red Hat DataGrid provides indexing of all projects and assets developed in Business Central.</simpara>
<simpara>An instance of Red Hat AMQ propagates Java CDI messages between all instances of Business Central. For example, when a new project is created or when an asset is locked or modified on one of the instances, this information is immediately reflected in all other instances.</simpara>
<simpara>The controller strategy is not suitable for clustered deployment. In an OpenShift deployment, a high-availability Business Central must manage KIE Servers using the <emphasis>OpenShift startup strategy</emphasis>.</simpara>
<simpara>Each KIE Server deployment (which can be scaled) creates a ConfigMap that reflects its current state. The Business Central discovers all KIE Servers by reading their ConfigMaps.</simpara>
<simpara>When the user requests a change in KIE Server configuration (for example, deploys or undeploys a service), Business Central initiates a connection to the KIE Server and sends a REST API request. The KIE Server changes the ConfigMap to reflect the new configuration state and then triggers its own redeployment, so that all instances are redeployed and reflect the new configuration.</simpara>
<simpara>You can deploy several independent KIE Servers in your OpenShift environment. Each of the KIE Servers has a separate ConfigMap with the necessary configuration. You can scale each of the KIE Servers separately.</simpara>
<simpara>You can include Smart Router in the OpenShift deployment.</simpara>
<figure>
<title>Architecture diagram for a high-availability authoring environment</title>
<mediaobject>
<imageobject>
<imagedata fileref="_images/Overview/architecture-authoring-ha.svg"/>
</imageobject>
<textobject><phrase>architecture authoring ha</phrase></textobject>
</mediaobject>
</figure>
</section>
</chapter>
<chapter xml:id="dm-openshift-prepare-con_openshift-operator">
<title>Preparation for deploying Red Hat Process Automation Manager in your OpenShift environment</title>
<simpara>Before deploying Red Hat Process Automation Manager in your OpenShift environment, you must complete several procedures. You do not need to repeat these procedures if you want to deploy additional images, for example, for new versions of
processes or for other processes.</simpara>
<note>
<simpara>If you are deploying a trial environment, complete the procedure described in
<xref linkend="registry-authentication-proc_openshift-operator"/>
and do not complete any other preparation procedures.</simpara>
</note>
<section xml:id="registry-authentication-proc_openshift-operator">
<title>Ensuring your environment is authenticated to the Red Hat registry</title>
<simpara>To deploy Red Hat Process Automation Manager components of Red Hat OpenShift Container Platform, you must ensure that OpenShift can download the correct images from the Red Hat registry.</simpara>
<simpara>OpenShift must be configured to authenticate with the Red Hat registry using your service account user name and password. This configuration is specific for a namespace, and if operators work, the configuration is already completed for the <literal>openshift</literal> namespace.</simpara>
<simpara>However, if the image streams for Red Hat Process Automation Manager are not found in the <literal>openshift</literal> namespace or if the operator is configured to update Red Hat Process Automation Manager to a new version automatically, the operator needs to download images into the namespace of your project. You must complete the authentication configuration for this namespace.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Ensure you are logged in to OpenShift with the <literal>oc</literal> command and that your project is active.</simpara>
</listitem>
<listitem>
<simpara>Complete the steps documented in <link xl:href="https://access.redhat.com/RegistryAuthentication#registry-service-accounts-for-shared-environments-4">Registry Service Accounts for Shared Environments</link>. You must log in to Red Hat Customer Portal to access the document and to complete the steps to create a registry service account.</simpara>
</listitem>
<listitem>
<simpara>Select the <emphasis role="strong">OpenShift Secret</emphasis> tab and click the link under <emphasis role="strong">Download secret</emphasis> to download the YAML secret file.</simpara>
</listitem>
<listitem>
<simpara>View the downloaded file and note the name that is listed in the <literal>name:</literal> entry.</simpara>
</listitem>
<listitem>
<simpara>Run the following commands:</simpara>
<screen>oc create -f &lt;file_name&gt;.yaml
oc secrets link default &lt;secret_name&gt; --for=pull
oc secrets link builder &lt;secret_name&gt; --for=pull</screen>
<simpara>Replace <literal>&lt;file_name&gt;</literal> with the name of the downloaded file and <literal>&lt;secret_name&gt;</literal> with the name that is listed in the <literal>name:</literal> entry of the file.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="secrets-kie-create-proc_openshift-operator">
<title>Creating the secrets for KIE Server</title>
<simpara>OpenShift uses objects called <emphasis>secrets</emphasis> to hold sensitive information such as passwords or keystores. For more information about OpenShift secrets, see
<link xl:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/4.6/html/builds/creating-build-inputs#builds-secrets-overview_creating-build-inputs">What is a secret</link>
in the Red Hat OpenShift Container Platform documentation.</simpara>
<simpara>In order to provide HTTPS access, KIE Server uses an SSL certificate. The deployment can create a sample secret automatically. However, in production environments you must create an SSL certificate for KIE Server and provide it to your OpenShift environment as a secret.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Generate an SSL keystore with a private and public key for SSL encryption for KIE Server. For more information on how to create a keystore with self-signed or purchased SSL certificates, see <link xl:href="https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.1/html-single/Security_Guide/index.html#Generate_a_SSL_Encryption_Key_and_Certificate">Generate a SSL Encryption Key and Certificate</link>.</simpara>
<note>
<simpara>In a production environment, generate a valid signed certificate that matches the expected URL for KIE Server.</simpara>
</note>
</listitem>
<listitem>
<simpara>Save the keystore in a file named <literal>keystore.jks</literal>.</simpara>
</listitem>
<listitem>
<simpara>Record the name of the certificate. The default value for this name in Red Hat Process Automation Manager configuration is <literal>jboss</literal>.</simpara>
</listitem>
<listitem>
<simpara>Record the password of the keystore file. The default value for this name in Red Hat Process Automation Manager configuration is <literal>mykeystorepass</literal>.</simpara>
</listitem>
<listitem>
<simpara>Use the <literal>oc</literal> command to generate a secret named <literal>kieserver-app-secret</literal> from the new keystore file:</simpara>
<screen>$ oc create secret generic kieserver-app-secret --from-file=keystore.jks</screen>
</listitem>
</orderedlist>
</section>
<section xml:id="secrets-central-create-proc_openshift-operator">
<title>Creating the secrets for Business Central</title>
<simpara>In order to provide HTTPS access, Business Central uses an SSL certificate. The deployment can create a sample secret automatically. However, in production environments you must create an SSL certificate for Business Central and provide it to your OpenShift environment as a secret.</simpara>
<simpara>Do not use the same certificate and keystore for Business Central and KIE Server.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Generate an SSL keystore with a private and public key for SSL encryption for KIE Server. For more information on how to create a keystore with self-signed or purchased SSL certificates, see <link xl:href="https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.1/html-single/Security_Guide/index.html#Generate_a_SSL_Encryption_Key_and_Certificate">Generate a SSL Encryption Key and Certificate</link>.</simpara>
<note>
<simpara>In a production environment, generate a valid signed certificate that matches the expected URL for Business Central.</simpara>
</note>
</listitem>
<listitem>
<simpara>Save the keystore in a file named <literal>keystore.jks</literal>.</simpara>
</listitem>
<listitem>
<simpara>Record the name of the certificate. The default value for this name in Red Hat Process Automation Manager configuration is <literal>jboss</literal>.</simpara>
</listitem>
<listitem>
<simpara>Record the password of the keystore file. The default value for this name in Red Hat Process Automation Manager configuration is <literal>mykeystorepass</literal>.</simpara>
</listitem>
<listitem>
<simpara>Use the <literal>oc</literal> command to generate a secret named <literal>businesscentral-app-secret</literal> from the new keystore file:</simpara>
<screen>$ oc create secret generic businesscentral-app-secret --from-file=keystore.jks</screen>
</listitem>
</orderedlist>
</section>
<section xml:id="secrets-amq-create-proc_openshift-operator">
<title>Creating the secrets for the AMQ broker connection</title>
<simpara>If you want to connect any KIE Server to an AMQ broker and to use SSL for the AMQ broker connection, you must create an SSL certificate for the connection and provide it to your OpenShift environment as a secret.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Generate an SSL keystore with a private and public key for SSL encryption for KIE Server. For more information on how to create a keystore with self-signed or purchased SSL certificates, see <link xl:href="https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.1/html-single/Security_Guide/index.html#Generate_a_SSL_Encryption_Key_and_Certificate">Generate a SSL Encryption Key and Certificate</link>.</simpara>
<note>
<simpara>In a production environment, generate a valid signed certificate that matches the expected URL for the AMQ broker connection.</simpara>
</note>
</listitem>
<listitem>
<simpara>Save the keystore in a file named <literal>keystore.jks</literal>.</simpara>
</listitem>
<listitem>
<simpara>Record the name of the certificate. The default value for this name in Red Hat Process Automation Manager configuration is <literal>jboss</literal>.</simpara>
</listitem>
<listitem>
<simpara>Record the password of the keystore file. The default value for this name in Red Hat Process Automation Manager configuration is <literal>mykeystorepass</literal>.</simpara>
</listitem>
<listitem>
<simpara>Use the <literal>oc</literal> command to generate a secret named <literal>broker-app-secret</literal> from the new keystore file:</simpara>
<screen>$ oc create secret generic broker-app-secret --from-file=keystore.jks</screen>
</listitem>
</orderedlist>
</section>
<section xml:id="secrets-smartrouter-create-proc_openshift-operator">
<title>Creating the secrets for Smart Router</title>
<simpara>In order to provide HTTPS access, Smart Router uses an SSL certificate. The deployment can create a sample secret automatically. However, in production environments you must create an SSL certificate for Smart Router and provide it to your OpenShift environment as a secret.</simpara>
<simpara>Do not use the same certificate and keystore for Smart Router as the ones used for KIE Server or Business Central.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Generate an SSL keystore with a private and public key for SSL encryption for KIE Server. For more information on how to create a keystore with self-signed or purchased SSL certificates, see <link xl:href="https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.1/html-single/Security_Guide/index.html#Generate_a_SSL_Encryption_Key_and_Certificate">Generate a SSL Encryption Key and Certificate</link>.</simpara>
<note>
<simpara>In a production environment, generate a valid signed certificate that matches the expected URL for Smart Router.</simpara>
</note>
</listitem>
<listitem>
<simpara>Save the keystore in a file named <literal>keystore.jks</literal>.</simpara>
</listitem>
<listitem>
<simpara>Record the name of the certificate. The default value for this name in Red Hat Process Automation Manager configuration is <literal>jboss</literal>.</simpara>
</listitem>
<listitem>
<simpara>Record the password of the keystore file. The default value for this name in Red Hat Process Automation Manager configuration is <literal>mykeystorepass</literal>.</simpara>
</listitem>
<listitem>
<simpara>Use the <literal>oc</literal> command to generate a secret named <literal>smartrouter-app-secret</literal> from the new keystore file:</simpara>
<screen>$ oc create secret generic smartrouter-app-secret --from-file=keystore.jks</screen>
</listitem>
</orderedlist>
</section>
<section xml:id="externaldb-build-proc_openshift-operator">
<title>Building a custom KIE Server extension image for an external database</title>
<simpara>If you want to use an external database server for a KIE Server and the database server is not a MySQL or PostgreSQL server, you must build a custom KIE Server extension image with drivers for this server before deploying your environment.</simpara>
<simpara>Complete the steps in this build procedure to provide drivers for any of the following database servers:</simpara>
<itemizedlist>
<listitem>
<simpara>Microsoft SQL Server</simpara>
</listitem>
<listitem>
<simpara>IBM DB2</simpara>
</listitem>
<listitem>
<simpara>Oracle Database</simpara>
</listitem>
<listitem>
<simpara>Sybase</simpara>
</listitem>
</itemizedlist>
<simpara>Optionally, you can use this procedure to build a new version of drivers for any of the following database servers:</simpara>
<itemizedlist>
<listitem>
<simpara>MySQL</simpara>
</listitem>
<listitem>
<simpara>MariaDB</simpara>
</listitem>
<listitem>
<simpara>PostgreSQL</simpara>
</listitem>
</itemizedlist>
<simpara>For the supported versions of the database servers, see <link xl:href="https://access.redhat.com/articles/3405381">Red Hat Process Automation Manager 7 Supported Configurations</link>.</simpara>
<simpara>The build procedure creates a custom extension image that extends the existing KIE Server image. You must import this custom extension image into your OpenShift environment and then reference it in the <literal>EXTENSION_IMAGE</literal> parameter.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You are logged in to your OpenShift environment using the <literal>oc</literal> command. Your OpenShift user must have the <literal>registry-editor</literal> role.</simpara>
</listitem>
<listitem>
<simpara>For Oracle Database, IBM DB2, or Sybase, you downloaded the JDBC driver from the database server vendor.</simpara>
</listitem>
<listitem>
<simpara>You have installed the following required software:</simpara>
<itemizedlist>
<listitem>
<simpara>Docker: For installation instructions, see <link xl:href="https://docs.docker.com/get-docker/">Get Docker</link>.</simpara>
</listitem>
<listitem>
<simpara>Cekit version 3.2: For installation instructions, see <link xl:href="https://docs.cekit.io/en/3.2.0/handbook/installation/index.html">Installation</link>.</simpara>
</listitem>
<listitem>
<simpara>The following libraries and extensions for Cekit. For more information, see <link xl:href="https://docs.cekit.io/en/3.2.0/handbook/installation/dependencies.html">Dependencies</link>.</simpara>
<itemizedlist>
<listitem>
<simpara><literal>docker</literal>, provided by the <literal>python3-docker</literal> package or similar package</simpara>
</listitem>
<listitem>
<simpara><literal>docker-squash</literal>, provided by the <literal>python3-docker-squash</literal> package or similar package</simpara>
</listitem>
<listitem>
<simpara><literal>behave</literal>, provided by the <literal>python3-behave</literal> package or similar package</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>For IBM DB2, Oracle Database, or Sybase, provide the JDBC driver JAR file in a local directory.</simpara>
</listitem>
<listitem>
<simpara>Download the <literal>rhpam-7.10.0-openshift-templates.zip</literal> product deliverable file from the <link xl:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?downloadType=distributions&amp;product=rhpam&amp;productChanged=yes">Software Downloads</link> page of the Red Hat Customer Portal.</simpara>
</listitem>
<listitem>
<simpara>Unzip the file and, using the command line, change to the <literal>templates/contrib/jdbc/cekit</literal> directory of the unzipped file. This directory contains the source code for the custom build.</simpara>
</listitem>
<listitem>
<simpara>Enter one of the following commands, depending on the database server type:</simpara>
<itemizedlist>
<listitem>
<simpara>For Microsoft SQL Server:</simpara>
<screen>make mssql</screen>
</listitem>
<listitem>
<simpara>For MySQL:</simpara>
<screen>make mysql</screen>
</listitem>
<listitem>
<simpara>For PostgreSQL:</simpara>
<screen>make postgresql</screen>
</listitem>
<listitem>
<simpara>For MariaDB:</simpara>
<screen>make mariadb</screen>
</listitem>
<listitem>
<simpara>For IBM DB2:</simpara>
<screen>make db2 artifact=/tmp/db2jcc4.jar version=10.2</screen>
<simpara>In this command, replace <literal>/tmp/db2jcc4.jar</literal> with the path name of the downloaded Oracle Database driver and <literal>10.2</literal> with the version of the driver.</simpara>
</listitem>
<listitem>
<simpara>For Oracle Database:</simpara>
<screen>make oracle artifact=/tmp/ojdbc7.jar version=7.0</screen>
<simpara>In this command, replace <literal>/tmp/ojdbc7.jar</literal> with the path name of the downloaded Oracle Database driver and <literal>7.0</literal> with the version of the driver.</simpara>
</listitem>
<listitem>
<simpara>For Sybase:</simpara>
<screen>make build sybase artifact=/tmp/jconn4-16.0_PL05.jar version=16.0_PL05</screen>
<simpara>In this command, replace <literal>/tmp/jconn4-16.0_PL05.jar</literal> with the path name of the downloaded Sybase driver and <literal>16.0_PL05</literal> with the version of the driver.</simpara>
<simpara>Alternatively, if you need to update the driver class or driver XA class for the Sybase driver, you can set the <literal>DRIVER_CLASS</literal> or <literal>DRIVER_XA_CLASS</literal> variable for this command, for example:</simpara>
<screen>export DRIVER_CLASS=another.class.Sybase &amp;&amp; make sybase artifact=/tmp/jconn4-16.0_PL05.jar version=16.0_PL05</screen>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Enter the following command to list the Docker images that are available locally:</simpara>
<screen>docker images</screen>
<simpara>Note the name of the image that was built, for example, <literal>jboss-kie-db2-extension-openshift-image</literal>, and the version tag of the image, for example, <literal>11.1.4.4</literal> (not the <literal>latest</literal> tag).</simpara>
</listitem>
<listitem>
<simpara>Access the registry of your OpenShift environment directly and push the image to the registry. Depending on your user permissions, you can push the image into the <literal>openshift</literal> namespace or into a project namespace. For instructions about accessing the registry and pushing the images, see
<link xl:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/4.6/html/registry/accessing-the-registry#registry-accessing-directly_accessing-the-registry">Accessing registry directly from the cluster</link>
in the Red Hat OpenShift Container Platform product documentation.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="githooks-prepare-proc_openshift-operator">
<title>Preparing Git hooks</title>
<simpara>In an authoring environment you can use Git hooks to execute custom operations when the source code of a project in Business Central is changed. The typical use of Git hooks is for interaction with an upstream repository.</simpara>
<simpara>To enable Git hooks to interact with an upstream repository using SSH authentication, you must also provide a secret key and a known hosts file for authentication with the repository.</simpara>
<simpara>Skip this procedure if you do not want to configure Git hooks.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Create the Git hooks files. For instructions, see the <link xl:href="https://git-scm.com/docs/githooks">Git hooks reference documentation</link>.</simpara>
<note>
<simpara>A <literal>pre-commit</literal> script is not supported in Business Central. Use a <literal>post-commit</literal> script.</simpara>
</note>
</listitem>
<listitem>
<simpara>Create a configuration map (ConfigMap) or persistent volume with the files.</simpara>
<itemizedlist>
<listitem>
<simpara>If the Git hooks consist of one or several fixed script files, use the <literal>oc</literal> command to create a configuration map. For example:</simpara>
<screen>oc create configmap git-hooks --from-file=post-commit=post-commit</screen>
</listitem>
<listitem>
<simpara>If the Git hooks consist of long files or depend on binaries, such as executable or JAR files, use a persistent volume. You must create a persistent volume, create a persistent volume claim and associate the volume with the claim, and transfer files to the volume.</simpara>
<simpara>For instructions about persistent volumes and persistent volume claims, see <link xl:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/4.6/html/storage/index">Storage</link> in the Red Hat OpenShift Container Platform documentation. For instructions about copying files onto a persistent volume, see <link xl:href="https://blog.openshift.com/transferring-files-in-and-out-of-containers-in-openshift-part-3/">Transferring files in and out of containers</link>.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>If the Git hooks scripts must interact with an upstream repository using SSH authentication, prepare a secret with the necessary files:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Prepare the <literal>id_rsa</literal> file with a private key that matches a public key stored in the repository.</simpara>
</listitem>
<listitem>
<simpara>Prepare the <literal>known_hosts</literal> file with the correct name, address, and public key for the repository.</simpara>
</listitem>
<listitem>
<simpara>Create a secret with the two files using the <literal>oc</literal> command, for example:</simpara>
<screen>oc create secret git-hooks-secret --from-file=id_rsa=id_rsa --from-file=known_hosts=known_hosts</screen>
<note>
<simpara>When the deployment uses this secret, it mounts the <literal>id_rsa</literal> and <literal>known_hosts</literal> files into the <literal>/home/jboss/.ssh</literal> directory on Business Central pods.</simpara>
</note>
</listitem>
</orderedlist>
</listitem>
</orderedlist>
</section>
<section xml:id="readwritemany-proc_openshift-operator">
<title>Provisioning persistent volumes with <literal>ReadWriteMany</literal> access mode using NFS</title>
<simpara>If you want to deploy
Business Central Monitoring or
high-availability Business Central, your environment must provision persistent volumes with <literal>ReadWriteMany</literal> access mode.</simpara>
<simpara>If your configuration requires provisioning persistent volumes with <literal>ReadWriteMany</literal> access mode but your environment does not support such provisioning, use NFS to provision the volumes. Otherwise, skip this procedure.</simpara>
<formalpara>
<title>Procedure</title>
<para>Deploy an NFS server and provision the persistent volumes using NFS. For information about provisioning persistent volumes using NFS, see
the "Persistent storage using NFS" section of the <link xl:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/4.6/html/storage/index">OpenShift Container Platform Storage</link> guide.</para>
</formalpara>
</section>
<section xml:id="environment-immutable-source-extract-proc_openshift-operator">
<title>Extracting the source code from Business Central for use in an S2I build</title>
<simpara>If you are planning to create immutable KIE servers using the source-to-image (S2I) process, you must provide the source code for your services in a  Git repository. If you are using Business Central for authoring services, you can extract the source code for your service and place it into a separate Git repository, such as GitHub or an on-premise installation of GitLab, for use in the S2I build.</simpara>
<simpara>Skip this procedure if you are not planning to use the S2I process or if you are not using Business Central for authoring services.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Use the following command to extract the source code:</simpara>
<screen>git clone https://&lt;business-central-host&gt;:443/git/&lt;MySpace&gt;/&lt;MyProject&gt;</screen>
<simpara>In this command, replace the following variables:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>&lt;business-central-host&gt;</literal> with the host on which Business Central is running</simpara>
</listitem>
<listitem>
<simpara><literal>&lt;MySpace&gt;</literal> with the name of the Business Central space in which the project is located</simpara>
</listitem>
<listitem>
<simpara><literal>&lt;MyProject&gt;</literal> with the name of the project</simpara>
</listitem>
</itemizedlist>
<note>
<simpara>To view the full Git URL for a project in Business Central, click <emphasis role="strong">Menu</emphasis> &#8594; <emphasis role="strong">Design</emphasis> &#8594; <emphasis role="strong"><emphasis>&lt;MyProject&gt;</emphasis></emphasis> &#8594; <emphasis role="strong">Settings</emphasis>.</simpara>
</note>
<note>
<simpara>If you are using self-signed certificates for HTTPS communication, the command might fail with an <literal>SSL certificate problem</literal> error message. In this case, disable SSL certificate verification in <literal>git</literal>, for example, using the <literal>GIT_SSL_NO_VERIFY</literal> environment variable:</simpara>
<screen>env GIT_SSL_NO_VERIFY=true git clone https://&lt;business-central-host&gt;:443/git/&lt;MySpace&gt;/&lt;MyProject&gt;</screen>
</note>
</listitem>
<listitem>
<simpara>Upload the source code to another Git repository, such as GitHub or GitLab, for the S2I build.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="restricted-network-proc_openshift-operator">
<title>Preparing for deployment in a restricted network</title>
<simpara>You can deploy Red Hat Process Automation Manager in a restricted network that is not connected to the public Internet. For instructions about operator deployment in a restricted network, see <link xl:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/4.6/html/operators/administrator-tasks#olm-restricted-networks">Using Operator Lifecycle Manager on restricted networks</link> in Red Hat OpenShift Container Platform documentation.</simpara>
<important>
<simpara>In Red Hat Process Automation Manager 7.10, deployment on restricted networks is for Technology Preview only. For more information on Red Hat Technology Preview features, see <link xl:href="https://access.redhat.com/support/offerings/techpreview/">Technology Preview Features Scope</link>.</simpara>
</important>
<simpara>In order to use a deployment that does not have outgoing access to the public Internet, you must also prepare a Maven repository with a mirror of all the necessary artifacts. For instructions about creating this repository, see <xref linkend="offline-repo-proc_openshift-operator"/>.</simpara>
</section>
<section xml:id="offline-repo-proc_openshift-operator">
<title>Preparing a Maven mirror repository for offline use</title>
<simpara>If your
Red Hat OpenShift Container Platform environment
does not have outgoing access to the public Internet, you must prepare a Maven repository with a mirror of all the necessary artifacts and make this repository available to your environment.</simpara>
<note>
<simpara>You do not need to complete this procedure if your
Red Hat OpenShift Container Platform environment
is connected to the Internet.</simpara>
</note>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>A computer that has outgoing access to the public Internet is available.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Configure a Maven release repository to which you have write access. The repository must allow read access without authentication and your OpenShift environment must have network access to this repository.</simpara>
<simpara>You can deploy a Nexus repository manager in the OpenShift environment. For instructions about setting up Nexus on OpenShift, see <link xl:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/3.11/html/developer_guide/tutorials#nexus-setting-up-nexus">Setting up Nexus</link> in the Red Hat OpenShift Container Platform 3.11 documentation.
The documented procedure is applicable to Red Hat OpenShift Container Platform version 4.</simpara>
<simpara>Use this repository as a mirror to host the publicly available Maven artifacts. You can also provide your own services in this repository in order to deploy these services on immutable
servers or to deploy them on managed servers using Business Central monitoring.</simpara>
</listitem>
<listitem>
<simpara>On the computer that has an outgoing connection to the public Internet, complete the following steps:</simpara>
</listitem>
<listitem>
<simpara>Navigate to the <link xl:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html">Software Downloads</link> page in the Red Hat Customer Portal (login required), and select the product and version from the drop-down options:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Product:</emphasis> Red Hat Process Automation Manager</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Version:</emphasis> 7.10</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Download and extract the <emphasis role="strong">Red Hat Process Automation Manager 7.10.0 Offliner Content List</emphasis> (<literal>rhpam-7.10.0-offliner.zip</literal>) product deliverable file.</simpara>
</listitem>
<listitem>
<simpara>Extract the contents of the <literal>rhpam-7.10.0-offliner.zip</literal> file into any directory.</simpara>
</listitem>
<listitem>
<simpara>Change to the directory and enter the following command:</simpara>
<screen>./offline-repo-builder.sh offliner.txt</screen>
<simpara>This command creates the <literal>repository</literal> subdirectory and downloads the necessary artifacts into this subdirectory. This is the mirror repository.</simpara>
<simpara>If a message reports that some downloads have failed, run the same command again. If downloads fail again, contact Red Hat support.</simpara>
</listitem>
<listitem>
<simpara>Upload all artifacts from the <literal>repository</literal> subdirectory to the Maven mirror repository that you prepared. You can use the Maven Repository Provisioner utility, available from the <link xl:href="https://github.com/simpligility/maven-repository-tools/tree/master/maven-repository-provisioner">Maven repository tools</link> Git repository, to upload the artifacts.</simpara>
</listitem>
</orderedlist>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>If you developed services outside of Business Central and they have additional dependencies, add the dependencies to the mirror repository. If you developed the services as Maven projects, you can use the following steps to prepare these dependencies automatically. Complete the steps on the computer that has an outgoing connection to the public Internet.</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Create a backup of the local Maven cache directory (<literal>~/.m2/repository</literal>) and then clear the directory.</simpara>
</listitem>
<listitem>
<simpara>Build the source of your projects using the <literal>mvn clean install</literal> command.</simpara>
</listitem>
<listitem>
<simpara>For every project, enter the following command to ensure that Maven downloads all runtime dependencies for all the artifacts generated by the project:</simpara>
<screen>mvn -e -DskipTests dependency:go-offline -f /path/to/project/pom.xml --batch-mode -Djava.net.preferIPv4Stack=true</screen>
<simpara>Replace <literal>/path/to/project/pom.xml</literal> with the path of the <literal>pom.xml</literal> file of the project.</simpara>
</listitem>
<listitem>
<simpara>Upload all artifacts from the local Maven cache directory (<literal>~/.m2/repository</literal>) to the Maven mirror repository that you prepared. You can use the Maven Repository Provisioner utility, available from the <link xl:href="https://github.com/simpligility/maven-repository-tools/tree/master/maven-repository-provisioner">Maven repository tools</link> Git repository, to upload the artifacts.</simpara>
</listitem>
</orderedlist>
</listitem>
</orderedlist>
</section>
</chapter>
<chapter xml:id="operator-con_openshift-operator">
<title>Deployment and management of a Red Hat Process Automation Manager environment using OpenShift operators</title>
<simpara>To deploy a Red Hat Process Automation Manager environment, the OpenShift operator uses a YAML source that describes the environment. Red Hat Process Automation Manager provides an installer that you can use to form the YAML source and deploy the environment.</simpara>
<simpara>When the Business Automation operator deploys the environment, it creates a YAML description of the environment, and then ensures that the environment is consistent with the description at all times. You can edit the description to modify the environment.</simpara>
<simpara>You can remove the environment by deleting the operator application in Red Hat OpenShift Container Platform.</simpara>
<note>
<simpara>When you remove an environment with a high-availability Business Central, the operator does not delete Persistent Volume Claims that were created as part of the JBoss Datagrid and JBoss AMQ StatefulSet creation. This behaviour is a part of Kubernetes design, as deletion of the Persistent Volume Claims could cause data loss. For more information about handling persistent volumes during deletion of a StatefulSet, see the <link xl:href="https://kubernetes.io/docs/tasks/run-application/delete-stateful-set/#persistent-volumes">Kubernetes documentation</link>.</simpara>
<simpara>If you create a new environment using the same namespace and the same application name, the environment reuses the persistent volumes for increased performance.</simpara>
<simpara>To ensure that new deployments do not use any old data, you can delete the Persistent Volume Claims manually.</simpara>
</note>
<section xml:id="operator-subscribe-proc_openshift-operator">
<title>Subscribing to the Business Automation operator</title>
<simpara>To be able to deploy Red Hat Process Automation Manager using operators, you must subscribe to the Business Automation operator in OpenShift.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Enter your project in the OpenShift Web cluster console.</simpara>
</listitem>
<listitem>
<simpara>In the OpenShift Web console navigation panel, select  <emphasis role="strong">Catalog &#8594; OperatorHub</emphasis> or <emphasis role="strong">Operators &#8594; OperatorHub</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Search for <emphasis role="strong">Business Automation</emphasis>, select it and click <emphasis role="strong">Install</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>On the <emphasis role="strong">Create Operator Subscription</emphasis> page, select your target namespace and approval strategy.</simpara>
<simpara>Optional: Set <emphasis role="strong">Approval strategy</emphasis> to <literal>Automatic</literal> to enable automatic operator updates. An operator update does not immediately update the product, but is required before you update the product. Configure automatic or manual product updates using the settings in every particular product deployment.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Subscribe</emphasis> to create a subscription.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="operator-environment-deploy-assy_openshift-operator">
<title>Deploying a Red Hat Process Automation Manager environment using the operator</title>
<simpara>After you subscribe to the Business Automation operator, you can use the installer wizard to configure and deploy a Red Hat Process Automation Manager environment.</simpara>
<important>
<simpara>In Red Hat Process Automation Manager 7.10, the operator installer wizard is for Technology Preview only. For more information on Red Hat Technology Preview features, see <link xl:href="https://access.redhat.com/support/offerings/techpreview/">Technology Preview Features Support Scope</link>.</simpara>
</important>
<section xml:id="operator-deploy-start-proc_openshift-operator">
<title>Starting the deployment of a Red Hat Process Automation Manager environment using the Business Automation operator</title>
<simpara>To start deploying a Red Hat Process Automation Manager environment using the Business Automation operator, access the installer wizard. The installer wizard is deployed when you subscribe to the operator.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You subscribed to the Business Automation operator. For instructions about subscribing to the operator, see <xref linkend="operator-subscribe-proc_openshift-operator"/>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>In the Red Hat OpenShift Container Platform web cluster console menu, select <emphasis role="strong">Catalog &#8594; Installed operators</emphasis> or <emphasis role="strong">Operators &#8594; Installed operators</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Click the name of the operator that contains <literal>businessautomation</literal>. Information about this operator is displayed.</simpara>
</listitem>
<listitem>
<simpara>Click the <emphasis role="strong">Installer</emphasis> link located on the right side of the window.</simpara>
</listitem>
<listitem>
<simpara>If prompted, log in with your OpenShift credentials.</simpara>
</listitem>
</orderedlist>
<formalpara>
<title>Result</title>
<para>The <emphasis role="strong">Installation</emphasis> tab of the wizard is displayed.</para>
</formalpara>
</section>
<section xml:id="operator-deploy-basic-proc_openshift-operator">
<title>Setting the basic configuration of the environment</title>
<simpara>After you start to deploy a Red Hat Process Automation Manager environment using the Business Automation operator, you must select the type of the environment and set other basic configuration.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You started to deploy a Red Hat Process Automation Manager environment using the Business Automation operator and accessed the installer wizard according to the instructions in <xref linkend="operator-deploy-start-proc_openshift-operator"/>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>In the <emphasis role="strong">Application Name</emphasis> field, enter a name for the OpenShift application. This name is used in the default URLs for all components.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Environment</emphasis> list, select the type of environment. This type determines the default configuration; you can modify this configuration as necessary. The following types are available for Red Hat Process Automation Manager:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>rhpam-trial</literal>: A trial environment that you can set up quickly and use to evaluate or demonstrate developing and running assets. Includes Business Central and a KIE Server. This environment does not use any persistent storage, and any work you do in the environment is not saved.</simpara>
</listitem>
<listitem>
<simpara><literal>rhpam-authoring</literal>: An environment for creating and modifying services using Business Central. It consists of pods that provide Business Central for the authoring work and a KIE Server for test execution of the services.</simpara>
</listitem>
<listitem>
<simpara><literal>rhpam-authoring-ha</literal>: An environment for creating and modifying services using Business Central. It consists of pods that provide Business Central for the authoring work and a KIE Server for test execution of the services. This version of the authoring environment supports scaling the Business Central pod to ensure high availability.</simpara>
<important>
<simpara>In Red Hat Process Automation Manager 7.10, high-availability Business Central functionality deployment using the operator is for Technology Preview only. For more information about Red Hat Technology Preview features, see <link xl:href="https://access.redhat.com/support/offerings/techpreview/">Technology Preview Features Support Scope</link>. For a fully supported high-availability deployment, use the high-availability authoring template on Red Hat OpenShift Container Platform version 3.11. For instructions about deploying this template, see <xref linkend="assembly-openshift-templates"/>.</simpara>
</important>
</listitem>
<listitem>
<simpara><literal>rhpam-production</literal>: An environment for running existing services for staging and production purposes. This environment includes Business Central Monitoring, Smart Router, and two groups of KIE Server pods. You can deploy and undeploy services on every such group and also scale the group up or down as necessary. Use Business Central Monitoring to deploy, run, and stop the services and to monitor their execution.</simpara>
</listitem>
<listitem>
<simpara><literal>rhpam-production-immutable</literal>: An alternate environment for running existing services for staging and production purposes. You can configure one or more KIE Server pods that build services from source or pull them from a Maven repository. You can then replicate each pod as necessary.</simpara>
<simpara>You cannot remove any service from the pod or add any new service to the pod. If you want to use another version of a service or to modify the configuration in any other way, deploy a new server image to replace the old one. You can use any container-based integration workflows to manage the pods.</simpara>
<simpara>When configuring this environment, in the <emphasis role="strong">KIE Servers</emphasis> tab you must customize the KIE Server and either click the <emphasis role="strong">Set immutable server configuration</emphasis> button or set the <literal>KIE_SERVER_CONTAINER_DEPLOYMENT</literal> environment variable. For instructions about configuring the KIE Server, see <xref linkend="operator-deploy-kieserver-proc_openshift-operator"/>.</simpara>
<simpara>Optionally, you can also use the <emphasis role="strong">Console</emphasis> tab to include Business Central Monitoring in this environment to monitor, stop, and restart the execution of process services. For instructions about configuring Business Central Monitoring, see <xref linkend="operator-deploy-central-proc_openshift-operator"/>.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>If you want to enable automatic upgrades to new versions, select the <emphasis role="strong">Enable Upgrades</emphasis> box. If this box is selected, when a new patch version of Red Hat Process Automation Manager 7.10 becomes available, the operator automatically upgrades your deployment to this version. All services are preserved and normally remain available throughout the upgrade process.</simpara>
<simpara>If you also want to enable the same automatic upgrade process when a new minor version of Red Hat Process Automation Manager 7.x becomes available, select the <emphasis role="strong">Include minor version upgrades</emphasis> box.</simpara>
<note>
<simpara>Disable automatic updates if you want to use a custom image for any component of Red Hat Process Automation Manager.</simpara>
</note>
</listitem>
<listitem>
<simpara>If you want to use a custom image registry, under <emphasis role="strong">Custom registry</emphasis>, enter the URL of the registry in the <emphasis role="strong">Image registry</emphasis> field. If this registry does not have a properly signed and recognized SSL certificate, select the <emphasis role="strong">Insecure</emphasis> box.</simpara>
</listitem>
<listitem>
<simpara>Under <emphasis role="strong">Admin user</emphasis>, enter the user name and password for the administrative user for Red Hat Process Automation Manager in the <emphasis role="strong">Username</emphasis> and <emphasis role="strong">Password</emphasis> fields.</simpara>
<important>
<simpara>If you use RH-SSO or LDAP authentication, the same user must be configured in your authentication system with the <literal>kie-server,rest-all,admin</literal> roles for Red Hat Process Automation Manager.</simpara>
</important>
</listitem>
<listitem>
<simpara>If you want to use a custom version tag for images, complete the following steps:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Click <emphasis role="strong">Next</emphasis> to access the <emphasis role="strong">Security</emphasis> tab.</simpara>
</listitem>
<listitem>
<simpara>Scroll to the bottom of the window.</simpara>
</listitem>
<listitem>
<simpara>Enter the image tag in the <emphasis role="strong">Image tag</emphasis> field.</simpara>
</listitem>
</orderedlist>
</listitem>
</orderedlist>
<formalpara>
<title>Next steps</title>
<para>If you want to deploy the environment with the default configuration, click <emphasis role="strong">Finish</emphasis> and then click <emphasis role="strong">Deploy</emphasis> to deploy the environment. Otherwise, continue to set other configuration parameters.</para>
</formalpara>
</section>
<section xml:id="operator-deploy-security-proc_openshift-operator">
<title>Setting the security configuration of the environment</title>
<simpara>After you set the basic configuration of a Red Hat Process Automation Manager environment using the Business Automation operator, you can optionally configure authentication (security) settings for the environment.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You completed basic configuration of a Red Hat Process Automation Manager environment using the Business Automation operator in the installer wizard according to the instructions in <xref linkend="operator-deploy-basic-proc_openshift-operator"/>.</simpara>
</listitem>
<listitem>
<simpara>If you want to use RH-SSO or LDAP for authentication, you created users with the correct roles in your authentication system. You must create at least one administrative user (for example, <literal>adminUser</literal>) with the <literal>kie-server,rest-all,admin</literal> roles. This user must have the user name and password that you configured on the <emphasis role="strong">Installation</emphasis> tab.</simpara>
</listitem>
<listitem>
<simpara>If you want to use RH-SSO authentication, you created the clients in your RH-SSO system for all components of your environment, specifying the correct URLs. This action ensures maximum control. Alternatively, the deployment can create the clients.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>If the <emphasis role="strong">Installation</emphasis> tab is open, click <emphasis role="strong">Next</emphasis> to view the <emphasis role="strong">Security</emphasis> tab.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Authentication mode</emphasis> list, select one of the following modes:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>Internal</literal>: You configure the initial administration user when deploying the environment. The user can use Business Central to set up other users as necessary.</simpara>
</listitem>
<listitem>
<simpara><literal>RH-SSO</literal>: Red Hat Process Automation Manager uses Red Hat Single Sign-On for authentication.</simpara>
</listitem>
<listitem>
<simpara><literal>LDAP</literal>: Red Hat Process Automation Manager uses LDAP for authentication</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Complete the security configuration based on the <emphasis role="strong">Authentication mode</emphasis> that you selected.</simpara>
<simpara>If you selected <literal>RH-SSO</literal>, configure RH-SSO authentication:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>In the <emphasis role="strong">RH-SSO URL</emphasis> field, enter the RH-SSO URL.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Realm</emphasis> field, enter the RH-SSO realm name.</simpara>
</listitem>
<listitem>
<simpara>If you did not create RH-SSO clients for components of your environment enter the credentials of an administrative user for your RH-SSO system in the <emphasis role="strong">SSO admin user</emphasis> and <emphasis role="strong">SSO admin password</emphasis> fields.</simpara>
</listitem>
<listitem>
<simpara>If your RH-SSO system does not have a proper signed SSL certificate, select the <emphasis role="strong">Disable SSL cert validation</emphasis> box.</simpara>
</listitem>
<listitem>
<simpara>If you want to change the RH-SSO principal attribute used for the user name, in the <emphasis role="strong">Principal attribute</emphasis> field enter the name of the new attribute.</simpara>
</listitem>
</orderedlist>
<simpara>If you selected <literal>LDAP</literal>, configure LDAP authentication:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>In the <emphasis role="strong">LDAP URL</emphasis> field, enter the LDAP URL.</simpara>
</listitem>
<listitem>
<simpara>Configure LDAP parameters that correspond to the settings of the LdapExtended Login module of Red Hat JBoss EAP. For instructions about using these settings, see <link xl:href="https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.3/html/login_module_reference/login_modules_with_external_identity_store#ldapextended_login_module">LdapExtended Login Module</link>.</simpara>
<note>
<simpara>If you want to enable LDAP failover, you can set two or more LDAP server addresses in the <literal>AUTH_LDAP_URL</literal> parameter, separated by a space.</simpara>
</note>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>If you selected <literal>RH-SSO</literal> or <literal>LDAP</literal>, if your RH-SSO or LDAP system does not define all the roles required for your deployment, you can map authentication system roles to Red Hat Process Automation Manager roles.</simpara>
<simpara>To enable role mapping, you must provide a role mapping configuration file in an OpenShift configuration map or secret object in the project namespace. The file must contain entries in the following format:</simpara>
<screen>ldap_role = product_role1, product_role2...</screen>
<simpara>For example:</simpara>
<screen>admins = kie-server,rest-all,admin</screen>
<simpara>To enable the use of this file, make the following changes:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Under <emphasis role="strong">RoleMapper</emphasis>, in the <emphasis role="strong">Roles properties file</emphasis> field, enter the fully qualified path name of the role mapping configuration file, for example, <literal>/opt/eap/standalone/configuration/rolemapping/rolemapping.properties</literal>.</simpara>
</listitem>
<listitem>
<simpara>If you want to replace roles defined in the authentication system with roles that you define in the mapping file, select the <emphasis role="strong">Replace roles</emphasis> box. Otherwise, both the roles defined in RH-SSO or LDAP and the roles defined in the configuration file are available.</simpara>
</listitem>
<listitem>
<simpara>In the fields under <emphasis role="strong">RoleMapper Configuration object</emphasis>, select the <emphasis role="strong">Kind</emphasis> of the object that provides the file (<literal>ConfigMap</literal> or <literal>Secret</literal>) and enter the <emphasis role="strong">Name</emphasis> of the object. This object is automatically mounted on Business Central and KIE Server pods in the path that you specified for the role mapping configuration file.</simpara>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>Configure other passwords, if necessary:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">AMQ password</emphasis> and <emphasis role="strong">AMQ cluster password</emphasis> are passwords for interaction with ActiveMQ using the JMS API.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Keystore password</emphasis> is the password for the keystore files used in secrets for HTTPS communication. Set this password if you created secrets according to instructions in <xref linkend="secrets-kie-create-proc_openshift-operator"/> or <xref linkend="secrets-central-create-proc_openshift-operator"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Database password</emphasis> is the password for database server pods that are a part of the environments.</simpara>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
<formalpara>
<title>Next steps</title>
<para>If you want to deploy the environment with the default configuration of all components, click <emphasis role="strong">Finish</emphasis> and then click <emphasis role="strong">Deploy</emphasis> to deploy the environment. Otherwise, continue to set configuration parameters for
Business Central, KIE Servers, and Smart Router.</para>
</formalpara>
</section>
<section xml:id="operator-deploy-central-proc_openshift-operator">
<title>Setting the Business Central configuration of the environment</title>
<simpara>After you set the basic and security configuration of a Red Hat Process Automation Manager environment using the Business Automation operator, you can optionally configure settings for the Business Central
or Business Central Monitoring
component of the environment.</simpara>
<simpara>All environment types except <literal>rhpam-production-immutable</literal> include this component.</simpara>
<simpara>By default, the <literal>rhpam-production-immutable</literal> environment does not include Business Central Monitoring. To include Business Central Monitoring in this environment, you must set the number of replicas for the Business Central Monitoring pod in the <emphasis role="strong">Replicas</emphasis> field or make any other change to the Business Central configuration fields.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You completed basic configuration of a Red Hat Process Automation Manager environment using the Business Automation operator in the installer wizard according to the instructions in <xref linkend="operator-deploy-basic-proc_openshift-operator"/>.</simpara>
</listitem>
<listitem>
<simpara>If you want to use RH-SSO or LDAP for authentication, you completed security configuration according to the instructions in <xref linkend="operator-deploy-security-proc_openshift-operator"/>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>If the <emphasis role="strong">Installation</emphasis> or <emphasis role="strong">Security</emphasis> tab is open, click <emphasis role="strong">Next</emphasis> until you view the <emphasis role="strong">Console</emphasis> tab.</simpara>
</listitem>
<listitem>
<simpara>If you created the secret for Business Central according to the instructions in <xref linkend="secrets-central-create-proc_openshift-operator"/>, enter the name of the secret in the <emphasis role="strong">Secret</emphasis> field.</simpara>
</listitem>
<listitem>
<simpara>Optional: Configure Git hooks.</simpara>
<simpara>In an authoring environment, you can use Git hooks to facilitate interaction between the internal Git repository of Business Central and an external Git repository. If you want to use Git hooks, you must prepare a Git hooks directory in an OpenShift configuration map, secret, or persistent volume claim object in the project namespace. You can also prepare a secret with the SSH key and known hosts files for Git SSH authentication. For instructions about preparing Git hooks, see <xref linkend="githooks-prepare-proc_openshift-operator"/>.</simpara>
<simpara>To use a Git hooks directory, make the following changes:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Under <emphasis role="strong">GitHooks</emphasis>, in the <emphasis role="strong">Mount path</emphasis> field, enter a fully qualified path for the directory, for example, <literal>/opt/kie/data/git/hooks</literal>.</simpara>
</listitem>
<listitem>
<simpara>In the fields under <emphasis role="strong">GitHooks Configuration object</emphasis>, select the <emphasis role="strong">Kind</emphasis> of the object that provides the file (<literal>ConfigMap</literal>, <literal>Secret</literal>, or <literal>PersistentVolumeClaim</literal>) and enter the <emphasis role="strong">Name</emphasis> of the object. This object is automatically mounted on the Business Central pods in the path that you specified for the Git hooks directory.</simpara>
</listitem>
<listitem>
<simpara>Optional: In the <emphasis role="strong">SSH secret</emphasis> field enter the name of the secret with the SSH key and known hosts files.</simpara>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>Optional: Enter the number of replicas for Business Central or Business Central monitoring in the <emphasis role="strong">Replicas</emphasis> field. Do not change this number in a <literal>rhpam-authoring</literal> environment.</simpara>
</listitem>
<listitem>
<simpara>Optional: Enter requested and maximum CPU and memory limits in the fields under <emphasis role="strong">Resource quotas</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>If you want to customize the configuration of the Java virtual machine on the Business Central pods, select the <emphasis role="strong">Enable JVM configuration</emphasis> box and then enter information in any of the fields under <emphasis role="strong">Enable JVM configuration</emphasis>. All fields are optional. For the JVM parameters that you can configure, see <xref linkend="jvm-settings-ref_openshift-operator"/>.</simpara>
</listitem>
<listitem>
<simpara>If you selected RH-SSO authentication, configure RH-SSO for Business Central:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Enter the client name in the <emphasis role="strong">Client name</emphasis> field and the client secret in the <emphasis role="strong">Client secret</emphasis> field. If a client with this name does not exist, the deployment attempts to create a new client with this name and secret.</simpara>
</listitem>
<listitem>
<simpara>If the deployment is to create a new client, enter the HTTP and HTTPS URLs that will be used for accessing the KIE Server into the <emphasis role="strong">SSO HTTP URL</emphasis> and <emphasis role="strong">SSO HTTPS URL</emphasis> fields. This information is recorded in the client.</simpara>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>Optional: Depending on your needs, set environment variables. To set an environment variable, click <emphasis role="strong">Add new Environment variable</emphasis>, then enter the name and value for the variable in the <emphasis role="strong">Name</emphasis> and <emphasis role="strong">Value</emphasis> fields.</simpara>
<itemizedlist>
<listitem>
<simpara>In a <literal>rhpam-production</literal> or <literal>rhpam-production-immutable</literal> environment, if you want Business Central Monitoring to run in a simplified mode that does not use a file system, set the <literal>ORG_APPFORMER_SIMPLIFIED_MONITORING_ENABLED</literal> to <literal>true</literal>.</simpara>
<simpara>In the simplified mode, Business Central Monitoring does not require a persistent volume claim. You can use this mode in environments that do not support <literal>ReadWriteMany</literal> access to persistent storage. You can not use Business Central Monitoring in the simplified mode to design custom dashboards.</simpara>
</listitem>
<listitem>
<simpara>If you want to use an external Maven repository, set the following variables:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>MAVEN_REPO_URL</literal>: The URL for the Maven repository</simpara>
</listitem>
<listitem>
<simpara><literal>MAVEN_REPO_ID</literal>: An identifier for the Maven repository, for example, <literal>repo-custom</literal></simpara>
</listitem>
<listitem>
<simpara><literal>MAVEN_REPO_USERNAME</literal>: The user name for the Maven repository</simpara>
</listitem>
<listitem>
<simpara><literal>MAVEN_REPO_PASSWORD</literal> The password for the Maven repository</simpara>
<important>
<simpara>In an authoring environment, if you want Business Central to push a project into an external Maven repository, you must configure this repository during deployment and also configure exporting to the repository in every project. For information about exporting Business Central projects to an external Maven repository, see <link xl:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/deploying_and_managing_red_hat_process_automation_manager_services#maven-external-export-proc_packaging-deploying"><emphasis>Packaging and deploying a Red Hat Process Automation Manager project</emphasis></link>.</simpara>
</important>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>If your OpenShift environment does not have a connection to the public Internet, configure access to a Maven mirror that you set up according to <xref linkend="offline-repo-proc_openshift-operator"/>. Set the following variables:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>MAVEN_MIRROR_URL</literal>: The URL for the Maven mirror repository that you set up in <xref linkend="offline-repo-proc_openshift-operator"/>. This URL must be accessible from a pod in your OpenShift environment.</simpara>
</listitem>
<listitem>
<simpara><literal>MAVEN_MIRROR_OF</literal>: The value that determines which artifacts are to be retrieved from the mirror. For instructions about setting the <literal>mirrorOf</literal> value, see <link xl:href="https://maven.apache.org/guides/mini/guide-mirror-settings.html">Mirror Settings</link> in the Apache Maven documentation. The default value is <literal>external:*</literal>. With this value, Maven retrieves every required artifact from the mirror and does not query any other repositories.</simpara>
<simpara>If you configure an external Maven repository (<literal>MAVEN_REPO_URL</literal>), change <literal>MAVEN_MIRROR_OF</literal> to exclude the artifacts in this repository from the mirror, for example, <literal>external:*,!repo-custom</literal>. Replace <literal>repo-custom</literal> with the ID that you configured in <literal>MAVEN_REPO_ID</literal>.</simpara>
<simpara>If your authoring environment uses a built-in Business Central Maven repository, change <literal>MAVEN_MIRROR_OF</literal> to exclude the artifacts in this repository from the mirror: <literal>external:*,!repo-rhpamcentr</literal>.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>In some cases, you might want to persist the Maven repository cache for Business Central. By default, the cache is not persisted, so when you restart or scale a Business Central pod, all Maven artifacts are downloaded again and all projects within Business Central must be built again. If you enable persistence for the cache, the download is not necessary and startup time can improve in some situations. However, significant additional space on the Business Central persistence volume is required.</simpara>
<simpara>To enable persistence for the Maven repository cache, set the <literal>KIE_PERSIST_MAVEN_REPO</literal> environment variable to <literal>true</literal>.</simpara>
<simpara>If you set <literal>KIE_PERSIST_MAVEN_REPO</literal> to <literal>true</literal>, you can optionally set a custom path for the cache using the <literal>KIE_M2_REPO_DIR</literal> variable. The default path is <literal>/opt/kie/data/m2</literal>. Files in the <literal>/opt/kie/data</literal> directory tree are persisted.</simpara>
</listitem>
<listitem>
<simpara>In some authoring environments, you might need to ensure that several users can deploy services on the same KIE Server at the same time. By default, after deploying a service onto a KIE Server using Business Central, the user needs to wait for some seconds before more services can be deployed. The <literal>OpenShiftStartupStrategy</literal> setting is enabled by default and causes this limitation. To remove the limitation, you can configure an <literal>rhpam-authoring</literal> environment to use the <emphasis>controller strategy</emphasis>. Do not make this change unless a specific need for it exists; if you decide to enable controller strategy, make this change on Business Central and on all KIE Servers in the same environment.</simpara>
<note>
<simpara>Do not enable the controller strategy in an environment with a high-availability Business Central. In such environments the controller strategy does not function correctly.</simpara>
</note>
<simpara>To enable the controller strategy on Business Central, set the  <literal>KIE_SERVER_CONTROLLER_OPENSHIFT_ENABLED</literal> environment variable to <literal>false</literal>.</simpara>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
<formalpara>
<title>Next steps</title>
<para>If you want to deploy the environment with the default configuration of
KIE Servers, without Smart Router, and without Process Instance Migration,
click <emphasis role="strong">Finish</emphasis> and then click <emphasis role="strong">Deploy</emphasis> to deploy the environment. Otherwise, continue to set configuration parameters for
KIE Servers and Smart Router.</para>
</formalpara>
</section>
<section xml:id="operator-deploy-kieserver-proc_openshift-operator">
<title>Setting custom KIE Server configuration of the environment</title>
<simpara>Every environment type in the Business Automation operator includes one or several KIE Servers by default.</simpara>
<simpara>Optionally, you can set custom configuration for KIE Servers. In this case, default KIE Servers are not created and only the KIE Servers that you configure are deployed.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You completed basic configuration of a Red Hat Process Automation Manager environment using the Business Automation operator in the installer wizard according to the instructions in <xref linkend="operator-deploy-basic-proc_openshift-operator"/>.</simpara>
</listitem>
<listitem>
<simpara>If you want to use RH-SSO or LDAP for authentication, you completed security configuration according to the instructions in <xref linkend="operator-deploy-security-proc_openshift-operator"/>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>If the <emphasis role="strong">Installation</emphasis>, <emphasis role="strong">Security</emphasis>, or <emphasis role="strong">Console</emphasis> tab is open, click <emphasis role="strong">Next</emphasis> until you view the <emphasis role="strong">KIE Servers</emphasis> tab.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Add new KIE Server</emphasis> to add a new KIE Server configuration.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Id</emphasis> field, enter an identifier for the KIE Server. If the KIE Server connects to a Business Central or Business Central Monitoring instance, this identifier determines which server group the server joins.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Name</emphasis> field, enter a name for the KIE Server.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Deployments</emphasis> field, enter the number of similar KIE Servers that are to be deployed. The installer can deploy several KIE Servers with the same configuration. The identifiers and names of the KIE Servers are modified automatically and remain unique.</simpara>
</listitem>
<listitem>
<simpara>If you created the secret for KIE Server according to the instructions in <xref linkend="secrets-kie-create-proc_openshift-operator"/>, enter the name of the secret in the <emphasis role="strong">Keystore secret</emphasis> field.</simpara>
</listitem>
<listitem>
<simpara>Optional: Enter the number of replicas for the KIE Server in the <emphasis role="strong">Replicas</emphasis> field.</simpara>
</listitem>
<listitem>
<simpara>If you want to use a custom image for the KIE Server, complete the following additional steps:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Click <emphasis role="strong">Set KIE Server image</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>If you want to use a Docker image name and not an OpenShift image stream tag, change the <emphasis role="strong">Kind</emphasis> value to <literal>DockerImage</literal>.</simpara>
</listitem>
<listitem>
<simpara>Enter the name of the image stream in the <emphasis role="strong">Name</emphasis> field.</simpara>
</listitem>
<listitem>
<simpara>If the image stream is not in the <literal>openshift</literal> namespace, enter the namespace in the <emphasis role="strong">Namespace</emphasis> field.</simpara>
<simpara>For instructions about creating custom images, see <xref linkend="customimage-con_openshift-operator"/>.</simpara>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>If you want to configure an immutable KIE Server using a Source to Image (S2I) build, complete the following additional steps:</simpara>
<important>
<simpara>If you want to configure an immutable KIE Server that pulls services from the Maven repository, do not click <emphasis role="strong">Set Immutable server configuration</emphasis> and do not complete these steps. Instead, set the <literal>KIE_SERVER_CONTAINER_REPLOYMENT</literal> environment variable.</simpara>
</important>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Click <emphasis role="strong">Set Immutable server configuration</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">KIE Server container deployment</emphasis> field, enter the identifying information of the services (KJAR files) that the deployment must extract from the result of a Source to Image (S2I) build. The format is <literal>&lt;containerId&gt;=&lt;groupId&gt;:&lt;artifactId&gt;:&lt;version&gt;</literal> or, if you want to specify an alias name for the container, <literal>&lt;containerId&gt;(&lt;aliasId&gt;)=&lt;groupId&gt;:&lt;artifactId&gt;:&lt;version&gt;</literal>. You can provide two or more KJAR files using the <literal>|</literal> separator, as illustrated in the following example: <literal>containerId=groupId:artifactId:version|c2(alias2)=g2:a2:v2</literal>.</simpara>
</listitem>
<listitem>
<simpara>If your OpenShift environment does not have a connection to the public Internet, enter the URL of the Maven mirror that you set up according to <xref linkend="offline-repo-proc_openshift-operator"/> in the <emphasis role="strong">Maven mirror URL</emphasis> field.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Artifact directory</emphasis> field, enter the path within the project that contains the required binary files (KJAR files and any other necessary files) after a successful Maven build. Normally this directory is the target directory of the build. However, you can provide prebuilt binaries in this directory in the Git repository.</simpara>
</listitem>
<listitem>
<simpara>If you want to use a custom base KIE Server image for the S2I build, click <emphasis role="strong">Set Base build image</emphasis> and then enter the name of the image stream in the <emphasis role="strong">Name</emphasis> field. If the image stream is not in the <literal>openshift</literal> namespace, enter the namespace in the <emphasis role="strong">Namespace</emphasis> field. If you want to use a Docker image name and not an OpenShift image stream tag, change the <emphasis role="strong">Kind</emphasis> value to <literal>DockerImage</literal>.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Set Git source</emphasis> and enter information in the following fields:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">S2I Git URI</emphasis>:The URI for the Git repository that contains the source for your services.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Reference</emphasis>: The branch in the Git repository.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Context directory</emphasis>: (Optional) The path to the source within the project downloaded from the Git repository. By default, the root directory of the downloaded project is the source directory.</simpara>
<note>
<simpara>If you do not configure a Git source, the immutable KIE Server does not use an S2I build. Instead, it pulls the artifacts that you define in the <emphasis role="strong">KIE Server container deployment</emphasis> field from the configured Maven repository.</simpara>
</note>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>If you are using S2I and want to set a Git Webhook so that changes in the Git repository cause an automatic rebuild of the KIE Server, click <emphasis role="strong">Add new Webhook</emphasis>. Then select the type of the Webhook in the <emphasis role="strong">Type</emphasis> field and enter the secret string for the Webhook in the <emphasis role="strong">Secret</emphasis> field.</simpara>
</listitem>
<listitem>
<simpara>If you want to set a build environment variable for the S2I build, click <emphasis role="strong">Add new Build Config Environment variable</emphasis> and then enter the name and value for the variable in the <emphasis role="strong">Name</emphasis> and <emphasis role="strong">Value</emphasis> fields.</simpara>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>Optional: Enter requested and maximum CPU and memory limits in the fields under <emphasis role="strong">Resource quotas</emphasis>. If you are configuring several KIE Servers, the limits apply to each server separately.</simpara>
</listitem>
<listitem>
<simpara>If you selected RH-SSO authentication, configure RH-SSO for the KIE Server:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Enter the client name in the <emphasis role="strong">Client name</emphasis> field and the client secret in the <emphasis role="strong">Client secret</emphasis> field. If a client with this name does not exist, the deployment attempts to create a new client with this name and secret.</simpara>
</listitem>
<listitem>
<simpara>If the deployment is to create a new client, enter the HTTP and HTTPS URLs that will be used for accessing the KIE Server into the <emphasis role="strong">SSO HTTP URL</emphasis> and <emphasis role="strong">SSO HTTPS URL</emphasis> fields. This information is recorded in the client.</simpara>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>If you want to interact with the KIE Server through JMS API using an external AMQ message broker, enable the <emphasis role="strong">Enable JMS Integration</emphasis> setting. Additional fields for configuring JMS Integration are displayed and you must enter the values as necessary:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">User name</emphasis>, <emphasis role="strong">Password</emphasis>: The user name and password of a standard broker user, if user authentication in the broker is required in your environment.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Executor</emphasis>: Select this setting to disable the JMS executor. The executor is enabled by default.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Executor transacted</emphasis>: Select this setting to enable JMS transactions on the executor queue.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Enable signal</emphasis>: Select this setting to enable signal configuration through JMS.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Enable audit</emphasis>: Select this setting to enable audit logging through JMS.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Audit transacted</emphasis>: Select this setting to enable JMS transactions on the audit queue.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Queue executor</emphasis>, <emphasis role="strong">Queue request</emphasis>, <emphasis role="strong">Queue response</emphasis>, <emphasis role="strong">Queue signal</emphasis>, <emphasis role="strong">Queue audit</emphasis>: Custom JNDI names of the queues to use. If you set any of these values, you must also set the <emphasis role="strong">AMQ queues</emphasis> parameter.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">AMQ Queues</emphasis>: AMQ queue names, separated by commas. These queues are automatically created when the broker starts and are accessible as JNDI resources in the JBoss EAP server. If you are using any custom queue names, you must enter the names of all the queues uses by the server in this field.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Enable SSL integration</emphasis>: Select this setting if you want to use an SSL connection to the AMQ broker. In this case you must also provide the name of the secret that you created in <xref linkend="secrets-amq-create-proc_openshift-operator"/> and the names and passwords of the key store and trust store that you used for the secret.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>If you want to customize the configuration of the Java virtual machine on the KIE Server pods, select the <emphasis role="strong">Enable JVM configuration</emphasis> box and then enter information in any of the fields under <emphasis role="strong">Enable JVM configuration</emphasis>. All fields are optional. For the JVM parameters that you can configure, see <xref linkend="jvm-settings-ref_openshift-operator"/>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Database type</emphasis> field, select the database that the KIE Server must use. The following values are available:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>mysql</literal>: A MySQL server, created in a separate pod.</simpara>
</listitem>
<listitem>
<simpara><literal>postgresql</literal>: A PostgreSQL server, created in a separate pod. Use this setting unless you have a specific reason to use any other setting.</simpara>
</listitem>
<listitem>
<simpara><literal>h2</literal>: A built-in <literal>h2</literal> database engine that does not require a separate pod. Do not scale the KIE Server pod if you use this setting.</simpara>
</listitem>
<listitem>
<simpara><literal>external</literal>: An external database server.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>If you selected any database except <literal>external</literal>, a Persistent Volume Claim will be created to store the database. Optionally, set configuration parameters for the persistent volume:</simpara>
<itemizedlist>
<listitem>
<simpara>In the <emphasis role="strong">Size</emphasis> field, enter the size of the persistence volume.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">StorageClass name</emphasis> field, enter the storage class name for the persistent volume.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Optional: If you selected the <literal>external</literal> database, configure the KIE Server extension image. If you want to use any database server except PostgreSQL, MySQL, or MariaDB, you must provide a KIE Server extension image with the database server driver according to instructions in <xref linkend="externaldb-build-proc_openshift-operator"/>. To configure the KIE Server to use this extension image, make the following changes:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Select the <emphasis role="strong">Enable extension image stream</emphasis> box.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Extension image stream tag</emphasis> field, enter the ImageStreamTag definition for the image that you created, for example, <literal>jboss-kie-db2-extension-openshift-image:11.1.4.4</literal></simpara>
</listitem>
<listitem>
<simpara>Optional: In the <emphasis role="strong">Extension image stream namespace</emphasis> field, enter the namespace into which you pushed the image. If you do not enter any value in this field, the operator expects the image to be in the <literal>openshift</literal> namespace.</simpara>
</listitem>
<listitem>
<simpara>Optional: In the <emphasis role="strong">Extension image install directory</emphasis> field, enter the directory within the extensions image where the extensions are located. If you used the procedure in <xref linkend="externaldb-build-proc_openshift-operator"/> to build the image, do not enter any value for this field.</simpara>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>If you selected an external database server, provide the following information in additional fields:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara><emphasis role="strong">Driver</emphasis>: Enter the database server driver, depending on the server type:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>mysql</literal></simpara>
</listitem>
<listitem>
<simpara><literal>postgresql</literal></simpara>
</listitem>
<listitem>
<simpara><literal>mariadb</literal></simpara>
</listitem>
<listitem>
<simpara><literal>mssql</literal></simpara>
</listitem>
<listitem>
<simpara><literal>db2</literal></simpara>
</listitem>
<listitem>
<simpara><literal>oracle</literal></simpara>
</listitem>
<listitem>
<simpara><literal>sybase</literal></simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara><emphasis role="strong">Dialect</emphasis>: Enter the Hibernate dialect for the server, depending on the server type. The common settings are:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>org.hibernate.dialect.MySQL5InnoDBDialect</literal></simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.MySQL8Dialect</literal></simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.MariaDB102Dialect</literal></simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.PostgreSQL95Dialect</literal></simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.PostgresPlusDialect</literal> (used for EntrepriseDB Postgres Advanced Server)</simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.SQLServer2012Dialect</literal> (used for MS SQL)</simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.DB2Dialect</literal></simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.Oracle10gDialect</literal></simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.SybaseASE15Dialect</literal></simpara>
<simpara>For a complete list of supported dialects, see the <emphasis>Hibernate SQL Dialects</emphasis> table in <link xl:href="https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.3/html-single/developing_hibernate_applications/index#hibernate_properties">Hibernate properties</link> in the Red Hat JBoss EAP documentation.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara><emphasis role="strong">Host</emphasis>: Enter the host name of the external database server.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Port</emphasis>: Enter the port number of the external database server.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Jdbc URL</emphasis>: Enter the JDBC URL for the external database server.</simpara>
<note>
<simpara>If you are using the EntrepriseDB Postgres database server, use an URL starting with <literal>jdbc:postgresql://</literal> and not with <literal>jdbc:edb://</literal>. Alternatively, do not set the URL and set the host and port parameters instead.</simpara>
</note>
</listitem>
<listitem>
<simpara><emphasis role="strong">NonXA</emphasis>: Select this box if you want to configure the data source in non-XA mode.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">JNDI name</emphasis>: Enter the JNDI name that the application uses for the data source.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">User name</emphasis> and <emphasis role="strong">Password</emphasis>: Enter the user name and password for the external database server.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Background validation</emphasis>: Optionally, select this box to enable background SQL validation and enter the background validation interval.</simpara>
</listitem>
<listitem>
<simpara>Optional: Set the minimum and maximum connection pool sizes, valid connection checker class, and exception sorter class for the database server.</simpara>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>If you are using a MySQL version 8 external database server, enable the <literal>mysql_native_password</literal> plugin and use it for authentication. For instructions about this pluding, see <link xl:href="https://dev.mysql.com/doc/refman/8.0/en/native-pluggable-authentication.html">Native Pluggable Authentication</link> in the <emphasis>MySQL 8.0 Reference Manual</emphasis>.</simpara>
<simpara>If you are using a MySQL version 8 image provided by Red Hat on Red Hat OpenShift Container Platform, to enable the plugin, set the <literal>MYSQL_DEFAULT_AUTHENTICATION_PLUGIN</literal> environment variable to <literal>mysql_native_password</literal>.</simpara>
<simpara>If you created users on the MySQL version 8 server before enabling the <literal>mysql_native_password</literal> plugin, you must update the <literal>mysql-user</literal> table after you enable the plugin.</simpara>
</listitem>
<listitem>
<simpara>Optional: Depending on your needs, set environment variables. To set an environment variable, click <emphasis role="strong">Add new Environment variable</emphasis>, then enter the name and value for the variable in the <emphasis role="strong">Name</emphasis> and <emphasis role="strong">Value</emphasis> fields.</simpara>
<itemizedlist>
<listitem>
<simpara>If you want to configure an immutable KIE server that pulls services from the configured Maven repository, enter the following settings:</simpara>
<orderedlist numeration="lowerroman">
<listitem>
<simpara>Set the <literal>KIE_SERVER_CONTAINER_DEPLOYMENT</literal> environment variable. The variable must contain the identifying information of the services (KJAR files) that the deployment must pull from the Maven repository. The format is <literal>&lt;containerId&gt;=&lt;groupId&gt;:&lt;artifactId&gt;:&lt;version&gt;</literal> or, if you want to specify an alias name for the container, <literal>&lt;containerId&gt;(&lt;aliasId&gt;)=&lt;groupId&gt;:&lt;artifactId&gt;:&lt;version&gt;</literal>. You can provide two or more KJAR files using the <literal>|</literal> separator, as illustrated in the following example: <literal>containerId=groupId:artifactId:version|c2(alias2)=g2:a2:v2</literal>.</simpara>
</listitem>
<listitem>
<simpara>Configure an external Maven repository.</simpara>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>If you want to configure an external Maven repository, set the following variables:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>MAVEN_REPO_URL</literal>: The URL for the Maven repository</simpara>
</listitem>
<listitem>
<simpara><literal>MAVEN_REPO_ID</literal>: An identifier for the Maven repository, for example, <literal>repo-custom</literal></simpara>
</listitem>
<listitem>
<simpara><literal>MAVEN_REPO_USERNAME</literal>: The user name for the Maven repository</simpara>
</listitem>
<listitem>
<simpara><literal>MAVEN_REPO_PASSWORD</literal>: The password for the Maven repository</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>If your OpenShift environment does not have a connection to the public Internet, configure access to a Maven mirror that you set up according to <xref linkend="offline-repo-proc_openshift-operator"/>. Set the following variables:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>MAVEN_MIRROR_URL</literal>: The URL for the Maven mirror repository that you set up in <xref linkend="offline-repo-proc_openshift-operator"/>. This URL must be accessible from a pod in your OpenShift environment. If you configured this KIE Server as S2I, you already entered this URL.</simpara>
</listitem>
<listitem>
<simpara><literal>MAVEN_MIRROR_OF</literal>: The value that determines which artifacts are to be retrieved from the mirror. If you configured this KIE Server as S2I, do not set this value. For instructions about setting the <literal>mirrorOf</literal> value, see <link xl:href="https://maven.apache.org/guides/mini/guide-mirror-settings.html">Mirror Settings</link> in the Apache Maven documentation. The default value is <literal>external:*</literal>. With this value, Maven retrieves every required artifact from the mirror and does not query any other repositories.</simpara>
<simpara>If you configure an external Maven repository (<literal>MAVEN_REPO_URL</literal>), change <literal>MAVEN_MIRROR_OF</literal> to exclude the artifacts in this repository from the mirror, for example, <literal>external:*,!repo-custom</literal>. Replace <literal>repo-custom</literal> with the ID that you configured in <literal>MAVEN_REPO_ID</literal>.</simpara>
<simpara>If your authoring environment uses a built-in Business Central Maven repository, change <literal>MAVEN_MIRROR_OF</literal> to exclude the artifacts in this repository from the mirror: <literal>external:*,!repo-rhpamcentr</literal>.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>If you want to configure your KIE Server deployment to use Prometheus to collect and store metrics, set the <literal>PROMETHEUS_SERVER_EXT_DISABLED</literal> environment variable to <literal>false</literal>. For instructions about configuring Prometheus metrics collection, see <link xl:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/managing_red_hat_process_automation_manager_and_kie_server_settings#prometheus-monitoring-ocp-proc_execution-server"><emphasis>Managing and monitoring KIE Server</emphasis></link>.</simpara>
</listitem>
<listitem>
<simpara>If you are using Red Hat Single Sign-On authentication and the interaction of your application with Red Hat Single Sign-On requires support for CORS, set the <literal>SSO_ENABLE_CORS</literal> variable to <literal>true</literal>.</simpara>
</listitem>
<listitem>
<simpara>In some authoring environments, you might need to ensure that several users can deploy services on the same KIE Server at the same time. By default, after deploying a service onto a KIE Server using Business Central, the user needs to wait for some seconds before more services can be deployed. The <literal>OpenShiftStartupStrategy</literal> setting is enabled by default and causes this limitation. To remove the limitation, you can configure an <literal>rhpam-authoring</literal> environment to use the <emphasis>controller strategy</emphasis>. Do not make this change unless a specific need for it exists; if you decide to enable controller strategy, make this change on Business Central and on all KIE Servers in the same environment.</simpara>
<note>
<simpara>Do not enable the controller strategy in an environment with a high-availability Business Central. In such environments the controller strategy does not function correctly.</simpara>
</note>
<simpara>To enable controller strategy on a KIE Server, set the  <literal>KIE_SERVER_STARTUP_STRATEGY</literal> environment variable to <literal>ControllerBasedStartupStrategy</literal> and the <literal>KIE_SERVER_CONTROLLER_OPENSHIFT_ENABLED</literal> environment variable to <literal>false</literal>.</simpara>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
<formalpara>
<title>Next steps</title>
<para>To configure additional KIE Servers, click <emphasis role="strong">Add new KIE Server</emphasis> again and repeat the procedure for the new server configuration.</para>
</formalpara>
<simpara>If you want to deploy the environment without Smart Router and without Process Instance Migration, click <emphasis role="strong">Finish</emphasis> and then click <emphasis role="strong">Deploy</emphasis> to deploy the environment. Otherwise, continue to set configuration parameters for Smart Router.</simpara>
</section>
<section xml:id="operator-deploy-smartrouter-proc_openshift-operator">
<title>Setting Smart Router configuration for the environment</title>
<simpara>By default, the deployed environment does not include Smart Router. You can add a Smart Router to the environment. You can also set configuration options for the Smart Router.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You completed basic configuration of a Red Hat Process Automation Manager environment using the Business Automation operator in the installer wizard according to the instructions in <xref linkend="operator-deploy-basic-proc_openshift-operator"/>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>If the <emphasis role="strong">Installation</emphasis>, <emphasis role="strong">Security</emphasis>, <emphasis role="strong">Console</emphasis>, or <emphasis role="strong">KIE Servers</emphasis> tab is open, click <emphasis role="strong">Next</emphasis> until you view the <emphasis role="strong">Smart Router</emphasis> tab.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Set Smart Router</emphasis> to add Smart Router to the environment and to configure Smart Router.</simpara>
</listitem>
<listitem>
<simpara>If you have created a custom Smart Router image according to the instructions in <xref linkend="customimage-smartrouter-proc_openshift-operator"/>, set the following values:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Image context</emphasis>: The project name, for example, <literal>rhpam-project</literal></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Image</emphasis>: The custom image name, for example, <literal>rhpam-smartrouter-rhel8-custom</literal></simpara>
<simpara>If you used a custom tag for the image, set the <emphasis role="strong">Image tag</emphasis> field to this tag.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>If you created the secret for Smart Router according to the instructions in <xref linkend="secrets-smartrouter-create-proc_openshift-operator"/>, enter the name of the secret in the <emphasis role="strong">Secret</emphasis> field.</simpara>
</listitem>
<listitem>
<simpara>Optional: Enter the number of replicas for the Smart Router in the <emphasis role="strong">Replicas</emphasis> field.</simpara>
</listitem>
<listitem>
<simpara>Optional: Enter requested and maximum CPU and memory limits in the fields under <emphasis role="strong">Resource quotas</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Optional: Set the logging level using an environment variable:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Click <emphasis role="strong">Add new Environment variable</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Name</emphasis> field, enter <literal>LOG_LEVEL</literal>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Value</emphasis> field, enter a Java logging level. For a list of the available logging levels, see <link xl:href="https://cr.openjdk.java.net/~iris/se/11/latestSpec/api/java.logging/java/util/logging/Level.html">class Level</link>.</simpara>
</listitem>
<listitem>
<simpara>Optional: Set different logging levels for components by package name:</simpara>
<orderedlist numeration="lowerroman">
<listitem>
<simpara>Click <emphasis role="strong">Add new Environment variable</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Name</emphasis> field, enter <literal>LOG_LEVEL</literal>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Value</emphasis> field, enter packages and logging levels for them, formatted as in the following example:</simpara>
<screen>com.example.abc=FINEST,com.example.def=SEVERE,com.example.xyz=FINE</screen>
</listitem>
</orderedlist>
</listitem>
</orderedlist>
</listitem>
</orderedlist>
<formalpara>
<title>Next steps</title>
<para>If you want to deploy the Process Instance Migration service, continue to deploy the service. Otherwise, click <emphasis role="strong">Finish</emphasis> and then click <emphasis role="strong">Deploy</emphasis> to deploy the environment.</para>
</formalpara>
</section>
<section xml:id="operator-deploy-pim-proc_openshift-operator">
<title>Setting Process Instance Migration configuration for the environment</title>
<simpara>You can use the operator to deploy the Process Instance Migration (PIM) service. You can use the PIM service to define the migration between two different process definitions, known as a migration plan. You can apply the migration plan to the running process instances in a specific KIE Server.</simpara>
<simpara>The PIM service uses a database server for its operation.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You completed basic configuration of a Red Hat Process Automation Manager environment using the Business Automation operator in the installer wizard according to the instructions in <xref linkend="operator-deploy-basic-proc_openshift-operator"/>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>If the <emphasis role="strong">Installation</emphasis>, <emphasis role="strong">Security</emphasis>, <emphasis role="strong">Console</emphasis>, <emphasis role="strong">KIE Servers</emphasis>, or <emphasis role="strong">Smart Router</emphasis> tab is open, click <emphasis role="strong">Next</emphasis> until you view the <emphasis role="strong">Process Instance Migration</emphasis> tab.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Set Process Instance Migration</emphasis> to add PIM to the environment and to configure PIM.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Database type</emphasis> field, select the database that the PIM service must use. The following values are available:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>mysql</literal>: A MySQL server, created in a separate pod.</simpara>
</listitem>
<listitem>
<simpara><literal>postgresql</literal>: A PostgreSQL server, created in a separate pod. Use this setting unless you have a specific reason to use any other setting.</simpara>
</listitem>
<listitem>
<simpara><literal>h2</literal>: A built-in <literal>h2</literal> database engine that does not require a separate pod.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Optional: Set configuration parameters of the persistent volume for the database:</simpara>
<itemizedlist>
<listitem>
<simpara>In the <emphasis role="strong">Size</emphasis> field, enter the size of the persistence volume</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">StorageClass name</emphasis> field, enter the storage class name for the persistent volume</simpara>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
<formalpara>
<title>Next steps</title>
<para>Click <emphasis role="strong">Finish</emphasis> and then click <emphasis role="strong">Deploy</emphasis> to deploy the environment.</para>
</formalpara>
<simpara>For instructions about using the PIM service, see <link xl:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/developing_process_services_in_red_hat_process_automation_manager#process-instance-migration-con">Process Instance Migration</link> in <emphasis>Managing and monitoring business processes in Business Central</emphasis>.</simpara>
</section>
</section>
<section xml:id="operator-modify-proc_openshift-operator">
<title>Modifying an environment that is deployed using operators</title>
<simpara>If an environment is deployed using operators, you cannot modify it using typical OpenShift methods. For example, if you delete a deployment configuration or a service, it is re-created automatically with the same parameters.</simpara>
<simpara>To modify the environment, you must modify the YAML description of the environment. You can change common settings such as passwords, add new KIE Servers, and scale KIE Servers.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Enter your project in the OpenShift web cluster console.</simpara>
</listitem>
<listitem>
<simpara>In the OpenShift Web console navigation panel, select <emphasis role="strong">Catalog &#8594; Installed operators</emphasis> or <emphasis role="strong">Operators &#8594; Installed operators</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Find the <literal>Business Automation</literal> operator line in the table and click <literal>KieApp</literal> in the line. Information about the environments that you deployed using this operator is displayed.</simpara>
</listitem>
<listitem>
<simpara>Click the name of a deployed environment.</simpara>
</listitem>
<listitem>
<simpara>Select the <emphasis role="strong">YAML</emphasis> tab.</simpara>
<simpara>A YAML source is displayed. In this YAML source, you can edit the content under <literal>spec:</literal> to change the configuration of the environment.</simpara>
</listitem>
<listitem>
<simpara>If you want to change the deployed version of Red Hat Process Automation Manager, add the following line under <literal>spec:</literal></simpara>
<screen>  version: 7.10.0</screen>
<simpara>You can replace <literal>7.10.0</literal> with another required version. Use this setting to upgrade Red Hat Process Automation Manager to a new version if automatic updates are disabled, for example, if you use a custom image.</simpara>
</listitem>
<listitem>
<simpara>If you want to change common settings, such as passwords, edit the values under <literal>commonConfig:</literal>.</simpara>
</listitem>
<listitem>
<simpara>If you want to add new KIE Servers, add their descriptions at the end of the block under <literal>servers:</literal>, as shown in the following examples:</simpara>
<itemizedlist>
<listitem>
<simpara>To add two servers named <literal>server-a</literal> and <literal>server-a-2</literal>, add the following lines:</simpara>
<screen>- deployments: 2
  name: server-a</screen>
</listitem>
<listitem>
<simpara>To add an immutable KIE Server that includes services built from source in an S2I process, add the following lines:</simpara>
<screen>- build:
    kieServerContainerDeployment: &lt;deployment&gt;
    gitSource:
      uri: &lt;url&gt;
      reference: &lt;branch&gt;
      contextDir: &lt;directory&gt;</screen>
<simpara>Replace the following values:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>&lt;deployment&gt;</literal>: The identifying information of the decision service (KJAR file) that is built from your source. The format is <literal>&lt;containerId&gt;=&lt;groupId&gt;:&lt;artifactId&gt;:&lt;version&gt;</literal>. You can provide two or more KJAR files using the <literal>|</literal> separator, for example <literal>containerId=groupId:artifactId:version|c2=g2:a2:v2</literal>. The Maven build process must produce all these files from the source in the Git repository.</simpara>
</listitem>
<listitem>
<simpara><literal>&lt;url&gt;</literal>: The URL for the Git repository that contains the source for your decision service.</simpara>
</listitem>
<listitem>
<simpara><literal>&lt;branch&gt;</literal>: The branch in the Git repository.</simpara>
</listitem>
<listitem>
<simpara><literal>&lt;directory&gt;</literal>: The path to the source within the project downloaded from the Git repository.</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>If you want to scale a KIE Server, find the description of the server in the block under <literal>servers:</literal> and add a <literal>replicas:</literal> setting under that description. For example, <literal>replicas: 3</literal> scales the server to three pods.</simpara>
</listitem>
<listitem>
<simpara>If you want to make other changes, review the CRD source for the available settings. To view the CRD source, log in to the Red Hat OpenShift Container Platform environment with the <literal>oc</literal> command as an administrative user and then enter the following command:</simpara>
<screen>oc get crd kieapps.app.kiegroup.org -o yaml</screen>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Save</emphasis> and then wait for a <literal>has been updated</literal> pop-up message.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Reload</emphasis> to view the new YAML description of the environment.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="jvm-settings-ref_openshift-operator">
<title>JVM configuration parameters</title>
<simpara>When deploying Red Hat Process Automation Manager using the operator, you can optionally set a number of JVM configuration parameters for Business Central and KIE Servers. These parameters set environment variables for the corresponding containers.</simpara>
<simpara>The following table lists all JVM configuration parameters that you can set when deploying Red Hat Process Automation Manager using the operator.</simpara>
<simpara>The default settings are optimal for most use cases. Make any changes only when they are required.</simpara>
<table frame="all" rowsep="1" colsep="1">
<title>JVM configuration parameters</title>
<tgroup cols="4">
<colspec colname="col_1" colwidth="14*"/>
<colspec colname="col_2" colwidth="26*"/>
<colspec colname="col_3" colwidth="40*"/>
<colspec colname="col_4" colwidth="20*"/>
<thead>
<row>
<entry align="left" valign="top">Configuration field</entry>
<entry align="left" valign="top">Environment variable</entry>
<entry align="left" valign="top">Description</entry>
<entry align="left" valign="top">Example</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>Java Opts append</simpara></entry>
<entry align="left" valign="top"><simpara>JAVA_OPTS_APPEND</simpara></entry>
<entry align="left" valign="top"><simpara>User specified Java options to be appended to generated options in JAVA_OPTS.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>-Dsome.property&#8203;=foo</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Java max memory ratio</simpara></entry>
<entry align="left" valign="top"><simpara>JAVA_MAX_MEM_RATIO</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum percentage of container memory that can be used for the Java Virtual Machine. The remaining memory is used for the operating system. The default value is <literal>50</literal>, for a limit of 50%. Sets the <literal>-Xmx</literal> JVM option. If you enter a value of <literal>0</literal>, the <literal>-Xmx</literal> option is not set.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>40</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Java initial memory ratio</simpara></entry>
<entry align="left" valign="top"><simpara>JAVA_INITIAL_MEM_RATIO</simpara></entry>
<entry align="left" valign="top"><simpara>The percentage of container memory that is initially used for the Java Virtual Machine. The default value is <literal>25</literal>, so 25% of the pod memory is initially allocated for the JVM if this value does not exceed the <emphasis role="strong">Java Max Initial Memory</emphasis> value. Sets the <literal>-Xms</literal> JVM option. If you enter a value of <literal>0</literal>, the <literal>-Xms</literal> option is not set.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>25</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Java max initial memory</simpara></entry>
<entry align="left" valign="top"><simpara>JAVA_MAX_INITIAL_MEM</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum amount of memory, in megabytes, that can be initially used for the Java Virtual Machine. If the initial allocated memory, as set in the <emphasis role="strong">Java initial memory ratio</emphasis> parameter, would otherwise be greater than this value, the amount of memory set in this value is allocated using the <literal>-Xms</literal> JVM option. The default value is <literal>4096</literal>.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>4096</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Java diagnostics</simpara></entry>
<entry align="left" valign="top"><simpara>JAVA_DIAGNOSTICS</simpara></entry>
<entry align="left" valign="top"><simpara>Enable this setting to enable output of additional JVM diagnostic information to the standard output. Disabled by default.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>true</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Java debug</simpara></entry>
<entry align="left" valign="top"><simpara>JAVA_DEBUG</simpara></entry>
<entry align="left" valign="top"><simpara>Enable this setting to switch on remote debugging. Disabled by default. Adds the <literal>-&#8288;agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=${debug_port}</literal> JVM option, where <literal>${debug_port}</literal> defaults to <literal>5005</literal>.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>true</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Java debug port</simpara></entry>
<entry align="left" valign="top"><simpara>JAVA_DEBUG_PORT</simpara></entry>
<entry align="left" valign="top"><simpara>The port that is used for remote debugging. The default value is <literal>5005</literal>.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>8787</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>GC min heap free ratio</simpara></entry>
<entry align="left" valign="top"><simpara>GC_MIN_HEAP_FREE_RATIO</simpara></entry>
<entry align="left" valign="top"><simpara>Minimum percentage of heap free after garbage collection (GC) to avoid expansion. Sets the <literal>-XX:MinHeapFreeRatio</literal> JVM option.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>20</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>GC max heap free ratio</simpara></entry>
<entry align="left" valign="top"><simpara>GC_MAX_HEAP_FREE_RATIO</simpara></entry>
<entry align="left" valign="top"><simpara>Maximum percentage of heap free after GC to avoid shrinking. Sets the <literal>-XX:MaxHeapFreeRatio</literal> JVM option.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>40</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>GC time ratio</simpara></entry>
<entry align="left" valign="top"><simpara>GC_TIME_RATIO</simpara></entry>
<entry align="left" valign="top"><simpara>Specifies the ratio of the time spent outside the garbage collection (for example, the time spent for application execution) to the time spent in the garbage collection. Sets the <literal>-XX:GCTimeRatio</literal> JVM option.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>4</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>GC adaptive size policy weight</simpara></entry>
<entry align="left" valign="top"><simpara>GC_ADAPTIVE_SIZE_POLICY_WEIGHT</simpara></entry>
<entry align="left" valign="top"><simpara>The weighting given to the current GC time versus previous GC times. Sets the <literal>-XX:AdaptiveSizePolicyWeight</literal> JVM option.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>90</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>GC max metaspace size</simpara></entry>
<entry align="left" valign="top"><simpara>GC_MAX_METASPACE_SIZE</simpara></entry>
<entry align="left" valign="top"><simpara>The maximum metaspace size. Sets the <literal>-XX:MaxMetaspaceSize</literal> JVM option.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>100</literal></simpara></entry>
</row>
</tbody>
</tgroup>
</table>
</section>
<section xml:id="customimage-con_openshift-operator">
<title>Creating custom images for KIE Server and Smart Router</title>
<simpara>You can create custom images to add files to KIE Server
and Smart Router
deployments. You must push the images to your own container registry. When deploying Red Hat Process Automation Manager, you can configure the operator to use the custom images.</simpara>
<simpara>If you use a custom image, you must disable automatic version updates. When you want to install a new version, build the image with the same name as before and the new version tag and push the image into your registry. You can then change the version and the operator automatically pulls the new image. For instructions about changing the product version in the operator, see <xref linkend="operator-modify-proc_openshift-operator"/>.</simpara>
<simpara>In particular, you can create the following types of custom images:</simpara>
<itemizedlist>
<listitem>
<simpara>A custom image of KIE Server that includes an additional RPM package</simpara>
</listitem>
<listitem>
<simpara>A custom image of KIE Server that includes an additional JAR class library</simpara>
</listitem>
<listitem>
<simpara>A custom image of Smart Router that includes an additional JAR class library to implement custom routing</simpara>
</listitem>
</itemizedlist>
<section xml:id="customimage-rpm-proc_openshift-operator">
<title>Creating a custom KIE Server image with an additional RPM package</title>
<simpara>You can create a custom KIE Server image where an additional RPM package is installed. You can push this image into your custom registry and then use it to deploy the KIE Server.</simpara>
<simpara>You can install any package from the Red Hat Enterprise Linux 8 repository. This example installs the <literal>procps-ng</literal> package, which provides the <literal>ps</literal> utility, but you can modify it to install other packages.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Authenticate to the <literal>registry.redhat.io</literal> registry using the <literal>podman login</literal> command. For instructions about authenticating to the registry, see <link xl:href="https://access.redhat.com/RegistryAuthentication">Red Hat Container Registry Authentication</link>.</simpara>
</listitem>
<listitem>
<simpara>To download the supported KIE Server base image, enter the following command:</simpara>
<screen>podman pull registry.redhat.io/rhpam-7/rhpam-kieserver-rhel8:7.10.0</screen>
</listitem>
<listitem>
<simpara>Create a <literal>Dockerfile</literal> that defines a custom image based on the base image. The file must change the current user to <literal>root</literal>, install the RPM package using the <literal>yum</literal> command, and then revert to <literal>USER 185</literal>, the Red Hat JBoss EAP user. The following example shows the content of the <literal>Dockerfile</literal> file:</simpara>
<screen>FROM registry.redhat.io/rhpam-7/rhpam-kieserver-rhel8:7.10.0
USER root
RUN yum -y install procps-ng
USER 185</screen>
<simpara>Replace the name of the RPM file as necessary. The <literal>yum</literal> command automatically installs all dependencies from the Red Hat Enterprise Linux 8 repository. You might need to install several RPM files, in this case, use several <literal>RUN</literal> commands.</simpara>
</listitem>
<listitem>
<simpara>Build the custom image using the <literal>Dockerfile</literal>. Supply the fully qualified name for the image, including the registry name. You must use the same version tag as the version of the base image. To build the image, enter the following command:</simpara>
<screen>podman build . --tag <emphasis>registry_address</emphasis>/<emphasis>image_name</emphasis>:7.10.0</screen>
<simpara>For example:</simpara>
<screen>podman build . --tag registry.example.com/custom/rhpam-kieserver-rhel8:7.10.0</screen>
</listitem>
<listitem>
<simpara>After the build completes, run the image, log in to it, and verify that the customization was successful. Enter the following command:</simpara>
<screen>podman run -it --rm <emphasis>registry_address</emphasis>/<emphasis>image_name</emphasis>:7.10.0 /bin/bash</screen>
<simpara>For example:</simpara>
<screen>podman run -it --rm registry.example.com/custom/rhpam-kieserver-rhel8:7.10.0 /bin/bash</screen>
<simpara>In the shell prompt for the image, enter the command to test that the RPM is installed, then enter <literal>exit</literal>. For example, for <literal>procps-ng</literal>, run the <literal>ps</literal> command:</simpara>
<screen>[jboss@c2fab36b778e ~]$ ps
PID TTY          TIME CMD
  1 pts/0    00:00:00 bash
 13 pts/0    00:00:00 ps
[jboss@c2fab36b778e ~]$ exit</screen>
</listitem>
<listitem>
<simpara>To push the custom image into your registry, enter the following command:</simpara>
<screen>podman push <emphasis>registry_address</emphasis>/<emphasis>image_name</emphasis>:7.10.0 docker://<emphasis>registry_address</emphasis>/<emphasis>image_name</emphasis>:7.10.0</screen>
<simpara>For example:</simpara>
<screen>podman push registry.example.com/custom/rhpam-kieserver-rhel8:7.10.0 docker://registry.example.com/custom/rhpam-kieserver-rhel8:7.10.0</screen>
</listitem>
</orderedlist>
<formalpara>
<title>Next steps</title>
<para>When deploying the KIE Server, set the image name and namespace to specify the custom image in your registry. Click <emphasis role="strong">Set KIE Server image</emphasis>, change the <emphasis role="strong">Kind</emphasis> value to <emphasis role="strong">DockerImage</emphasis>, and then provide the image name including the registry name, but without the version tag, for example:</para>
</formalpara>
<screen>registry.example.com/custom/rhpam-kieserver-rhel8</screen>
<simpara>For instructions about deploying the KIE Server using the operator, see <xref linkend="operator-deploy-kieserver-proc_openshift-operator"/>.</simpara>
</section>
<section xml:id="customimage-jar-proc_openshift-operator">
<title>Creating a custom KIE Server image with an additional JAR file</title>
<simpara>You can create a custom KIE Server image where an additional JAR file (or several JAR files) is installed to extend the capabilities of the server. You can push this image into your custom registry and then use it to deploy the KIE Server.</simpara>
<simpara>For example, you can create a custom class JAR to provide custom Prometheus metrics in the KIE Server. For instructions about creating the custom class, see <link xl:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/managing_red_hat_process_automation_manager_and_kie_server_settings#prometheus-monitoring-custom-proc_execution-server">Extending Prometheus metrics monitoring in KIE Server with custom metrics</link> in <emphasis>Managing and monitoring KIE Server</emphasis>.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Develop a custom library that works with the KIE Server. You can use the following documentation and examples to develop the library:</simpara>
<itemizedlist>
<listitem>
<simpara><link xl:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/managing_red_hat_process_automation_manager_and_kie_server_settings#kie-server-extensions-con_execution-server">KIE Server capabilities and extensions</link> in <emphasis>Managing and monitoring KIE Server</emphasis>.</simpara>
</listitem>
<listitem>
<simpara><link xl:href="https://developers.redhat.com/blog/2019/10/31/domain-specific-prometheus-metrics-with-red-hat-process-automation-manager-and-decision-manager/">Domain-specific Prometheus metrics with Red Hat Process Automation Manager and Decision Manager</link></simpara>
</listitem>
<listitem>
<simpara><link xl:href="http://mswiderski.blogspot.com/2015/12/kie-server-extend-kie-server-with.html">Extend KIE Server with additional transport</link></simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Build the library using Maven, so that the JAR file is placed in the <literal>target</literal> directory. This example uses the <literal>custom-kieserver-ext-1.0.0.Final.jar</literal> file name.</simpara>
</listitem>
<listitem>
<simpara>Authenticate to the <literal>registry.redhat.io</literal> registry using the <literal>podman login</literal> command. For instructions about authenticating to the registry, see <link xl:href="https://access.redhat.com/RegistryAuthentication">Red Hat Container Registry Authentication</link>.</simpara>
</listitem>
<listitem>
<simpara>To download the supported KIE Server base image, enter the following command:</simpara>
<screen>podman pull registry.redhat.io/rhpam-7/rhpam-kieserver-rhel8:7.10.0</screen>
</listitem>
<listitem>
<simpara>Create a <literal>Dockerfile</literal> that defines a custom image based on the base image. The file must copy the JAR file (or several JAR files) into the <literal>/opt/eap/standalone/deployments/ROOT.war/WEB-INF/lib/</literal> directory. The following example shows the content of the <literal>Dockerfile</literal> file:</simpara>
<screen>FROM registry.redhat.io/rhpam-7/rhpam-kieserver-rhel8:7.10.0
COPY target/custom-kieserver-ext-1.0.0.Final.jar /opt/eap/standalone/deployments/ROOT.war/WEB-INF/lib/</screen>
</listitem>
<listitem>
<simpara>Build the custom image using the <literal>Dockerfile</literal>. Supply the fully qualified name for the image, including the registry name. You must use the same version tag as the version of the base image. To build the image, enter the following command:</simpara>
<screen>podman build . --tag <emphasis>registry_address</emphasis>/<emphasis>image_name</emphasis>:7.10.0</screen>
<simpara>For example:</simpara>
<screen>podman build . --tag registry.example.com/custom/rhpam-kieserver-rhel8:7.10.0</screen>
</listitem>
<listitem>
<simpara>To push the custom image into your registry, enter the following command:</simpara>
<screen>podman push <emphasis>registry_address</emphasis>/<emphasis>image_name</emphasis>:7.10.0 docker://<emphasis>registry_address</emphasis>/<emphasis>image_name</emphasis>:7.10.0</screen>
<simpara>For example:</simpara>
<screen>podman push registry.example.com/custom/rhpam-kieserver-rhel8:7.10.0 docker://registry.example.com/custom/rhpam-kieserver-rhel8:7.10.0</screen>
</listitem>
</orderedlist>
<formalpara>
<title>Next steps</title>
<para>When deploying the KIE Server, set the image name and namespace to specify the custom image in your registry. Click <emphasis role="strong">Set KIE Server image</emphasis>, change the <emphasis role="strong">Kind</emphasis> value to <emphasis role="strong">DockerImage</emphasis>, and then provide the image name including the registry name, but without the version tag, for example:</para>
</formalpara>
<screen>registry.example.com/custom/rhpam-kieserver-rhel8</screen>
<simpara>For instructions about deploying the KIE Server using the operator, see <xref linkend="operator-deploy-kieserver-proc_openshift-operator"/>.</simpara>
</section>
<section xml:id="customimage-smartrouter-proc_openshift-operator">
<title>Creating a custom Smart Router image with an additional JAR file to implement custom routing</title>
<simpara>By default, Smart Router routes requests based on the container alias. If several KIE Servers provide a service with the same container alias, Smart Router balances the load between them.</simpara>
<simpara>In some cases, custom routing functionality is required. You can create a custom class to implement the custom routing and then create a custom Smart Router image with the class. You can push this image into your custom registry and then use it to deploy Smart Router.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>A JDK and Apache Maven are installed.</simpara>
</listitem>
<listitem>
<simpara>The project for deploying Red Hat Process Automation Manager is created in your Red Hat OpenShift Container Platform environment</simpara>
</listitem>
<listitem>
<simpara>You know the route for the Red Hat OpenShift Container Platform image registry and have the permission to push images into the registry. For instructions about configuring the registry, see <link xl:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/4.6/html/registry/index"><emphasis>Registry</emphasis></link> in Red Hat OpenShift Container Platform product documentation.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Download the sample source of the router extention from the <link xl:href="https://github.com/jboss-container-images/rhpam-7-openshift-image/tree/7.10.0.GA/quickstarts/router-ext">GitHub repository</link>.</simpara>
</listitem>
<listitem>
<simpara>Modify the sample source of the router extension as necessary. The existing code implements simple routing based on the version of the container.</simpara>
</listitem>
<listitem>
<simpara>Build the source code with Maven:</simpara>
<screen>mvn clean package</screen>
<simpara>The build process generates the following JAR file: <literal>target/router-ext-0.0.1-SNAPSHOT.jar</literal></simpara>
</listitem>
<listitem>
<simpara>Create a working directory for creating the custom image, copy the generated JAR file into the directory, and then change to the directory, for example:</simpara>
<screen>mkdir /tmp/smartrouter
cp target/router-ext-0.0.1-SNAPSHOT.jar /tmp/smartrouter
cd /tmp/smartrouter</screen>
</listitem>
<listitem>
<simpara>Authenticate to the <literal>registry.redhat.io</literal> registry using the <literal>podman login</literal> command. For instructions about authenticating to the registry, see <link xl:href="https://access.redhat.com/RegistryAuthentication">Red Hat Container Registry Authentication</link>.</simpara>
</listitem>
<listitem>
<simpara>To download the supported Smart Router base image, enter the following command:</simpara>
<screen>podman pull registry.redhat.io/rhpam-7/rhpam-smartrouter-rhel8:7.10.0</screen>
</listitem>
<listitem>
<simpara>Extract the <literal>openshift-launch.sh</literal> file from the official Smart Router image:</simpara>
<screen>podman run --rm registry.redhat.io/rhpam-7/rhpam-smartrouter-rhel8:7.9.0 \
   cat /opt/rhpam-smartrouter/openshift-launch.sh &gt; openshift-launch.sh</screen>
</listitem>
<listitem>
<simpara>Edit the <literal>openshift-launch.sh</literal> file. In the last line of the file, find the <literal>exec</literal> instruction that looks like the following text:</simpara>
<screen>exec ${JAVA_HOME}/bin/java ${SHOW_JVM_SETTINGS} ${JAVA_OPTS} ${JAVA_OPTS_APPEND} ${JAVA_PROXY_OPTIONS} "${D_ARR[@]}" -jar /opt/${JBOSS_PRODUCT}/${KIE_ROUTER_DISTRIBUTION_JAR}</screen>
<simpara>Change the instruction to the following text:</simpara>
<screen>exec ${JAVA_HOME}/bin/java ${SHOW_JVM_SETTINGS} "${D_ARR[@]}" \
    -cp /opt/${JBOSS_PRODUCT}/router-ext-0.0.1-SNAPSHOT.jar:/opt/${JBOSS_PRODUCT}/${KIE_ROUTER_DISTRIBUTION_JAR} \
    org.kie.server.router.KieServerRouter</screen>
<simpara>This change adds the extension JAR file to the Java Class Path.</simpara>
</listitem>
<listitem>
<simpara>Create a <literal>Dockerfile</literal> file that defines a custom image based on the base image. The following example shows the content of the <literal>Dockerfile</literal> file:</simpara>
<screen>FROM registry.redhat.io/rhpam-7/rhpam-smartrouter-rhel8:7.10.0
RUN rm -rfv /opt/rhpam-smartrouter/openshift-launch.sh
COPY openshift-launch.sh  /opt/rhpam-smartrouter/openshift-launch.sh
COPY router-ext-0.0.1-SNAPSHOT.jar /opt/rhpam-smartrouter/router-ext-0.0.1-SNAPSHOT.jar

USER root
RUN chown jboss. /opt/rhpam-smartrouter/router-ext-0.0.1-SNAPSHOT.jar /opt/rhpam-smartrouter/openshift-launch.sh
RUN chmod +x /opt/rhpam-smartrouter/openshift-launch.sh
USER 185</screen>
<simpara>This file includes the following actions:</simpara>
<itemizedlist>
<listitem>
<simpara>Add the JAR file and the new <literal>openshift-launch.sh</literal> file</simpara>
</listitem>
<listitem>
<simpara>Change the current user to <literal>root</literal></simpara>
</listitem>
<listitem>
<simpara>Set the necessary permissions for the <literal>openshift-launch.sh</literal> file</simpara>
</listitem>
<listitem>
<simpara>Revert to <literal>USER 185</literal>, the Red Hat JBoss EAP user</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Log in to your Red Hat OpenShift Container Platform cluster with the <literal>oc</literal> command.</simpara>
</listitem>
<listitem>
<simpara>Log in to the Red Hat OpenShift Container Platform cluster registry with the <literal>podman login</literal> command.</simpara>
</listitem>
<listitem>
<simpara>Build the custom image using the <literal>Dockerfile</literal>. Tag the image for your Red Hat OpenShift Container Platform cluster registry and your project namespace. Use a custom name for the image and the same version tag as the version of the base image. To build the image, enter the following command:</simpara>
<screen>podman build . --tag <emphasis>registry-route</emphasis>/project-name_/<emphasis>image-name</emphasis>:7.10.0</screen>
<simpara>For example:</simpara>
<screen>podman build . --tag route-openshift-image-registry.openshift.example.com/rhpam-project/rhpam-smartrouter-rhel8-custom:7.10.0</screen>
</listitem>
<listitem>
<simpara>After the build completes, run the image and verify that the customization was successful. Enter the following command:</simpara>
<screen>podman run <emphasis>registry-route</emphasis>/<emphasis>project-name</emphasis>/<emphasis>image-name</emphasis>:7.10.0</screen>
<simpara>For example:</simpara>
<screen>podman run route-openshift-image-registry.openshift.example.com/rhpam-project/rhpam-smartrouter-rhel8-custom:7.10.0</screen>
<simpara>Ensure that the output mentions the custom service, as in the following example:</simpara>
<screen>INFO: Using 'LatestVersionContainerResolver' container resolver and restriction policy 'ByPassUserNotAllowedRestrictionPolicy'</screen>
</listitem>
<listitem>
<simpara>Push the custom image into the registry:</simpara>
<screen>podman push <emphasis>registry-route</emphasis>/<emphasis>project-name</emphasis>/<emphasis>image-name</emphasis>:7.10.0</screen>
<simpara>For example:</simpara>
<screen>podman push route-openshift-image-registry.openshift.example.com/rhpam-project/rhpam-smartrouter-rhel8-custom:7.10.0</screen>
</listitem>
</orderedlist>
<formalpara>
<title>Next steps</title>
<para>When deploying Red Hat Process Automation Manager, set the following values in the <emphasis role="strong">Smart Router</emphasis> tab:</para>
</formalpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Image context</emphasis>: The project name, for example, <literal>rhpam-project</literal></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Image</emphasis>: The custom image name, for example, <literal>rhpam-smartrouter-rhel8-custom</literal></simpara>
</listitem>
</itemizedlist>
<simpara>For instructions about deploying the Smart Router using the operator, see <xref linkend="operator-deploy-smartrouter-proc_openshift-operator"/>.</simpara>
<note>
<simpara>You can also use a custom tag instead of the current version tag. However, if you use the current version tag, you can later create an image for a new version using the version tag for it. Then, when you upgrade the Red Hat Process Automation Manager version, the new image is included automatically. For instructions about upgrading the Red Hat Process Automation Manager version, see <xref linkend="operator-modify-proc_openshift-operator"/>.</simpara>
<simpara>If you use a custom tag, when deploying Red Hat Process Automation Manager, in the <emphasis role="strong">Smart Router</emphasis> tab set the <emphasis role="strong">Image Tag</emphasis> value to the custom tag.</simpara>
</note>
</section>
</section>
</chapter>
<chapter xml:id="migration-ocp3-4-assy-openshift-operator">
<title>Migration of information from a deployment on Red Hat OpenShift Container Platform version 3</title>
<simpara>If you previously used a Red Hat Process Automation Manager deployment on Red Hat OpenShift Container Platform version 3, you can migrate the information from that deployment to a new deployment on Red Hat OpenShift Container Platform version 4.</simpara>
<simpara>Before migrating information, you must deploy a new Red Hat Process Automation Manager infrastructure on Red Hat OpenShift Container Platform version 4 using the operator. Include the same elements in the new infrastructure as those present in the old deployment. For example:</simpara>
<itemizedlist>
<listitem>
<simpara>For any existing authoring deployment, create a new authoring infrastructure, including Business Central and at least one KIE Server.</simpara>
</listitem>
<listitem>
<simpara>For any existing immutable KIE Server, deploy a new immutable KIE Server with the same artifacts.</simpara>
</listitem>
<listitem>
<simpara>For any existing KIE Server with a MySQL or PostgreSQL database pod, deploy a new KIE Server with the same type of database pod.</simpara>
</listitem>
<listitem>
<simpara>For any existing KIE Server that uses an external database server, deploy a new KIE Server that uses the same external database server with the same credentials. The server connects to the same database and therefore can read the process context state.</simpara>
</listitem>
</itemizedlist>
<note>
<simpara>If a KIE Server uses the H2 built-in database, migration of the process context state is not supported.</simpara>
</note>
<simpara>No migration is required for Smart Router. A new deployment of Smart Router automatically works with the services on the new KIE Servers.</simpara>
<section xml:id="migration-ocp3-4-bc-proc-openshift-operator">
<title>Migrating information in Business Central</title>
<simpara>If you have an existing authoring environment in Red Hat OpenShift Container Platform version 3, you can copy the <literal>.niogit</literal> repository and the Maven repository from Business Central in this environment to Business Central in a new deployment on Red Hat OpenShift Container Platform version 4. This action makes all the same projects and artifacts available in the new deployment.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You must have a machine that has network access to both the Red Hat OpenShift Container Platform version 3 and Red Hat OpenShift Container Platform version 4 infrastructures.</simpara>
</listitem>
<listitem>
<simpara>The <literal>oc</literal> command-line client from Red Hat OpenShift Container Platform version 4 must be installed on the machine. For instructions about installing the command-line client, see <link xl:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/4.6/html/cli_tools/openshift-cli-oc#installing-the-cli"><emphasis>CLI tools</emphasis></link> in Red Hat OpenShift Container Platform documentation.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Ensure that no web clients and no client applications are connected to any elements of the old and new deployment, including Business Central and KIE Servers.</simpara>
</listitem>
<listitem>
<simpara>Create an empty temporary directory and change into it.</simpara>
</listitem>
<listitem>
<simpara>Using the <literal>oc</literal> command, log in to the Red Hat OpenShift Container Platform version 3 infrastructure and switch to the project containing the old deployment.</simpara>
</listitem>
<listitem>
<simpara>To view the pod names in the old deployment, run the following command:</simpara>
<screen>oc get pods</screen>
<simpara>Find the Business Central pod. The name of this pod includes <literal>rhpamcentr</literal>. In a high-availability deployment, you can use any of the Business Central pods.</simpara>
</listitem>
<listitem>
<simpara>Use the <literal>oc</literal> command to copy the the <literal>.niogit</literal> repository and the Maven repository from the pod to the local machine, for example:</simpara>
<screen>oc cp myapp-rhpamcentr-5-689mw:/opt/kie/data/.niogit .niogit
oc cp myapp-rhpamcentr-5-689mw:/opt/kie/data/maven-repository maven-repository</screen>
</listitem>
<listitem>
<simpara>Using the <literal>oc</literal> command, log in to the Red Hat OpenShift Container Platform version 4 infrastructure and switch to the project containing the new deployment.</simpara>
</listitem>
<listitem>
<simpara>To view the pod names in the new deployment, run the following command:</simpara>
<screen>oc get pods</screen>
<simpara>Find the Business Central pod. The name of this pod includes <literal>rhpamcentr</literal>. In a high-availability deployment, you can use any of the Business Central pods.</simpara>
</listitem>
<listitem>
<simpara>Use the <literal>oc</literal> command to copy the the <literal>.niogit</literal> repository and the Maven repository from the local machine to the pod, for example:</simpara>
<screen>oc cp .niogit myappnew-rhpamcentr-abd24:/opt/kie/data/.niogit
oc cp maven-repository myappnew-rhpamcentr-abd24:/opt/kie/data/maven-repository</screen>
</listitem>
</orderedlist>
</section>
<section xml:id="migration-ocp3-4-mysql-proc-openshift-operator">
<title>Migrating a MySQL database for a KIE Server</title>
<simpara>If your environment in Red Hat OpenShift Container Platform version 3 includes a KIE Server that uses a MySQL database pod, copy the MySQL database content from the old deployment to the new deployment. This action copies the existing process state to the new deployment.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You must have a machine that has network access to both the Red Hat OpenShift Container Platform version 3 and Red Hat OpenShift Container Platform version 4 infrastructures.</simpara>
</listitem>
<listitem>
<simpara>The <literal>oc</literal> command-line client from Red Hat OpenShift Container Platform version 4 must be installed on the machine. For instructions about installing the command-line client, see <link xl:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/4.6/html/cli_tools/openshift-cli-oc#installing-the-cli"><emphasis>CLI tools</emphasis></link> in Red Hat OpenShift Container Platform documentation.</simpara>
</listitem>
<listitem>
<simpara>The <literal>mysql</literal> and <literal>mysqldump</literal> client applications provided by MySQL version 8 or later or by MariaDB version 10 or later must be installed.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Ensure that no web clients and no client applications are connected to any elements of the old and new deployment, including Business Central and KIE Servers.</simpara>
</listitem>
<listitem>
<simpara>Create an empty temporary directory and change into it.</simpara>
</listitem>
<listitem>
<simpara>Using the <literal>oc</literal> command, log in to the Red Hat OpenShift Container Platform version 3 infrastructure and switch to the project containing the old deployment.</simpara>
</listitem>
<listitem>
<simpara>To view the deployment configuration names in the old deployment, run the following command:</simpara>
<screen>oc get dc</screen>
<simpara>Find the <literal>mysql</literal> deployment configuration that corresponds to the KIE Server.</simpara>
</listitem>
<listitem>
<simpara>View the configuration YAML of the deployment configuration, for example:</simpara>
<screen>oc edit dc/myapp-mysql</screen>
<simpara>In this file, find the user name (normally <literal>rhpam</literal>) and password for the database server, for example:</simpara>
<screen>- name: MYSQL_USER
  value: rhpam
- name: MYSQL_PASSWORD
  value: NDaJIV7!</screen>
<simpara>Record the user name and password. Do not make any changes to the file.</simpara>
<note>
<simpara>You can also use the following commands to retrieve the user name and password:</simpara>
<screen>oc get dc/myapp-mysql -ojsonpath='{.spec.template.spec.containers[0].env[?(@.name=="MYSQL_USER")]}'.value

oc get dc/myapp-mysql -ojsonpath='{.spec.template.spec.containers[0].env[?(@.name=="MYSQL_PASSWORD")]}'.value</screen>
</note>
</listitem>
<listitem>
<simpara>To view the service names in the old deployment, run the following command:</simpara>
<screen>oc get svc</screen>
<simpara>Find the <literal>mysql</literal> service that corresponds to the KIE Server.</simpara>
</listitem>
<listitem>
<simpara>In a separate terminal window, start port forwarding from the local host to the <literal>mysql</literal> service, using the name and port number displayed for the service, for example:</simpara>
<screen>oc port-forward service/myapp-mysql 3306:3306</screen>
</listitem>
<listitem>
<simpara>Create a full database dump using the recorded user name, for example:</simpara>
<screen>mysqldump --all-databases -u rhpam -p -h 127.0.0.1 &gt; mysqldump.sql</screen>
<simpara>When prompted, enter the recorded password. The dump creation can take considerable time.</simpara>
</listitem>
<listitem>
<simpara>Stop the port forwarding in the separate window using the <emphasis role="strong">Ctrl+C</emphasis> key combination.</simpara>
</listitem>
<listitem>
<simpara>Using the <literal>oc</literal> command, log in to the Red Hat OpenShift Container Platform version 4 infrastructure and switch to the project containing the new deployment.</simpara>
</listitem>
<listitem>
<simpara>To view the deployment configuration names in the new deployment, run the following command:</simpara>
<screen>oc get dc</screen>
<simpara>Find the <literal>mysql</literal> deployment configuration that corresponds to the KIE Server.</simpara>
</listitem>
<listitem>
<simpara>View the configuration YAML of the deployment configuration, for example:</simpara>
<screen>oc edit dc/myappnew-mysql</screen>
<simpara>In this file, find the user name (normally <literal>rhpam</literal>) and password for the database server. Record the user name and password. Do not make any changes to the file.</simpara>
<note>
<simpara>You can also use the following commands to retrieve the user name and password:</simpara>
<screen>oc get dc/myapp-mysql -ojsonpath='{.spec.template.spec.containers[0].env[?(@.name=="MYSQL_USER")]}'.value

oc get dc/myapp-mysql -ojsonpath='{.spec.template.spec.containers[0].env[?(@.name=="MYSQL_PASSWORD")]}'.value</screen>
</note>
</listitem>
<listitem>
<simpara>To view the service names in the new deployment, run the following command:</simpara>
<screen>oc get svc</screen>
<simpara>Find the <literal>mysql</literal> service that corresponds to the KIE Server.</simpara>
</listitem>
<listitem>
<simpara>In a separate terminal window, start port forwarding from the local host to the <literal>mysql</literal> service, using the name and port number displayed for the service, for example:</simpara>
<screen>oc port-forward service/myappnew-mysql 3306:3306</screen>
</listitem>
<listitem>
<simpara>Restore the database dump using the recorded user name, for example:</simpara>
<screen>mysql -u rhpam -p -h 127.0.0.1 &lt; mysqldump.sql</screen>
<simpara>When prompted, enter the recorded password. The restoration can take considerable time.</simpara>
</listitem>
<listitem>
<simpara>Stop the port forwarding in the separate window using the <emphasis role="strong">Ctrl+C</emphasis> key combination.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="migration-ocp3-4-postgresql-proc-openshift-operator">
<title>Migrating a PostgreSQL database for a KIE Server</title>
<simpara>If your environment in Red Hat OpenShift Container Platform version 3 includes a KIE Server that uses a PostgreSQL database pod, copy the PostgreSQL database content from the old deployment to the new deployment. This action copies the existing process state to the new deployment.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You must have a machine that has network access to both the Red Hat OpenShift Container Platform version 3 and Red Hat OpenShift Container Platform version 4 infrastructures.</simpara>
</listitem>
<listitem>
<simpara>The <literal>oc</literal> command-line client from Red Hat OpenShift Container Platform version 4 must be installed on the machine. For instructions about installing the command-line client, see <link xl:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/4.6/html/cli_tools/openshift-cli-oc#installing-the-cli"><emphasis>CLI tools</emphasis></link> in Red Hat OpenShift Container Platform documentation.</simpara>
</listitem>
<listitem>
<simpara>The <literal>psql</literal> and <literal>pg_dump</literal> client applications provided by PostgreSQL version 10 or later must be installed.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Ensure that no web clients and no client applications are connected to any elements of the old and new deployment, including Business Central and KIE Servers.</simpara>
</listitem>
<listitem>
<simpara>Create an empty temporary directory and change into it.</simpara>
</listitem>
<listitem>
<simpara>Using the <literal>oc</literal> command, log in to the Red Hat OpenShift Container Platform version 3 infrastructure and switch to the project containing the old deployment.</simpara>
</listitem>
<listitem>
<simpara>To view the deployment configuration names in the old deployment, run the following command:</simpara>
<screen>oc get dc</screen>
<simpara>Find the <literal>postgresql</literal> deployment configuration that corresponds to the KIE Server.</simpara>
</listitem>
<listitem>
<simpara>View the configuration YAML of the deployment configuration, for example:</simpara>
<screen>oc edit dc/myapp-postgresql</screen>
<simpara>In this file, find the user name (normally <literal>rhpam</literal>), password, and database name (normally <literal>rhpam7</literal>) for the database server, for example:</simpara>
<screen>- name: POSTGRESQL_USER
  value: rhpam
- name: POSTGRESQL_PASSWORD
  value: NDaJIV7!
- name: POSTGRESQL_DATABASE
  value: rhpam7</screen>
<simpara>Record the user name, password, and database name. Do not make any changes to the file.</simpara>
<note>
<simpara>You can also use the following commands to retrieve the user name, password, and database name:</simpara>
<screen>oc get dc/myapp-postgresql -ojsonpath='{.spec.template.spec.containers[0].env[?(@.name=="POSTGRESQL_USER")]}'.value

oc get dc/myapp-postgresql -ojsonpath='{.spec.template.spec.containers[0].env[?(@.name=="POSTGRESQL_PASSWORD")]}'.value

oc get dc/myapp-postgresql -ojsonpath='{.spec.template.spec.containers[0].env[?(@.name=="POSTGRESQL_DATABASE")]}'.value</screen>
<simpara>+</simpara>
</note>
</listitem>
<listitem>
<simpara>To view the service names in the old deployment, run the following command:</simpara>
<screen>oc get svc</screen>
<simpara>Find the <literal>postgresql</literal> service that corresponds to the KIE Server.</simpara>
</listitem>
<listitem>
<simpara>In a separate terminal window, start port forwarding from the local host to the <literal>postgresql</literal> service, using the name and port number displayed for the service, for example:</simpara>
<screen>oc port-forward service/myapp-postgresql 5432:5432</screen>
</listitem>
<listitem>
<simpara>Create a dump of the database using the recorded user name and database name, for example:</simpara>
<screen>pg_dump rhpam7 -h 127.0.0.1 -U rhpam -W &gt; pgdump.sql</screen>
<simpara>When prompted, enter the recorded password. The dump creation can take considerable time.</simpara>
</listitem>
<listitem>
<simpara>Stop the port forwarding in the separate window using the <emphasis role="strong">Ctrl+C</emphasis> key combination.</simpara>
</listitem>
<listitem>
<simpara>Using the <literal>oc</literal> command, log in to the Red Hat OpenShift Container Platform version 4 infrastructure and switch to the project containing the new deployment.</simpara>
</listitem>
<listitem>
<simpara>To view the deployment configuration names in the new deployment, run the following command:</simpara>
<screen>oc get dc</screen>
<simpara>Find the <literal>postgresql</literal> deployment configuration that corresponds to the KIE Server.</simpara>
</listitem>
<listitem>
<simpara>View the configuration YAML of the deployment configuration, for example:</simpara>
<screen>oc edit dc/myappnew-postgresql</screen>
<simpara>In this file, find the user name (normally <literal>rhpam</literal>), password, , and database name (normally <literal>rhpam7</literal>) for the database server. Record the user name, password, and database name. Do not make any changes to the file.</simpara>
<note>
<simpara>You can also use the following commands to retrieve the user name, password, and database name:</simpara>
<screen>oc get dc/myapp-postgresql -ojsonpath='{.spec.template.spec.containers[0].env[?(@.name=="POSTGRESQL_USER")]}'.value

oc get dc/myapp-postgresql -ojsonpath='{.spec.template.spec.containers[0].env[?(@.name=="POSTGRESQL_PASSWORD")]}'.value

oc get dc/myapp-postgresql -ojsonpath='{.spec.template.spec.containers[0].env[?(@.name=="POSTGRESQL_DATABASE")]}'.value</screen>
</note>
</listitem>
<listitem>
<simpara>To view the service names in the new deployment, run the command:</simpara>
<screen>oc get svc</screen>
<simpara>Find the <literal>postgresql</literal> service that corresponds to the KIE Server.</simpara>
</listitem>
<listitem>
<simpara>In a separate terminal window, start port forwarding from the local host to the <literal>postgresql</literal> service, using the name and port number displayed for the service, for example:</simpara>
<screen>oc port-forward service/myappnew-postgresql 5432:5432</screen>
</listitem>
<listitem>
<simpara>Restore the database dump using the recorded user name and database name, for example:</simpara>
<screen>psql -h 127.0.0.1 -d rhpam7 -U rhpam -W &lt; pgdump.sql</screen>
<simpara>When prompted, enter the recorded password. The restoration can take considerable time.</simpara>
<simpara>Review any displayed database error messages. Messages about objects that already exist are normal.</simpara>
</listitem>
<listitem>
<simpara>Stop the port forwarding in the separate window using the <emphasis role="strong">Ctrl+C</emphasis> key combination.</simpara>
</listitem>
</orderedlist>
</section>
</chapter>
</part>
<part xml:id="assembly-openshift-templates">
<title>Deploying a Red Hat Process Automation Manager environment on Red Hat OpenShift Container Platform using templates</title>
<partintro>
<simpara>As a system engineer, you can deploy a Red Hat Process Automation Manager environment on Red Hat OpenShift Container Platform version 4 to provide an infrastructure to develop or execute
services, process applications,
and other business assets. You can use one of the supplied templates to deploy a predefined Red Hat Process Automation Manager environment to suit your particular needs.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>Red Hat OpenShift Container Platform version 3.11 is deployed.</simpara>
</listitem>
<listitem>
<simpara>The following resources are available on the OpenShift cluster. Depending on the application load, higher resource allocation might be necessary for acceptable performance.</simpara>
<itemizedlist>
<listitem>
<simpara>For an authoring environment, 4 gigabytes of memory and 2 virtual CPU cores for the Business Central pod. In a high-availability deployment, these resources are required for each replica and two replicas are created by default.</simpara>
</listitem>
<listitem>
<simpara>For a production or immutable environment, 2 gigabytes of memory and 1 virtual CPU core for each replica of the Business Central Monitoring pod.</simpara>
</listitem>
<listitem>
<simpara>2 gigabytes of memory and 1 virtual CPU core for each replica of each KIE Server pod.</simpara>
</listitem>
<listitem>
<simpara>512 megabytes of memory and half a virtual CPU core for each replica of a Smart Router pod.</simpara>
</listitem>
<listitem>
<simpara>In a high-availability authoring deployment, additional resources according to the configured defaults are required for the
MySQL, Red Hat AMQ, and Red Hat Data Grid
pods.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Dynamic persistent volume (PV) provisioning is enabled. Alternatively, if dynamic PV provisioning is not enabled,  enough persistent volumes must be available. By default, the deployed components require the following PV sizes:</simpara>
<itemizedlist>
<listitem>
<simpara>Each KIE Server deployment by default requires one 1Gi PV for the database. You can change the database PV size. You can deploy multiple KIE Servers; each requires a separate database PV. This requirement does not apply if you use an external database server.</simpara>
</listitem>
<listitem>
<simpara>By default, Business Central requires one 1Gi PV. You can change the PV size for Business Central persistent storage.</simpara>
</listitem>
<listitem>
<simpara>Business Central Monitoring requires one 64Mi PV.</simpara>
</listitem>
<listitem>
<simpara>Smart Router requires one 64Mi PV.</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<note>
<simpara>For instructions about checking the capacity of your cluster, see <link xl:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/3.11/html/cluster_administration/admin-guide-cluster-capacity">Analyzing cluster capacity</link> in the Red Hat OpenShift Container Platform 3.11 product documentation.</simpara>
</note>
<itemizedlist>
<listitem>
<simpara>The OpenShift project for the deployment is created.</simpara>
</listitem>
<listitem>
<simpara>You are logged into the project using the <literal>oc</literal> command. For more information about the <literal>oc</literal> command-line tool, see the OpenShift <link xl:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/3.11/html-single/cli_reference/">CLI Reference</link>. If you want to use the OpenShift Web console to deploy templates, you must also be logged on using the Web console.</simpara>
</listitem>
<listitem>
<simpara>Dynamic persistent volume (PV) provisioning is enabled. Alternatively, if dynamic PV provisioning is not enabled, enough persistent volumes must be available. By default, the deployed components require the following PV sizes:</simpara>
<itemizedlist>
<listitem>
<simpara>The replicated set of KIE Server pods requires one 1Gi PV for the database by default. You can change the database PV size in the template parameters. This requirement does not apply if you use an external database server.</simpara>
</listitem>
<listitem>
<simpara>Business Central requires one 1Gi PV by default. You can change the PV size for Business Central persistent storage in the template parameters.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>If you intend to scale any of the Business Central
or Business Central Monitoring
pods, your OpenShift environment supports persistent volumes with <literal>ReadWriteMany</literal> mode. If your environment does not support this mode, you can use NFS to provision the volumes. However, for best performance and reliability, use GlusterFS to provision persistent volumes for a high-availability authoring environment. For information about access mode support in OpenShift public and dedicated clouds, see <link xl:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/3.11/html-single/architecture/#pv-access-modes">Access Modes</link>.</simpara>
</listitem>
</itemizedlist>
<note>
<simpara>Since Red Hat Process Automation Manager version 7.5, images and templates for Red Hat OpenShift Container Platform 3.x are deprecated. These images and templates do not get new features, but remain supported until the end of full support for Red Hat OpenShift Container Platform version 3.x. For more information about the full support lifecycle phase for Red Hat OpenShift Container Platform version 3.x, see <link xl:href="https://access.redhat.com/support/policy/updates/openshift_noncurrent">Red Hat OpenShift Container Platform Life Cycle Policy (non-current versions)</link>.</simpara>
</note>
<note>
<simpara>Do not use Red Hat Process Automation Manager templates with Red Hat OpenShift Container Platform 4.x. To deploy Red Hat Process Automation Manager on Red Hat OpenShift Container Platform 4.x, see the instructions in <link xl:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/deploying_red_hat_process_automation_manager_on_red_hat_openshift_container_platform#assembly-openshift-operator"><emphasis>Deploying a Red Hat Process Automation Manager environment on Red Hat OpenShift Container Platform using Operators</emphasis></link>.</simpara>
</note>
</partintro>
<chapter xml:id="ba-openshift-overview-con_openshift-templates">
<title>Overview of Red Hat Process Automation Manager on Red Hat OpenShift Container Platform</title>
<simpara>You can deploy Red Hat Process Automation Manager into a Red Hat OpenShift Container Platform environment.</simpara>
<simpara>In this solution, components of Red Hat Process Automation Manager are deployed as separate OpenShift pods. You can scale each of the pods up and down individually to provide as few or as many containers as required for a particular component. You can use standard OpenShift methods to manage the pods and balance the load.</simpara>
<simpara>The following key components of Red Hat Process Automation Manager are available on OpenShift:</simpara>
<itemizedlist>
<listitem>
<simpara>KIE Server, also known as <emphasis>Execution Server</emphasis>, is the infrastructure element that runs decision
services, process applications,
and other deployable assets (collectively referred to as <emphasis>services</emphasis>) . All logic of the services runs on execution servers.</simpara>
<simpara>A database server is normally required for KIE Server. You can provide a database server in another OpenShift pod or configure an execution server on OpenShift to use any other database server. Alternatively, KIE Server can use an H2 database; in this case, you cannot scale the pod.</simpara>
<simpara>In some templates, you can scale up a KIE Server pod to provide as many copies as required, running on the same host or different hosts. As you scale a pod up or down, all of its copies
use the same database server and
run the same services. OpenShift provides load balancing and a request can be handled by any of the pods.</simpara>
<simpara>You can deploy a separate KIE Server pod to run a different group of services. That pod can also be scaled up or down. You can have as many separate replicated KIE Server pods as required.</simpara>
</listitem>
<listitem>
<simpara>Business Central is a web-based interactive environment used for authoring services. It also provides a management
and monitoring
console. You can use Business Central to develop services and deploy them to KIE Servers.
You can also use Business Central to monitor the execution of processes.</simpara>
<simpara>Business Central is a centralized application. However, you can configure it for high availability, where multiple pods run and share the same data.</simpara>
<simpara>Business Central includes a Git repository that holds the source for the services that you develop on it. It also includes a built-in Maven repository. Depending on configuration, Business Central can place the compiled services (KJAR files) into the built-in Maven repository or (if configured) into an external Maven repository.</simpara>
</listitem>
<listitem>
<simpara>Business Central Monitoring is a web-based management and monitoring console. It can manage the deployment of services to KIE Servers and provide monitoring information, but does not include authoring capabilities. You can use this component to manage staging and production environments.</simpara>
</listitem>
<listitem>
<simpara>Smart Router is an optional layer between KIE Servers and other components that interact with them. When your environment includes many services running on different KIE Servers, Smart Router provides a single endpoint to all client applications. A client application can make a REST API call that requires any service. Smart Router automatically calls the KIE Server that can process a particular request.</simpara>
</listitem>
</itemizedlist>
<simpara>You can arrange these and other components into various environment configurations within OpenShift.</simpara>
<simpara>The following environment types are typical:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis>Trial</emphasis>: an environment for demonstration and evaluation of Red Hat Process Automation Manager. This environment includes Business Central and a KIE Server. You can set it up quickly and use it to evaluate or demonstrate developing and running assets. However, the environment does not use any persistent storage and any work you do in the environment is not saved.</simpara>
</listitem>
<listitem>
<simpara><emphasis>Authoring</emphasis>: An environment for creating and modifying services using Business Central. It consists of pods that provide Business Central for the authoring work and a KIE Server for test execution of the services.</simpara>
</listitem>
<listitem>
<simpara><emphasis>Managed deployment</emphasis>: An environment for running existing services for staging and production purposes. This environment includes several groups of KIE Server pods; you can deploy and undeploy services on every such group and also scale the group up or down as necessary. Use Business Central Monitoring to deploy, run, and stop the services and to monitor their execution.</simpara>
<simpara>You can deploy two types of managed environment. In a <emphasis>freeform</emphasis> server environment, you initially deploy Business Central Monitoring and one KIE Server. You can additionally deploy any number of KIE Servers. Business Central Monitoring can connect to all servers in the same namespace.</simpara>
<simpara>Alternatively, you can deploy a <emphasis>fixed</emphasis> managed server environment. A single deployment includes Business Central Monitoring, Smart Router, and a preset number of KIE Servers (by default, two servers, but you can modify the template  to change the number). You cannot easily add or remove servers at a later time.</simpara>
</listitem>
<listitem>
<simpara><emphasis>Deployment with immutable servers</emphasis>: An alternate environment for running existing services for staging and production purposes. In this environment, when you deploy a KIE Server pod, it builds an image that loads and starts a service or group of services. You cannot stop any service on the pod or add any new service to the pod. If you want to use another version of a service or modify the configuration in any other way, you deploy a new server image and displace the old one. In this system, the KIE Server runs like any other pod on the OpenShift environment; you can use any container-based integration workflows and do not need to use any other tools to manage the pods.</simpara>
<simpara>Optionally, you can use Business Central Monitoring to monitor the performance of the environment and to stop and restart some of the service instances, but not to deploy additional services to any KIE Server or undeploy any existing ones (you cannot add or remove containers).</simpara>
</listitem>
</itemizedlist>
<simpara>To deploy a Red Hat Process Automation Manager environment on OpenShift, you can use the templates that are provided with Red Hat Process Automation Manager.
You can modify some of the templates to ensure that the configuration suits your environment.</simpara>
<section xml:id="architecture-authoring-con-openshift-templates">
<title>Architecture of an authoring environment</title>
<simpara>In Red Hat Process Automation Manager, the Business Central component provides a web-based interactive user interface for authoring services. The KIE Server component runs the services.</simpara>
<simpara>The KIE Server uses a database server to store the state of process services.</simpara>
<simpara>You can also use Business Central to deploy services onto a KIE Server.  You can use several KIE Servers to run different services and control the servers from the same Business Central.</simpara>
<bridgehead xml:id="_single_authoring_environment_2" renderas="sect3">Single authoring environment</bridgehead>
<simpara>In a single authoring environment, only one instance of Business Central is running. Multiple users can access its web interface at the same time, however the performance can be limited and there is no failover capability.</simpara>
<simpara>Business Central includes a built-in Maven repository that stores the built versions of the services that you develop (KJAR files/artifacts). You can use your continuous integration and continuous deployment (CICD) tools to retrieve these artifacts from the repository and move them as necessary.</simpara>
<simpara>Business Central saves the source code in a built-in Git repository, stored in the <literal>.niogit</literal> directory. It uses a built-in indexing mechanism to index the assets in your services.</simpara>
<simpara>Business Central uses persistent storage for the Maven repository and for the Git repository.</simpara>
<simpara>A single authoring environment, by default, includes one KIE Server.
This KIE Server uses a built-in H2 database engine to store the state of process services.</simpara>
<simpara>A single authoring environment, by default, uses the <emphasis>controller strategy</emphasis>.
Business Central includes the <emphasis>Controller</emphasis>, a component that can manage KIE Servers. When you configure a KIE Server to connect to Business Central, the KIE Server uses a REST API to connect to the Controller. This connection opens a persistent WebSocket. In an OpenShift deployment that uses the controller strategy, each KIE Server is initially configured to connect to the Business Central Controller.</simpara>
<simpara>When you use the Business Central user interface to deploy or manage a service on the KIE Server, the KIE Server receives the request through the Controller connection WebSocket. To deploy a service, the KIE Server requests the necessary artifact from the Maven repository that is a part of Business Central.</simpara>
<simpara>Client applications use a REST API to use services that run on the KIE Server.</simpara>
<figure>
<title>Architecture diagram for a single authoring environment</title>
<mediaobject>
<imageobject>
<imagedata fileref="_images/Overview/architecture-authoring-nonha.svg"/>
</imageobject>
<textobject><phrase>architecture authoring nonha</phrase></textobject>
</mediaobject>
</figure>
<bridgehead xml:id="_clustering_kie_servers_and_using_multiple_kie_servers_2" renderas="sect3">Clustering KIE Servers and using multiple KIE Servers</bridgehead>
<simpara>You can scale a KIE Server pod to run a clustered KIE Server environment.
To scale a KIE Server, you must ensure that it uses a database server in a separate pod or an external database server, and not a built-in H2 database engine.</simpara>
<simpara>In a clustered deployment, several instances of the KIE Server run the same services. These servers can connect to the Business Central Controller using the same server ID, so they can receive the same requests from the controller. Red Hat OpenShift Container Platform provides load-balancing between the servers.
Decision services and business optimizer services that run on a clustered KIE Server
must be stateless, because requests from the same client might be processed by different instances.</simpara>
<simpara>You can also deploy several independent KIE Servers to run different services. In this case, the servers connect to the Business Central Controller with different server ID values. You can use the Business Central UI to deploy services to each of the servers.</simpara>
<bridgehead xml:id="_smart_router_2" renderas="sect3">Smart Router</bridgehead>
<simpara>The optional Smart Router component provides a layer between client applications and KIE Servers. It can be useful if you are using several independent KIE Servers.</simpara>
<simpara>The client application can use services running on different KIE Servers, but always connects to the Smart Router. The Smart Router automatically passes the request to the KIE Servers that runs the required service. The Smart Router also enables management of service versions and provides an additional load-balancing layer.</simpara>
<bridgehead xml:id="_high_availability_authoring_environment_2" renderas="sect3">High-availability authoring environment</bridgehead>
<simpara>In a high-availability (HA) authoring environment, the Business Central pod is scaled, so several instances of Business Central are running. Red Hat OpenShift Container Platform provides load balancing for user requests. This environment provides optimal performance for multiple users and supports failover.</simpara>
<simpara>Each instance of Business Central includes the Maven repository for the built artifacts and uses the <literal>.niogit</literal> Git repository for source code. The instances use shared persistent storage for the repositories. A persistent volume with <literal>ReadWriteMany</literal> access is required for this storage.</simpara>
<simpara>An instance of Red Hat DataGrid provides indexing of all projects and assets developed in Business Central.</simpara>
<simpara>An instance of Red Hat AMQ propagates Java CDI messages between all instances of Business Central. For example, when a new project is created or when an asset is locked or modified on one of the instances, this information is immediately reflected in all other instances.</simpara>
<simpara>The controller strategy is not suitable for clustered deployment. In an OpenShift deployment, a high-availability Business Central must manage KIE Servers using the <emphasis>OpenShift startup strategy</emphasis>.</simpara>
<simpara>Each KIE Server deployment (which can be scaled) creates a ConfigMap that reflects its current state. The Business Central discovers all KIE Servers by reading their ConfigMaps.</simpara>
<simpara>When the user requests a change in KIE Server configuration (for example, deploys or undeploys a service), Business Central initiates a connection to the KIE Server and sends a REST API request. The KIE Server changes the ConfigMap to reflect the new configuration state and then triggers its own redeployment, so that all instances are redeployed and reflect the new configuration.</simpara>
<simpara>You can deploy several independent KIE Servers in your OpenShift environment. Each of the KIE Servers has a separate ConfigMap with the necessary configuration. You can scale each of the KIE Servers separately.</simpara>
<simpara>You can include Smart Router in the OpenShift deployment.</simpara>
<figure>
<title>Architecture diagram for a high-availability authoring environment</title>
<mediaobject>
<imageobject>
<imagedata fileref="_images/Overview/architecture-authoring-ha.svg"/>
</imageobject>
<textobject><phrase>architecture authoring ha</phrase></textobject>
</mediaobject>
</figure>
</section>
</chapter>
<chapter xml:id="dm-openshift-prepare-con_openshift-templates">
<title>Preparation for deploying Red Hat Process Automation Manager in your OpenShift environment</title>
<simpara>Before deploying Red Hat Process Automation Manager in your OpenShift environment, you must complete several procedures. You do not need to repeat these procedures if you want to deploy additional images, for example, for new versions of
processes or for other processes.</simpara>
<note>
<simpara>If you are deploying a trial environment, complete the procedure described in
<xref linkend="imagestreams-file-install-proc_openshift-templates"/>
and do not complete any other preparation procedures.</simpara>
</note>
<section xml:id="imagestreams-file-install-proc_openshift-templates">
<title>Ensuring the availability of image streams and the image registry</title>
<simpara>To deploy Red Hat Process Automation Manager components on Red Hat OpenShift Container Platform, you must ensure that OpenShift can download the correct images from the Red Hat registry. To download the images, OpenShift requires <emphasis>image streams</emphasis>, which contain the information about the location of images. OpenShift also must be configured to authenticate with the Red Hat registry using your service account user name and password.</simpara>
<simpara>Some versions of the OpenShift environment include the required image streams. You must check if they are available. If image streams are available in OpenShift by default, you can use them if the OpenShift infrastructure is configured for registry authentication server. The administrator must complete the registry authentication configuration when installing the OpenShift environment.</simpara>
<simpara>Otherwise, you can configure registry authentication in your own project and install the image streams in that project.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Determine whether Red Hat OpenShift Container Platform is configured with the user name and password for Red Hat registry access. For details about the required configuration, see <link xl:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/3.11/html/installing_clusters/install-config-configuring-inventory-file#advanced-install-configuring-registry-location">Configuring a Registry Location</link>. If you are using an OpenShift Online subscription, it is configured for Red Hat registry access.</simpara>
</listitem>
<listitem>
<simpara>If Red Hat OpenShift Container Platform is configured with the user name and password for Red Hat registry access, enter the following commands:</simpara>
<screen>$ oc get imagestreamtag -n openshift | grep rhpam-businesscentral | grep 7.10
$ oc get imagestreamtag -n openshift | grep rhpam-kieserver | grep 7.10</screen>
<simpara>If the outputs of both commands are not empty, the required image streams are available in the <literal>openshift</literal> namespace and no further action is required.</simpara>
</listitem>
<listitem>
<simpara>If the output of one or both of the commands is empty or if OpenShift is not configured with the user name and password for Red Hat registry access, complete the following steps:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Ensure you are logged in to OpenShift with the <literal>oc</literal> command and that your project is active.</simpara>
</listitem>
<listitem>
<simpara>Complete the steps documented in <link xl:href="https://access.redhat.com/RegistryAuthentication#registry-service-accounts-for-shared-environments-4">Registry Service Accounts for Shared Environments</link>. You must log in to the Red Hat Customer Portal to access the document and to complete the steps to create a registry service account.</simpara>
</listitem>
<listitem>
<simpara>Select the <emphasis role="strong">OpenShift Secret</emphasis> tab and click the link under <emphasis role="strong">Download secret</emphasis> to download the YAML secret file.</simpara>
</listitem>
<listitem>
<simpara>View the downloaded file and note the name that is listed in the <literal>name:</literal> entry.</simpara>
</listitem>
<listitem>
<simpara>Enter the following commands:</simpara>
<screen>oc create -f &lt;file_name&gt;.yaml
oc secrets link default &lt;secret_name&gt; --for=pull
oc secrets link builder &lt;secret_name&gt; --for=pull</screen>
<simpara>Replace <literal>&lt;file_name&gt;</literal> with the name of the downloaded file and <literal>&lt;secret_name&gt;</literal> with the name that is listed in the <literal>name:</literal> entry of the file.</simpara>
</listitem>
<listitem>
<simpara>Download the <literal>rhpam-7.10.0-openshift-templates.zip</literal> product deliverable file from the <link xl:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?downloadType=distributions&amp;product=rhpam&amp;productChanged=yes">Software Downloads</link> page and extract the <literal>rhpam710-image-streams.yaml</literal> file.</simpara>
</listitem>
<listitem>
<simpara>Enter the following command:</simpara>
<screen>$ oc apply -f rhpam710-image-streams.yaml</screen>
<note>
<simpara>If you complete these steps, you install the image streams into the namespace of your project. In this case, when you deploy the templates, you must set the <literal>IMAGE_STREAM_NAMESPACE</literal> parameter to the name of this project.</simpara>
</note>
</listitem>
</orderedlist>
</listitem>
</orderedlist>
</section>
<section xml:id="secrets-kie-create-proc_openshift-templates">
<title>Creating the secrets for KIE Server</title>
<simpara>OpenShift uses objects called <emphasis>secrets</emphasis> to hold sensitive information such as passwords or keystores. For more information about OpenShift secrets, see
the <link xl:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/3.11/html/developer_guide/dev-guide-secrets">Secrets chapter</link>
in the Red Hat OpenShift Container Platform documentation.</simpara>
<simpara>You
must create an SSL certificate for HTTP access to KIE Server and provide it to your OpenShift environment as a secret.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Generate an SSL keystore with a private and public key for SSL encryption for KIE Server. For more information on how to create a keystore with self-signed or purchased SSL certificates, see <link xl:href="https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.1/html-single/Security_Guide/index.html#Generate_a_SSL_Encryption_Key_and_Certificate">Generate a SSL Encryption Key and Certificate</link>.</simpara>
<note>
<simpara>In a production environment, generate a valid signed certificate that matches the expected URL for KIE Server.</simpara>
</note>
</listitem>
<listitem>
<simpara>Save the keystore in a file named <literal>keystore.jks</literal>.</simpara>
</listitem>
<listitem>
<simpara>Record the name of the certificate. The default value for this name in Red Hat Process Automation Manager configuration is <literal>jboss</literal>.</simpara>
</listitem>
<listitem>
<simpara>Record the password of the keystore file. The default value for this name in Red Hat Process Automation Manager configuration is <literal>mykeystorepass</literal>.</simpara>
</listitem>
<listitem>
<simpara>Use the <literal>oc</literal> command to generate a secret named <literal>kieserver-app-secret</literal> from the new keystore file:</simpara>
<screen>$ oc create secret generic kieserver-app-secret --from-file=keystore.jks</screen>
</listitem>
</orderedlist>
</section>
<section xml:id="secrets-central-create-proc_openshift-templates">
<title>Creating the secrets for Business Central</title>
<simpara>If your environment includes Business Central or Business Central Monitoring, you
must create an SSL certificate for HTTP access to Business Central and provide it to your OpenShift environment as a secret.</simpara>
<simpara>Do not use the same certificate and keystore for Business Central and KIE Server.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Generate an SSL keystore with a private and public key for SSL encryption for KIE Server. For more information on how to create a keystore with self-signed or purchased SSL certificates, see <link xl:href="https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.1/html-single/Security_Guide/index.html#Generate_a_SSL_Encryption_Key_and_Certificate">Generate a SSL Encryption Key and Certificate</link>.</simpara>
<note>
<simpara>In a production environment, generate a valid signed certificate that matches the expected URL for Business Central.</simpara>
</note>
</listitem>
<listitem>
<simpara>Save the keystore in a file named <literal>keystore.jks</literal>.</simpara>
</listitem>
<listitem>
<simpara>Record the name of the certificate. The default value for this name in Red Hat Process Automation Manager configuration is <literal>jboss</literal>.</simpara>
</listitem>
<listitem>
<simpara>Record the password of the keystore file. The default value for this name in Red Hat Process Automation Manager configuration is <literal>mykeystorepass</literal>.</simpara>
</listitem>
<listitem>
<simpara>Use the <literal>oc</literal> command to generate a secret named <literal>businesscentral-app-secret</literal> from the new keystore file:</simpara>
<screen>$ oc create secret generic businesscentral-app-secret --from-file=keystore.jks</screen>
</listitem>
</orderedlist>
</section>
<section xml:id="secrets-smartrouter-create-proc_openshift-templates">
<title>Creating the secrets for Smart Router</title>
<simpara>If your environment includes Smart Router, you
must create an SSL certificate for HTTP access to Smart Router and provide it to your OpenShift environment as a secret.</simpara>
<simpara>Do not use the same certificate and keystore for Smart Router as the ones used for KIE Server or Business Central.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Generate an SSL keystore with a private and public key for SSL encryption for KIE Server. For more information on how to create a keystore with self-signed or purchased SSL certificates, see <link xl:href="https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.1/html-single/Security_Guide/index.html#Generate_a_SSL_Encryption_Key_and_Certificate">Generate a SSL Encryption Key and Certificate</link>.</simpara>
<note>
<simpara>In a production environment, generate a valid signed certificate that matches the expected URL for Smart Router.</simpara>
</note>
</listitem>
<listitem>
<simpara>Save the keystore in a file named <literal>keystore.jks</literal>.</simpara>
</listitem>
<listitem>
<simpara>Record the name of the certificate. The default value for this name in Red Hat Process Automation Manager configuration is <literal>jboss</literal>.</simpara>
</listitem>
<listitem>
<simpara>Record the password of the keystore file. The default value for this name in Red Hat Process Automation Manager configuration is <literal>mykeystorepass</literal>.</simpara>
</listitem>
<listitem>
<simpara>Use the <literal>oc</literal> command to generate a secret named <literal>smartrouter-app-secret</literal> from the new keystore file:</simpara>
<screen>$ oc create secret generic smartrouter-app-secret --from-file=keystore.jks</screen>
</listitem>
</orderedlist>
</section>
<section xml:id="secret-adminuser-create-proc_openshift-templates">
<title>Creating the secret for the administrative user</title>
<simpara>You must create a generic secret that contains the user name and password for a Red Hat Process Automation Manager administrative user account. This secret is required for deploying Red Hat Process Automation Manager using any template except the trial template.</simpara>
<simpara>The secret must contain the user name and password as literals. The key name for the user name is <literal>KIE_ADMIN_USER</literal>. The key name for the password is <literal>KIE_ADMIN_PWD</literal>.</simpara>
<simpara>If you are using multiple templates to deploy components of Red Hat Process Automation Manager, use the same secret for all these deployments. The components utilize this user account to communicate with each other.</simpara>
<simpara>If your environment includes Business Central or Business Central Monitoring, you can also use this user account to log in to Business Central or Business Central Monitoring.</simpara>
<important>
<simpara>If you use RH-SSO or LDAP authentication, the same user with the same password must be configured in your authentication system with the <literal>kie-server,rest-all,admin</literal> roles for Red Hat Process Automation Manager.</simpara>
</important>
<formalpara>
<title>Procedure</title>
<para>Use the <literal>oc</literal> command to generate a generic secret named <literal>kie-admin-user-secret</literal> from the user name and password:</para>
</formalpara>
<screen>$ oc create secret generic rhpam-credentials --from-literal=KIE_ADMIN_USER=adminUser --from-literal=KIE_ADMIN_PWD=adminPassword</screen>
<simpara>In this command, replace <emphasis>adminPassword</emphasis> with the password for the administrative user. Optionally, you can replace <emphasis>adminUser</emphasis> with another user name for the administrative user.</simpara>
</section>
<section xml:id="glusterfs-reconfig-proc_openshift-templates">
<title>Changing GlusterFS configuration</title>
<simpara>If you are deploying an authoring environment, you must check whether your OpenShift environment uses GlusterFS to provide permanent storage volumes. If it uses GlusterFS, to ensure optimal performance of Business Central, you must tune your GlusterFS storage by changing the storage class configuration.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>To check whether your environment uses GlusterFS, enter the following command:</simpara>
<screen>oc get storageclass</screen>
<simpara>In the results, check whether the <literal>(default)</literal> marker is on the storage class that lists <literal>glusterfs</literal>. For example, in the following output the default storage class is <literal>gluster-container</literal>, which does list <literal>glusterfs</literal>:</simpara>
<screen>NAME              PROVISIONER                       AGE
gluster-block     gluster.org/glusterblock          8d
gluster-container (default) kubernetes.io/glusterfs 8d</screen>
<simpara>If the result has a default storage class that does not list <literal>glusterfs</literal> or if the result is empty, you do not need to make any changes. In this case, skip the rest of this procedure.</simpara>
</listitem>
<listitem>
<simpara>To save the configuration of the default storage class into a YAML file, enter the following command:</simpara>
<screen>oc get storageclass &lt;class-name&gt; -o yaml &gt;storage_config.yaml</screen>
<simpara>Replace <literal>&lt;class-name&gt;</literal> with the name of the default storage class. Example:</simpara>
<screen>oc get storageclass gluster-container -o yaml &gt;storage_config.yaml</screen>
</listitem>
<listitem>
<simpara>Edit the <literal>storage_config.yaml</literal> file:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Remove the lines with the following keys:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>creationTimestamp</literal></simpara>
</listitem>
<listitem>
<simpara><literal>resourceVersion</literal></simpara>
</listitem>
<listitem>
<simpara><literal>selfLink</literal></simpara>
</listitem>
<listitem>
<simpara><literal>uid</literal></simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>If you are planning to use Business Central only as a single pod, without high-availability configuration, on the line with the <literal>volumeoptions</literal> key, add the following options:</simpara>
<screen>features.cache-invalidation on
performance.nl-cache on</screen>
<simpara>For example:</simpara>
<simpara><literal>volumeoptions: client.ssl off, server.ssl off, features.cache-invalidation on, performance.nl-cache on</literal></simpara>
</listitem>
<listitem>
<simpara>If you are planning to use Business Central in a high-availability configuration, on the line with the <literal>volumeoptions</literal> key, add the following options:</simpara>
<screen>features.cache-invalidation on
nfs.trusted-write on
nfs.trusted-sync on
performance.nl-cache on
performance.stat-prefetch off
performance.read-ahead off
performance.write-behind off
performance.readdir-ahead off
performance.io-cache off
performance.quick-read off
performance.open-behind off
locks.mandatory-locking off
performance.strict-o-direct on</screen>
<simpara>For example:</simpara>
<simpara><literal>volumeoptions: client.ssl off, server.ssl off, features.cache-invalidation on, nfs.trusted-write on, nfs.trusted-sync on, performance.nl-cache on, performance.stat-prefetch off, performance.read-ahead off, performance.write-behind off, performance.readdir-ahead off, performance.io-cache off, performance.quick-read off, performance.open-behind off, locks.mandatory-locking off, performance.strict-o-direct on</literal></simpara>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>To remove the existing default storage class, enter the following command:</simpara>
<screen>oc delete storageclass &lt;class-name&gt;</screen>
<simpara>Replace <literal>&lt;class-name&gt;</literal> with the name of the default storage class. Example:</simpara>
<screen>oc delete storageclass gluster-container</screen>
</listitem>
<listitem>
<simpara>To re-create the storage class using the new configuration, enter the following command:</simpara>
<screen>oc create -f storage_config.yaml</screen>
</listitem>
</orderedlist>
</section>
<section xml:id="readwritemany-proc_openshift-templates">
<title>Provisioning persistent volumes with <literal>ReadWriteMany</literal> access mode using NFS</title>
<simpara>If you want to deploy
Business Central Monitoring or
high-availability Business Central, your environment must provision persistent volumes with <literal>ReadWriteMany</literal> access mode.</simpara>
<note>
<simpara>If you want to deploy a high-availability authoring environment, for optimal performance and reliability, provision persistent volumes using GlusterFS. Configure the GlusterFS storage class as described in <xref linkend="glusterfs-reconfig-proc_openshift-templates"/>.</simpara>
</note>
<simpara>If your configuration requires provisioning persistent volumes with <literal>ReadWriteMany</literal> access mode but your environment does not support such provisioning, use NFS to provision the volumes. Otherwise, skip this procedure.</simpara>
<formalpara>
<title>Procedure</title>
<para>Deploy an NFS server and provision the persistent volumes using NFS. For information about provisioning persistent volumes using NFS, see
the "Persistent storage using NFS" section of the  <link xl:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/3.11/html/configuring_clusters/"><emphasis>Configuring Clusters</emphasis></link> guide in the Red Hat OpenShift Container Platform 3.11 documentation.</para>
</formalpara>
</section>
<section xml:id="environment-immutable-source-extract-proc_openshift-templates">
<title>Extracting the source code from Business Central for use in an S2I build</title>
<simpara>If you are planning to create immutable KIE servers using the source-to-image (S2I) process, you must provide the source code for your services in a  Git repository. If you are using Business Central for authoring services, you can extract the source code for your service and place it into a separate Git repository, such as GitHub or an on-premise installation of GitLab, for use in the S2I build.</simpara>
<simpara>Skip this procedure if you are not planning to use the S2I process or if you are not using Business Central for authoring services.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Use the following command to extract the source code:</simpara>
<screen>git clone https://&lt;business-central-host&gt;:443/git/&lt;MySpace&gt;/&lt;MyProject&gt;</screen>
<simpara>In this command, replace the following variables:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>&lt;business-central-host&gt;</literal> with the host on which Business Central is running</simpara>
</listitem>
<listitem>
<simpara><literal>&lt;MySpace&gt;</literal> with the name of the Business Central space in which the project is located</simpara>
</listitem>
<listitem>
<simpara><literal>&lt;MyProject&gt;</literal> with the name of the project</simpara>
</listitem>
</itemizedlist>
<note>
<simpara>To view the full Git URL for a project in Business Central, click <emphasis role="strong">Menu</emphasis> &#8594; <emphasis role="strong">Design</emphasis> &#8594; <emphasis role="strong"><emphasis>&lt;MyProject&gt;</emphasis></emphasis> &#8594; <emphasis role="strong">Settings</emphasis>.</simpara>
</note>
<note>
<simpara>If you are using self-signed certificates for HTTPS communication, the command might fail with an <literal>SSL certificate problem</literal> error message. In this case, disable SSL certificate verification in <literal>git</literal>, for example, using the <literal>GIT_SSL_NO_VERIFY</literal> environment variable:</simpara>
<screen>env GIT_SSL_NO_VERIFY=true git clone https://&lt;business-central-host&gt;:443/git/&lt;MySpace&gt;/&lt;MyProject&gt;</screen>
</note>
</listitem>
<listitem>
<simpara>Upload the source code to another Git repository, such as GitHub or GitLab, for the S2I build.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="offline-repo-proc_openshift-templates">
<title>Preparing a Maven mirror repository for offline use</title>
<simpara>If your
Red Hat OpenShift Container Platform environment
does not have outgoing access to the public Internet, you must prepare a Maven repository with a mirror of all the necessary artifacts and make this repository available to your environment.</simpara>
<note>
<simpara>You do not need to complete this procedure if your
Red Hat OpenShift Container Platform environment
is connected to the Internet.</simpara>
</note>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>A computer that has outgoing access to the public Internet is available.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Configure a Maven release repository to which you have write access. The repository must allow read access without authentication and your OpenShift environment must have network access to this repository.</simpara>
<simpara>You can deploy a Nexus repository manager in the OpenShift environment. For instructions about setting up Nexus on OpenShift, see <link xl:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/3.11/html/developer_guide/tutorials#nexus-setting-up-nexus">Setting up Nexus</link> in the Red Hat OpenShift Container Platform 3.11 documentation.</simpara>
<simpara>Use this repository as a mirror to host the publicly available Maven artifacts. You can also provide your own services in this repository in order to deploy these services on immutable
servers or to deploy them on managed servers using Business Central monitoring.</simpara>
</listitem>
<listitem>
<simpara>On the computer that has an outgoing connection to the public Internet, complete the following steps:</simpara>
</listitem>
<listitem>
<simpara>Navigate to the <link xl:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html">Software Downloads</link> page in the Red Hat Customer Portal (login required), and select the product and version from the drop-down options:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Product:</emphasis> Red Hat Process Automation Manager</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Version:</emphasis> 7.10</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Download and extract the <emphasis role="strong">Red Hat Process Automation Manager 7.10.0 Offliner Content List</emphasis> (<literal>rhpam-7.10.0-offliner.zip</literal>) product deliverable file.</simpara>
</listitem>
<listitem>
<simpara>Extract the contents of the <literal>rhpam-7.10.0-offliner.zip</literal> file into any directory.</simpara>
</listitem>
<listitem>
<simpara>Change to the directory and enter the following command:</simpara>
<screen>./offline-repo-builder.sh offliner.txt</screen>
<simpara>This command creates the <literal>repository</literal> subdirectory and downloads the necessary artifacts into this subdirectory. This is the mirror repository.</simpara>
<simpara>If a message reports that some downloads have failed, run the same command again. If downloads fail again, contact Red Hat support.</simpara>
</listitem>
<listitem>
<simpara>Upload all artifacts from the <literal>repository</literal> subdirectory to the Maven mirror repository that you prepared. You can use the Maven Repository Provisioner utility, available from the <link xl:href="https://github.com/simpligility/maven-repository-tools/tree/master/maven-repository-provisioner">Maven repository tools</link> Git repository, to upload the artifacts.</simpara>
</listitem>
</orderedlist>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>If you developed services outside of Business Central and they have additional dependencies, add the dependencies to the mirror repository. If you developed the services as Maven projects, you can use the following steps to prepare these dependencies automatically. Complete the steps on the computer that has an outgoing connection to the public Internet.</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Create a backup of the local Maven cache directory (<literal>~/.m2/repository</literal>) and then clear the directory.</simpara>
</listitem>
<listitem>
<simpara>Build the source of your projects using the <literal>mvn clean install</literal> command.</simpara>
</listitem>
<listitem>
<simpara>For every project, enter the following command to ensure that Maven downloads all runtime dependencies for all the artifacts generated by the project:</simpara>
<screen>mvn -e -DskipTests dependency:go-offline -f /path/to/project/pom.xml --batch-mode -Djava.net.preferIPv4Stack=true</screen>
<simpara>Replace <literal>/path/to/project/pom.xml</literal> with the path of the <literal>pom.xml</literal> file of the project.</simpara>
</listitem>
<listitem>
<simpara>Upload all artifacts from the local Maven cache directory (<literal>~/.m2/repository</literal>) to the Maven mirror repository that you prepared. You can use the Maven Repository Provisioner utility, available from the <link xl:href="https://github.com/simpligility/maven-repository-tools/tree/master/maven-repository-provisioner">Maven repository tools</link> Git repository, to upload the artifacts.</simpara>
</listitem>
</orderedlist>
</listitem>
</orderedlist>
</section>
<section xml:id="externaldb-build-proc_openshift-templates">
<title>Building a custom KIE Server extension image for an external database</title>
<simpara>If you want to use an external database server for a KIE Server and the database server is not a MySQL or PostgreSQL server, you must build a custom KIE Server extension image with drivers for this server before deploying your environment.</simpara>
<simpara>Complete the steps in this build procedure to provide drivers for any of the following database servers:</simpara>
<itemizedlist>
<listitem>
<simpara>Microsoft SQL Server</simpara>
</listitem>
<listitem>
<simpara>IBM DB2</simpara>
</listitem>
<listitem>
<simpara>Oracle Database</simpara>
</listitem>
<listitem>
<simpara>Sybase</simpara>
</listitem>
</itemizedlist>
<simpara>Optionally, you can use this procedure to build a new version of drivers for any of the following database servers:</simpara>
<itemizedlist>
<listitem>
<simpara>MySQL</simpara>
</listitem>
<listitem>
<simpara>MariaDB</simpara>
</listitem>
<listitem>
<simpara>PostgreSQL</simpara>
</listitem>
</itemizedlist>
<simpara>For the supported versions of the database servers, see <link xl:href="https://access.redhat.com/articles/3405381">Red Hat Process Automation Manager 7 Supported Configurations</link>.</simpara>
<simpara>The build procedure creates a custom extension image that extends the existing KIE Server image. You must import this custom extension image into your OpenShift environment and then reference it in the <literal>EXTENSION_IMAGE</literal> parameter.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You are logged in to your OpenShift environment using the <literal>oc</literal> command. Your OpenShift user must have the <literal>registry-editor</literal> role.</simpara>
</listitem>
<listitem>
<simpara>For Oracle Database, IBM DB2, or Sybase, you downloaded the JDBC driver from the database server vendor.</simpara>
</listitem>
<listitem>
<simpara>You have installed the following required software:</simpara>
<itemizedlist>
<listitem>
<simpara>Docker: For installation instructions, see <link xl:href="https://docs.docker.com/get-docker/">Get Docker</link>.</simpara>
</listitem>
<listitem>
<simpara>Cekit version 3.2: For installation instructions, see <link xl:href="https://docs.cekit.io/en/3.2.0/handbook/installation/index.html">Installation</link>.</simpara>
</listitem>
<listitem>
<simpara>The following libraries and extensions for Cekit. For more information, see <link xl:href="https://docs.cekit.io/en/3.2.0/handbook/installation/dependencies.html">Dependencies</link>.</simpara>
<itemizedlist>
<listitem>
<simpara><literal>docker</literal>, provided by the <literal>python3-docker</literal> package or similar package</simpara>
</listitem>
<listitem>
<simpara><literal>docker-squash</literal>, provided by the <literal>python3-docker-squash</literal> package or similar package</simpara>
</listitem>
<listitem>
<simpara><literal>behave</literal>, provided by the <literal>python3-behave</literal> package or similar package</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>For IBM DB2, Oracle Database, or Sybase, provide the JDBC driver JAR file in a local directory.</simpara>
</listitem>
<listitem>
<simpara>Download the <literal>rhpam-7.10.0-openshift-templates.zip</literal> product deliverable file from the <link xl:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?downloadType=distributions&amp;product=rhpam&amp;productChanged=yes">Software Downloads</link> page of the Red Hat Customer Portal.</simpara>
</listitem>
<listitem>
<simpara>Unzip the file and, using the command line, change to the <literal>templates/contrib/jdbc/cekit</literal> directory of the unzipped file. This directory contains the source code for the custom build.</simpara>
</listitem>
<listitem>
<simpara>Enter one of the following commands, depending on the database server type:</simpara>
<itemizedlist>
<listitem>
<simpara>For Microsoft SQL Server:</simpara>
<screen>make mssql</screen>
</listitem>
<listitem>
<simpara>For MySQL:</simpara>
<screen>make mysql</screen>
</listitem>
<listitem>
<simpara>For PostgreSQL:</simpara>
<screen>make postgresql</screen>
</listitem>
<listitem>
<simpara>For MariaDB:</simpara>
<screen>make mariadb</screen>
</listitem>
<listitem>
<simpara>For IBM DB2:</simpara>
<screen>make db2 artifact=/tmp/db2jcc4.jar version=10.2</screen>
<simpara>In this command, replace <literal>/tmp/db2jcc4.jar</literal> with the path name of the downloaded Oracle Database driver and <literal>10.2</literal> with the version of the driver.</simpara>
</listitem>
<listitem>
<simpara>For Oracle Database:</simpara>
<screen>make oracle artifact=/tmp/ojdbc7.jar version=7.0</screen>
<simpara>In this command, replace <literal>/tmp/ojdbc7.jar</literal> with the path name of the downloaded Oracle Database driver and <literal>7.0</literal> with the version of the driver.</simpara>
</listitem>
<listitem>
<simpara>For Sybase:</simpara>
<screen>make build sybase artifact=/tmp/jconn4-16.0_PL05.jar version=16.0_PL05</screen>
<simpara>In this command, replace <literal>/tmp/jconn4-16.0_PL05.jar</literal> with the path name of the downloaded Sybase driver and <literal>16.0_PL05</literal> with the version of the driver.</simpara>
<simpara>Alternatively, if you need to update the driver class or driver XA class for the Sybase driver, you can set the <literal>DRIVER_CLASS</literal> or <literal>DRIVER_XA_CLASS</literal> variable for this command, for example:</simpara>
<screen>export DRIVER_CLASS=another.class.Sybase &amp;&amp; make sybase artifact=/tmp/jconn4-16.0_PL05.jar version=16.0_PL05</screen>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Enter the following command to list the Docker images that are available locally:</simpara>
<screen>docker images</screen>
<simpara>Note the name of the image that was built, for example, <literal>jboss-kie-db2-extension-openshift-image</literal>, and the version tag of the image, for example, <literal>11.1.4.4</literal> (not the <literal>latest</literal> tag).</simpara>
</listitem>
<listitem>
<simpara>Access the registry of your OpenShift environment directly and push the image to the registry. Depending on your user permissions, you can push the image into the <literal>openshift</literal> namespace or into a project namespace. For instructions about accessing the registry and pushing the images, see
<link xl:href="https://docs.openshift.com/container-platform/3.11/install_config/registry/accessing_registry.html#access">Accessing the Registry Directly</link>
in the Red Hat OpenShift Container Platform product documentation.</simpara>
</listitem>
<listitem>
<simpara>When configuring your KIE Server deployment with a template that supports an external database server, set the following parameters:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Drivers Extension Image</emphasis> (<literal>EXTENSIONS_IMAGE</literal>): The ImageStreamTag definition of the extension image, for example, <literal>jboss-kie-db2-extension-openshift-image:11.1.4.4</literal></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Drivers ImageStream Namespace</emphasis> (<literal>EXTENSIONS_IMAGE_NAMESPACE</literal>): The namespace to which you uploaded the extension image, for example, <literal>openshift</literal> or your project namespace.</simpara>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
</section>
</chapter>
<chapter xml:id="environment-trial-con_openshift-templates">
<title>Trial environment</title>
<simpara>You can deploy a trial (evaluation) Red Hat Process Automation Manager environment. It consists of Business Central for authoring or managing services and KIE Server for test execution of services.</simpara>
<simpara>This environment does not include permanent storage. Assets that you create or modify in a trial environment are not saved.</simpara>
<simpara>This environment is intended for test and demonstration access. It supports cross-origin resource sharing (CORS). This means that KIE Server endpoints can be accessed using a browser when other resources on the page are provided by other servers. KIE Server endpoints are normally intended for REST calls, but browser access can be needed in some demonstration configurations.</simpara>
<section xml:id="environment-trial-proc_openshift-templates">
<title>Deploying a trial environment</title>
<simpara>The procedure to deploy a trial environment is minimal. There are no required settings and all passwords are set to a single value. The default password is <literal>RedHat</literal>.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Download the <literal>rhpam-7.10.0-openshift-templates.zip</literal> product deliverable file from the <link xl:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?downloadType=distributions&amp;product=rhpam&amp;productChanged=yes">Software Downloads</link> page of the Red Hat Customer Portal.</simpara>
</listitem>
<listitem>
<simpara>Extract the <literal>rhpam710-trial-ephemeral.yaml</literal> template file.</simpara>
</listitem>
<listitem>
<simpara>Use one of the following methods to deploy the template:</simpara>
<itemizedlist>
<listitem>
<simpara>In the OpenShift Web UI, select <emphasis role="strong">Add to Project &#8594; Import YAML / JSON</emphasis> and then select or paste the <literal>rhpam710-trial-ephemeral.yaml</literal> file. In the <emphasis role="strong">Add Template</emphasis> window, ensure <emphasis role="strong">Process the template</emphasis> is selected and click <emphasis role="strong">Continue</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>To use the OpenShift command line console, prepare the following command line:</simpara>
<screen>oc new-app -f &lt;template-path&gt;/rhpam710-trial-ephemeral.yaml</screen>
<simpara>In this command line, replace <literal>&lt;template-path&gt;</literal> with the path to the downloaded template file.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Optional: Set any parameters as described in the template. A typical trial deployment requires only the following parameter:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">ImageStream Namespace</emphasis> (<literal>IMAGE_STREAM_NAMESPACE</literal>): The namespace where the image streams are available. If the image streams were already available in your OpenShift environment (see <xref linkend="imagestreams-file-install-proc_openshift-templates"/>), the namespace is <literal>openshift</literal>. If you installed the image streams file, the namespace is the name of the OpenShift project.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Complete the creation of the environment, depending on the method that you are using:</simpara>
<itemizedlist>
<listitem>
<simpara>In the OpenShift Web UI, click <emphasis role="strong">Create</emphasis>.</simpara>
<itemizedlist>
<listitem>
<simpara>A <literal>This will create resources that may have security or project behavior implications</literal> pop-up message might be displayed. If it is displayed, click <emphasis role="strong">Create Anyway</emphasis>.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Complete and run the command line.</simpara>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
</section>
</chapter>
<chapter xml:id="environment-authoring-con_openshift-templates">
<title>Authoring environment</title>
<simpara>You can deploy an environment for creating and modifying processes using Business Central. It consists of Business Central for the authoring work and KIE Server for test execution of the processes. If necessary, you can connect additional KIE Servers to the Business Central.</simpara>
<simpara>Depending on your needs, you can deploy either a single authoring environment template or a high-availability (HA) authoring environment template.</simpara>
<simpara>A single authoring environment contains two pods. One of the pods runs Business Central, the other runs KIE Server.
The KIE Server by default includes an embedded H2 database engine.
This environment is most suitable for single-user authoring or when your OpenShift infrastructure has limited resources. It does not require persistent volumes that support the <literal>ReadWriteMany</literal> access mode.</simpara>
<simpara>In a single authoring environment, you cannot scale Business Central.
By default, you also cannot scale KIE Server, as the H2 database engine does not support scaling. However, you can modify the template to use a separate MySQL or PostgreSQL database server pod; in this case, you can scale KIE Server. For instructions about modifying the single authoring environment template, see <xref linkend="environment-authoring-single-modify-proc_openshift-templates"/>.</simpara>
<simpara>In an HA authoring environment, both Business Central and KIE Server are provided in scalable pods. When pods are scaled, persistent storage is shared between the copies.
The database is provided by a separate pod.</simpara>
<simpara>To enable high-availability functionality in Business Central, additional pods with AMQ and Data Grid are required. These pods are configured and deployed by the high-availability authoring template. Use a high-availability authoring environment to provide maximum reliability and responsiveness, especially if several users are involved in authoring at the same time.</simpara>
<simpara>In the current version of Red Hat Process Automation Manager, an HA authoring environment is supported with certain limitations:</simpara>
<itemizedlist>
<listitem>
<simpara>If a Business Central pod crashes while a user works with it, the user can get an error message and then is redirected to another pod. Logging on again is not required.</simpara>
</listitem>
<listitem>
<simpara>If a Business Central pod crashes during a user operation, data that was not committed (saved) might be lost.</simpara>
</listitem>
<listitem>
<simpara>If a Business Central pod crashes during creation of a project, an unusable project might be created.</simpara>
</listitem>
<listitem>
<simpara>If a Business Central pod crashes during creation of an asset, the asset might be created but not indexed, so it cannot be used. The user can open the asset in Business Central and save it again to make it indexed.</simpara>
</listitem>
<listitem>
<simpara>When a user deploys a service to the KIE Server, the KIE Server deployment is rolled out again. Users can not deploy another service to the same KIE Server until the roll-out completes.</simpara>
</listitem>
</itemizedlist>
<simpara>In a high-availability authoring environment you can also deploy additional managed or immutable KIE Servers, if required. Business Central can automatically discover any KIE Servers in the same namespace, including immutable KIE Servers and managed KIE Servers.</simpara>
<simpara>If you want to deploy additional managed or immutable KIE Servers in a single authoring environment, you must complete an additional manual step to enable the <literal>OpenShiftStartupStrategy</literal> setting in the environment, as described in <link linkend="startupstrategy-enable-proc_openshift-templates">]</link>. This setting enables the discovery of other KIE Servers.</simpara>
<simpara>For instructions about deploying managed KIE Servers, see <xref linkend="freeform-server-managed-deploy-assy_openshift-templates"/>.</simpara>
<simpara>For instructions about deploying immutable KIE Servers, see <xref linkend="server-immutable-s2i-deploy-assy_openshift-templates"/> and <xref linkend="server-immutable-kjar-deploy-assy_openshift-templates"/>.</simpara>
<section xml:id="authoring-monitor-deploy-assy_openshift-templates">
<title>Deploying an authoring environment</title>
<simpara>You can use OpenShift templates to deploy a single or high-availability authoring environment. This environment consists of Business Central and a single KIE Server.</simpara>
<section xml:id="template-deploy-start-openshift-templates-authoring-proc">
<title>Starting configuration of the template for an authoring environment</title>
<simpara>If you want to deploy a single authoring environment, use the <literal>rhpam710-authoring.yaml</literal> template file.
By default, the single authoring template uses the H2 database with permanent storage. If you prefer to create a MySQL or PostgreSQL pod or to use an external database server (outside the OpenShift project), modify the template before deploying the environment. For instructions about modifying the template, see <xref linkend="environment-authoring-single-modify-proc_openshift-templates"/>.</simpara>
<simpara>If you want to deploy a high-availability authoring environment, use the <literal>rhpam710-authoring-ha.yaml</literal> template file.
By default, the high-availability authoring template creates a MySQL pod to provide the database server for the KIE Server. If you prefer to use PostgreSQL or to use an external server (outside the OpenShift project) you need to modify the template before deploying the environment. You can also modify the template to change the number of replicas initially created for Business Central. For instructions about modifying the template, see <xref linkend="environment-authoring-ha-modify-proc_openshift-templates"/>.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Download the <literal>rhpam-7.10.0-openshift-templates.zip</literal> product deliverable file from the <link xl:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?downloadType=distributions&amp;product=rhpam&amp;productChanged=yes">Software Downloads</link> page of the Red Hat Customer Portal.</simpara>
</listitem>
<listitem>
<simpara>Extract the required template file.</simpara>
</listitem>
<listitem>
<simpara>Use one of the following methods to start deploying the template:</simpara>
<itemizedlist>
<listitem>
<simpara>To use the OpenShift Web UI, in the OpenShift application console select <emphasis role="strong">Add to Project &#8594; Import YAML / JSON</emphasis> and then select or paste the <literal>&lt;template-file-name&gt;.yaml</literal> file. In the <emphasis role="strong">Add Template</emphasis> window, ensure <emphasis role="strong">Process the template</emphasis> is selected and click <emphasis role="strong">Continue</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>To use the OpenShift command line console, prepare the following command line:</simpara>
<screen>oc new-app -f &lt;template-path&gt;/&lt;template-file-name&gt;.yaml -p BUSINESS_CENTRAL_HTTPS_SECRET=businesscentral-app-secret -p KIE_SERVER_HTTPS_SECRET=kieserver-app-secret -p PARAMETER=value</screen>
<simpara>In this command line, make the following changes:</simpara>
<itemizedlist>
<listitem>
<simpara>Replace <literal>&lt;template-path&gt;</literal> with the path to the downloaded template file.</simpara>
</listitem>
<listitem>
<simpara>Replace <literal>&lt;template-file-name&gt;</literal> with the name of the template file.</simpara>
</listitem>
<listitem>
<simpara>Use as many <literal>-p PARAMETER=value</literal> pairs as needed to set the required parameters.</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
<formalpara>
<title>Next steps</title>
<para>Set the parameters for the template. Follow the steps in <xref linkend="template-deploy-mandatory-openshift-templates-authoring-proc"/> to set common parameters. You can view the template file to see descriptions for all parameters.</para>
</formalpara>
</section>
<section xml:id="template-deploy-mandatory-openshift-templates-authoring-proc">
<title>Setting required parameters for an authoring environment</title>
<simpara>When configuring the template to deploy an authoring environment, you must set the following parameters in all cases.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-authoring-proc"/>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Set the following parameters:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Credentials secret</emphasis> (<literal>CREDENTIALS_SECRET</literal>): The name of the secret containing the administrative user credentials, as created in <xref linkend="secret-adminuser-create-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Business Central Server Keystore Secret Name</emphasis> (<literal>BUSINESS_CENTRAL_HTTPS_SECRET</literal>): The name of the secret for Business Central, as created in <xref linkend="secrets-central-create-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server Keystore Secret Name</emphasis> (<literal>KIE_SERVER_HTTPS_SECRET</literal>): The name of the secret for KIE Server, as created in <xref linkend="secrets-kie-create-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Business Central Server Certificate Name</emphasis> (<literal>BUSINESS_CENTRAL_HTTPS_NAME</literal>): The name of the certificate in the keystore that you created in <xref linkend="secrets-central-create-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Business Central Server Keystore Password</emphasis> (<literal>BUSINESS_CENTRAL_HTTPS_PASSWORD</literal>): The password for the keystore that you created in <xref linkend="secrets-central-create-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server Certificate Name</emphasis> (<literal>KIE_SERVER_HTTPS_NAME</literal>): The name of the certificate in the keystore that you created in <xref linkend="secrets-kie-create-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server Keystore Password</emphasis> (<literal>KIE_SERVER_HTTPS_PASSWORD</literal>): The password for the keystore that you created in <xref linkend="secrets-kie-create-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Application Name</emphasis> (<literal>APPLICATION_NAME</literal>): The name of the OpenShift application. It is used in the default URLs for Business Central Monitoring and KIE Server. OpenShift uses the application name to create a separate set of deployment configurations, services, routes, labels, and artifacts.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">ImageStream Namespace</emphasis> (<literal>IMAGE_STREAM_NAMESPACE</literal>): The namespace where the image streams are available. If the image streams were already available in your OpenShift environment (see <xref linkend="imagestreams-file-install-proc_openshift-templates"/>), the namespace is <literal>openshift</literal>. If you have installed the image streams file, the namespace is the name of the OpenShift project.</simpara>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-openshift-templates-authoring-proc"/>.</simpara>
</section>
<section xml:id="template-deploy-namespace-openshift-templates-authoring-proc">
<title>Configuring the image stream namespace for an authoring environment</title>
<simpara>If you created image streams in a namespace that is not <literal>openshift</literal>, you must configure the namespace in the template.</simpara>
<simpara>If all image streams were already available in your Red Hat OpenShift Container Platform environment, you can skip this procedure.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-authoring-proc"/>.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Procedure</title>
<para>If you installed an image streams file according to instructions in <xref linkend="imagestreams-file-install-proc_openshift-templates"/>, set the <emphasis role="strong">ImageStream Namespace</emphasis> (<literal>IMAGE_STREAM_NAMESPACE</literal>) parameter to the name of your OpenShift project.</para>
</formalpara>
</section>
<section xml:id="template-deploy-optionalmaven-openshift-templates-authoring-proc">
<title>Setting an optional Maven repository for an authoring environment</title>
<simpara>When configuring the template to deploy an authoring environment,
if you want to place the built KJAR files into an external Maven repository,
you must set parameters to access the repository.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-authoring-proc"/>.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Procedure</title>
<para>To configure access to a custom Maven repository, set the following parameters:</para>
</formalpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Maven repository URL</emphasis> (<literal>MAVEN_REPO_URL</literal>): The URL for the Maven repository.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Maven repository ID</emphasis> (<literal>MAVEN_REPO_ID</literal>): An identifier for the Maven repository. The default value is <literal>repo-custom</literal>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Maven repository username</emphasis> (<literal>MAVEN_REPO_USERNAME</literal>): The user name for the Maven repository.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Maven repository password</emphasis> (<literal>MAVEN_REPO_PASSWORD</literal>): The password for the Maven repository.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-openshift-templates-authoring-proc"/>.</simpara>
<important>
<simpara>To export or push Business Central projects as KJAR artifacts to the external Maven repository, you must also add the repository information in the <literal>pom.xml</literal> file for every project. For information about exporting Business Central projects to an external repository, see <link xl:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/deploying_and_managing_red_hat_process_automation_manager_services#maven-external-export-proc_packaging-deploying"><emphasis>Packaging and deploying a Red Hat Process Automation Manager project</emphasis></link>.</simpara>
</important>
</section>
<section xml:id="template-deploy-nopubnet-openshift-templates-authoring-proc">
<title>Configuring access to a Maven mirror in an environment without a connection to the public Internet for an authoring environment</title>
<simpara>When configuring the template to deploy an authoring environment, if your OpenShift environment does not have a connection to the public Internet, you must configure access to a Maven mirror that you set up according to <xref linkend="offline-repo-proc_openshift-templates"/>.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-authoring-proc"/>.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Procedure</title>
<para>To configure access to the Maven mirror, set the following parameters:</para>
</formalpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Maven mirror URL</emphasis> (<literal>MAVEN_MIRROR_URL</literal>): The URL for the Maven mirror repository that you set up in <xref linkend="offline-repo-proc_openshift-templates"/>. This URL must be accessible from a pod in your OpenShift environment.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Maven mirror of</emphasis> (<literal>MAVEN_MIRROR_OF</literal>): The value that determines which artifacts are to be retrieved from the mirror. For instructions about setting the <literal>mirrorOf</literal> value, see <link xl:href="https://maven.apache.org/guides/mini/guide-mirror-settings.html">Mirror Settings</link> in the Apache Maven documentation.
The default value is <literal>external:*,!repo-rhpamcentr</literal>; with this value, Maven retrieves artifacts from the built-in Maven repository of Business Central directly and retrieves any other required artifacts from the mirror. If you configure an external Maven repository (<literal>MAVEN_REPO_URL</literal>), change <literal>MAVEN_MIRROR_OF</literal> to exclude the artifacts in this repository, for example, <literal>external:*,!repo-custom</literal>. Replace <literal>repo-custom</literal> with the ID that you configured in <literal>MAVEN_REPO_ID</literal>.
The default value is <literal>external:*</literal>. With this value, Maven retrieves every required artifact from the mirror and does not query any other repositories.</simpara>
<itemizedlist>
<listitem>
<simpara>If you configure an external Maven repository (<literal>MAVEN_REPO_URL</literal>), change <literal>MAVEN_MIRROR_OF</literal> to exclude the artifacts in this repository from the mirror, for example, <literal>external:*,!repo-custom</literal>. Replace <literal>repo-custom</literal> with the ID that you configured in <literal>MAVEN_REPO_ID</literal>.</simpara>
</listitem>
<listitem>
<simpara>If you configure a built-in Business Central Maven repository (<literal>BUSINESS_CENTRAL_MAVEN_SERVICE</literal>), change <literal>MAVEN_MIRROR_OF</literal> to exclude the artifacts in this repository from the mirror: <literal>external:*,!repo-rhpamcentr</literal>.</simpara>
</listitem>
<listitem>
<simpara>If you configure both repositories, change <literal>MAVEN_MIRROR_OF</literal> to exclude the artifacts in both repositories from the mirror: <literal>external:*,!repo-rhpamcentr,!repo-custom</literal>. Replace <literal>repo-custom</literal> with the ID that you configured in <literal>MAVEN_REPO_ID</literal>.</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-openshift-templates-authoring-proc"/>.</simpara>
</section>
<section xml:id="template-deploy-replicas-auth-openshift-templates-authoring-proc">
<title>Configuring Business Central and KIE Server replicas for a high-availability authoring environment</title>
<simpara>If you are deploying a high-availability authoring environment, by default two replicas of Business Central and two replicas of the KIE Server are initially created.</simpara>
<simpara>Optionally, you can modify the number of replicas.</simpara>
<simpara>Skip this procedure for a single authoring environment.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-authoring-proc"/>.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Procedure</title>
<para>To modify the numbers of initial replicas, set the following parameters:</para>
</formalpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Business Central Container Replicas</emphasis> (<literal>BUSINESS_CENTRAL_CONTAINER_REPLICAS</literal>): The number of replicas that the deployment initially creates for Business Central.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server Container Replicas</emphasis> (<literal>KIE_SERVER_CONTAINER_REPLICAS</literal>): The number of replicas that the deployment initially creates for the KIE Server.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-openshift-templates-authoring-proc"/>.</simpara>
</section>
<section xml:id="template-deploy-githooksparams-openshift-templates-authoring-proc">
<title>Specifying the Git hooks directory for an authoring environment</title>
<simpara>You can use Git hooks to facilitate interaction between the internal Git repository of Business Central and an external Git repository.</simpara>
<simpara>If you want to use Git hooks, you must configure a Git hooks directory.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-authoring-proc"/>.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Procedure</title>
<para>To configure a Git hooks directory, set the following parameter:</para>
</formalpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Git hooks directory</emphasis> (<literal>GIT_HOOKS_DIR</literal>): The fully qualified path to a Git hooks directory, for example, <literal>/opt/kie/data/git/hooks</literal>. You must provide the content of this directory and mount it at the specified path. For instructions about providing and mounting the Git hooks directory using a configuration map or a persistent volume, see <xref linkend="githooks-proc_openshift-templates"/>.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-openshift-templates-authoring-proc"/>.</simpara>
</section>
<section xml:id="template-deploy-ha-resources-openshift-templates-authoring-proc">
<title>Configuring resource usage for a high-availability deployment</title>
<simpara>If you are deploying the high-availability template (<literal>rhpam710-authoring-ha.yaml</literal>), you can optionally configure resource usage to optimize performance for your requirements.</simpara>
<simpara>If you are deploying the single authoring environment template (<literal>rhpam710-authoring.yaml</literal>), skip this procedure.</simpara>
<simpara>For more information about sizing resources, see the following sections in the Red Hat OpenShift Container Platform 3.11 product documentation:</simpara>
<itemizedlist>
<listitem>
<simpara><link xl:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/3.11/html/developer_guide/dev-guide-application-memory-sizing">Application memory sizing</link></simpara>
</listitem>
<listitem>
<simpara><link xl:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/3.11/html/developer_guide/dev-guide-compute-resources#dev-compute-resources">Compute resources</link></simpara>
</listitem>
</itemizedlist>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-authoring-proc"/>.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Procedure</title>
<para>Set the following parameters of the template as applicable:</para>
</formalpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Business Central Container Memory Limit</emphasis> (<literal>BUSINESS_CENTRAL_MEMORY_LIMIT</literal>): The amount of memory requested in the OpenShift environment for the Business Central container. The default value is <literal>8Gi</literal>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Business Central JVM Max Memory Ratio</emphasis> (<literal>BUSINESS_CENTRAL_JAVA_MAX_MEM_RATIO</literal>): The percentage of container memory that is used for the Java Virtual Machine for Business Central. The remaining memory is used for the operating system. The default value is <literal>80</literal>, for a limit of 80%.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Business Central Container CPU Limit</emphasis> (<literal>BUSINESS_CENTRAL_CPU_LIMIT</literal>): The maximum CPU usage for Business Central. The default value is <literal>2000m</literal>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server Container Memory Limit</emphasis> (<literal>KIE_SERVER_MEMORY_LIMIT</literal>): The amount of memory requested in the OpenShift environment for the KIE Server container. The default value is <literal>1Gi</literal>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server Container CPU Limit</emphasis> (<literal>KIE_SERVER_CPU_LIMIT</literal>): The maximum CPU usage for KIE Server. The default value is <literal>1000m</literal>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">DataGrid Container Memory Limit</emphasis> (<literal>DATAGRID_MEMORY_LIMIT</literal>): The amount of memory requested in the OpenShift environment for the Red Hat Data Grid container. The default value is <literal>2Gi</literal>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">DataGrid Container CPU Limit</emphasis> (<literal>DATAGRID_CPU_LIMIT</literal>): The maximum CPU usage for Red Hat Data Grid. The default value is <literal>1000m</literal>.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="template-deploy-rhsso-openshift-templates-authoring-proc">
<title>Setting parameters for RH-SSO authentication for an authoring environment</title>
<simpara>If you want to use RH-SSO authentication, complete the following additional configuration when configuring the template to deploy an authoring environment.</simpara>
<important>
<simpara>Do not configure LDAP authentication and RH-SSO authentication in the same deployment.</simpara>
</important>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>A realm for Red Hat Process Automation Manager is created in the RH-SSO authentication system.</simpara>
</listitem>
<listitem>
<simpara>User names and passwords for Red Hat Process Automation Manager are created in the RH-SSO authentication system. For a list of the available roles, see <xref linkend="roles-users-con_openshift-templates"/>.</simpara>
<simpara>You must create a user with the username and password configured in the secret for the administrative user, as described in <xref linkend="secret-adminuser-create-proc_openshift-templates"/>. This user must have the <literal>kie-server,rest-all,admin</literal> roles.</simpara>
</listitem>
<listitem>
<simpara>Clients are created in the RH-SSO authentication system for all components of the Red Hat Process Automation Manager environment that you are deploying. The client setup contains the URLs for the components. You can review and edit the URLs after deploying the environment. Alternatively, the Red Hat Process Automation Manager deployment can create the clients. However, this option provides less detailed control over the environment.</simpara>
</listitem>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-authoring-proc"/>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Set the following parameters:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">RH-SSO URL</emphasis> (<literal>SSO_URL</literal>): The URL for RH-SSO.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">RH-SSO Realm name</emphasis> (<literal>SSO_REALM</literal>): The RH-SSO realm for Red Hat Process Automation Manager.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">RH-SSO Disable SSL Certificate Validation</emphasis> (<literal>SSO_DISABLE_SSL_CERTIFICATE_VALIDATION</literal>): Set to <literal>true</literal> if your RH-SSO installation does not use a valid HTTPS certificate.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Complete one of the following procedures:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>If you created the clients for Red Hat Process Automation Manager within RH-SSO,
set the following parameters in the template:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Business Central RH-SSO Client name</emphasis> (<literal>BUSINESS_CENTRAL_SSO_CLIENT</literal>): The RH-SSO client name for Business Central.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Business Central RH-SSO Client Secret</emphasis> (<literal>BUSINESS_CENTRAL_SSO_SECRET</literal>): The secret string that is set in RH-SSO for the client for Business Central.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server RH-SSO Client name</emphasis> (<literal>KIE_SERVER_SSO_CLIENT</literal>): The RH-SSO client name for KIE Server.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server RH-SSO Client Secret</emphasis> (<literal>KIE_SERVER_SSO_SECRET</literal>): The secret string that is set in RH-SSO for the client for KIE Server.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>To create the clients for Red Hat Process Automation Manager within RH-SSO, set the following parameters in the template:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Business Central RH-SSO Client name</emphasis> (<literal>BUSINESS_CENTRAL_SSO_CLIENT</literal>): The name of the client to create in RH-SSO for Business Central.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Business Central RH-SSO Client Secret</emphasis> (<literal>BUSINESS_CENTRAL_SSO_SECRET</literal>): The secret string to set in RH-SSO for the client for Business Central.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server RH-SSO Client name</emphasis> (<literal>KIE_SERVER_SSO_CLIENT</literal>): The name of the client to create in RH-SSO for KIE Server.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server RH-SSO Client Secret</emphasis> (<literal>KIE_SERVER_SSO_SECRET</literal>): The secret string to set in RH-SSO for the client for KIE Server.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">RH-SSO Realm Admin Username</emphasis> (<literal>SSO_USERNAME</literal>) and <emphasis role="strong">RH-SSO Realm Admin Password</emphasis> (<literal>SSO_PASSWORD</literal>): The user name and password for the realm administrator user for the RH-SSO realm for Red Hat Process Automation Manager. You must provide this user name and password in order to create the required clients.</simpara>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
</listitem>
</orderedlist>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-openshift-templates-authoring-proc"/>.</simpara>
<simpara>After completing the deployment, review the URLs for components of Red Hat Process Automation Manager in the RH-SSO authentication system to ensure they are correct.</simpara>
</section>
<section xml:id="template-deploy-ldap-openshift-templates-authoring-proc">
<title>Setting parameters for LDAP authentication for an authoring environment</title>
<simpara>If you want to use LDAP authentication, complete the following additional configuration when configuring the template to deploy an authoring environment.</simpara>
<important>
<simpara>Do not configure LDAP authentication and RH-SSO authentication in the same deployment.</simpara>
</important>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You created user names and passwords for Red Hat Process Automation Manager in the LDAP system. For a list of the available roles, see <xref linkend="roles-users-con_openshift-templates"/>.</simpara>
<simpara>You must create a user with the username and password configured in the secret for the administrative user, as described in <xref linkend="secret-adminuser-create-proc_openshift-templates"/>. This user must have the <literal>kie-server,rest-all,admin</literal> roles.</simpara>
</listitem>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-authoring-proc"/>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Set the <literal>AUTH_LDAP*</literal> parameters of the template. These parameters correspond to the settings of the <literal>LdapExtended</literal> Login module of Red Hat JBoss EAP. For instructions about using these settings, see <link xl:href="https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.0/html-single/login_module_reference/#ldapextended_login_module">LdapExtended login module</link>.</simpara>
<note>
<simpara>If you want to enable LDAP failover, you can put set or more LDAP server addresses in the <literal>AUTH_LDAP_URL</literal> parameter, separated by a space.</simpara>
</note>
<simpara>If the LDAP server does not define all the roles required for your deployment, you can map LDAP groups to Red Hat Process Automation Manager roles. To enable LDAP role mapping, set the following parameters:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">RoleMapping rolesProperties file path</emphasis> (<literal>AUTH_ROLE_MAPPER_ROLES_PROPERTIES</literal>): The fully qualified path name of a file that defines role mapping, for example, <literal>/opt/eap/standalone/configuration/rolemapping/rolemapping.properties</literal>. You must provide this file and mount it at this path in all applicable deployment configurations; for instructions, see <xref linkend="rolemapping-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">RoleMapping replaceRole property</emphasis> (<literal>AUTH_ROLE_MAPPER_REPLACE_ROLE</literal>): If set to <literal>true</literal>, mapped roles replace the roles defined on the LDAP server; if set to <literal>false</literal>, both mapped roles and roles defined on the LDAP server are set as user application roles. The default setting is <literal>false</literal>.</simpara>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-openshift-templates-authoring-proc"/>.</simpara>
</section>
<section xml:id="template-deploy-externaldb-openshift-templates-authoring-proc">
<title>Setting parameters for using an external database server for an authoring environment</title>
<simpara>If you modified the template to use an external database server for the KIE Server, as described in <xref linkend="environment-authoring-single-modify-proc_openshift-templates"/> or <xref linkend="environment-authoring-ha-modify-proc_openshift-templates"/>,
complete the following additional configuration when configuring the template to deploy an authoring environment.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-authoring-proc"/>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Set the following parameters:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">KIE Server External Database Driver</emphasis> (<literal>KIE_SERVER_EXTERNALDB_DRIVER</literal>): The driver for the server, depending on the server type:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>mysql</literal></simpara>
</listitem>
<listitem>
<simpara><literal>postgresql</literal></simpara>
</listitem>
<listitem>
<simpara><literal>mariadb</literal></simpara>
</listitem>
<listitem>
<simpara><literal>mssql</literal></simpara>
</listitem>
<listitem>
<simpara><literal>db2</literal></simpara>
</listitem>
<listitem>
<simpara><literal>oracle</literal></simpara>
</listitem>
<listitem>
<simpara><literal>sybase</literal></simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server External Database User</emphasis> (<literal>KIE_SERVER_EXTERNALDB_USER</literal>) and KIE Server External Database Password (<literal>KIE_SERVER_EXTERNALDB_PWD</literal>): The user name and password for the external database server</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server External Database URL</emphasis> (<literal>KIE_SERVER_EXTERNALDB_URL</literal>): The JDBC URL for the external database server</simpara>
<note>
<simpara>If you are using the EntrepriseDB Postgres database server, use an URL starting with <literal>jdbc:postgresql://</literal> and not with <literal>jdbc:edb://</literal>. Alternatively, do not set the URL and set the host and port parameters instead.</simpara>
</note>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server External Database Host</emphasis> (<literal>KIE_SERVER_EXTERNALDB_SERVICE_HOST</literal>) and  <emphasis role="strong">KIE Server External Database Port</emphasis> (<literal>KIE_SERVER_EXTERNALDB_SERVICE_PORT</literal>): The host name and port number of the external database server. You can set these parameters as an alternative to setting the <literal>KIE_SERVER_EXTERNALDB_URL</literal> parameter.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server External Database Dialect</emphasis> (<literal>KIE_SERVER_EXTERNALDB_DIALECT</literal>): The Hibernate dialect for the server, depending on the server type. The common settings are:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>org.hibernate.dialect.MySQL5InnoDBDialect</literal></simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.MySQL8Dialect</literal></simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.MariaDB102Dialect</literal></simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.PostgreSQL95Dialect</literal></simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.PostgresPlusDialect</literal> (used for EntrepriseDB Postgres Advanced Server)</simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.SQLServer2012Dialect</literal> (used for MS SQL)</simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.DB2Dialect</literal></simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.Oracle10gDialect</literal></simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.SybaseASE15Dialect</literal></simpara>
<simpara>For a complete list of supported dialects, see the <emphasis>Hibernate SQL Dialects</emphasis> table in <link xl:href="https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.3/html-single/developing_hibernate_applications/index#hibernate_properties">Hibernate properties</link> in the Red Hat JBoss EAP documentation.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server External Database name</emphasis> (<literal>KIE_SERVER_EXTERNALDB_DB</literal>): The database name to use on the external database server</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">JDBC Connection Checker class</emphasis> (<literal>KIE_SERVER_EXTERNALDB_CONNECTION_CHECKER</literal>): The name of the JDBC connection checker class for the database server. Without this information, a database server connection cannot be restored after it is lost, for example, if the database server is rebooted.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">JDBC Exception Sorter class</emphasis> (<literal>KIE_SERVER_EXTERNALDB_EXCEPTION_SORTER</literal>): The name of the JDBC exception sorter class for the database server. Without this information, a database server connection cannot be restored after it is lost, for example, if the database server is rebooted.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>If you created a custom image for using an external database server, as described in <xref linkend="externaldb-build-proc_openshift-templates"/>, set the following parameters:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Drivers Extension Image</emphasis> (<literal>EXTENSIONS_IMAGE</literal>): The ImageStreamTag definition of the extension image, for example, <literal>jboss-kie-db2-extension-openshift-image:11.1.4.4</literal></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Drivers ImageStream Namespace</emphasis> (<literal>EXTENSIONS_IMAGE_NAMESPACE</literal>): The namespace to which you uploaded the extension image, for example, <literal>openshift</literal> or your project namespace.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>If you are using a MySQL version 8 external database server, enable the <literal>mysql_native_password</literal> plugin and use it for authentication. For instructions about this pluding, see <link xl:href="https://dev.mysql.com/doc/refman/8.0/en/native-pluggable-authentication.html">Native Pluggable Authentication</link> in the <emphasis>MySQL 8.0 Reference Manual</emphasis>.</simpara>
<simpara>If you are using a MySQL version 8 image provided by Red Hat on Red Hat OpenShift Container Platform, to enable the plugin, set the <literal>MYSQL_DEFAULT_AUTHENTICATION_PLUGIN</literal> environment variable to <literal>mysql_native_password</literal>.</simpara>
<simpara>If you created users on the MySQL version 8 server before enabling the <literal>mysql_native_password</literal> plugin, you must update the <literal>mysql-user</literal> table after you enable the plugin.</simpara>
</listitem>
</orderedlist>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-openshift-templates-authoring-proc"/>.</simpara>
</section>
<section xml:id="template-deploy-prometheus-openshift-templates-authoring-proc">
<title>Enabling Prometheus metric collection for an authoring environment</title>
<simpara>If you want to configure your KIE Server deployment to use Prometheus to collect and store metrics, enable support for this feature in KIE Server at deployment time.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-authoring-proc"/>.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Procedure</title>
<para>To enable support for Prometheus metric collection, set the <emphasis role="strong">Prometheus Server Extension Disabled</emphasis> (<literal>PROMETHEUS_SERVER_EXT_DISABLED</literal>) parameter to <literal>false</literal>.</para>
</formalpara>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-openshift-templates-authoring-proc"/>.</simpara>
<simpara>For instructions about configuring Prometheus metrics collection, see <link xl:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/managing_red_hat_process_automation_manager_and_kie_server_settings#prometheus-monitoring-ocp-proc_execution-server"><emphasis>Managing and monitoring KIE Server</emphasis></link>.</simpara>
</section>
<section xml:id="template-deploy-complete-openshift-templates-authoring-proc">
<title>Completing deployment of the template for an authoring environment</title>
<simpara>After setting all the required parameters in the OpenShift Web UI or in the command line, complete deployment of the template.</simpara>
<formalpara>
<title>Procedure</title>
<para>Depending on the method that you are using, complete the following steps:</para>
</formalpara>
<itemizedlist>
<listitem>
<simpara>In the OpenShift Web UI, click <emphasis role="strong">Create</emphasis>.</simpara>
<itemizedlist>
<listitem>
<simpara>If the <literal>This will create resources that may have security or project behavior implications</literal> message appears, click <emphasis role="strong">Create Anyway</emphasis>.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Complete the command line and press Enter.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Next steps</title>
<para>Depending on your needs for the environment, optionally complete procedures described in <xref linkend="post-optional-con_openshift-templates"/>.</para>
</formalpara>
</section>
</section>
<section xml:id="startupstrategy-enable-proc_openshift-templates">
<title>Enabling the <literal>OpenShiftStartupStrategy</literal> setting to connect additional KIE Servers to Business Central</title>
<simpara>In an environment deployed using Red Hat Process Automation Manager authoring templates, Business Central manages one KIE Server.
If you use the high-avalability authoring template or if you modified the single authoring template to use a database server other than an embedded H2 database, you
can scale the KIE Server pod, but all the copies execute the same services.</simpara>
<simpara>You can connect additional KIE Servers to Business Central. However, if you deployed a single authoring environment using the <literal>rhpam710-authoring.yaml</literal>, you must enable the <literal>OpenShiftStartupStrategy</literal> setting in the environment. When <literal>OpenShiftStartupStrategy</literal> is enabled, Business Central automatically discovers KIE Servers in the same namespace and these KIE Servers can be configured to connect to the Business Central.</simpara>
<simpara>With the <literal>OpenShiftStartupStrategy</literal> setting, when a user deploys a service to the KIE Server, the KIE Server deployment is rolled out again. Users can not deploy another service to the same KIE Server until the roll-out completes. Because the roll-out might take noticeable time, the <literal>OpenShiftStartupStrategy</literal> setting might not be suitable for some authoring environments.</simpara>
<simpara>Do not complete this procedure if you deployed a high-availability authoring environment using the <literal>rhpam710-authoring-ha.yaml</literal> template. In this environment, the <literal>OpenShiftStartupStrategy</literal> setting is enabled by default.</simpara>
<simpara>Do not complete this procedure unless you want to connect additional KIE Servers to Business Central.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You deployed an authoring environment using the <literal>rhpam710-authoring.yaml</literal> template.</simpara>
</listitem>
<listitem>
<simpara>You are logged in to the OpenShift project where the environment is deployed using the <literal>oc</literal> tool.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Enter the following command to view the deployment configurations that are deployed in the project:</simpara>
<screen>$ oc get dc</screen>
</listitem>
<listitem>
<simpara>In the output of the command, find the deployment configuration names for the Business Central and KIE Server pods:</simpara>
<itemizedlist>
<listitem>
<simpara>The name of the deployment configuration for Business Central is <literal><emphasis>myapp</emphasis>-rhpamcentr</literal>. Replace <literal><emphasis>myapp</emphasis></literal> with the application name of the environment, which is set in the <literal>APPLICATION_NAME</literal> parameter of the template.</simpara>
</listitem>
<listitem>
<simpara>The name of the deployment configuration for KIE Server is <literal><emphasis>myapp</emphasis>-kieserver</literal>. Replace <literal><emphasis>myapp</emphasis></literal> with the application name.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Enter the following commands to enable the <literal>OpenShiftStartupStrategy</literal> setting on the pods:</simpara>
<screen>$ oc env <emphasis>myapp</emphasis>-rhpamcentr KIE_SERVER_CONTROLLER_OPENSHIFT_ENABLED=true
$ oc env <emphasis>myapp</emphasis>-kieserver KIE_SERVER_STARTUP_STRATEGY=OpenShiftStartupStrategy</screen>
<simpara>In these commands, replace <literal><emphasis>myapp</emphasis>-rhpamcentr</literal> with the Business Central deployment configuration name and <literal><emphasis>myapp</emphasis>-kieserver</literal> with the KIE Server deployment configuration name.</simpara>
</listitem>
<listitem>
<simpara>When you enable the <literal>OpenShiftStartupStrategy</literal> setting, by default Business Central discovers only KIE Servers that are deployed with the same value of the <literal>APPLICATION_NAME</literal> parameter as the authoring template. If you want to connect KIE Servers with any other application names to the Business Central, enter the following command:</simpara>
<screen>$ oc env <emphasis>myapp</emphasis>-rhpamcentr KIE_SERVER_CONTROLLER_OPENSHIFT_GLOBAL_DISCOVERY_ENABLED=true</screen>
<simpara>In this command, replace <literal><emphasis>myapp</emphasis>-rhpamcentr</literal> with the Business Central deployment configuration name.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="environment-authoring-single-modify-proc_openshift-templates">
<title>Modifying the template for the single authoring environment</title>
<simpara>By default, the single authoring template uses the H2 database with permanent storage. If you prefer to create a MySQL or PostgreSQL pod or to use an external database server (outside the OpenShift project), modify the template before deploying the environment.</simpara>
<simpara>You must use a MySQL or PostgreSQL pod or an external database server if you want to scale the KIE Server pod.
An OpenShift template defines a set of objects that can be created by OpenShift. To change an environment configuration, you need to modify, add, or delete these objects. To simplify this task, comments are provided in the Red Hat Process Automation Manager templates.</simpara>
<simpara>Some comments mark blocks within the template, staring with <literal>BEGIN</literal> and ending with <literal>END</literal>. For example, the following block is named <literal>Sample block</literal>:</simpara>
<screen>## Sample block BEGIN
sample line 1
sample line 2
sample line 3
## Sample block END</screen>
<simpara>For some changes, you might need to replace a block in one template file with a block from another template file provided with Red Hat Process Automation Manager. In this case, delete the block, then paste the new block in its exact location.</simpara>
<formalpara>
<title>Procedure</title>
<para>Edit the <literal>rhpam710-authoring.yaml</literal> template file to make any of the following changes as necessary.</para>
</formalpara>
<itemizedlist>
<listitem>
<simpara>If you want to use MySQL instead of the H2 database, you need to replace several blocks of the file, marked with comments from <literal>BEGIN</literal> to <literal>END</literal>, with blocks from the <literal>rhpam710-kieserver-mysql.yaml</literal> file that are also marked with comments. You also need to remove several other blocks and to add blocks in designated locations:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Replace the block named <literal>H2 database parameters</literal> with the block named <literal>MySQL database parameters</literal>. (Take this block and all subsequent replacement blocks from the <literal>rhpam710-kieserver-mysql.yaml</literal> file.)</simpara>
</listitem>
<listitem>
<simpara>Replace the block named <literal>H2 driver settings</literal> with the block named <literal>MySQL driver settings</literal>.</simpara>
</listitem>
<listitem>
<simpara>Replace the block named <literal>H2 persistent volume claim</literal> with the block named <literal>MySQL persistent volume claim</literal>.</simpara>
</listitem>
<listitem>
<simpara>Remove the blocks named <literal>H2 volume mount</literal> and <literal>H2 volume settings</literal>.</simpara>
</listitem>
<listitem>
<simpara>Under the comment <literal>Place to add database service</literal>, add the block named <literal>MySQL service</literal>.</simpara>
</listitem>
<listitem>
<simpara>Under the comment <literal>Place to add database deployment config</literal>, add the block named <literal>MySQL deployment config</literal>.</simpara>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>If you want to use PostgreSQL instead of the H2 database, you need to replace several blocks of the file, marked with comments from <literal>BEGIN</literal> to <literal>END</literal>, with blocks from the <literal>rhpam710-kieserver-postgresql.yaml</literal> file that are also marked with comments. You also need to remove several other blocks and to add blocks in designated locations:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Replace the block named <literal>H2 database parameters</literal> with the block named <literal>PostgreSQL database parameters</literal>. (Take this block and all subsequent replacement blocks from the <literal>rhpam710-kieserver-postgresql.yaml</literal> file.)</simpara>
</listitem>
<listitem>
<simpara>Replace the block named <literal>H2 driver settings</literal> with the block named <literal>PostgreSQL driver settings</literal>.</simpara>
</listitem>
<listitem>
<simpara>Replace the block named <literal>H2 persistent volume claim</literal> with the block named <literal>PostgreSQL persistent volume claim</literal>.</simpara>
</listitem>
<listitem>
<simpara>Remove the blocks named <literal>H2 volume mount</literal> and <literal>H2 volume settings</literal>.</simpara>
</listitem>
<listitem>
<simpara>Under the comment <literal>Place to add database service</literal>, add the block named <literal>PostgreSQL service</literal>.</simpara>
</listitem>
<listitem>
<simpara>Under the comment <literal>Place to add database deployment config</literal>, add the block named <literal>PostgreSQL deployment config</literal>.</simpara>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>If you want to use an external database server, replace several blocks of the file, marked with comments from <literal>BEGIN</literal> to <literal>END</literal>, with blocks from the <literal>rhpam710-kieserver-externaldb.yaml</literal> file, and also remove some blocks:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Replace the block named <literal>H2 database parameters</literal> with the block named <literal>External database parameters</literal>. (Take this block and all subsequent replacement blocks from the <literal>rhpam710-kieserver-externaldb.yaml</literal> file.)</simpara>
</listitem>
<listitem>
<simpara>Replace the block named <literal>H2 driver settings</literal> with the block named <literal>External database driver settings</literal>.</simpara>
</listitem>
<listitem>
<simpara>Remove the following blocks of the file, marked with comments from <literal>BEGIN</literal> to <literal>END</literal>:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>H2 persistent volume claim</literal></simpara>
</listitem>
<listitem>
<simpara><literal>H2 volume mount</literal></simpara>
</listitem>
<listitem>
<simpara><literal>H2 volume settings</literal></simpara>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
</listitem>
</itemizedlist>
<important>
<simpara>The standard KIE Server image includes drivers for MySQL, MariaDB, and PostgreSQL external database servers. If you want to use another database server, you must build a custom KIE Server image. For instructions, see <xref linkend="externaldb-build-proc_openshift-templates"/>.</simpara>
</important>
</section>
<section xml:id="environment-authoring-ha-modify-proc_openshift-templates">
<title>Modifying the template for the High Availability authoring environment</title>
<simpara>By default, the high-availability authoring template creates a MySQL pod to provide the database server for the KIE Server. If you prefer to use PostgreSQL or to use an external server (outside the OpenShift project), you need to modify the template before deploying the environment.</simpara>
<simpara>You can also modify the High Availability authoring template to change the number of replicas initially created for Business Central.</simpara>
<simpara>An OpenShift template defines a set of objects that can be created by OpenShift. To change an environment configuration, you need to modify, add, or delete these objects. To simplify this task, comments are provided in the Red Hat Process Automation Manager templates.</simpara>
<simpara>Some comments mark blocks within the template, staring with <literal>BEGIN</literal> and ending with <literal>END</literal>. For example, the following block is named <literal>Sample block</literal>:</simpara>
<screen>## Sample block BEGIN
sample line 1
sample line 2
sample line 3
## Sample block END</screen>
<simpara>For some changes, you might need to replace a block in one template file with a block from another template file provided with Red Hat Process Automation Manager. In this case, delete the block, then paste the new block in its exact location.</simpara>
<formalpara>
<title>Procedure</title>
<para>Edit the <literal>rhpam710-authoring-ha.yaml</literal> template file to make any of the following changes as necessary.</para>
</formalpara>
<itemizedlist>
<listitem>
<simpara>If you want to use PostgreSQL instead of MySQL, replace several blocks of the file, marked with comments from <literal>BEGIN</literal> to <literal>END</literal>, with blocks from the <literal>rhpam710-kieserver-postgresql.yaml</literal> file:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Replace the block named <literal>MySQL database parameters</literal> with the block named <literal>PostgreSQL database parameters</literal>. (Take this block and all subsequent replacement blocks from the <literal>rhpam710-kieserver-postgresql.yaml</literal> file.)</simpara>
</listitem>
<listitem>
<simpara>Replace the block named <literal>MySQL service</literal> with the block named <literal>PostgreSQL service</literal>.</simpara>
</listitem>
<listitem>
<simpara>Replace the block named <literal>MySQL driver settings</literal> with the block named <literal>PostgreSQL driver settings</literal>.</simpara>
</listitem>
<listitem>
<simpara>Replace the block named <literal>MySQL deployment config</literal> with the block named <literal>PostgreSQL deployment config</literal>.</simpara>
</listitem>
<listitem>
<simpara>Replace the block named <literal>MySQL persistent volume claim</literal> with the block named <literal>PostgreSQL persistent volume claim</literal>.</simpara>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>If you want to use an external database server, replace several blocks of the file, marked with comments from <literal>BEGIN</literal> to <literal>END</literal>, with blocks from the <literal>rhpam710-kieserver-externaldb.yaml</literal> file, and also remove some blocks:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Replace the block named <literal>MySQL database parameters</literal> with the block named <literal>External database parameters</literal>. (Take this block and all subsequent replacement blocks from the <literal>rhpam710-kieserver-externaldb.yaml</literal> file.)</simpara>
</listitem>
<listitem>
<simpara>Replace the block named <literal>MySQL driver settings</literal> with the block named <literal>External database driver settings</literal>.</simpara>
</listitem>
<listitem>
<simpara>Remove the following blocks of the file, marked with comments from <literal>BEGIN</literal> to <literal>END</literal>:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>MySQL service</literal></simpara>
</listitem>
<listitem>
<simpara><literal>MySQL deployment config</literal></simpara>
</listitem>
<listitem>
<simpara><literal>MySQL persistent volume claim</literal></simpara>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
</listitem>
</itemizedlist>
<important>
<simpara>The standard KIE Server image includes drivers for MySQL, MariaDB, and PostgreSQL external database servers. If you want to use another database server, you must build a custom KIE Server image. For instructions, see <xref linkend="externaldb-build-proc_openshift-templates"/>.</simpara>
</important>
<itemizedlist>
<listitem>
<simpara>If you want to change the number of replicas initially created for Business Central, on the line below the comment <literal>## Replicas for Business Central</literal>, change the number of replicas to the desired value.</simpara>
</listitem>
</itemizedlist>
</section>
</chapter>
<chapter xml:id="environment-immutable-con_openshift-templates">
<title>Environment with immutable servers</title>
<simpara>You can deploy an environment that includes one or more pods running <emphasis>immutable</emphasis> KIE Server with preloaded services.
The database servers are, by default, also run in pods.
Each KIE Server pod can be separately scaled as necessary.</simpara>
<simpara>On an immutable KIE Server, any services must be loaded onto the server at the time the image is created. You cannot deploy or undeploy services on a running immutable KIE Server. The advantage of this approach is that the KIE Server with the services in it runs like any other containerized service and does not require specialized management. The KIE Server runs like any other pod on the OpenShift environment; you can use any container-based integration workflows as necessary.</simpara>
<simpara>When you create a KIE Server image, you can build your services using S2I (Source to Image). Provide a Git repository with the source of your services and other business assets; if you develop the services or assets in Business Central, copy the source into a separate repository for the S2I build. OpenShift automatically builds the source, installs the services into the KIE Server image, and starts the containers with the services.</simpara>
<simpara>If you are using Business Central for authoring services, you can extract the source for your process and place it into a separate Git repository (such as GitHub or an on-premise installation of GitLab) for use in the S2I build.</simpara>
<simpara>Alternatively, you can create a similar KIE Server deployment using services that are already built as KJAR files. In this case, you must provide the services in a Maven repository. You can use the built-in repository of the Business Central or your own repository (for example, a Nexus deployment). When the server pod starts, it retrieves the KJAR services from the Maven repository. Services on the pod are never updated or changed. At every restart or scaling of the pod, the server retrieves the files from the repository, so you must ensure they do not change on the Maven repository to keep the deployment immutable.</simpara>
<simpara>With both methods of creating immutable images, no further management of the image is required. If you want to use a new version of a service, you can build a new image.</simpara>
<simpara>Optionally, you can add Business Central Monitoring and Smart Router to your environment. Use Business Central Monitoring to start, stop, and monitor services on KIE Servers.</simpara>
<section xml:id="monitoring-deploy-assy_openshift-templates">
<title>Deploying Business Central Monitoring and Smart Router for an environment with immutable servers</title>
<simpara>You can deploy Business Central Monitoring and Smart Router for an environment with immutable servers.</simpara>
<simpara>You can use Business Central Monitoring to start and stop (but not deploy) services on your KIE Servers and to view monitoring data. The Business Central Monitoring automatically discovers any KIE Servers in the same namespace, including immutable KIE Servers and managed KIE Servers. This feature requires the <literal>OpenShiftStartupStrategy</literal> setting, which is enabled by default for all KIE Servers except those deployed in a fixed managed infrastructure. For instructions about deploying managed KIE Servers with the <literal>OpenShiftStartupStrategy</literal> setting enabled, see <xref linkend="freeform-server-managed-deploy-assy_openshift-templates"/>.</simpara>
<simpara>Smart Router is a single endpoint that can receive calls from client applications to any of your services and route each call automatically to the server that runs the service.</simpara>
<simpara>If you want to use Business Central Monitoring, you must provide a Maven repository. Your integration process must ensure that all the versions of KJAR files built into any KIE Server image are also available in the Maven repository.</simpara>
<section xml:id="template-deploy-start-openshift-templates-monitoring-proc">
<title>Starting configuration of the template for monitoring and Smart Router</title>
<simpara>To deploy monitoring and Smart Router for an environment with immutable servers, use the <literal>rhpam710-immutable-monitor.yaml</literal> template file.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Download the <literal>rhpam-7.10.0-openshift-templates.zip</literal> product deliverable file from the <link xl:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?downloadType=distributions&amp;product=rhpam&amp;productChanged=yes">Software Downloads</link> page of the Red Hat Customer Portal.</simpara>
</listitem>
<listitem>
<simpara>Extract the <literal>rhpam710-immutable-monitor.yaml</literal> template file.</simpara>
</listitem>
<listitem>
<simpara>Use one of the following methods to start deploying the template:</simpara>
<itemizedlist>
<listitem>
<simpara>To use the OpenShift Web UI, in the OpenShift application console select <emphasis role="strong">Add to Project &#8594; Import YAML / JSON</emphasis> and then select or paste the <literal>rhpam710-immutable-monitor.yaml</literal> file. In the <emphasis role="strong">Add Template</emphasis> window, ensure <emphasis role="strong">Process the template</emphasis> is selected and click <emphasis role="strong">Continue</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>To use the OpenShift command line console, prepare the following command line:</simpara>
<screen>oc new-app -f &lt;template-path&gt;/rhpam710-immutable-monitor.yaml -p BUSINESS_CENTRAL_HTTPS_SECRET=businesscentral-app-secret -p PARAMETER=value</screen>
<simpara>In this command line, make the following changes:</simpara>
<itemizedlist>
<listitem>
<simpara>Replace <literal>&lt;template-path&gt;</literal> with the path to the downloaded template file.</simpara>
</listitem>
<listitem>
<simpara>Use as many <literal>-p PARAMETER=value</literal> pairs as needed to set the required parameters.</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
<formalpara>
<title>Next steps</title>
<para>Set the parameters for the template. Follow the steps in <xref linkend="template-deploy-mandatory-openshift-templates-monitoring-proc"/> to set common parameters. You can view the template file to see descriptions for all parameters.</para>
</formalpara>
</section>
<section xml:id="template-deploy-mandatory-openshift-templates-monitoring-proc">
<title>Setting required parameters for monitoring and Smart Router</title>
<simpara>When configuring the template to deploy monitoring and Smart Router for an environment with immutable servers, you must set the following parameters in all cases.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-monitoring-proc"/>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Set the following parameters:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Credentials secret</emphasis> (<literal>CREDENTIALS_SECRET</literal>): The name of the secret containing the administrative user credentials, as created in <xref linkend="secret-adminuser-create-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Business Central Monitoring Server Keystore Secret Name</emphasis> (<literal>BUSINESS_CENTRAL_HTTPS_SECRET</literal>): The name of the secret for Business Central, as created in <xref linkend="secrets-central-create-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Smart Router Keystore Secret Name</emphasis> (<literal>KIE_SERVER_ROUTER_HTTPS_SECRET</literal>): The name of the secret for Smart Router, as created in <xref linkend="secrets-smartrouter-create-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Business Central Monitoring Server Certificate Name</emphasis> (<literal>BUSINESS_CENTRAL_HTTPS_NAME</literal>): The name of the certificate in the keystore that you created in <xref linkend="secrets-central-create-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Business Central Monitoring Server Keystore Password</emphasis> (<literal>BUSINESS_CENTRAL_HTTPS_PASSWORD</literal>): The password for the keystore that you created in <xref linkend="secrets-central-create-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Smart Router Certificate Name</emphasis> (<literal>KIE_SERVER_ROUTER_HTTPS_NAME</literal>): The name of the certificate in the keystore that you created in <xref linkend="secrets-smartrouter-create-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Smart Router Keystore Password</emphasis> (<literal>KIE_SERVER_ROUTER_HTTPS_PASSWORD</literal>): The password for the keystore that you created in <xref linkend="secrets-smartrouter-create-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Application Name</emphasis> (<literal>APPLICATION_NAME</literal>): The name of the OpenShift application. It is used in the default URLs for Business Central Monitoring and KIE Server. OpenShift uses the application name to create a separate set of deployment configurations, services, routes, labels, and artifacts.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Enable KIE server global discovery</emphasis> (<literal>KIE_SERVER_CONTROLLER_OPENSHIFT_GLOBAL_DISCOVERY_ENABLED</literal>): Set this parameter to <literal>true</literal> if you want Business Central Monitoring to discover all KIE Servers with the <literal>OpenShiftStartupStrategy</literal> in the same namespace. By default, Business Central Monitoring discovers only KIE Servers that are deployed with the same value of the <literal>APPLICATION_NAME</literal> parameter as Business Central Monitoring itself.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Maven repository URL</emphasis> (<literal>MAVEN_REPO_URL</literal>): A URL for a Maven repository. You must upload all the processes (KJAR files) that are to be deployed
on any KIE Servers in your environment
into this repository.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Maven repository ID</emphasis> (<literal>MAVEN_REPO_ID</literal>): An identifier for the Maven repository. The default value is <literal>repo-custom</literal>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Maven repository username</emphasis> (<literal>MAVEN_REPO_USERNAME</literal>): The user name for the Maven repository.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Maven repository password</emphasis> (<literal>MAVEN_REPO_PASSWORD</literal>): The password for the Maven repository.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">ImageStream Namespace</emphasis> (<literal>IMAGE_STREAM_NAMESPACE</literal>): The namespace where the image streams are available. If the image streams were already available in your OpenShift environment (see <xref linkend="imagestreams-file-install-proc_openshift-templates"/>), the namespace is <literal>openshift</literal>. If you have installed the image streams file, the namespace is the name of the OpenShift project.</simpara>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-openshift-templates-monitoring-proc"/>.</simpara>
</section>
<section xml:id="template-deploy-namespace-openshift-templates-monitoring-proc">
<title>Configuring the image stream namespace for monitoring and Smart Router</title>
<simpara>If you created image streams in a namespace that is not <literal>openshift</literal>, you must configure the namespace in the template.</simpara>
<simpara>If all image streams were already available in your Red Hat OpenShift Container Platform environment, you can skip this procedure.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-monitoring-proc"/>.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Procedure</title>
<para>If you installed an image streams file according to instructions in <xref linkend="imagestreams-file-install-proc_openshift-templates"/>, set the <emphasis role="strong">ImageStream Namespace</emphasis> (<literal>IMAGE_STREAM_NAMESPACE</literal>) parameter to the name of your OpenShift project.</para>
</formalpara>
</section>
<section xml:id="template-deploy-rhsso-openshift-templates-monitoring-proc">
<title>Setting parameters for RH-SSO authentication for monitoring and Smart Router</title>
<simpara>If you want to use RH-SSO authentication, complete the following additional configuration when configuring the template to deploy monitoring and Smart Router for an environment with immutable servers.</simpara>
<important>
<simpara>Do not configure LDAP authentication and RH-SSO authentication in the same deployment.</simpara>
</important>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>A realm for Red Hat Process Automation Manager is created in the RH-SSO authentication system.</simpara>
</listitem>
<listitem>
<simpara>User names and passwords for Red Hat Process Automation Manager are created in the RH-SSO authentication system. For a list of the available roles, see <xref linkend="roles-users-con_openshift-templates"/>.</simpara>
<simpara>You must create a user with the username and password configured in the secret for the administrative user, as described in <xref linkend="secret-adminuser-create-proc_openshift-templates"/>. This user must have the <literal>kie-server,rest-all,admin</literal> roles.</simpara>
</listitem>
<listitem>
<simpara>Clients are created in the RH-SSO authentication system for all components of the Red Hat Process Automation Manager environment that you are deploying. The client setup contains the URLs for the components. You can review and edit the URLs after deploying the environment. Alternatively, the Red Hat Process Automation Manager deployment can create the clients. However, this option provides less detailed control over the environment.</simpara>
</listitem>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-monitoring-proc"/>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Set the following parameters:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">RH-SSO URL</emphasis> (<literal>SSO_URL</literal>): The URL for RH-SSO.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">RH-SSO Realm name</emphasis> (<literal>SSO_REALM</literal>): The RH-SSO realm for Red Hat Process Automation Manager.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">RH-SSO Disable SSL Certificate Validation</emphasis> (<literal>SSO_DISABLE_SSL_CERTIFICATE_VALIDATION</literal>): Set to <literal>true</literal> if your RH-SSO installation does not use a valid HTTPS certificate.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Complete one of the following procedures:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>If you created the client for Red Hat Process Automation Manager within RH-SSO,
set the following parameters in the template:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Business Central Monitoring RH-SSO Client name</emphasis> (<literal>BUSINESS_CENTRAL_SSO_CLIENT</literal>): The RH-SSO client name for Business Central Monitoring.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Business Central Monitoring RH-SSO Client Secret</emphasis> (<literal>BUSINESS_CENTRAL_SSO_SECRET</literal>): The secret string that is set in RH-SSO for the client for Business Central Monitoring.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>To create the clients for Red Hat Process Automation Manager within RH-SSO, set the following parameters in the template:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Business Central Monitoring RH-SSO Client name</emphasis> (<literal>BUSINESS_CENTRAL_SSO_CLIENT</literal>): The name of the client to create in RH-SSO for Business Central Monitoring.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Business Central Monitoring RH-SSO Client Secret</emphasis> (<literal>BUSINESS_CENTRAL_SSO_SECRET</literal>): The secret string to set in RH-SSO for the client for Business Central Monitoring.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">RH-SSO Realm Admin Username</emphasis> (<literal>SSO_USERNAME</literal>) and <emphasis role="strong">RH-SSO Realm Admin Password</emphasis> (<literal>SSO_PASSWORD</literal>): The user name and password for the realm administrator user for the RH-SSO realm for Red Hat Process Automation Manager. You must provide this user name and password in order to create the required clients.</simpara>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
</listitem>
</orderedlist>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-openshift-templates-monitoring-proc"/>.</simpara>
<simpara>After completing the deployment, review the URLs for components of Red Hat Process Automation Manager in the RH-SSO authentication system to ensure they are correct.</simpara>
</section>
<section xml:id="template-deploy-ldap-openshift-templates-monitoring-proc">
<title>Setting parameters for LDAP authentication for monitoring and Smart Router</title>
<simpara>If you want to use LDAP authentication, complete the following additional configuration when configuring the template to deploy monitoring and Smart Router for an environment with immutable servers.</simpara>
<important>
<simpara>Do not configure LDAP authentication and RH-SSO authentication in the same deployment.</simpara>
</important>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You created user names and passwords for Red Hat Process Automation Manager in the LDAP system. For a list of the available roles, see <xref linkend="roles-users-con_openshift-templates"/>.</simpara>
<simpara>You must create a user with the username and password configured in the secret for the administrative user, as described in <xref linkend="secret-adminuser-create-proc_openshift-templates"/>. This user must have the <literal>kie-server,rest-all,admin</literal> roles.</simpara>
</listitem>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-monitoring-proc"/>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Set the <literal>AUTH_LDAP*</literal> parameters of the template. These parameters correspond to the settings of the <literal>LdapExtended</literal> Login module of Red Hat JBoss EAP. For instructions about using these settings, see <link xl:href="https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.0/html-single/login_module_reference/#ldapextended_login_module">LdapExtended login module</link>.</simpara>
<note>
<simpara>If you want to enable LDAP failover, you can put set or more LDAP server addresses in the <literal>AUTH_LDAP_URL</literal> parameter, separated by a space.</simpara>
</note>
<simpara>If the LDAP server does not define all the roles required for your deployment, you can map LDAP groups to Red Hat Process Automation Manager roles. To enable LDAP role mapping, set the following parameters:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">RoleMapping rolesProperties file path</emphasis> (<literal>AUTH_ROLE_MAPPER_ROLES_PROPERTIES</literal>): The fully qualified path name of a file that defines role mapping, for example, <literal>/opt/eap/standalone/configuration/rolemapping/rolemapping.properties</literal>. You must provide this file and mount it at this path in all applicable deployment configurations; for instructions, see <xref linkend="rolemapping-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">RoleMapping replaceRole property</emphasis> (<literal>AUTH_ROLE_MAPPER_REPLACE_ROLE</literal>): If set to <literal>true</literal>, mapped roles replace the roles defined on the LDAP server; if set to <literal>false</literal>, both mapped roles and roles defined on the LDAP server are set as user application roles. The default setting is <literal>false</literal>.</simpara>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-openshift-templates-monitoring-proc"/>.</simpara>
</section>
<section xml:id="template-deploy-complete-openshift-templates-monitoring-proc">
<title>Completing deployment of the template for monitoring and Smart Router</title>
<simpara>After setting all the required parameters in the OpenShift Web UI or in the command line, complete deployment of the template.</simpara>
<formalpara>
<title>Procedure</title>
<para>Depending on the method that you are using, complete the following steps:</para>
</formalpara>
<itemizedlist>
<listitem>
<simpara>In the OpenShift Web UI, click <emphasis role="strong">Create</emphasis>.</simpara>
<itemizedlist>
<listitem>
<simpara>If the <literal>This will create resources that may have security or project behavior implications</literal> message appears, click <emphasis role="strong">Create Anyway</emphasis>.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Complete the command line and press Enter.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Next steps</title>
<para>Depending on your needs for the environment, optionally complete procedures described in <xref linkend="post-optional-con_openshift-templates"/>.</para>
</formalpara>
</section>
</section>
<section xml:id="server-immutable-s2i-deploy-assy_openshift-templates">
<title>Deploying an immutable KIE Server using an S2I build</title>
<simpara>You can deploy an immutable KIE Server using an S2I build. When you deploy the server, the deployment procedure retrieves the source code for any services that must run on this server, builds the services, and includes them in the server image.</simpara>
<simpara>You cannot deploy or undeploy services on a running immutable KIE Server. You can use Business Central or Business Central Monitoring to view monitoring information. The KIE Server runs like any other pod on the OpenShift environment; you can use any container-based integration workflows as necessary.</simpara>
<simpara>You can enable JMS capabilities of the immutable KIE Server. With JMS capabilities you can interact with the server through JMS API using an external AMQ message broker.</simpara>
<simpara>By default, this server uses a PostgreSQL database server in a pod. To use a MySQL database server in a pod or an external database server, you can modify the template. For instructions about modifying the template, see <xref linkend="environment-immutable-modify-proc_openshift-templates"/>.</simpara>
<simpara>If a Business Central or Business Central Monitoring is deployed in the same namespace, it discovers the immutable KIE Server automatically. You can use Business Central or Business Central Monitoring to start and stop (but not deploy) services on the immutable
KIE Server and to view monitoring data.</simpara>
<section xml:id="template-deploy-start-openshift-templates-server-immutable-s2i-proc">
<title>Starting configuration of the template for an immutable KIE Server using S2I</title>
<simpara>To deploy an immutable KIE Server using an S2I build, use the <literal>rhpam710-prod-immutable-kieserver-amq.yaml</literal> template file if you want to enable JMS capabilities. Otherwise, use the <literal>rhpam710-prod-immutable-kieserver.yaml</literal> template file.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Download the <literal>rhpam-7.10.0-openshift-templates.zip</literal> product deliverable file from the <link xl:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?downloadType=distributions&amp;product=rhpam&amp;productChanged=yes">Software Downloads</link> page of the Red Hat Customer Portal.</simpara>
</listitem>
<listitem>
<simpara>Extract the required template file.</simpara>
</listitem>
<listitem>
<simpara>By default, the template includes two KIE Servers. Each of the serves uses a PostgreSQL database server in a pod. To change the number of KIE Servers or to use a MySQL database server in a pod or an external database server, modify the template as described in <xref linkend="environment-immutable-modify-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara>Use one of the following methods to start deploying the template:</simpara>
<itemizedlist>
<listitem>
<simpara>To use the OpenShift Web UI, in the OpenShift application console select <emphasis role="strong">Add to Project &#8594; Import YAML / JSON</emphasis> and then select or paste the <literal>&lt;template-file-name&gt;.yaml</literal> file. In the <emphasis role="strong">Add Template</emphasis> window, ensure <emphasis role="strong">Process the template</emphasis> is selected and click <emphasis role="strong">Continue</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>To use the OpenShift command line console, prepare the following command line:</simpara>
<screen>oc new-app -f &lt;template-path&gt;/&lt;template-file-name&gt;.yaml -p KIE_SERVER_HTTPS_SECRET=kieserver-app-secret -p PARAMETER=value</screen>
<simpara>In this command line, make the following changes:</simpara>
<itemizedlist>
<listitem>
<simpara>Replace <literal>&lt;template-path&gt;</literal> with the path to the downloaded template file.</simpara>
</listitem>
<listitem>
<simpara>Replace <literal>&lt;template-file-name&gt;</literal> with the name of the template file.</simpara>
</listitem>
<listitem>
<simpara>Use as many <literal>-p PARAMETER=value</literal> pairs as needed to set the required parameters.</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
<formalpara>
<title>Next steps</title>
<para>Set the parameters for the template. Follow the steps in <xref linkend="template-deploy-mandatory-openshift-templates-server-immutable-s2i-proc"/> to set common parameters. You can view the template file to see descriptions for all parameters.</para>
</formalpara>
</section>
<section xml:id="template-deploy-mandatory-openshift-templates-server-immutable-s2i-proc">
<title>Setting required parameters for an immutable KIE Server using S2I</title>
<simpara>When configuring the template to deploy an immutable KIE Server using an S2I build, you must set the following parameters in all cases.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-server-immutable-s2i-proc"/>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Set the following parameters:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Credentials secret</emphasis> (<literal>CREDENTIALS_SECRET</literal>): The name of the secret containing the administrative user credentials, as created in <xref linkend="secret-adminuser-create-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server Keystore Secret Name</emphasis> (<literal>KIE_SERVER_HTTPS_SECRET</literal>): The name of the secret for KIE Server, as created in <xref linkend="secrets-kie-create-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server Certificate Name</emphasis> (<literal>KIE_SERVER_HTTPS_NAME</literal>): The name of the certificate in the keystore that you created in <xref linkend="secrets-kie-create-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server Keystore Password</emphasis> (<literal>KIE_SERVER_HTTPS_PASSWORD</literal>): The password for the keystore that you created in <xref linkend="secrets-kie-create-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Application Name</emphasis> (<literal>APPLICATION_NAME</literal>): The name of the OpenShift application. It is used in the default URLs for Business Central Monitoring and KIE Server. OpenShift uses the application name to create a separate set of deployment configurations, services, routes, labels, and artifacts.
You can deploy several applications using the same template into the same project, as long as you use different application names. Also, the application name determines the name of the server configuration (server template) that the KIE Server joins on Business Central or Business Central Monitoring. If you are deploying several KIE Servers, you must ensure each of the servers has a different application name.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server Container Deployment</emphasis> (<literal>KIE_SERVER_CONTAINER_DEPLOYMENT</literal>): The identifying information of the decision service (KJAR file) that the deployment must pull from the local or external repository after building your source. The format is <literal>&lt;containerId&gt;=&lt;groupId&gt;:&lt;artifactId&gt;:&lt;version&gt;</literal> or, if you want to specify an alias name for the container, <literal>&lt;containerId&gt;(&lt;aliasId&gt;)=&lt;groupId&gt;:&lt;artifactId&gt;:&lt;version&gt;</literal>. You can provide two or more KJAR files using the <literal>|</literal> separator, as illustrated in the following example:</simpara>
<screen>containerId=groupId:artifactId:version|c2(alias2)=g2:a2:v2</screen>
<simpara>To avoid duplicate container IDs, the artifact ID must be unique for each artifact built or used in your project.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Git Repository URL</emphasis> (<literal>SOURCE_REPOSITORY_URL</literal>): The URL for the Git repository that contains the source for your services.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Git Reference</emphasis> (<literal>SOURCE_REPOSITORY_REF</literal>): The branch in the Git repository.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Context Directory</emphasis> (<literal>CONTEXT_DIR</literal>): The path to the source within the project downloaded from the Git repository.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Artifact Directory</emphasis> (<literal>ARTIFACT_DIR</literal>): The path within the project that contains the required binary files (KJAR files and any other necessary files) after a successful Maven build. Normally this directory is the target directory of the build. However, you can provide prebuilt binaries in this directory in the Git repository.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">ImageStream Namespace</emphasis> (<literal>IMAGE_STREAM_NAMESPACE</literal>): The namespace where the image streams are available. If the image streams were already available in your OpenShift environment (see <xref linkend="imagestreams-file-install-proc_openshift-templates"/>), the namespace is <literal>openshift</literal>. If you have installed the image streams file, the namespace is the name of the OpenShift project.</simpara>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-openshift-templates-server-immutable-s2i-proc"/>.</simpara>
</section>
<section xml:id="template-deploy-namespace-openshift-templates-server-immutable-s2i-proc">
<title>Configuring the image stream namespace for an immutable KIE Server using S2I</title>
<simpara>If you created image streams in a namespace that is not <literal>openshift</literal>, you must configure the namespace in the template.</simpara>
<simpara>If all image streams were already available in your Red Hat OpenShift Container Platform environment, you can skip this procedure.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-server-immutable-s2i-proc"/>.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Procedure</title>
<para>If you installed an image streams file according to instructions in <xref linkend="imagestreams-file-install-proc_openshift-templates"/>, set the <emphasis role="strong">ImageStream Namespace</emphasis> (<literal>IMAGE_STREAM_NAMESPACE</literal>) parameter to the name of your OpenShift project.</para>
</formalpara>
</section>
<section xml:id="template-deploy-connectcentral-openshift-templates-server-immutable-s2i-proc">
<title>Configuring information about a Business Central or Business Central Monitoring instance for an immutable KIE Server using S2I</title>
<simpara>If you want to enable a connection from a Business Central or Business Central Monitoring instance in the same namespace to the KIE Server,
you must configure information about the Business Central or Business Central Monitoring instance.</simpara>
<simpara>The Business Central or Business Central Monitoring instance must be configured with the same credentials secret (<literal>CREDENTIALS_SECRET</literal>) as the KIE Server.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-server-immutable-s2i-proc"/>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Set the following parameters:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Name of the Business Central service</emphasis> (<literal>BUSINESS_CENTRAL_SERVICE</literal>): The OpenShift service name for the Business Central or Business Central Monitoring.</simpara>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-openshift-templates-server-immutable-s2i-proc"/>.</simpara>
</section>
<section xml:id="template-deploy-optionalmaven-openshift-templates-server-immutable-s2i-proc">
<title>Setting an optional Maven repository for an immutable KIE Server using S2I</title>
<simpara>When configuring the template to deploy an immutable KIE Server using an S2I build,
if your source build includes dependencies that are not available on the public Maven tree and require a separate custom Maven repository,
you must set parameters to access the repository.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-server-immutable-s2i-proc"/>.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Procedure</title>
<para>To configure access to a custom Maven repository, set the following parameters:</para>
</formalpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Maven repository URL</emphasis> (<literal>MAVEN_REPO_URL</literal>): The URL for the Maven repository.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Maven repository ID</emphasis> (<literal>MAVEN_REPO_ID</literal>): An identifier for the Maven repository. The default value is <literal>repo-custom</literal>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Maven repository username</emphasis> (<literal>MAVEN_REPO_USERNAME</literal>): The user name for the Maven repository.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Maven repository password</emphasis> (<literal>MAVEN_REPO_PASSWORD</literal>): The password for the Maven repository.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-openshift-templates-server-immutable-s2i-proc"/>.</simpara>
</section>
<section xml:id="template-deploy-nopubnet-openshift-templates-server-immutable-s2i-proc">
<title>Configuring access to a Maven mirror in an environment without a connection to the public Internet for an immutable KIE Server using S2I</title>
<simpara>When configuring the template to deploy an immutable KIE Server using an S2I build, if your OpenShift environment does not have a connection to the public Internet, you must configure access to a Maven mirror that you set up according to <xref linkend="offline-repo-proc_openshift-templates"/>.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-server-immutable-s2i-proc"/>.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Procedure</title>
<para>To configure access to the Maven mirror, set the following parameters:</para>
</formalpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Maven mirror URL</emphasis> (<literal>MAVEN_MIRROR_URL</literal>): The URL for the Maven mirror repository that you set up in <xref linkend="offline-repo-proc_openshift-templates"/>. This URL must be accessible from a pod in your OpenShift environment.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Maven mirror of</emphasis> (<literal>MAVEN_MIRROR_OF</literal>): The value that determines which artifacts are to be retrieved from the mirror. For instructions about setting the <literal>mirrorOf</literal> value, see <link xl:href="https://maven.apache.org/guides/mini/guide-mirror-settings.html">Mirror Settings</link> in the Apache Maven documentation.
The default value is <literal>external:*</literal>. With this value, Maven retrieves every required artifact from the mirror and does not query any other repositories.</simpara>
<itemizedlist>
<listitem>
<simpara>If you configure an external Maven repository (<literal>MAVEN_REPO_URL</literal>), change <literal>MAVEN_MIRROR_OF</literal> to exclude the artifacts in this repository from the mirror, for example, <literal>external:*,!repo-custom</literal>. Replace <literal>repo-custom</literal> with the ID that you configured in <literal>MAVEN_REPO_ID</literal>.</simpara>
</listitem>
<listitem>
<simpara>If you configure a built-in Business Central Maven repository (<literal>BUSINESS_CENTRAL_MAVEN_SERVICE</literal>), change <literal>MAVEN_MIRROR_OF</literal> to exclude the artifacts in this repository from the mirror: <literal>external:*,!repo-rhpamcentr</literal>.</simpara>
</listitem>
<listitem>
<simpara>If you configure both repositories, change <literal>MAVEN_MIRROR_OF</literal> to exclude the artifacts in both repositories from the mirror: <literal>external:*,!repo-rhpamcentr,!repo-custom</literal>. Replace <literal>repo-custom</literal> with the ID that you configured in <literal>MAVEN_REPO_ID</literal>.</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-openshift-templates-server-immutable-s2i-proc"/>.</simpara>
</section>
<section xml:id="template-deploy-amq-openshift-templates-server-immutable-s2i-proc">
<title>Configuring communication with an AMQ server for an immutable KIE Server using S2I</title>
<simpara>If you use the <literal>rhpam710-prod-immutable-kieserver-amq.yaml</literal> template file, JMS capabilities of the KIE Server are enabled. You can interact with the server through JMS API, using an external AMQ message broker.</simpara>
<simpara>If necessary for your environment, you can modify the JMS configuration.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-server-immutable-s2i-proc"/>, using the <literal>rhpam710-prod-immutable-kieserver-amq.yaml</literal> template file.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Procedure</title>
<para>Set any of the following parameters as required for your environment:</para>
</formalpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">AMQ Username</emphasis> (<literal>AMQ_USERNAME</literal>) and <emphasis role="strong">AMQ Password</emphasis> (<literal>AMQ_PASSWORD</literal>): The user name and password of a standard broker user, if user authentication in the broker is required in your environment.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">AMQ Role</emphasis> (<literal>AMQ_ROLE</literal>): The user role for the standard broker user. The default role is <literal>admin</literal>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">AMQ Queues</emphasis> (<literal>AMQ_QUEUES</literal>): AMQ queue names, separated by commas. These queues are automatically created when the broker starts and are accessible as JNDI resources in the JBoss EAP server. If you use custom queue names, you must also set the same queue names in the <literal>KIE_SERVER_JMS_QUEUE_RESPONSE</literal>, <literal>KIE_SERVER_JMS_QUEUE_REQUEST</literal>, <literal>KIE_SERVER_JMS_QUEUE_SIGNAL</literal>, <literal>KIE_SERVER_JMS_QUEUE_AUDIT</literal>, and <literal>KIE_SERVER_JMS_QUEUE_EXECUTOR</literal> parameters.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">AMQ Global Max Size</emphasis> (<literal>AMQ_GLOBAL_MAX_SIZE</literal>): The maximum amount of memory that message data can consume. If no value is specified, half of the memory available in the pod is allocated.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">AMQ Protocols</emphasis> (<literal>AMQ_PROTOCOL</literal>): Broker protocols that the KIE Server can use to communicate with the AMQ server, separated by commas. Allowed values are <literal>openwire</literal>, <literal>amqp</literal>, <literal>stomp</literal>, and <literal>mqtt</literal>. Only <literal>openwire</literal> is supported by JBoss EAP. The default value is <literal>openwire</literal>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">AMQ Broker Image</emphasis> (<literal>AMQ_BROKER_IMAGESTREAM_NAME</literal>): The image stream name for the AMQ broker image.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-openshift-templates-server-immutable-s2i-proc"/>.</simpara>
</section>
<section xml:id="template-deploy-rhsso-openshift-templates-server-immutable-s2i-proc">
<title>Setting parameters for RH-SSO authentication for an immutable KIE Server using S2I</title>
<simpara>If you want to use RH-SSO authentication, complete the following additional configuration when configuring the template to deploy an immutable KIE Server using an S2I build.</simpara>
<important>
<simpara>Do not configure LDAP authentication and RH-SSO authentication in the same deployment.</simpara>
</important>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>A realm for Red Hat Process Automation Manager is created in the RH-SSO authentication system.</simpara>
</listitem>
<listitem>
<simpara>User names and passwords for Red Hat Process Automation Manager are created in the RH-SSO authentication system. For a list of the available roles, see <xref linkend="roles-users-con_openshift-templates"/>.</simpara>
<simpara>You must create a user with the username and password configured in the secret for the administrative user, as described in <xref linkend="secret-adminuser-create-proc_openshift-templates"/>. This user must have the <literal>kie-server,rest-all,admin</literal> roles.</simpara>
</listitem>
<listitem>
<simpara>Clients are created in the RH-SSO authentication system for all components of the Red Hat Process Automation Manager environment that you are deploying. The client setup contains the URLs for the components. You can review and edit the URLs after deploying the environment. Alternatively, the Red Hat Process Automation Manager deployment can create the clients. However, this option provides less detailed control over the environment.</simpara>
</listitem>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-server-immutable-s2i-proc"/>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Set the following parameters:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">RH-SSO URL</emphasis> (<literal>SSO_URL</literal>): The URL for RH-SSO.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">RH-SSO Realm name</emphasis> (<literal>SSO_REALM</literal>): The RH-SSO realm for Red Hat Process Automation Manager.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">RH-SSO Disable SSL Certificate Validation</emphasis> (<literal>SSO_DISABLE_SSL_CERTIFICATE_VALIDATION</literal>): Set to <literal>true</literal> if your RH-SSO installation does not use a valid HTTPS certificate.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Complete one of the following procedures:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>If you created the client for Red Hat Process Automation Manager within RH-SSO,
set the following parameters in the template:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Business Central or Business Central Monitoring RH-SSO Client name</emphasis> (<literal>BUSINESS_CENTRAL_SSO_CLIENT</literal>): The RH-SSO client name for Business Central or Business Central Monitoring.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server RH-SSO Client name</emphasis> (<literal>KIE_SERVER_SSO_CLIENT</literal>): The RH-SSO client name for KIE Server.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server RH-SSO Client Secret</emphasis> (<literal>KIE_SERVER_SSO_SECRET</literal>): The secret string that is set in RH-SSO for the client for KIE Server.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>To create the clients for Red Hat Process Automation Manager within RH-SSO, set the following parameters in the template:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">KIE Server RH-SSO Client name</emphasis> (<literal>KIE_SERVER_SSO_CLIENT</literal>): The name of the client to create in RH-SSO for KIE Server.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server RH-SSO Client Secret</emphasis> (<literal>KIE_SERVER_SSO_SECRET</literal>): The secret string to set in RH-SSO for the client for KIE Server.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">RH-SSO Realm Admin Username</emphasis> (<literal>SSO_USERNAME</literal>) and <emphasis role="strong">RH-SSO Realm Admin Password</emphasis> (<literal>SSO_PASSWORD</literal>): The user name and password for the realm administrator user for the RH-SSO realm for Red Hat Process Automation Manager. You must provide this user name and password in order to create the required clients.</simpara>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
</listitem>
</orderedlist>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-openshift-templates-server-immutable-s2i-proc"/>.</simpara>
<simpara>After completing the deployment, review the URLs for components of Red Hat Process Automation Manager in the RH-SSO authentication system to ensure they are correct.</simpara>
</section>
<section xml:id="template-deploy-ldap-openshift-templates-server-immutable-s2i-proc">
<title>Setting parameters for LDAP authentication for an immutable KIE Server using S2I</title>
<simpara>If you want to use LDAP authentication, complete the following additional configuration when configuring the template to deploy an immutable KIE Server using an S2I build.</simpara>
<important>
<simpara>Do not configure LDAP authentication and RH-SSO authentication in the same deployment.</simpara>
</important>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You created user names and passwords for Red Hat Process Automation Manager in the LDAP system. For a list of the available roles, see <xref linkend="roles-users-con_openshift-templates"/>.</simpara>
<simpara>You must create a user with the username and password configured in the secret for the administrative user, as described in <xref linkend="secret-adminuser-create-proc_openshift-templates"/>. This user must have the <literal>kie-server,rest-all,admin</literal> roles.</simpara>
</listitem>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-server-immutable-s2i-proc"/>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Set the <literal>AUTH_LDAP*</literal> parameters of the template. These parameters correspond to the settings of the <literal>LdapExtended</literal> Login module of Red Hat JBoss EAP. For instructions about using these settings, see <link xl:href="https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.0/html-single/login_module_reference/#ldapextended_login_module">LdapExtended login module</link>.</simpara>
<note>
<simpara>If you want to enable LDAP failover, you can put set or more LDAP server addresses in the <literal>AUTH_LDAP_URL</literal> parameter, separated by a space.</simpara>
</note>
<simpara>If the LDAP server does not define all the roles required for your deployment, you can map LDAP groups to Red Hat Process Automation Manager roles. To enable LDAP role mapping, set the following parameters:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">RoleMapping rolesProperties file path</emphasis> (<literal>AUTH_ROLE_MAPPER_ROLES_PROPERTIES</literal>): The fully qualified path name of a file that defines role mapping, for example, <literal>/opt/eap/standalone/configuration/rolemapping/rolemapping.properties</literal>. You must provide this file and mount it at this path in all applicable deployment configurations; for instructions, see <xref linkend="rolemapping-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">RoleMapping replaceRole property</emphasis> (<literal>AUTH_ROLE_MAPPER_REPLACE_ROLE</literal>): If set to <literal>true</literal>, mapped roles replace the roles defined on the LDAP server; if set to <literal>false</literal>, both mapped roles and roles defined on the LDAP server are set as user application roles. The default setting is <literal>false</literal>.</simpara>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-openshift-templates-server-immutable-s2i-proc"/>.</simpara>
</section>
<section xml:id="template-deploy-externaldb-openshift-templates-server-immutable-s2i-proc">
<title>Setting parameters for using an external database server for an immutable KIE Server using S2I</title>
<simpara>If you modified the template to use an external database server for the KIE Server, as described in <xref linkend="environment-immutable-modify-proc_openshift-templates"/>,
complete the following additional configuration when configuring the template to deploy an immutable KIE Server using an S2I build.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-server-immutable-s2i-proc"/>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Set the following parameters:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">KIE Server External Database Driver</emphasis> (<literal>KIE_SERVER_EXTERNALDB_DRIVER</literal>): The driver for the server, depending on the server type:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>mysql</literal></simpara>
</listitem>
<listitem>
<simpara><literal>postgresql</literal></simpara>
</listitem>
<listitem>
<simpara><literal>mariadb</literal></simpara>
</listitem>
<listitem>
<simpara><literal>mssql</literal></simpara>
</listitem>
<listitem>
<simpara><literal>db2</literal></simpara>
</listitem>
<listitem>
<simpara><literal>oracle</literal></simpara>
</listitem>
<listitem>
<simpara><literal>sybase</literal></simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server External Database User</emphasis> (<literal>KIE_SERVER_EXTERNALDB_USER</literal>) and KIE Server External Database Password (<literal>KIE_SERVER_EXTERNALDB_PWD</literal>): The user name and password for the external database server</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server External Database URL</emphasis> (<literal>KIE_SERVER_EXTERNALDB_URL</literal>): The JDBC URL for the external database server</simpara>
<note>
<simpara>If you are using the EntrepriseDB Postgres database server, use an URL starting with <literal>jdbc:postgresql://</literal> and not with <literal>jdbc:edb://</literal>. Alternatively, do not set the URL and set the host and port parameters instead.</simpara>
</note>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server External Database Host</emphasis> (<literal>KIE_SERVER_EXTERNALDB_SERVICE_HOST</literal>) and  <emphasis role="strong">KIE Server External Database Port</emphasis> (<literal>KIE_SERVER_EXTERNALDB_SERVICE_PORT</literal>): The host name and port number of the external database server. You can set these parameters as an alternative to setting the <literal>KIE_SERVER_EXTERNALDB_URL</literal> parameter.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server External Database Dialect</emphasis> (<literal>KIE_SERVER_EXTERNALDB_DIALECT</literal>): The Hibernate dialect for the server, depending on the server type. The common settings are:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>org.hibernate.dialect.MySQL5InnoDBDialect</literal></simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.MySQL8Dialect</literal></simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.MariaDB102Dialect</literal></simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.PostgreSQL95Dialect</literal></simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.PostgresPlusDialect</literal> (used for EntrepriseDB Postgres Advanced Server)</simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.SQLServer2012Dialect</literal> (used for MS SQL)</simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.DB2Dialect</literal></simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.Oracle10gDialect</literal></simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.SybaseASE15Dialect</literal></simpara>
<simpara>For a complete list of supported dialects, see the <emphasis>Hibernate SQL Dialects</emphasis> table in <link xl:href="https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.3/html-single/developing_hibernate_applications/index#hibernate_properties">Hibernate properties</link> in the Red Hat JBoss EAP documentation.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server External Database name</emphasis> (<literal>KIE_SERVER_EXTERNALDB_DB</literal>): The database name to use on the external database server</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">JDBC Connection Checker class</emphasis> (<literal>KIE_SERVER_EXTERNALDB_CONNECTION_CHECKER</literal>): The name of the JDBC connection checker class for the database server. Without this information, a database server connection cannot be restored after it is lost, for example, if the database server is rebooted.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">JDBC Exception Sorter class</emphasis> (<literal>KIE_SERVER_EXTERNALDB_EXCEPTION_SORTER</literal>): The name of the JDBC exception sorter class for the database server. Without this information, a database server connection cannot be restored after it is lost, for example, if the database server is rebooted.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>If you created a custom image for using an external database server, as described in <xref linkend="externaldb-build-proc_openshift-templates"/>, set the following parameters:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Drivers Extension Image</emphasis> (<literal>EXTENSIONS_IMAGE</literal>): The ImageStreamTag definition of the extension image, for example, <literal>jboss-kie-db2-extension-openshift-image:11.1.4.4</literal></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Drivers ImageStream Namespace</emphasis> (<literal>EXTENSIONS_IMAGE_NAMESPACE</literal>): The namespace to which you uploaded the extension image, for example, <literal>openshift</literal> or your project namespace.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>If you are using a MySQL version 8 external database server, enable the <literal>mysql_native_password</literal> plugin and use it for authentication. For instructions about this pluding, see <link xl:href="https://dev.mysql.com/doc/refman/8.0/en/native-pluggable-authentication.html">Native Pluggable Authentication</link> in the <emphasis>MySQL 8.0 Reference Manual</emphasis>.</simpara>
<simpara>If you are using a MySQL version 8 image provided by Red Hat on Red Hat OpenShift Container Platform, to enable the plugin, set the <literal>MYSQL_DEFAULT_AUTHENTICATION_PLUGIN</literal> environment variable to <literal>mysql_native_password</literal>.</simpara>
<simpara>If you created users on the MySQL version 8 server before enabling the <literal>mysql_native_password</literal> plugin, you must update the <literal>mysql-user</literal> table after you enable the plugin.</simpara>
</listitem>
</orderedlist>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-openshift-templates-server-immutable-s2i-proc"/>.</simpara>
</section>
<section xml:id="template-deploy-prometheus-openshift-templates-server-immutable-s2i-proc">
<title>Enabling Prometheus metric collection for an immutable KIE Server using S2I</title>
<simpara>If you want to configure your KIE Server deployment to use Prometheus to collect and store metrics, enable support for this feature in KIE Server at deployment time.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-server-immutable-s2i-proc"/>.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Procedure</title>
<para>To enable support for Prometheus metric collection, set the <emphasis role="strong">Prometheus Server Extension Disabled</emphasis> (<literal>PROMETHEUS_SERVER_EXT_DISABLED</literal>) parameter to <literal>false</literal>.</para>
</formalpara>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-openshift-templates-server-immutable-s2i-proc"/>.</simpara>
<simpara>For instructions about configuring Prometheus metrics collection, see <link xl:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/managing_red_hat_process_automation_manager_and_kie_server_settings#prometheus-monitoring-ocp-proc_execution-server"><emphasis>Managing and monitoring KIE Server</emphasis></link>.</simpara>
</section>
<section xml:id="template-deploy-complete-openshift-templates-server-immutable-s2i-proc">
<title>Completing deployment of the template for an immutable KIE Server using S2I</title>
<simpara>After setting all the required parameters in the OpenShift Web UI or in the command line, complete deployment of the template.</simpara>
<formalpara>
<title>Procedure</title>
<para>Depending on the method that you are using, complete the following steps:</para>
</formalpara>
<itemizedlist>
<listitem>
<simpara>In the OpenShift Web UI, click <emphasis role="strong">Create</emphasis>.</simpara>
<itemizedlist>
<listitem>
<simpara>If the <literal>This will create resources that may have security or project behavior implications</literal> message appears, click <emphasis role="strong">Create Anyway</emphasis>.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Complete the command line and press Enter.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Next steps</title>
<para>Depending on your needs for the environment, optionally complete procedures described in <xref linkend="post-optional-con_openshift-templates"/>.</para>
</formalpara>
</section>
</section>
<section xml:id="environment-immutable-modify-proc_openshift-templates">
<title>Modifying the template for deploying an immutable KIE Server using S2I</title>
<simpara>By default, the template for deploying an immutable server using S2I creates a separate PostgreSQL pod to provide the database server for each replicable KIE Server. If you prefer to use MySQL or an external server (outside the OpenShift project), modify the <literal>rhpam710-prod-immutable-kieserver.yaml</literal> or <literal>rhpam710-prod-immutable-kieserver-amq.yaml</literal> template file before deploying the server.</simpara>
<simpara>An OpenShift template defines a set of objects that can be created by OpenShift. To change an environment configuration, you need to modify, add, or delete these objects. To simplify this task, comments are provided in the Red Hat Process Automation Manager templates.</simpara>
<simpara>Some comments mark blocks within the template, staring with <literal>BEGIN</literal> and ending with <literal>END</literal>. For example, the following block is named <literal>Sample block</literal>:</simpara>
<screen>## Sample block BEGIN
sample line 1
sample line 2
sample line 3
## Sample block END</screen>
<simpara>For some changes, you might need to replace a block in one template file with a block from another template file provided with Red Hat Process Automation Manager. In this case, delete the block, then paste the new block in its exact location.</simpara>
<itemizedlist>
<title>Procedure</title>
<listitem>
<simpara>If you want to use MySQL instead of PostgreSQL, replace several blocks of the file, marked with comments from <literal>BEGIN</literal> to <literal>END</literal>, with blocks from the <literal>rhpam710-kieserver-mysql.yaml</literal> file:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Replace the block named <literal>PostgreSQL database parameters</literal> with the block named <literal>MySQL database parameters</literal>. (Take this block and all subsequent replacement blocks from the <literal>rhpam710-kieserver-postgresql.yaml</literal> file.)</simpara>
</listitem>
<listitem>
<simpara>Replace the block named <literal>PostgreSQL service</literal> with the block named <literal>MySQL service</literal>.</simpara>
</listitem>
<listitem>
<simpara>Replace the block named <literal>PostgreSQL driver settings</literal> with the block named <literal>MySQL driver settings</literal>.</simpara>
</listitem>
<listitem>
<simpara>Replace the block named <literal>PostgreSQL deployment config</literal> with the block named <literal>MySQL deployment config</literal>.</simpara>
</listitem>
<listitem>
<simpara>Replace the block named <literal>PostgreSQL persistent volume claim</literal> with the block named <literal>MySQL persistent volume claim</literal>.</simpara>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>If you want to use an external database server, replace several blocks of the file, marked with comments from <literal>BEGIN</literal> to <literal>END</literal>, with blocks from the <literal>rhpam710-kieserver-externaldb.yaml</literal> file, and also remove some blocks:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Replace the block named <literal>PostgreSQL database parameters</literal> with the block named <literal>External database parameters</literal>. (Take this block and all subsequent replacement blocks from the <literal>rhpam710-kieserver-externaldb.yaml</literal> file.)</simpara>
</listitem>
<listitem>
<simpara>Replace the block named <literal>PostgreSQL driver settings</literal> with the block named <literal>External database driver settings</literal>.</simpara>
</listitem>
<listitem>
<simpara>Remove the following blocks of the file, marked with comments from <literal>BEGIN</literal> to <literal>END</literal>:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>PostgreSQL service</literal></simpara>
</listitem>
<listitem>
<simpara><literal>PostgreSQL deployment config</literal></simpara>
</listitem>
<listitem>
<simpara><literal>PostgreSQL persistent volume claim</literal></simpara>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
</listitem>
</itemizedlist>
<important>
<simpara>The standard KIE Server image includes drivers for MySQL, MariaDB, and PostgreSQL external database servers. If you want to use another database server, you must build a custom KIE Server image. For instructions, see <xref linkend="externaldb-build-proc_openshift-templates"/>.</simpara>
</important>
</section>
<section xml:id="server-immutable-kjar-deploy-assy_openshift-templates">
<title>Deploying an immutable KIE Server from KJAR services</title>
<simpara>You can deploy an immutable KIE Server using services that are already built as KJAR files.</simpara>
<simpara>You must provide the services in a Maven repository. You can use the built-in repository of the Business Central or your own repository (for example, a Nexus deployment). When the server pod starts, it retrieves the KJAR services from the Maven repository. Services on the pod are never updated or changed. At every restart or scaling of the pod, the server retrieves the files from the repository, so you must ensure they do not change on the Maven repository to keep the deployment immutable.</simpara>
<simpara>You cannot deploy or undeploy services on a running immutable KIE Server. You can use Business Central or Business Central Monitoring to view monitoring information. The KIE Server runs like any other pod on the OpenShift environment; you can use any container-based integration workflows as necessary.</simpara>
<simpara>If a Business Central or Business Central Monitoring is deployed in the same namespace, it discovers the immutable KIE Server automatically. You can use Business Central or Business Central Monitoring to start and stop (but not deploy) services on the immutable KIE Server and to view monitoring data.</simpara>
<section xml:id="template-deploy-start-openshift-templates-server-immutable-kjar-proc">
<title>Starting configuration of the template for an immutable KIE Server from KJAR services</title>
<simpara>To deploy an immutable KIE Server from KJAR services, use one of the following template files:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>rhpam710-kieserver-postgresql.yaml</literal> to use a PostgreSQL pod for persistent storage. Use this template unless you have a specific reason to use another template.</simpara>
</listitem>
<listitem>
<simpara><literal>rhpam710-kieserver-mysql.yaml</literal> to use a MySQL pod for persistent storage.</simpara>
</listitem>
<listitem>
<simpara><literal>rhpam710-kieserver-externaldb.yaml</literal> to use an external database server for persistent storage.</simpara>
<important>
<simpara>The standard KIE Server image for an external database server includes drivers for MySQL and PostgreSQL external database servers. If you want to use another database server, you must build a custom KIE Server image. For instructions, see <xref linkend="externaldb-build-proc_openshift-templates"/>.</simpara>
</important>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Download the <literal>rhpam-7.10.0-openshift-templates.zip</literal> product deliverable file from the <link xl:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?downloadType=distributions&amp;product=rhpam&amp;productChanged=yes">Software Downloads</link> page of the Red Hat Customer Portal.</simpara>
</listitem>
<listitem>
<simpara>Extract the required template file.</simpara>
</listitem>
<listitem>
<simpara>Use one of the following methods to start deploying the template:</simpara>
<itemizedlist>
<listitem>
<simpara>To use the OpenShift Web UI, in the OpenShift application console select <emphasis role="strong">Add to Project &#8594; Import YAML / JSON</emphasis> and then select or paste the <literal>&lt;template-file-name&gt;.yaml</literal> file. In the <emphasis role="strong">Add Template</emphasis> window, ensure <emphasis role="strong">Process the template</emphasis> is selected and click <emphasis role="strong">Continue</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>To use the OpenShift command line console, prepare the following command line:</simpara>
<screen>oc new-app -f &lt;template-path&gt;/&lt;template-file-name&gt;.yaml -p KIE_SERVER_HTTPS_SECRET=kieserver-app-secret -p PARAMETER=value</screen>
<simpara>In this command line, make the following changes:</simpara>
<itemizedlist>
<listitem>
<simpara>Replace <literal>&lt;template-path&gt;</literal> with the path to the downloaded template file.</simpara>
</listitem>
<listitem>
<simpara>Replace <literal>&lt;template-file-name&gt;</literal> with the name of the template file.</simpara>
</listitem>
<listitem>
<simpara>Use as many <literal>-p PARAMETER=value</literal> pairs as needed to set the required parameters.</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
<formalpara>
<title>Next steps</title>
<para>Set the parameters for the template. Follow the steps in <xref linkend="template-deploy-mandatory-openshift-templates-server-immutable-kjar-proc"/> to set common parameters. You can view the template file to see descriptions for all parameters.</para>
</formalpara>
</section>
<section xml:id="template-deploy-mandatory-openshift-templates-server-immutable-kjar-proc">
<title>Setting required parameters for an immutable KIE Server from KJAR services</title>
<simpara>When configuring the template to deploy an immutable KIE Server from KJAR services, you must set the following parameters in all cases.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-server-immutable-kjar-proc"/>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Set the following parameters:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Credentials secret</emphasis> (<literal>CREDENTIALS_SECRET</literal>): The name of the secret containing the administrative user credentials, as created in <xref linkend="secret-adminuser-create-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server Keystore Secret Name</emphasis> (<literal>KIE_SERVER_HTTPS_SECRET</literal>): The name of the secret for KIE Server, as created in <xref linkend="secrets-kie-create-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server Certificate Name</emphasis> (<literal>KIE_SERVER_HTTPS_NAME</literal>): The name of the certificate in the keystore that you created in <xref linkend="secrets-kie-create-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server Keystore Password</emphasis> (<literal>KIE_SERVER_HTTPS_PASSWORD</literal>): The password for the keystore that you created in <xref linkend="secrets-kie-create-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Application Name</emphasis> (<literal>APPLICATION_NAME</literal>): The name of the OpenShift application. It is used in the default URLs for Business Central Monitoring and KIE Server. OpenShift uses the application name to create a separate set of deployment configurations, services, routes, labels, and artifacts.
You can deploy several applications using the same template into the same project, as long as you use different application names. Also, the application name determines the name of the server configuration (server template) that the KIE Server joins on Business Central or Business Central Monitoring. If you are deploying several KIE Servers, you must ensure each of the servers has a different application name.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Maven repository URL</emphasis> (<literal>MAVEN_REPO_URL</literal>): A URL for a Maven repository. You must upload all the processes (KJAR files) that are to be deployed
on the KIE Server
into this repository.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Maven repository ID</emphasis> (<literal>MAVEN_REPO_ID</literal>): An identifier for the Maven repository. The default value is <literal>repo-custom</literal>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Maven repository username</emphasis> (<literal>MAVEN_REPO_USERNAME</literal>): The user name for the Maven repository.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Maven repository password</emphasis> (<literal>MAVEN_REPO_PASSWORD</literal>): The password for the Maven repository.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server Container Deployment</emphasis> (<literal>KIE_SERVER_CONTAINER_DEPLOYMENT</literal>): The identifying information of the decision services (KJAR files) that the deployment must pull from the Maven repository. The format is <literal>&lt;containerId&gt;=&lt;groupId&gt;:&lt;artifactId&gt;:&lt;version&gt;</literal> or, if you want to specify an alias name for the container, <literal>&lt;containerId&gt;(&lt;aliasId&gt;)=&lt;groupId&gt;:&lt;artifactId&gt;:&lt;version&gt;</literal>. You can provide two or more KJAR files using the <literal>|</literal> separator, as illustrated in the following example:</simpara>
<screen>containerId=groupId:artifactId:version|c2(alias2)=g2:a2:v2</screen>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server Mode</emphasis> (<literal>KIE_SERVER_MODE</literal>): In the <literal>rhpam710-kieserver-*.yaml</literal> templates the default value is <literal>PRODUCTION</literal>. In <literal>PRODUCTION</literal> mode, you cannot deploy <literal>SNAPSHOT</literal> versions of KJAR artifacts on the KIE Server and cannot change versions of an artifact in an existing container. To deploy a new version with <literal>PRODUCTION</literal> mode, create a new container on the same KIE Server. To deploy <literal>SNAPSHOT</literal> versions or to change versions of an artifact in an existing container, set this parameter to <literal>DEVELOPMENT</literal>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">ImageStream Namespace</emphasis> (<literal>IMAGE_STREAM_NAMESPACE</literal>): The namespace where the image streams are available. If the image streams were already available in your OpenShift environment (see <xref linkend="imagestreams-file-install-proc_openshift-templates"/>), the namespace is <literal>openshift</literal>. If you have installed the image streams file, the namespace is the name of the OpenShift project.</simpara>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-openshift-templates-server-immutable-kjar-proc"/>.</simpara>
</section>
<section xml:id="template-deploy-namespace-openshift-templates-server-immutable-kjar-proc">
<title>Configuring the image stream namespace for an immutable KIE Server from KJAR services</title>
<simpara>If you created image streams in a namespace that is not <literal>openshift</literal>, you must configure the namespace in the template.</simpara>
<simpara>If all image streams were already available in your Red Hat OpenShift Container Platform environment, you can skip this procedure.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-server-immutable-kjar-proc"/>.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Procedure</title>
<para>If you installed an image streams file according to instructions in <xref linkend="imagestreams-file-install-proc_openshift-templates"/>, set the <emphasis role="strong">ImageStream Namespace</emphasis> (<literal>IMAGE_STREAM_NAMESPACE</literal>) parameter to the name of your OpenShift project.</para>
</formalpara>
</section>
<section xml:id="template-deploy-connectcentral-openshift-templates-server-immutable-kjar-proc">
<title>Configuring information about a Business Central or Business Central Monitoring instance for an immutable KIE Server from KJAR services</title>
<simpara>If you want to enable a connection from a Business Central or Business Central Monitoring instance in the same namespace to the KIE Server,
you must configure information about the Business Central or Business Central Monitoring instance.</simpara>
<simpara>The Business Central or Business Central Monitoring instance must be configured with the same credentials secret (<literal>CREDENTIALS_SECRET</literal>) as the KIE Server.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-server-immutable-kjar-proc"/>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Set the following parameters:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Name of the Business Central service</emphasis> (<literal>BUSINESS_CENTRAL_SERVICE</literal>): The OpenShift service name for the Business Central or Business Central Monitoring.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Ensure that the following settings are set to the same value as the same settings for the Business Central or Business Central Monitoring:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Maven repository URL</emphasis> (<literal>MAVEN_REPO_URL</literal>): A URL for the external Maven repository from which services must be deployed.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Maven repository username</emphasis> (<literal>MAVEN_REPO_USERNAME</literal>): The user name for the Maven repository.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Maven repository password</emphasis> (<literal>MAVEN_REPO_PASSWORD</literal>): The password for the Maven repository.</simpara>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-openshift-templates-server-immutable-kjar-proc"/>.</simpara>
</section>
<section xml:id="template-deploy-nopubnet-openshift-templates-server-immutable-kjar-proc">
<title>Configuring access to a Maven mirror in an environment without a connection to the public Internet for an immutable KIE Server from KJAR services</title>
<simpara>When configuring the template to deploy an immutable KIE Server from KJAR services, if your OpenShift environment does not have a connection to the public Internet, you must configure access to a Maven mirror that you set up according to <xref linkend="offline-repo-proc_openshift-templates"/>.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-server-immutable-kjar-proc"/>.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Procedure</title>
<para>To configure access to the Maven mirror, set the following parameters:</para>
</formalpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Maven mirror URL</emphasis> (<literal>MAVEN_MIRROR_URL</literal>): The URL for the Maven mirror repository that you set up in <xref linkend="offline-repo-proc_openshift-templates"/>. This URL must be accessible from a pod in your OpenShift environment.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Maven mirror of</emphasis> (<literal>MAVEN_MIRROR_OF</literal>): The value that determines which artifacts are to be retrieved from the mirror. For instructions about setting the <literal>mirrorOf</literal> value, see <link xl:href="https://maven.apache.org/guides/mini/guide-mirror-settings.html">Mirror Settings</link> in the Apache Maven documentation.
The default value is <literal>external:*</literal>. With this value, Maven retrieves every required artifact from the mirror and does not query any other repositories.</simpara>
<itemizedlist>
<listitem>
<simpara>If you configure an external Maven repository (<literal>MAVEN_REPO_URL</literal>), change <literal>MAVEN_MIRROR_OF</literal> to exclude the artifacts in this repository from the mirror, for example, <literal>external:*,!repo-custom</literal>. Replace <literal>repo-custom</literal> with the ID that you configured in <literal>MAVEN_REPO_ID</literal>.</simpara>
</listitem>
<listitem>
<simpara>If you configure a built-in Business Central Maven repository (<literal>BUSINESS_CENTRAL_MAVEN_SERVICE</literal>), change <literal>MAVEN_MIRROR_OF</literal> to exclude the artifacts in this repository from the mirror: <literal>external:*,!repo-rhpamcentr</literal>.</simpara>
</listitem>
<listitem>
<simpara>If you configure both repositories, change <literal>MAVEN_MIRROR_OF</literal> to exclude the artifacts in both repositories from the mirror: <literal>external:*,!repo-rhpamcentr,!repo-custom</literal>. Replace <literal>repo-custom</literal> with the ID that you configured in <literal>MAVEN_REPO_ID</literal>.</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-openshift-templates-server-immutable-kjar-proc"/>.</simpara>
</section>
<section xml:id="template-deploy-rhsso-openshift-templates-server-immutable-kjar-proc">
<title>Setting parameters for RH-SSO authentication for an immutable KIE Server from KJAR services</title>
<simpara>If you want to use RH-SSO authentication, complete the following additional configuration when configuring the template to deploy an immutable KIE Server from KJAR services.</simpara>
<important>
<simpara>Do not configure LDAP authentication and RH-SSO authentication in the same deployment.</simpara>
</important>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>A realm for Red Hat Process Automation Manager is created in the RH-SSO authentication system.</simpara>
</listitem>
<listitem>
<simpara>User names and passwords for Red Hat Process Automation Manager are created in the RH-SSO authentication system. For a list of the available roles, see <xref linkend="roles-users-con_openshift-templates"/>.</simpara>
<simpara>You must create a user with the username and password configured in the secret for the administrative user, as described in <xref linkend="secret-adminuser-create-proc_openshift-templates"/>. This user must have the <literal>kie-server,rest-all,admin</literal> roles.</simpara>
</listitem>
<listitem>
<simpara>Clients are created in the RH-SSO authentication system for all components of the Red Hat Process Automation Manager environment that you are deploying. The client setup contains the URLs for the components. You can review and edit the URLs after deploying the environment. Alternatively, the Red Hat Process Automation Manager deployment can create the clients. However, this option provides less detailed control over the environment.</simpara>
</listitem>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-server-immutable-kjar-proc"/>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Set the following parameters:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">RH-SSO URL</emphasis> (<literal>SSO_URL</literal>): The URL for RH-SSO.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">RH-SSO Realm name</emphasis> (<literal>SSO_REALM</literal>): The RH-SSO realm for Red Hat Process Automation Manager.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">RH-SSO Disable SSL Certificate Validation</emphasis> (<literal>SSO_DISABLE_SSL_CERTIFICATE_VALIDATION</literal>): Set to <literal>true</literal> if your RH-SSO installation does not use a valid HTTPS certificate.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Complete one of the following procedures:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>If you created the client for Red Hat Process Automation Manager within RH-SSO,
set the following parameters in the template:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Business Central or Business Central Monitoring RH-SSO Client name</emphasis> (<literal>BUSINESS_CENTRAL_SSO_CLIENT</literal>): The RH-SSO client name for Business Central or Business Central Monitoring.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server RH-SSO Client name</emphasis> (<literal>KIE_SERVER_SSO_CLIENT</literal>): The RH-SSO client name for KIE Server.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server RH-SSO Client Secret</emphasis> (<literal>KIE_SERVER_SSO_SECRET</literal>): The secret string that is set in RH-SSO for the client for KIE Server.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>To create the clients for Red Hat Process Automation Manager within RH-SSO, set the following parameters in the template:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">KIE Server RH-SSO Client name</emphasis> (<literal>KIE_SERVER_SSO_CLIENT</literal>): The name of the client to create in RH-SSO for KIE Server.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server RH-SSO Client Secret</emphasis> (<literal>KIE_SERVER_SSO_SECRET</literal>): The secret string to set in RH-SSO for the client for KIE Server.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">RH-SSO Realm Admin Username</emphasis> (<literal>SSO_USERNAME</literal>) and <emphasis role="strong">RH-SSO Realm Admin Password</emphasis> (<literal>SSO_PASSWORD</literal>): The user name and password for the realm administrator user for the RH-SSO realm for Red Hat Process Automation Manager. You must provide this user name and password in order to create the required clients.</simpara>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
</listitem>
</orderedlist>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-openshift-templates-server-immutable-kjar-proc"/>.</simpara>
<simpara>After completing the deployment, review the URLs for components of Red Hat Process Automation Manager in the RH-SSO authentication system to ensure they are correct.</simpara>
</section>
<section xml:id="template-deploy-ldap-openshift-templates-server-immutable-kjar-proc">
<title>Setting parameters for LDAP authentication for an immutable KIE Server from KJAR services</title>
<simpara>If you want to use LDAP authentication, complete the following additional configuration when configuring the template to deploy an immutable KIE Server from KJAR services.</simpara>
<important>
<simpara>Do not configure LDAP authentication and RH-SSO authentication in the same deployment.</simpara>
</important>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You created user names and passwords for Red Hat Process Automation Manager in the LDAP system. For a list of the available roles, see <xref linkend="roles-users-con_openshift-templates"/>.</simpara>
<simpara>You must create a user with the username and password configured in the secret for the administrative user, as described in <xref linkend="secret-adminuser-create-proc_openshift-templates"/>. This user must have the <literal>kie-server,rest-all,admin</literal> roles.</simpara>
</listitem>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-server-immutable-kjar-proc"/>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Set the <literal>AUTH_LDAP*</literal> parameters of the template. These parameters correspond to the settings of the <literal>LdapExtended</literal> Login module of Red Hat JBoss EAP. For instructions about using these settings, see <link xl:href="https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.0/html-single/login_module_reference/#ldapextended_login_module">LdapExtended login module</link>.</simpara>
<note>
<simpara>If you want to enable LDAP failover, you can put set or more LDAP server addresses in the <literal>AUTH_LDAP_URL</literal> parameter, separated by a space.</simpara>
</note>
<simpara>If the LDAP server does not define all the roles required for your deployment, you can map LDAP groups to Red Hat Process Automation Manager roles. To enable LDAP role mapping, set the following parameters:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">RoleMapping rolesProperties file path</emphasis> (<literal>AUTH_ROLE_MAPPER_ROLES_PROPERTIES</literal>): The fully qualified path name of a file that defines role mapping, for example, <literal>/opt/eap/standalone/configuration/rolemapping/rolemapping.properties</literal>. You must provide this file and mount it at this path in all applicable deployment configurations; for instructions, see <xref linkend="rolemapping-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">RoleMapping replaceRole property</emphasis> (<literal>AUTH_ROLE_MAPPER_REPLACE_ROLE</literal>): If set to <literal>true</literal>, mapped roles replace the roles defined on the LDAP server; if set to <literal>false</literal>, both mapped roles and roles defined on the LDAP server are set as user application roles. The default setting is <literal>false</literal>.</simpara>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-openshift-templates-server-immutable-kjar-proc"/>.</simpara>
</section>
<section xml:id="template-deploy-externaldb-openshift-templates-server-immutable-kjar-proc">
<title>Setting parameters for using an external database server for an immutable KIE Server from KJAR services</title>
<simpara>If you are using the <literal>rhpam710-kieserver-externaldb.yaml</literal> template to use an external database server for the KIE Server,
complete the following additional configuration when configuring the template to deploy an immutable KIE Server from KJAR services.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-server-immutable-kjar-proc"/>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Set the following parameters:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">KIE Server External Database Driver</emphasis> (<literal>KIE_SERVER_EXTERNALDB_DRIVER</literal>): The driver for the server, depending on the server type:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>mysql</literal></simpara>
</listitem>
<listitem>
<simpara><literal>postgresql</literal></simpara>
</listitem>
<listitem>
<simpara><literal>mariadb</literal></simpara>
</listitem>
<listitem>
<simpara><literal>mssql</literal></simpara>
</listitem>
<listitem>
<simpara><literal>db2</literal></simpara>
</listitem>
<listitem>
<simpara><literal>oracle</literal></simpara>
</listitem>
<listitem>
<simpara><literal>sybase</literal></simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server External Database User</emphasis> (<literal>KIE_SERVER_EXTERNALDB_USER</literal>) and KIE Server External Database Password (<literal>KIE_SERVER_EXTERNALDB_PWD</literal>): The user name and password for the external database server</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server External Database URL</emphasis> (<literal>KIE_SERVER_EXTERNALDB_URL</literal>): The JDBC URL for the external database server</simpara>
<note>
<simpara>If you are using the EntrepriseDB Postgres database server, use an URL starting with <literal>jdbc:postgresql://</literal> and not with <literal>jdbc:edb://</literal>. Alternatively, do not set the URL and set the host and port parameters instead.</simpara>
</note>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server External Database Host</emphasis> (<literal>KIE_SERVER_EXTERNALDB_SERVICE_HOST</literal>) and  <emphasis role="strong">KIE Server External Database Port</emphasis> (<literal>KIE_SERVER_EXTERNALDB_SERVICE_PORT</literal>): The host name and port number of the external database server. You can set these parameters as an alternative to setting the <literal>KIE_SERVER_EXTERNALDB_URL</literal> parameter.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server External Database Dialect</emphasis> (<literal>KIE_SERVER_EXTERNALDB_DIALECT</literal>): The Hibernate dialect for the server, depending on the server type. The common settings are:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>org.hibernate.dialect.MySQL5InnoDBDialect</literal></simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.MySQL8Dialect</literal></simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.MariaDB102Dialect</literal></simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.PostgreSQL95Dialect</literal></simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.PostgresPlusDialect</literal> (used for EntrepriseDB Postgres Advanced Server)</simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.SQLServer2012Dialect</literal> (used for MS SQL)</simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.DB2Dialect</literal></simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.Oracle10gDialect</literal></simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.SybaseASE15Dialect</literal></simpara>
<simpara>For a complete list of supported dialects, see the <emphasis>Hibernate SQL Dialects</emphasis> table in <link xl:href="https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.3/html-single/developing_hibernate_applications/index#hibernate_properties">Hibernate properties</link> in the Red Hat JBoss EAP documentation.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server External Database name</emphasis> (<literal>KIE_SERVER_EXTERNALDB_DB</literal>): The database name to use on the external database server</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">JDBC Connection Checker class</emphasis> (<literal>KIE_SERVER_EXTERNALDB_CONNECTION_CHECKER</literal>): The name of the JDBC connection checker class for the database server. Without this information, a database server connection cannot be restored after it is lost, for example, if the database server is rebooted.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">JDBC Exception Sorter class</emphasis> (<literal>KIE_SERVER_EXTERNALDB_EXCEPTION_SORTER</literal>): The name of the JDBC exception sorter class for the database server. Without this information, a database server connection cannot be restored after it is lost, for example, if the database server is rebooted.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>If you created a custom image for using an external database server, as described in <xref linkend="externaldb-build-proc_openshift-templates"/>, set the following parameters:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Drivers Extension Image</emphasis> (<literal>EXTENSIONS_IMAGE</literal>): The ImageStreamTag definition of the extension image, for example, <literal>jboss-kie-db2-extension-openshift-image:11.1.4.4</literal></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Drivers ImageStream Namespace</emphasis> (<literal>EXTENSIONS_IMAGE_NAMESPACE</literal>): The namespace to which you uploaded the extension image, for example, <literal>openshift</literal> or your project namespace.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>If you are using a MySQL version 8 external database server, enable the <literal>mysql_native_password</literal> plugin and use it for authentication. For instructions about this pluding, see <link xl:href="https://dev.mysql.com/doc/refman/8.0/en/native-pluggable-authentication.html">Native Pluggable Authentication</link> in the <emphasis>MySQL 8.0 Reference Manual</emphasis>.</simpara>
<simpara>If you are using a MySQL version 8 image provided by Red Hat on Red Hat OpenShift Container Platform, to enable the plugin, set the <literal>MYSQL_DEFAULT_AUTHENTICATION_PLUGIN</literal> environment variable to <literal>mysql_native_password</literal>.</simpara>
<simpara>If you created users on the MySQL version 8 server before enabling the <literal>mysql_native_password</literal> plugin, you must update the <literal>mysql-user</literal> table after you enable the plugin.</simpara>
</listitem>
</orderedlist>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-openshift-templates-server-immutable-kjar-proc"/>.</simpara>
</section>
<section xml:id="template-deploy-prometheus-openshift-templates-server-immutable-kjar-proc">
<title>Enabling Prometheus metric collection for an immutable KIE Server from KJAR services</title>
<simpara>If you want to configure your KIE Server deployment to use Prometheus to collect and store metrics, enable support for this feature in KIE Server at deployment time.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-server-immutable-kjar-proc"/>.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Procedure</title>
<para>To enable support for Prometheus metric collection, set the <emphasis role="strong">Prometheus Server Extension Disabled</emphasis> (<literal>PROMETHEUS_SERVER_EXT_DISABLED</literal>) parameter to <literal>false</literal>.</para>
</formalpara>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-openshift-templates-server-immutable-kjar-proc"/>.</simpara>
<simpara>For instructions about configuring Prometheus metrics collection, see <link xl:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/managing_red_hat_process_automation_manager_and_kie_server_settings#prometheus-monitoring-ocp-proc_execution-server"><emphasis>Managing and monitoring KIE Server</emphasis></link>.</simpara>
</section>
<section xml:id="template-deploy-complete-openshift-templates-server-immutable-kjar-proc">
<title>Completing deployment of the template for an immutable KIE Server from KJAR services</title>
<simpara>After setting all the required parameters in the OpenShift Web UI or in the command line, complete deployment of the template.</simpara>
<formalpara>
<title>Procedure</title>
<para>Depending on the method that you are using, complete the following steps:</para>
</formalpara>
<itemizedlist>
<listitem>
<simpara>In the OpenShift Web UI, click <emphasis role="strong">Create</emphasis>.</simpara>
<itemizedlist>
<listitem>
<simpara>If the <literal>This will create resources that may have security or project behavior implications</literal> message appears, click <emphasis role="strong">Create Anyway</emphasis>.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Complete the command line and press Enter.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Next steps</title>
<para>Depending on your needs for the environment, optionally complete procedures described in <xref linkend="post-optional-con_openshift-templates"/>.</para>
</formalpara>
</section>
</section>
</chapter>
<chapter xml:id="freeform-con_openshift-templates">
<title>Freeform managed server environment</title>
<simpara>You can deploy a freeform server environment that includes several different pods running KIE Server. These KIE Servers can run different services for staging or production purposes. You can add and remove servers as necessary at any time.</simpara>
<simpara>You start deploying a freeform managed server environment by deploying Business Central Monitoring and one managed KIE Server. You can use Business Central Monitoring to monitor and, when necessary, manage the execution of services on KIE Servers. This environment does not include Smart Router.</simpara>
<simpara>You can also deploy additional managed KIE Servers. Each KIE Server can be separately scaled as necessary.</simpara>
<simpara>On a managed KIE Server, no services are initially loaded. Use Business Central Monitoring or the REST API of the KIE Server to deploy and undeploy processes on the server.</simpara>
<simpara>You must provide a Maven repository with the processes (KJAR files) that you want to deploy on the servers. Your integration process must ensure that the required versions of the processes are uploaded to the Maven repository. You can use Business Central in a development environment to create the processes and upload them to the Maven repository.</simpara>
<simpara>Each KIE Server uses a database server. Usually, the database servers also run in pods, although you can set up a KIE Server to use an external database server.</simpara>
<simpara>You can also deploy immutable KIE Servers in the same namespace. You can use Business Central Monitoring to view monitoring information for all KIE Servers in the environment, including immutable servers. For instructions about deploying immutable KIE Servers, see <xref linkend="server-immutable-s2i-deploy-assy_openshift-templates"/> and <xref linkend="server-immutable-kjar-deploy-assy_openshift-templates"/>..</simpara>
<section xml:id="freeform-monitor-deploy-assy_openshift-templates">
<title>Deploying monitoring and a single KIE Server for a freeform environment</title>
<simpara>To start deploying a freeform environment, deploy Business Central Monitoring and a single managed KIE Server, which uses a PostgreSQL database server in a pod. No services are loaded on the KIE Server. Use Business Central Monitoring to deploy and undeploy services on the server.</simpara>
<simpara>You can then add more KIE Servers as necessary.</simpara>
<section xml:id="template-deploy-start-openshift-templates-freeform-monitor-proc">
<title>Starting configuration of the template for monitoring and a single KIE Server</title>
<simpara>To deploy Business Central Monitoring and a single managed KIE Server, use the <literal>rhpam710-managed.yaml</literal> template file.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Download the <literal>rhpam-7.10.0-openshift-templates.zip</literal> product deliverable file from the <link xl:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?downloadType=distributions&amp;product=rhpam&amp;productChanged=yes">Software Downloads</link> page of the Red Hat Customer Portal.</simpara>
</listitem>
<listitem>
<simpara>Extract the <literal>rhpam710-managed.yaml</literal> template file.</simpara>
</listitem>
<listitem>
<simpara>Use one of the following methods to start deploying the template:</simpara>
<itemizedlist>
<listitem>
<simpara>To use the OpenShift Web UI, in the OpenShift application console select <emphasis role="strong">Add to Project &#8594; Import YAML / JSON</emphasis> and then select or paste the <literal>rhpam710-managed.yaml</literal> file. In the <emphasis role="strong">Add Template</emphasis> window, ensure <emphasis role="strong">Process the template</emphasis> is selected and click <emphasis role="strong">Continue</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>To use the OpenShift command line console, prepare the following command line:</simpara>
<screen>oc new-app -f &lt;template-path&gt;/rhpam710-managed.yaml -p BUSINESS_CENTRAL_HTTPS_SECRET=businesscentral-app-secret -p KIE_SERVER_HTTPS_SECRET=kieserver-app-secret -p PARAMETER=value</screen>
<simpara>In this command line, make the following changes:</simpara>
<itemizedlist>
<listitem>
<simpara>Replace <literal>&lt;template-path&gt;</literal> with the path to the downloaded template file.</simpara>
</listitem>
<listitem>
<simpara>Use as many <literal>-p PARAMETER=value</literal> pairs as needed to set the required parameters.</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
<formalpara>
<title>Next steps</title>
<para>Set the parameters for the template. Follow the steps in <xref linkend="template-deploy-mandatory-openshift-templates-freeform-monitor-proc"/> to set common parameters. You can view the template file to see descriptions for all parameters.</para>
</formalpara>
</section>
<section xml:id="template-deploy-mandatory-openshift-templates-freeform-monitor-proc">
<title>Setting required parameters for monitoring and a single KIE Server</title>
<simpara>When configuring the template to deploy Business Central Monitoring and a single managed KIE Server, you must set the following parameters in all cases.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-freeform-monitor-proc"/>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Set the following parameters:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Credentials secret</emphasis> (<literal>CREDENTIALS_SECRET</literal>): The name of the secret containing the administrative user credentials, as created in <xref linkend="secret-adminuser-create-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Business Central Monitoring Server Keystore Secret Name</emphasis> (<literal>BUSINESS_CENTRAL_HTTPS_SECRET</literal>): The name of the secret for Business Central, as created in <xref linkend="secrets-central-create-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server Keystore Secret Name</emphasis> (<literal>KIE_SERVER_HTTPS_SECRET</literal>): The name of the secret for KIE Server, as created in <xref linkend="secrets-kie-create-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Business Central Monitoring Server Certificate Name</emphasis> (<literal>BUSINESS_CENTRAL_HTTPS_NAME</literal>): The name of the certificate in the keystore that you created in <xref linkend="secrets-central-create-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Business Central Monitoring Server Keystore Password</emphasis> (<literal>BUSINESS_CENTRAL_HTTPS_PASSWORD</literal>): The password for the keystore that you created in <xref linkend="secrets-central-create-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server Certificate Name</emphasis> (<literal>KIE_SERVER_HTTPS_NAME</literal>): The name of the certificate in the keystore that you created in <xref linkend="secrets-kie-create-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server Keystore Password</emphasis> (<literal>KIE_SERVER_HTTPS_PASSWORD</literal>): The password for the keystore that you created in <xref linkend="secrets-kie-create-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Application Name</emphasis> (<literal>APPLICATION_NAME</literal>): The name of the OpenShift application. It is used in the default URLs for Business Central Monitoring and KIE Server. OpenShift uses the application name to create a separate set of deployment configurations, services, routes, labels, and artifacts.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Enable KIE server global discovery</emphasis> (<literal>KIE_SERVER_CONTROLLER_OPENSHIFT_GLOBAL_DISCOVERY_ENABLED</literal>): Set this parameter to <literal>true</literal> if you want Business Central Monitoring to discover all KIE Servers with the <literal>OpenShiftStartupStrategy</literal> in the same namespace. By default, Business Central Monitoring discovers only KIE Servers that are deployed with the same value of the <literal>APPLICATION_NAME</literal> parameter as Business Central Monitoring itself.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Maven repository URL</emphasis> (<literal>MAVEN_REPO_URL</literal>): A URL for a Maven repository. You must upload all the processes (KJAR files) that are to be deployed
on any KIE Servers in your environment
into this repository.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Maven repository ID</emphasis> (<literal>MAVEN_REPO_ID</literal>): An identifier for the Maven repository. The default value is <literal>repo-custom</literal>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Maven repository username</emphasis> (<literal>MAVEN_REPO_USERNAME</literal>): The user name for the Maven repository.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Maven repository password</emphasis> (<literal>MAVEN_REPO_PASSWORD</literal>): The password for the Maven repository.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server Mode</emphasis> (<literal>KIE_SERVER_MODE</literal>): In the <literal>rhpam710-managed.yaml</literal> template the default value is <literal>PRODUCTION</literal>. In <literal>PRODUCTION</literal> mode, you cannot deploy <literal>SNAPSHOT</literal> versions of KJAR artifacts on the KIE Server and cannot change versions of an artifact in an existing container. To deploy a new version with <literal>PRODUCTION</literal> mode, create a new container on the same KIE Server. To deploy <literal>SNAPSHOT</literal> versions or to change versions of an artifact in an existing container, set this parameter to <literal>DEVELOPMENT</literal>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">ImageStream Namespace</emphasis> (<literal>IMAGE_STREAM_NAMESPACE</literal>): The namespace where the image streams are available. If the image streams were already available in your OpenShift environment (see <xref linkend="imagestreams-file-install-proc_openshift-templates"/>), the namespace is <literal>openshift</literal>. If you have installed the image streams file, the namespace is the name of the OpenShift project.</simpara>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-openshift-templates-freeform-monitor-proc"/>.</simpara>
</section>
<section xml:id="template-deploy-replicas-openshift-templates-freeform-monitor-proc">
<title>Configuring pod replica numbers for monitoring and a single KIE Server</title>
<simpara>When configuring the template to deploy Business Central Monitoring and a single managed KIE Server, you can set the initial number of replicas for
KIE Server and Business Central Monitoring.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-freeform-monitor-proc"/>.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Procedure</title>
<para>To configure the numbers of replicas, set the following parameters:</para>
</formalpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Business Central Monitoring Container Replicas</emphasis> (<literal>BUSINESS_CENTRAL_MONITORING_CONTAINER_REPLICAS</literal>): The number of replicas that the deployment initially creates for Business Central Monitoring. If you do not want to use a high-availability configuration for Business Central Monitoring, set this number to 1.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server Container Replicas</emphasis> (<literal>KIE_SERVER_CONTAINER_REPLICAS</literal>): The number of replicas that the deployment initially creates for KIE Server.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-openshift-templates-freeform-monitor-proc"/>.</simpara>
</section>
<section xml:id="template-deploy-nopubnet-openshift-templates-freeform-monitor-proc">
<title>Configuring access to a Maven mirror in an environment without a connection to the public Internet for monitoring and a single KIE Server</title>
<simpara>When configuring the template to deploy Business Central Monitoring and a single managed KIE Server, if your OpenShift environment does not have a connection to the public Internet, you must configure access to a Maven mirror that you set up according to <xref linkend="offline-repo-proc_openshift-templates"/>.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-freeform-monitor-proc"/>.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Procedure</title>
<para>To configure access to the Maven mirror, set the following parameters:</para>
</formalpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Maven mirror URL</emphasis> (<literal>MAVEN_MIRROR_URL</literal>): The URL for the Maven mirror repository that you set up in <xref linkend="offline-repo-proc_openshift-templates"/>. This URL must be accessible from a pod in your OpenShift environment.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Maven mirror of</emphasis> (<literal>MAVEN_MIRROR_OF</literal>): The value that determines which artifacts are to be retrieved from the mirror. For instructions about setting the <literal>mirrorOf</literal> value, see <link xl:href="https://maven.apache.org/guides/mini/guide-mirror-settings.html">Mirror Settings</link> in the Apache Maven documentation.
The default value is <literal>external:*</literal>. With this value, Maven retrieves every required artifact from the mirror and does not query any other repositories.</simpara>
<itemizedlist>
<listitem>
<simpara>If you configure an external Maven repository (<literal>MAVEN_REPO_URL</literal>), change <literal>MAVEN_MIRROR_OF</literal> to exclude the artifacts in this repository from the mirror, for example, <literal>external:*,!repo-custom</literal>. Replace <literal>repo-custom</literal> with the ID that you configured in <literal>MAVEN_REPO_ID</literal>.</simpara>
</listitem>
<listitem>
<simpara>If you configure a built-in Business Central Maven repository (<literal>BUSINESS_CENTRAL_MAVEN_SERVICE</literal>), change <literal>MAVEN_MIRROR_OF</literal> to exclude the artifacts in this repository from the mirror: <literal>external:*,!repo-rhpamcentr</literal>.</simpara>
</listitem>
<listitem>
<simpara>If you configure both repositories, change <literal>MAVEN_MIRROR_OF</literal> to exclude the artifacts in both repositories from the mirror: <literal>external:*,!repo-rhpamcentr,!repo-custom</literal>. Replace <literal>repo-custom</literal> with the ID that you configured in <literal>MAVEN_REPO_ID</literal>.</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-openshift-templates-freeform-monitor-proc"/>.</simpara>
</section>
<section xml:id="template-deploy-rhsso-openshift-templates-freeform-monitor-proc">
<title>Setting parameters for RH-SSO authentication for monitoring and a single KIE Server</title>
<simpara>If you want to use RH-SSO authentication, complete the following additional configuration when configuring the template to deploy Business Central Monitoring and a single managed KIE Server.</simpara>
<important>
<simpara>Do not configure LDAP authentication and RH-SSO authentication in the same deployment.</simpara>
</important>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>A realm for Red Hat Process Automation Manager is created in the RH-SSO authentication system.</simpara>
</listitem>
<listitem>
<simpara>User names and passwords for Red Hat Process Automation Manager are created in the RH-SSO authentication system. For a list of the available roles, see <xref linkend="roles-users-con_openshift-templates"/>.</simpara>
<simpara>You must create a user with the username and password configured in the secret for the administrative user, as described in <xref linkend="secret-adminuser-create-proc_openshift-templates"/>. This user must have the <literal>kie-server,rest-all,admin</literal> roles.</simpara>
</listitem>
<listitem>
<simpara>Clients are created in the RH-SSO authentication system for all components of the Red Hat Process Automation Manager environment that you are deploying. The client setup contains the URLs for the components. You can review and edit the URLs after deploying the environment. Alternatively, the Red Hat Process Automation Manager deployment can create the clients. However, this option provides less detailed control over the environment.</simpara>
</listitem>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-freeform-monitor-proc"/>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Set the following parameters:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">RH-SSO URL</emphasis> (<literal>SSO_URL</literal>): The URL for RH-SSO.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">RH-SSO Realm name</emphasis> (<literal>SSO_REALM</literal>): The RH-SSO realm for Red Hat Process Automation Manager.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">RH-SSO Disable SSL Certificate Validation</emphasis> (<literal>SSO_DISABLE_SSL_CERTIFICATE_VALIDATION</literal>): Set to <literal>true</literal> if your RH-SSO installation does not use a valid HTTPS certificate.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Complete one of the following procedures:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>If you created the clients for Red Hat Process Automation Manager within RH-SSO,
set the following parameters in the template:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Business Central Monitoring RH-SSO Client name</emphasis> (<literal>BUSINESS_CENTRAL_SSO_CLIENT</literal>): The RH-SSO client name for Business Central Monitoring.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Business Central Monitoring RH-SSO Client Secret</emphasis> (<literal>BUSINESS_CENTRAL_SSO_SECRET</literal>): The secret string that is set in RH-SSO for the client for Business Central Monitoring.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server RH-SSO Client name</emphasis> (<literal>KIE_SERVER_SSO_CLIENT</literal>): The RH-SSO client name for KIE Server.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server RH-SSO Client Secret</emphasis> (<literal>KIE_SERVER_SSO_SECRET</literal>): The secret string that is set in RH-SSO for the client for KIE Server.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>To create the clients for Red Hat Process Automation Manager within RH-SSO, set the following parameters in the template:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Business Central Monitoring RH-SSO Client name</emphasis> (<literal>BUSINESS_CENTRAL_SSO_CLIENT</literal>): The name of the client to create in RH-SSO for Business Central Monitoring.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Business Central Monitoring RH-SSO Client Secret</emphasis> (<literal>BUSINESS_CENTRAL_SSO_SECRET</literal>): The secret string to set in RH-SSO for the client for Business Central Monitoring.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server RH-SSO Client name</emphasis> (<literal>KIE_SERVER_SSO_CLIENT</literal>): The name of the client to create in RH-SSO for KIE Server.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server RH-SSO Client Secret</emphasis> (<literal>KIE_SERVER_SSO_SECRET</literal>): The secret string to set in RH-SSO for the client for KIE Server.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">RH-SSO Realm Admin Username</emphasis> (<literal>SSO_USERNAME</literal>) and <emphasis role="strong">RH-SSO Realm Admin Password</emphasis> (<literal>SSO_PASSWORD</literal>): The user name and password for the realm administrator user for the RH-SSO realm for Red Hat Process Automation Manager. You must provide this user name and password in order to create the required clients.</simpara>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
</listitem>
</orderedlist>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-openshift-templates-freeform-monitor-proc"/>.</simpara>
<simpara>After completing the deployment, review the URLs for components of Red Hat Process Automation Manager in the RH-SSO authentication system to ensure they are correct.</simpara>
</section>
<section xml:id="template-deploy-ldap-openshift-templates-freeform-monitor-proc">
<title>Setting parameters for LDAP authentication for monitoring and a single KIE Server</title>
<simpara>If you want to use LDAP authentication, complete the following additional configuration when configuring the template to deploy Business Central Monitoring and a single managed KIE Server.</simpara>
<important>
<simpara>Do not configure LDAP authentication and RH-SSO authentication in the same deployment.</simpara>
</important>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You created user names and passwords for Red Hat Process Automation Manager in the LDAP system. For a list of the available roles, see <xref linkend="roles-users-con_openshift-templates"/>.</simpara>
<simpara>You must create a user with the username and password configured in the secret for the administrative user, as described in <xref linkend="secret-adminuser-create-proc_openshift-templates"/>. This user must have the <literal>kie-server,rest-all,admin</literal> roles.</simpara>
</listitem>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-freeform-monitor-proc"/>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Set the <literal>AUTH_LDAP*</literal> parameters of the template. These parameters correspond to the settings of the <literal>LdapExtended</literal> Login module of Red Hat JBoss EAP. For instructions about using these settings, see <link xl:href="https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.0/html-single/login_module_reference/#ldapextended_login_module">LdapExtended login module</link>.</simpara>
<note>
<simpara>If you want to enable LDAP failover, you can put set or more LDAP server addresses in the <literal>AUTH_LDAP_URL</literal> parameter, separated by a space.</simpara>
</note>
<simpara>If the LDAP server does not define all the roles required for your deployment, you can map LDAP groups to Red Hat Process Automation Manager roles. To enable LDAP role mapping, set the following parameters:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">RoleMapping rolesProperties file path</emphasis> (<literal>AUTH_ROLE_MAPPER_ROLES_PROPERTIES</literal>): The fully qualified path name of a file that defines role mapping, for example, <literal>/opt/eap/standalone/configuration/rolemapping/rolemapping.properties</literal>. You must provide this file and mount it at this path in all applicable deployment configurations; for instructions, see <xref linkend="rolemapping-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">RoleMapping replaceRole property</emphasis> (<literal>AUTH_ROLE_MAPPER_REPLACE_ROLE</literal>): If set to <literal>true</literal>, mapped roles replace the roles defined on the LDAP server; if set to <literal>false</literal>, both mapped roles and roles defined on the LDAP server are set as user application roles. The default setting is <literal>false</literal>.</simpara>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-openshift-templates-freeform-monitor-proc"/>.</simpara>
</section>
<section xml:id="template-deploy-prometheus-openshift-templates-freeform-monitor-proc">
<title>Enabling Prometheus metric collection for monitoring and a single KIE Server</title>
<simpara>If you want to configure your KIE Server deployment to use Prometheus to collect and store metrics, enable support for this feature in KIE Server at deployment time.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-freeform-monitor-proc"/>.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Procedure</title>
<para>To enable support for Prometheus metric collection, set the <emphasis role="strong">Prometheus Server Extension Disabled</emphasis> (<literal>PROMETHEUS_SERVER_EXT_DISABLED</literal>) parameter to <literal>false</literal>.</para>
</formalpara>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-openshift-templates-freeform-monitor-proc"/>.</simpara>
<simpara>For instructions about configuring Prometheus metrics collection, see <link xl:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/managing_red_hat_process_automation_manager_and_kie_server_settings#prometheus-monitoring-ocp-proc_execution-server"><emphasis>Managing and monitoring KIE Server</emphasis></link>.</simpara>
</section>
<section xml:id="template-deploy-complete-openshift-templates-freeform-monitor-proc">
<title>Completing deployment of the template for monitoring and a single KIE Server</title>
<simpara>After setting all the required parameters in the OpenShift Web UI or in the command line, complete deployment of the template.</simpara>
<formalpara>
<title>Procedure</title>
<para>Depending on the method that you are using, complete the following steps:</para>
</formalpara>
<itemizedlist>
<listitem>
<simpara>In the OpenShift Web UI, click <emphasis role="strong">Create</emphasis>.</simpara>
<itemizedlist>
<listitem>
<simpara>If the <literal>This will create resources that may have security or project behavior implications</literal> message appears, click <emphasis role="strong">Create Anyway</emphasis>.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Complete the command line and press Enter.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Next steps</title>
<para>Depending on your needs for the environment, optionally complete procedures described in <xref linkend="post-optional-con_openshift-templates"/>.</para>
</formalpara>
</section>
</section>
<section xml:id="freeform-server-managed-deploy-assy_openshift-templates">
<title>Deploying an additional managed KIE Server for a freeform environment</title>
<simpara>You can add a managed KIE Server to a freeform environment. This server can use a PostgreSQL or MySQL database server in a pod or an external database server.</simpara>
<simpara>Deploy the server in the same project as the Business Central Monitoring deployment.</simpara>
<simpara>The KIE Server loads services from a Maven repository.</simpara>
<simpara>The server starts with no loaded services. Use Business Central Monitoring or the REST API of the KIE Server to deploy and undeploy services on the server.</simpara>
<section xml:id="template-deploy-start-freeform-server-managed-proc">
<title>Starting configuration of the template for an additional managed KIE Server</title>
<simpara>To deploy an additional managed KIE Server, use the <literal>{template_name}</literal> template file.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Download the <literal>rhpam-7.10.0-openshift-templates.zip</literal> product deliverable file from the <link xl:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?downloadType=distributions&amp;product=rhpam&amp;productChanged=yes">Software Downloads</link> page of the Red Hat Customer Portal.</simpara>
</listitem>
<listitem>
<simpara>Extract the <literal>{template_name}</literal> template file.</simpara>
</listitem>
<listitem>
<simpara>Use one of the following methods to start deploying the template:</simpara>
<itemizedlist>
<listitem>
<simpara>To use the OpenShift Web UI, in the OpenShift application console select <emphasis role="strong">Add to Project &#8594; Import YAML / JSON</emphasis> and then select or paste the <literal>{template_name}</literal> file. In the <emphasis role="strong">Add Template</emphasis> window, ensure <emphasis role="strong">Process the template</emphasis> is selected and click <emphasis role="strong">Continue</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>To use the OpenShift command line console, prepare the following command line:</simpara>
<screen>oc new-app -f &lt;template-path&gt;/{template_name}  -p PARAMETER=value</screen>
<simpara>In this command line, make the following changes:</simpara>
<itemizedlist>
<listitem>
<simpara>Replace <literal>&lt;template-path&gt;</literal> with the path to the downloaded template file.</simpara>
</listitem>
<listitem>
<simpara>Use as many <literal>-p PARAMETER=value</literal> pairs as needed to set the required parameters.</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
<formalpara>
<title>Next steps</title>
<para>Set the parameters for the template. Follow the steps in <xref linkend="template-deploy-mandatory-freeform-server-managed-proc"/> to set common parameters. You can view the template file to see descriptions for all parameters.</para>
</formalpara>
</section>
<section xml:id="template-deploy-mandatory-freeform-server-managed-proc">
<title>Setting required parameters for an additional managed KIE Server</title>
<simpara>When configuring the template to deploy an additional managed KIE Server, you must set the following parameters in all cases.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-freeform-server-managed-proc"/>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Set the following parameters:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Credentials secret</emphasis> (<literal>CREDENTIALS_SECRET</literal>): The name of the secret containing the administrative user credentials, as created in <xref linkend="secret-adminuser-create-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Application Name</emphasis> (<literal>APPLICATION_NAME</literal>): The name of the OpenShift application. It is used in the default URLs for Business Central Monitoring and KIE Server. OpenShift uses the application name to create a separate set of deployment configurations, services, routes, labels, and artifacts.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">ImageStream Namespace</emphasis> (<literal>IMAGE_STREAM_NAMESPACE</literal>): The namespace where the image streams are available. If the image streams were already available in your OpenShift environment (see <xref linkend="imagestreams-file-install-proc_openshift-templates"/>), the namespace is <literal>openshift</literal>. If you have installed the image streams file, the namespace is the name of the OpenShift project.</simpara>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-freeform-server-managed-proc"/>.</simpara>
</section>
<section xml:id="template-deploy-namespace-freeform-server-managed-proc">
<title>Configuring the image stream namespace for an additional managed KIE Server</title>
<simpara>If you created image streams in a namespace that is not <literal>openshift</literal>, you must configure the namespace in the template.</simpara>
<simpara>If all image streams were already available in your Red Hat OpenShift Container Platform environment, you can skip this procedure.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-freeform-server-managed-proc"/>.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Procedure</title>
<para>If you installed an image streams file according to instructions in <xref linkend="imagestreams-file-install-proc_openshift-templates"/>, set the <emphasis role="strong">ImageStream Namespace</emphasis> (<literal>IMAGE_STREAM_NAMESPACE</literal>) parameter to the name of your OpenShift project.</para>
</formalpara>
</section>
<section xml:id="template-deploy-connectcentral-freeform-server-managed-proc">
<title>Configuring information about a Business Central Monitoring instance for an additional managed KIE Server</title>
<simpara>If you want to enable a connection from a Business Central Monitoring instance in the same namespace to the KIE Server,
you must configure information about the Business Central Monitoring instance.</simpara>
<simpara>The Business Central Monitoring instance must be configured with the same credentials secret (<literal>CREDENTIALS_SECRET</literal>) as the KIE Server.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-freeform-server-managed-proc"/>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Set the following parameters:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Name of the Business Central service</emphasis> (<literal>BUSINESS_CENTRAL_SERVICE</literal>): The OpenShift service name for the Business Central Monitoring.</simpara>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-freeform-server-managed-proc"/>.</simpara>
</section>
<section xml:id="template-deploy-nopubnet-freeform-server-managed-proc">
<title>Configuring access to a Maven mirror in an environment without a connection to the public Internet for an additional managed KIE Server</title>
<simpara>When configuring the template to deploy an additional managed KIE Server, if your OpenShift environment does not have a connection to the public Internet, you must configure access to a Maven mirror that you set up according to <xref linkend="offline-repo-proc_openshift-templates"/>.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-freeform-server-managed-proc"/>.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Procedure</title>
<para>To configure access to the Maven mirror, set the following parameters:</para>
</formalpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Maven mirror URL</emphasis> (<literal>MAVEN_MIRROR_URL</literal>): The URL for the Maven mirror repository that you set up in <xref linkend="offline-repo-proc_openshift-templates"/>. This URL must be accessible from a pod in your OpenShift environment.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Maven mirror of</emphasis> (<literal>MAVEN_MIRROR_OF</literal>): The value that determines which artifacts are to be retrieved from the mirror. For instructions about setting the <literal>mirrorOf</literal> value, see <link xl:href="https://maven.apache.org/guides/mini/guide-mirror-settings.html">Mirror Settings</link> in the Apache Maven documentation.
The default value is <literal>external:*</literal>. With this value, Maven retrieves every required artifact from the mirror and does not query any other repositories.</simpara>
<itemizedlist>
<listitem>
<simpara>If you configure an external Maven repository (<literal>MAVEN_REPO_URL</literal>), change <literal>MAVEN_MIRROR_OF</literal> to exclude the artifacts in this repository from the mirror, for example, <literal>external:*,!repo-custom</literal>. Replace <literal>repo-custom</literal> with the ID that you configured in <literal>MAVEN_REPO_ID</literal>.</simpara>
</listitem>
<listitem>
<simpara>If you configure a built-in Business Central Maven repository (<literal>BUSINESS_CENTRAL_MAVEN_SERVICE</literal>), change <literal>MAVEN_MIRROR_OF</literal> to exclude the artifacts in this repository from the mirror: <literal>external:*,!repo-rhpamcentr</literal>.</simpara>
</listitem>
<listitem>
<simpara>If you configure both repositories, change <literal>MAVEN_MIRROR_OF</literal> to exclude the artifacts in both repositories from the mirror: <literal>external:*,!repo-rhpamcentr,!repo-custom</literal>. Replace <literal>repo-custom</literal> with the ID that you configured in <literal>MAVEN_REPO_ID</literal>.</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-freeform-server-managed-proc"/>.</simpara>
</section>
<section xml:id="template-deploy-rhsso-freeform-server-managed-proc">
<title>Setting parameters for RH-SSO authentication for an additional managed KIE Server</title>
<simpara>If you want to use RH-SSO authentication, complete the following additional configuration when configuring the template to deploy an additional managed KIE Server.</simpara>
<important>
<simpara>Do not configure LDAP authentication and RH-SSO authentication in the same deployment.</simpara>
</important>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>A realm for Red Hat Process Automation Manager is created in the RH-SSO authentication system.</simpara>
</listitem>
<listitem>
<simpara>User names and passwords for Red Hat Process Automation Manager are created in the RH-SSO authentication system. For a list of the available roles, see <xref linkend="roles-users-con_openshift-templates"/>.</simpara>
<simpara>You must create a user with the username and password configured in the secret for the administrative user, as described in <xref linkend="secret-adminuser-create-proc_openshift-templates"/>. This user must have the <literal>kie-server,rest-all,admin</literal> roles.</simpara>
</listitem>
<listitem>
<simpara>Clients are created in the RH-SSO authentication system for all components of the Red Hat Process Automation Manager environment that you are deploying. The client setup contains the URLs for the components. You can review and edit the URLs after deploying the environment. Alternatively, the Red Hat Process Automation Manager deployment can create the clients. However, this option provides less detailed control over the environment.</simpara>
</listitem>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-freeform-server-managed-proc"/>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Set the following parameters:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">RH-SSO URL</emphasis> (<literal>SSO_URL</literal>): The URL for RH-SSO.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">RH-SSO Realm name</emphasis> (<literal>SSO_REALM</literal>): The RH-SSO realm for Red Hat Process Automation Manager.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">RH-SSO Disable SSL Certificate Validation</emphasis> (<literal>SSO_DISABLE_SSL_CERTIFICATE_VALIDATION</literal>): Set to <literal>true</literal> if your RH-SSO installation does not use a valid HTTPS certificate.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Complete one of the following procedures:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>If you created the clients for Red Hat Process Automation Manager within RH-SSO,
set the following parameters in the template:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Business Central Monitoring RH-SSO Client name</emphasis> (<literal>BUSINESS_CENTRAL_SSO_CLIENT</literal>): The RH-SSO client name for Business Central Monitoring.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>To create the clients for Red Hat Process Automation Manager within RH-SSO, set the following parameters in the template:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">RH-SSO Realm Admin Username</emphasis> (<literal>SSO_USERNAME</literal>) and <emphasis role="strong">RH-SSO Realm Admin Password</emphasis> (<literal>SSO_PASSWORD</literal>): The user name and password for the realm administrator user for the RH-SSO realm for Red Hat Process Automation Manager. You must provide this user name and password in order to create the required clients.</simpara>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
</listitem>
</orderedlist>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-freeform-server-managed-proc"/>.</simpara>
<simpara>After completing the deployment, review the URLs for components of Red Hat Process Automation Manager in the RH-SSO authentication system to ensure they are correct.</simpara>
</section>
<section xml:id="template-deploy-ldap-freeform-server-managed-proc">
<title>Setting parameters for LDAP authentication for an additional managed KIE Server</title>
<simpara>If you want to use LDAP authentication, complete the following additional configuration when configuring the template to deploy an additional managed KIE Server.</simpara>
<important>
<simpara>Do not configure LDAP authentication and RH-SSO authentication in the same deployment.</simpara>
</important>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You created user names and passwords for Red Hat Process Automation Manager in the LDAP system. For a list of the available roles, see <xref linkend="roles-users-con_openshift-templates"/>.</simpara>
<simpara>You must create a user with the username and password configured in the secret for the administrative user, as described in <xref linkend="secret-adminuser-create-proc_openshift-templates"/>. This user must have the <literal>kie-server,rest-all,admin</literal> roles.</simpara>
</listitem>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-freeform-server-managed-proc"/>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Set the <literal>AUTH_LDAP*</literal> parameters of the template. These parameters correspond to the settings of the <literal>LdapExtended</literal> Login module of Red Hat JBoss EAP. For instructions about using these settings, see <link xl:href="https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.0/html-single/login_module_reference/#ldapextended_login_module">LdapExtended login module</link>.</simpara>
<note>
<simpara>If you want to enable LDAP failover, you can put set or more LDAP server addresses in the <literal>AUTH_LDAP_URL</literal> parameter, separated by a space.</simpara>
</note>
<simpara>If the LDAP server does not define all the roles required for your deployment, you can map LDAP groups to Red Hat Process Automation Manager roles. To enable LDAP role mapping, set the following parameters:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">RoleMapping rolesProperties file path</emphasis> (<literal>AUTH_ROLE_MAPPER_ROLES_PROPERTIES</literal>): The fully qualified path name of a file that defines role mapping, for example, <literal>/opt/eap/standalone/configuration/rolemapping/rolemapping.properties</literal>. You must provide this file and mount it at this path in all applicable deployment configurations; for instructions, see <xref linkend="rolemapping-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">RoleMapping replaceRole property</emphasis> (<literal>AUTH_ROLE_MAPPER_REPLACE_ROLE</literal>): If set to <literal>true</literal>, mapped roles replace the roles defined on the LDAP server; if set to <literal>false</literal>, both mapped roles and roles defined on the LDAP server are set as user application roles. The default setting is <literal>false</literal>.</simpara>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-freeform-server-managed-proc"/>.</simpara>
</section>
<section xml:id="template-deploy-externaldb-freeform-server-managed-proc">
<title>Setting parameters for using an external database server for an additional managed KIE Server</title>
<simpara>If you are using the <literal>rhpam710-kieserver-externaldb.yaml</literal> template to use an external database server for the KIE Server,
complete the following additional configuration when configuring the template to deploy an additional managed KIE Server.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-freeform-server-managed-proc"/>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Set the following parameters:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">KIE Server External Database Driver</emphasis> (<literal>KIE_SERVER_EXTERNALDB_DRIVER</literal>): The driver for the server, depending on the server type:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>mysql</literal></simpara>
</listitem>
<listitem>
<simpara><literal>postgresql</literal></simpara>
</listitem>
<listitem>
<simpara><literal>mariadb</literal></simpara>
</listitem>
<listitem>
<simpara><literal>mssql</literal></simpara>
</listitem>
<listitem>
<simpara><literal>db2</literal></simpara>
</listitem>
<listitem>
<simpara><literal>oracle</literal></simpara>
</listitem>
<listitem>
<simpara><literal>sybase</literal></simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server External Database User</emphasis> (<literal>KIE_SERVER_EXTERNALDB_USER</literal>) and KIE Server External Database Password (<literal>KIE_SERVER_EXTERNALDB_PWD</literal>): The user name and password for the external database server</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server External Database URL</emphasis> (<literal>KIE_SERVER_EXTERNALDB_URL</literal>): The JDBC URL for the external database server</simpara>
<note>
<simpara>If you are using the EntrepriseDB Postgres database server, use an URL starting with <literal>jdbc:postgresql://</literal> and not with <literal>jdbc:edb://</literal>. Alternatively, do not set the URL and set the host and port parameters instead.</simpara>
</note>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server External Database Host</emphasis> (<literal>KIE_SERVER_EXTERNALDB_SERVICE_HOST</literal>) and  <emphasis role="strong">KIE Server External Database Port</emphasis> (<literal>KIE_SERVER_EXTERNALDB_SERVICE_PORT</literal>): The host name and port number of the external database server. You can set these parameters as an alternative to setting the <literal>KIE_SERVER_EXTERNALDB_URL</literal> parameter.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server External Database Dialect</emphasis> (<literal>KIE_SERVER_EXTERNALDB_DIALECT</literal>): The Hibernate dialect for the server, depending on the server type. The common settings are:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>org.hibernate.dialect.MySQL5InnoDBDialect</literal></simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.MySQL8Dialect</literal></simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.MariaDB102Dialect</literal></simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.PostgreSQL95Dialect</literal></simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.PostgresPlusDialect</literal> (used for EntrepriseDB Postgres Advanced Server)</simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.SQLServer2012Dialect</literal> (used for MS SQL)</simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.DB2Dialect</literal></simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.Oracle10gDialect</literal></simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.SybaseASE15Dialect</literal></simpara>
<simpara>For a complete list of supported dialects, see the <emphasis>Hibernate SQL Dialects</emphasis> table in <link xl:href="https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.3/html-single/developing_hibernate_applications/index#hibernate_properties">Hibernate properties</link> in the Red Hat JBoss EAP documentation.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server External Database name</emphasis> (<literal>KIE_SERVER_EXTERNALDB_DB</literal>): The database name to use on the external database server</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">JDBC Connection Checker class</emphasis> (<literal>KIE_SERVER_EXTERNALDB_CONNECTION_CHECKER</literal>): The name of the JDBC connection checker class for the database server. Without this information, a database server connection cannot be restored after it is lost, for example, if the database server is rebooted.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">JDBC Exception Sorter class</emphasis> (<literal>KIE_SERVER_EXTERNALDB_EXCEPTION_SORTER</literal>): The name of the JDBC exception sorter class for the database server. Without this information, a database server connection cannot be restored after it is lost, for example, if the database server is rebooted.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>If you created a custom image for using an external database server, as described in <xref linkend="externaldb-build-proc_openshift-templates"/>, set the following parameters:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Drivers Extension Image</emphasis> (<literal>EXTENSIONS_IMAGE</literal>): The ImageStreamTag definition of the extension image, for example, <literal>jboss-kie-db2-extension-openshift-image:11.1.4.4</literal></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Drivers ImageStream Namespace</emphasis> (<literal>EXTENSIONS_IMAGE_NAMESPACE</literal>): The namespace to which you uploaded the extension image, for example, <literal>openshift</literal> or your project namespace.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>If you are using a MySQL version 8 external database server, enable the <literal>mysql_native_password</literal> plugin and use it for authentication. For instructions about this pluding, see <link xl:href="https://dev.mysql.com/doc/refman/8.0/en/native-pluggable-authentication.html">Native Pluggable Authentication</link> in the <emphasis>MySQL 8.0 Reference Manual</emphasis>.</simpara>
<simpara>If you are using a MySQL version 8 image provided by Red Hat on Red Hat OpenShift Container Platform, to enable the plugin, set the <literal>MYSQL_DEFAULT_AUTHENTICATION_PLUGIN</literal> environment variable to <literal>mysql_native_password</literal>.</simpara>
<simpara>If you created users on the MySQL version 8 server before enabling the <literal>mysql_native_password</literal> plugin, you must update the <literal>mysql-user</literal> table after you enable the plugin.</simpara>
</listitem>
</orderedlist>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-freeform-server-managed-proc"/>.</simpara>
</section>
<section xml:id="template-deploy-prometheus-freeform-server-managed-proc">
<title>Enabling Prometheus metric collection for an additional managed KIE Server</title>
<simpara>If you want to configure your KIE Server deployment to use Prometheus to collect and store metrics, enable support for this feature in KIE Server at deployment time.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-freeform-server-managed-proc"/>.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Procedure</title>
<para>To enable support for Prometheus metric collection, set the <emphasis role="strong">Prometheus Server Extension Disabled</emphasis> (<literal>PROMETHEUS_SERVER_EXT_DISABLED</literal>) parameter to <literal>false</literal>.</para>
</formalpara>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-freeform-server-managed-proc"/>.</simpara>
<simpara>For instructions about configuring Prometheus metrics collection, see <link xl:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/managing_red_hat_process_automation_manager_and_kie_server_settings#prometheus-monitoring-ocp-proc_execution-server"><emphasis>Managing and monitoring KIE Server</emphasis></link>.</simpara>
</section>
<section xml:id="template-deploy-complete-freeform-server-managed-proc">
<title>Completing deployment of the template for an additional managed KIE Server</title>
<simpara>After setting all the required parameters in the OpenShift Web UI or in the command line, complete deployment of the template.</simpara>
<formalpara>
<title>Procedure</title>
<para>Depending on the method that you are using, complete the following steps:</para>
</formalpara>
<itemizedlist>
<listitem>
<simpara>In the OpenShift Web UI, click <emphasis role="strong">Create</emphasis>.</simpara>
<itemizedlist>
<listitem>
<simpara>If the <literal>This will create resources that may have security or project behavior implications</literal> message appears, click <emphasis role="strong">Create Anyway</emphasis>.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Complete the command line and press Enter.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Next steps</title>
<para>Depending on your needs for the environment, optionally complete procedures described in <xref linkend="post-optional-con_openshift-templates"/>.</para>
</formalpara>
</section>
</section>
</chapter>
<chapter xml:id="environment-managed-con_openshift-templates">
<title>Fixed managed server environment</title>
<simpara>You can deploy a fixed managed server environment that, in a single deployment, includes several different pods running KIE Server. No processes are initially loaded on the servers. The database servers are, by default, also run in pods. Each KIE Server pod can be separately scaled as necessary.</simpara>
<simpara>A pod with Business Central Monitoring and a pod with Smart Router are also deployed. You must use Business Central Monitoring to deploy, load, and unload processes on your KIE Servers. You can also use it to view monitoring information.</simpara>
<simpara>Smart Router is a single endpoint that can receive calls from client applications to any of your processes and route each call automatically to the server that runs the process.</simpara>
<simpara>By default, the templates create two independent KIE Servers. You can modify the template to change the number of KIE Servers before deployment. You cannot easily add or remove KIE Servers at a later time.</simpara>
<simpara>You must provide a Maven repository with the processes (KJAR files) that you want to deploy on the servers. Your integration process must ensure that the required versions of the processes are uploaded to the Maven repository. You can use Business Central in a development environment to create the processes and upload them to the Maven repository.</simpara>
<section xml:id="fixed-deploy-assy_openshift-templates">
<title>Deploying a fixed managed server environment</title>
<simpara>You can deploy a fixed managed server environment using a single template. The name of the template file is <literal>rhpam710-prod.yaml</literal>.</simpara>
<simpara>The template includes two KIE Server pods (with PostgreSQL database pods), Smart Router in a high-availability configuration, and Business Central Monitoring in a high-availability configuration.</simpara>
<simpara>You can change the number of replicas of all components when configuring the deployment. If you want to modify the number of independent KIE Server pods or to use a different database server, you must modify the template. For instructions about modifying the template, see <xref linkend="environment-managed-modify-proc_openshift-templates"/>.</simpara>
<note>
<simpara>The fixed managed environment template is deprecated in Red Hat Process Automation Manager 7.10. It will be removed in a future release.</simpara>
</note>
<section xml:id="template-deploy-start-openshift-templates-fixed-proc">
<title>Starting configuration of the template for a fixed managed server environment</title>
<simpara>To deploy a fixed managed server environment, use the <literal>rhpam710-prod.yaml</literal> template file.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Download the <literal>rhpam-7.10.0-openshift-templates.zip</literal> product deliverable file from the <link xl:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?downloadType=distributions&amp;product=rhpam&amp;productChanged=yes">Software Downloads</link> page of the Red Hat Customer Portal.</simpara>
</listitem>
<listitem>
<simpara>Extract the <literal>rhpam710-prod.yaml</literal> template file.</simpara>
</listitem>
<listitem>
<simpara>By default, the template includes two KIE Servers. Each of the serves uses a PostgreSQL database server in a pod. To change the number of KIE Servers or to use a MySQL database server in a pod or an external database server, modify the template as described in <xref linkend="environment-managed-modify-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara>Use one of the following methods to start deploying the template:</simpara>
<itemizedlist>
<listitem>
<simpara>To use the OpenShift Web UI, in the OpenShift application console select <emphasis role="strong">Add to Project &#8594; Import YAML / JSON</emphasis> and then select or paste the <literal>rhpam710-prod.yaml</literal> file. In the <emphasis role="strong">Add Template</emphasis> window, ensure <emphasis role="strong">Process the template</emphasis> is selected and click <emphasis role="strong">Continue</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>To use the OpenShift command line console, prepare the following command line:</simpara>
<screen>oc new-app -f &lt;template-path&gt;/rhpam710-prod.yaml -p BUSINESS_CENTRAL_HTTPS_SECRET=businesscentral-app-secret -p KIE_SERVER_HTTPS_SECRET=kieserver-app-secret -p PARAMETER=value</screen>
<simpara>In this command line, make the following changes:</simpara>
<itemizedlist>
<listitem>
<simpara>Replace <literal>&lt;template-path&gt;</literal> with the path to the downloaded template file.</simpara>
</listitem>
<listitem>
<simpara>Use as many <literal>-p PARAMETER=value</literal> pairs as needed to set the required parameters.</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
<formalpara>
<title>Next steps</title>
<para>Set the parameters for the template. Follow the steps in <xref linkend="template-deploy-mandatory-openshift-templates-fixed-proc"/> to set common parameters. You can view the template file to see descriptions for all parameters.</para>
</formalpara>
</section>
<section xml:id="template-deploy-mandatory-openshift-templates-fixed-proc">
<title>Setting required parameters for a fixed managed server environment</title>
<simpara>When configuring the template to deploy a fixed managed server environment, you must set the following parameters in all cases.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-fixed-proc"/>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Set the following parameters:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Credentials secret</emphasis> (<literal>CREDENTIALS_SECRET</literal>): The name of the secret containing the administrative user credentials, as created in <xref linkend="secret-adminuser-create-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Business Central Monitoring Server Keystore Secret Name</emphasis> (<literal>BUSINESS_CENTRAL_HTTPS_SECRET</literal>): The name of the secret for Business Central, as created in <xref linkend="secrets-central-create-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server Keystore Secret Name</emphasis> (<literal>KIE_SERVER_HTTPS_SECRET</literal>): The name of the secret for KIE Server, as created in <xref linkend="secrets-kie-create-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Smart Router Keystore Secret Name</emphasis> (<literal>KIE_SERVER_ROUTER_HTTPS_SECRET</literal>): The name of the secret for Smart Router, as created in <xref linkend="secrets-smartrouter-create-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Business Central Monitoring Server Certificate Name</emphasis> (<literal>BUSINESS_CENTRAL_HTTPS_NAME</literal>): The name of the certificate in the keystore that you created in <xref linkend="secrets-central-create-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Business Central Monitoring Server Keystore Password</emphasis> (<literal>BUSINESS_CENTRAL_HTTPS_PASSWORD</literal>): The password for the keystore that you created in <xref linkend="secrets-central-create-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server Certificate Name</emphasis> (<literal>KIE_SERVER_HTTPS_NAME</literal>): The name of the certificate in the keystore that you created in <xref linkend="secrets-kie-create-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server Keystore Password</emphasis> (<literal>KIE_SERVER_HTTPS_PASSWORD</literal>): The password for the keystore that you created in <xref linkend="secrets-kie-create-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Smart Router Certificate Name</emphasis> (<literal>KIE_SERVER_ROUTER_HTTPS_NAME</literal>): The name of the certificate in the keystore that you created in <xref linkend="secrets-smartrouter-create-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Smart Router Keystore Password</emphasis> (<literal>KIE_SERVER_ROUTER_HTTPS_PASSWORD</literal>): The password for the keystore that you created in <xref linkend="secrets-smartrouter-create-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Application Name</emphasis> (<literal>APPLICATION_NAME</literal>): The name of the OpenShift application. It is used in the default URLs for Business Central Monitoring and KIE Server. OpenShift uses the application name to create a separate set of deployment configurations, services, routes, labels, and artifacts.
You can deploy several applications using the same template into the same project, as long as you use different application names. Also, the application name determines the name of the server configuration (server template) that the KIE Server joins on Business Central Monitoring. If you are deploying several KIE Servers, you must ensure each of the servers has a different application name.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Maven repository URL</emphasis> (<literal>MAVEN_REPO_URL</literal>): A URL for a Maven repository. You must upload all the processes (KJAR files) that are to be deployed
on the KIE Server
into this repository.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Maven repository ID</emphasis> (<literal>MAVEN_REPO_ID</literal>): An identifier for the Maven repository. The default value is <literal>repo-custom</literal>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Maven repository username</emphasis> (<literal>MAVEN_REPO_USERNAME</literal>): The user name for the Maven repository.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Maven repository password</emphasis> (<literal>MAVEN_REPO_PASSWORD</literal>): The password for the Maven repository.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server Mode</emphasis> (<literal>KIE_SERVER_MODE</literal>): In the <literal>rhpam710-kieserver-*.yaml</literal> templates the default value is <literal>PRODUCTION</literal>. In <literal>PRODUCTION</literal> mode, you cannot deploy <literal>SNAPSHOT</literal> versions of KJAR artifacts on the KIE Server and cannot change versions of an artifact in an existing container. To deploy a new version with <literal>PRODUCTION</literal> mode, create a new container on the same KIE Server. To deploy <literal>SNAPSHOT</literal> versions or to change versions of an artifact in an existing container, set this parameter to <literal>DEVELOPMENT</literal>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">ImageStream Namespace</emphasis> (<literal>IMAGE_STREAM_NAMESPACE</literal>): The namespace where the image streams are available. If the image streams were already available in your OpenShift environment (see <xref linkend="imagestreams-file-install-proc_openshift-templates"/>), the namespace is <literal>openshift</literal>. If you have installed the image streams file, the namespace is the name of the OpenShift project.</simpara>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-openshift-templates-fixed-proc"/>.</simpara>
</section>
<section xml:id="template-deploy-namespace-openshift-templates-fixed-proc">
<title>Configuring the image stream namespace for a fixed managed server environment</title>
<simpara>If you created image streams in a namespace that is not <literal>openshift</literal>, you must configure the namespace in the template.</simpara>
<simpara>If all image streams were already available in your Red Hat OpenShift Container Platform environment, you can skip this procedure.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-fixed-proc"/>.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Procedure</title>
<para>If you installed an image streams file according to instructions in <xref linkend="imagestreams-file-install-proc_openshift-templates"/>, set the <emphasis role="strong">ImageStream Namespace</emphasis> (<literal>IMAGE_STREAM_NAMESPACE</literal>) parameter to the name of your OpenShift project.</para>
</formalpara>
</section>
<section xml:id="template-deploy-replicas-openshift-templates-fixed-proc">
<title>Configuring pod replica numbers for a fixed managed server environment</title>
<simpara>When configuring the template to deploy a fixed managed server environment, you can set the initial number of replicas for
KIE Server, Business Central Monitoring, and Smart Router.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-fixed-proc"/>.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Procedure</title>
<para>To configure the numbers of replicas, set the following parameters:</para>
</formalpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Business Central Monitoring Container Replicas</emphasis> (<literal>BUSINESS_CENTRAL_MONITORING_CONTAINER_REPLICAS</literal>): The number of replicas that the deployment initially creates for Business Central Monitoring. If you do not want to use a high-availability configuration for Business Central Monitoring, set this number to 1.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server Container Replicas</emphasis> (<literal>KIE_SERVER_CONTAINER_REPLICAS</literal>): The number of replicas that the deployment initially creates for KIE Server.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Smart Router Container Replicas</emphasis> (<literal>SMART_ROUTER_CONTAINER_REPLICAS</literal>): The number of replicas that the deployment initially creates for Smart Router.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-openshift-templates-fixed-proc"/>.</simpara>
</section>
<section xml:id="template-deploy-nopubnet-openshift-templates-fixed-proc">
<title>Configuring access to a Maven mirror in an environment without a connection to the public Internet for a fixed managed server environment</title>
<simpara>When configuring the template to deploy a fixed managed server environment, if your OpenShift environment does not have a connection to the public Internet, you must configure access to a Maven mirror that you set up according to <xref linkend="offline-repo-proc_openshift-templates"/>.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-fixed-proc"/>.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Procedure</title>
<para>To configure access to the Maven mirror, set the following parameters:</para>
</formalpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Maven mirror URL</emphasis> (<literal>MAVEN_MIRROR_URL</literal>): The URL for the Maven mirror repository that you set up in <xref linkend="offline-repo-proc_openshift-templates"/>. This URL must be accessible from a pod in your OpenShift environment.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Maven mirror of</emphasis> (<literal>MAVEN_MIRROR_OF</literal>): The value that determines which artifacts are to be retrieved from the mirror. For instructions about setting the <literal>mirrorOf</literal> value, see <link xl:href="https://maven.apache.org/guides/mini/guide-mirror-settings.html">Mirror Settings</link> in the Apache Maven documentation.
The default value is <literal>external:*</literal>. With this value, Maven retrieves every required artifact from the mirror and does not query any other repositories.</simpara>
<itemizedlist>
<listitem>
<simpara>If you configure an external Maven repository (<literal>MAVEN_REPO_URL</literal>), change <literal>MAVEN_MIRROR_OF</literal> to exclude the artifacts in this repository from the mirror, for example, <literal>external:*,!repo-custom</literal>. Replace <literal>repo-custom</literal> with the ID that you configured in <literal>MAVEN_REPO_ID</literal>.</simpara>
</listitem>
<listitem>
<simpara>If you configure a built-in Business Central Maven repository (<literal>BUSINESS_CENTRAL_MAVEN_SERVICE</literal>), change <literal>MAVEN_MIRROR_OF</literal> to exclude the artifacts in this repository from the mirror: <literal>external:*,!repo-rhpamcentr</literal>.</simpara>
</listitem>
<listitem>
<simpara>If you configure both repositories, change <literal>MAVEN_MIRROR_OF</literal> to exclude the artifacts in both repositories from the mirror: <literal>external:*,!repo-rhpamcentr,!repo-custom</literal>. Replace <literal>repo-custom</literal> with the ID that you configured in <literal>MAVEN_REPO_ID</literal>.</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-openshift-templates-fixed-proc"/>.</simpara>
</section>
<section xml:id="template-deploy-rhsso-openshift-templates-fixed-proc">
<title>Setting parameters for RH-SSO authentication for a fixed managed server environment</title>
<simpara>If you want to use RH-SSO authentication, complete the following additional configuration when configuring the template to deploy a fixed managed server environment.</simpara>
<important>
<simpara>Do not configure LDAP authentication and RH-SSO authentication in the same deployment.</simpara>
</important>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>A realm for Red Hat Process Automation Manager is created in the RH-SSO authentication system.</simpara>
</listitem>
<listitem>
<simpara>User names and passwords for Red Hat Process Automation Manager are created in the RH-SSO authentication system. For a list of the available roles, see <xref linkend="roles-users-con_openshift-templates"/>.</simpara>
<simpara>You must create a user with the username and password configured in the secret for the administrative user, as described in <xref linkend="secret-adminuser-create-proc_openshift-templates"/>. This user must have the <literal>kie-server,rest-all,admin</literal> roles.</simpara>
</listitem>
<listitem>
<simpara>Clients are created in the RH-SSO authentication system for all components of the Red Hat Process Automation Manager environment that you are deploying. The client setup contains the URLs for the components. You can review and edit the URLs after deploying the environment. Alternatively, the Red Hat Process Automation Manager deployment can create the clients. However, this option provides less detailed control over the environment.</simpara>
</listitem>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-fixed-proc"/>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Set the following parameters:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">RH-SSO URL</emphasis> (<literal>SSO_URL</literal>): The URL for RH-SSO.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">RH-SSO Realm name</emphasis> (<literal>SSO_REALM</literal>): The RH-SSO realm for Red Hat Process Automation Manager.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">RH-SSO Disable SSL Certificate Validation</emphasis> (<literal>SSO_DISABLE_SSL_CERTIFICATE_VALIDATION</literal>): Set to <literal>true</literal> if your RH-SSO installation does not use a valid HTTPS certificate.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Complete one of the following procedures:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>If you created the client for Red Hat Process Automation Manager within RH-SSO,
set the following parameters in the template:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Business Central Monitoring RH-SSO Client name</emphasis> (<literal>BUSINESS_CENTRAL_SSO_CLIENT</literal>): The RH-SSO client name for Business Central Monitoring.</simpara>
</listitem>
<listitem>
<simpara>For each KIE Server defined in the template:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">KIE Server <emphasis>n</emphasis> RH-SSO Client name</emphasis> (<literal>KIE_SERVER<emphasis>n</emphasis>_SSO_CLIENT</literal>): The RH-SSO client name for this KIE Server.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server <emphasis>n</emphasis> RH-SSO Client Secret</emphasis> (<literal>KIE_SERVER<emphasis>n</emphasis>_SSO_SECRET</literal>): The secret string that is set in RH-SSO for the client for this KIE Server.</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>To create the clients for Red Hat Process Automation Manager within RH-SSO, set the following parameters in the template:</simpara>
<itemizedlist>
<listitem>
<simpara>For each KIE Server defined in the template:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">KIE Server <emphasis>n</emphasis> RH-SSO Client name</emphasis> (<literal>KIE_SERVER<emphasis>n</emphasis>_SSO_CLIENT</literal>): The name of the client to create in RH-SSO for this KIE Server.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server <emphasis>n</emphasis> RH-SSO Client Secret</emphasis> (<literal>KIE_SERVER<emphasis>n</emphasis>_SSO_SECRET</literal>): The secret string to set in RH-SSO for the client for this KIE Server.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara><emphasis role="strong">RH-SSO Realm Admin Username</emphasis> (<literal>SSO_USERNAME</literal>) and <emphasis role="strong">RH-SSO Realm Admin Password</emphasis> (<literal>SSO_PASSWORD</literal>): The user name and password for the realm administrator user for the RH-SSO realm for Red Hat Process Automation Manager. You must provide this user name and password in order to create the required clients.</simpara>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
</listitem>
</orderedlist>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-openshift-templates-fixed-proc"/>.</simpara>
<simpara>After completing the deployment, review the URLs for components of Red Hat Process Automation Manager in the RH-SSO authentication system to ensure they are correct.</simpara>
</section>
<section xml:id="template-deploy-ldap-openshift-templates-fixed-proc">
<title>Setting parameters for LDAP authentication for a fixed managed server environment</title>
<simpara>If you want to use LDAP authentication, complete the following additional configuration when configuring the template to deploy a fixed managed server environment.</simpara>
<important>
<simpara>Do not configure LDAP authentication and RH-SSO authentication in the same deployment.</simpara>
</important>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You created user names and passwords for Red Hat Process Automation Manager in the LDAP system. For a list of the available roles, see <xref linkend="roles-users-con_openshift-templates"/>.</simpara>
<simpara>You must create a user with the username and password configured in the secret for the administrative user, as described in <xref linkend="secret-adminuser-create-proc_openshift-templates"/>. This user must have the <literal>kie-server,rest-all,admin</literal> roles.</simpara>
</listitem>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-fixed-proc"/>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Set the <literal>AUTH_LDAP*</literal> parameters of the template. These parameters correspond to the settings of the <literal>LdapExtended</literal> Login module of Red Hat JBoss EAP. For instructions about using these settings, see <link xl:href="https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.0/html-single/login_module_reference/#ldapextended_login_module">LdapExtended login module</link>.</simpara>
<note>
<simpara>If you want to enable LDAP failover, you can put set or more LDAP server addresses in the <literal>AUTH_LDAP_URL</literal> parameter, separated by a space.</simpara>
</note>
<simpara>If the LDAP server does not define all the roles required for your deployment, you can map LDAP groups to Red Hat Process Automation Manager roles. To enable LDAP role mapping, set the following parameters:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">RoleMapping rolesProperties file path</emphasis> (<literal>AUTH_ROLE_MAPPER_ROLES_PROPERTIES</literal>): The fully qualified path name of a file that defines role mapping, for example, <literal>/opt/eap/standalone/configuration/rolemapping/rolemapping.properties</literal>. You must provide this file and mount it at this path in all applicable deployment configurations; for instructions, see <xref linkend="rolemapping-proc_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">RoleMapping replaceRole property</emphasis> (<literal>AUTH_ROLE_MAPPER_REPLACE_ROLE</literal>): If set to <literal>true</literal>, mapped roles replace the roles defined on the LDAP server; if set to <literal>false</literal>, both mapped roles and roles defined on the LDAP server are set as user application roles. The default setting is <literal>false</literal>.</simpara>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-openshift-templates-fixed-proc"/>.</simpara>
</section>
<section xml:id="template-deploy-externaldb-openshift-templates-fixed-proc">
<title>Setting parameters for using an external database server for a fixed managed server environment</title>
<simpara>If you modified the template to use an external database server for the KIE Server, as described in <xref linkend="environment-managed-modify-proc_openshift-templates"/>,
complete the following additional configuration when configuring the template to deploy a fixed managed server environment.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-fixed-proc"/>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Set the following parameters:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">KIE Server External Database Driver</emphasis> (<literal>KIE_SERVER_EXTERNALDB_DRIVER</literal>): The driver for the server, depending on the server type:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>mysql</literal></simpara>
</listitem>
<listitem>
<simpara><literal>postgresql</literal></simpara>
</listitem>
<listitem>
<simpara><literal>mariadb</literal></simpara>
</listitem>
<listitem>
<simpara><literal>mssql</literal></simpara>
</listitem>
<listitem>
<simpara><literal>db2</literal></simpara>
</listitem>
<listitem>
<simpara><literal>oracle</literal></simpara>
</listitem>
<listitem>
<simpara><literal>sybase</literal></simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server External Database User</emphasis> (<literal>KIE_SERVER_EXTERNALDB_USER</literal>) and KIE Server External Database Password (<literal>KIE_SERVER_EXTERNALDB_PWD</literal>): The user name and password for the external database server</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server External Database URL</emphasis> (<literal>KIE_SERVER_EXTERNALDB_URL</literal>): The JDBC URL for the external database server</simpara>
<note>
<simpara>If you are using the EntrepriseDB Postgres database server, use an URL starting with <literal>jdbc:postgresql://</literal> and not with <literal>jdbc:edb://</literal>. Alternatively, do not set the URL and set the host and port parameters instead.</simpara>
</note>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server External Database Host</emphasis> (<literal>KIE_SERVER_EXTERNALDB_SERVICE_HOST</literal>) and  <emphasis role="strong">KIE Server External Database Port</emphasis> (<literal>KIE_SERVER_EXTERNALDB_SERVICE_PORT</literal>): The host name and port number of the external database server. You can set these parameters as an alternative to setting the <literal>KIE_SERVER_EXTERNALDB_URL</literal> parameter.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server External Database Dialect</emphasis> (<literal>KIE_SERVER_EXTERNALDB_DIALECT</literal>): The Hibernate dialect for the server, depending on the server type. The common settings are:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>org.hibernate.dialect.MySQL5InnoDBDialect</literal></simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.MySQL8Dialect</literal></simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.MariaDB102Dialect</literal></simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.PostgreSQL95Dialect</literal></simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.PostgresPlusDialect</literal> (used for EntrepriseDB Postgres Advanced Server)</simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.SQLServer2012Dialect</literal> (used for MS SQL)</simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.DB2Dialect</literal></simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.Oracle10gDialect</literal></simpara>
</listitem>
<listitem>
<simpara><literal>org.hibernate.dialect.SybaseASE15Dialect</literal></simpara>
<simpara>For a complete list of supported dialects, see the <emphasis>Hibernate SQL Dialects</emphasis> table in <link xl:href="https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.3/html-single/developing_hibernate_applications/index#hibernate_properties">Hibernate properties</link> in the Red Hat JBoss EAP documentation.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara><emphasis role="strong">KIE Server External Database name</emphasis> (<literal>KIE_SERVER_EXTERNALDB_DB</literal>): The database name to use on the external database server</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">JDBC Connection Checker class</emphasis> (<literal>KIE_SERVER_EXTERNALDB_CONNECTION_CHECKER</literal>): The name of the JDBC connection checker class for the database server. Without this information, a database server connection cannot be restored after it is lost, for example, if the database server is rebooted.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">JDBC Exception Sorter class</emphasis> (<literal>KIE_SERVER_EXTERNALDB_EXCEPTION_SORTER</literal>): The name of the JDBC exception sorter class for the database server. Without this information, a database server connection cannot be restored after it is lost, for example, if the database server is rebooted.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>If you created a custom image for using an external database server, as described in <xref linkend="externaldb-build-proc_openshift-templates"/>, set the following parameters:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Drivers Extension Image</emphasis> (<literal>EXTENSIONS_IMAGE</literal>): The ImageStreamTag definition of the extension image, for example, <literal>jboss-kie-db2-extension-openshift-image:11.1.4.4</literal></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Drivers ImageStream Namespace</emphasis> (<literal>EXTENSIONS_IMAGE_NAMESPACE</literal>): The namespace to which you uploaded the extension image, for example, <literal>openshift</literal> or your project namespace.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>If you are using a MySQL version 8 external database server, enable the <literal>mysql_native_password</literal> plugin and use it for authentication. For instructions about this pluding, see <link xl:href="https://dev.mysql.com/doc/refman/8.0/en/native-pluggable-authentication.html">Native Pluggable Authentication</link> in the <emphasis>MySQL 8.0 Reference Manual</emphasis>.</simpara>
<simpara>If you are using a MySQL version 8 image provided by Red Hat on Red Hat OpenShift Container Platform, to enable the plugin, set the <literal>MYSQL_DEFAULT_AUTHENTICATION_PLUGIN</literal> environment variable to <literal>mysql_native_password</literal>.</simpara>
<simpara>If you created users on the MySQL version 8 server before enabling the <literal>mysql_native_password</literal> plugin, you must update the <literal>mysql-user</literal> table after you enable the plugin.</simpara>
</listitem>
</orderedlist>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-openshift-templates-fixed-proc"/>.</simpara>
</section>
<section xml:id="template-deploy-prometheus-openshift-templates-fixed-proc">
<title>Enabling Prometheus metric collection for a fixed managed server environment</title>
<simpara>If you want to configure your KIE Server deployment to use Prometheus to collect and store metrics, enable support for this feature in KIE Server at deployment time.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You started the configuration of the template, as described in <xref linkend="template-deploy-start-openshift-templates-fixed-proc"/>.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Procedure</title>
<para>To enable support for Prometheus metric collection, set the <emphasis role="strong">Prometheus Server Extension Disabled</emphasis> (<literal>PROMETHEUS_SERVER_EXT_DISABLED</literal>) parameter to <literal>false</literal>.</para>
</formalpara>
<formalpara>
<title>Next steps</title>
<para>If necessary, set additional parameters.</para>
</formalpara>
<simpara>To complete the deployment, follow the procedure in <xref linkend="template-deploy-complete-openshift-templates-fixed-proc"/>.</simpara>
<simpara>For instructions about configuring Prometheus metrics collection, see <link xl:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/managing_red_hat_process_automation_manager_and_kie_server_settings#prometheus-monitoring-ocp-proc_execution-server"><emphasis>Managing and monitoring KIE Server</emphasis></link>.</simpara>
</section>
<section xml:id="template-deploy-complete-openshift-templates-fixed-proc">
<title>Completing deployment of the template for a fixed managed server environment</title>
<simpara>After setting all the required parameters in the OpenShift Web UI or in the command line, complete deployment of the template.</simpara>
<formalpara>
<title>Procedure</title>
<para>Depending on the method that you are using, complete the following steps:</para>
</formalpara>
<itemizedlist>
<listitem>
<simpara>In the OpenShift Web UI, click <emphasis role="strong">Create</emphasis>.</simpara>
<itemizedlist>
<listitem>
<simpara>If the <literal>This will create resources that may have security or project behavior implications</literal> message appears, click <emphasis role="strong">Create Anyway</emphasis>.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Complete the command line and press Enter.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Next steps</title>
<para>Depending on your needs for the environment, optionally complete procedures described in <xref linkend="post-optional-con_openshift-templates"/>.</para>
</formalpara>
</section>
</section>
<section xml:id="environment-managed-modify-proc_openshift-templates">
<title>Modifying a template for a fixed managed environment</title>
<simpara>To adjust the fixed managed environment to your needs, you need to modify the  <literal>rhpam710-prod.yaml</literal> template before deploying the environment.</simpara>
<simpara>By default, the templates create two replicated KIE Server pods. You can deploy separate processes on each of the pods. To add more replicated KIE Server pods, you need to modify the template before deploying the environment.</simpara>
<simpara>By default, the templates create a PostgreSQL pod to provide the database server for each replicated KIE Server. If you prefer to use PostgreSQL or to use an external server (outside the OpenShift project), you need to modify the template before deploying the environment.</simpara>
<simpara>For the <literal>rhpam710-prod.yaml</literal> template you can also adjust the initial number of replicas for Business Central Monitoring.</simpara>
<simpara>An OpenShift template defines a set of objects that can be created by OpenShift. To change an environment configuration, you need to modify, add, or delete these objects. To simplify this task, comments are provided in the Red Hat Process Automation Manager templates.</simpara>
<simpara>Some comments mark blocks within the template, staring with <literal>BEGIN</literal> and ending with <literal>END</literal>. For example, the following block is named <literal>Sample block</literal>:</simpara>
<screen>## Sample block BEGIN
sample line 1
sample line 2
sample line 3
## Sample block END</screen>
<simpara>For some changes, you might need to replace a block in one template file with a block from another template file provided with Red Hat Process Automation Manager. In this case, delete the block, then paste the new block in its exact location.</simpara>
<simpara>Note that named blocks can be nested.</simpara>
<itemizedlist>
<title>Procedure</title>
<listitem>
<simpara>If you want to add more replicated KIE Server pods, repeat the following actions for every additional pod:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Pick a number for the new pod. The default pods have the numbers <literal>1</literal> and <literal>2</literal>, so you can use <literal>3</literal> for the first new pod, then <literal>4</literal> and so on.</simpara>
</listitem>
<listitem>
<simpara>Copy the following blocks of the file, marked with comments from <literal>BEGIN</literal> to <literal>END</literal>, into the end of the file:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>KIE server services 1</literal></simpara>
</listitem>
<listitem>
<simpara><literal>PostgreSQL service 1</literal></simpara>
</listitem>
<listitem>
<simpara><literal>KIE server routes 1</literal></simpara>
</listitem>
<listitem>
<simpara><literal>KIE server deployment config 1</literal></simpara>
</listitem>
<listitem>
<simpara><literal>PostgreSQL deployment config 1</literal></simpara>
</listitem>
<listitem>
<simpara><literal>PostgreSQL persistent volume claim 1</literal></simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>In the new copies, replace all instances of <literal>-1</literal> with the new pod number, for example, <literal>-3</literal>.</simpara>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>If you want to use MySQL instead of PostgreSQL, replace several blocks of the file, marked with comments from <literal>BEGIN</literal> to <literal>END</literal>, with blocks from the <literal>rhpam710-kieserver-postgresql.yaml</literal> file, then modify some of the newly added blocks:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Replace the block named <literal>MySQL database parameters</literal> with the block named <literal>PostgreSQL database parameters</literal>. (Take this block and all subsequent replacement blocks from the <literal>rhpam710-kieserver-postgresql.yaml</literal> file.)</simpara>
<simpara>Repeat the following actions for every replicated KIE Server pod number, for example, <literal>1</literal> and <literal>2</literal> in the unmodified template. <literal>N</literal> refers to the pod number, for example, <literal>1</literal>.</simpara>
<itemizedlist>
<listitem>
<simpara>Replace the block named <literal>PostgreSQL service N</literal> with the block named <literal>MySQL service</literal>.</simpara>
</listitem>
<listitem>
<simpara>Replace the block named <literal>PostgreSQL driver settings N</literal> with the block named <literal>MySQL driver settings</literal>.</simpara>
</listitem>
<listitem>
<simpara>Replace the block named <literal>PostgreSQL deployment config N</literal> with the block named <literal>MySQL deployment config</literal>.</simpara>
</listitem>
<listitem>
<simpara>Replace the block named <literal>PostgreSQL persistent volume claim N</literal> with the block named <literal>MySQL persistent volume claim</literal>.</simpara>
</listitem>
<listitem>
<simpara>In all the newly added blocks, make the following replacements manually, where <literal>N</literal> is the pod number:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>-mysql</literal> with <literal>-mysql-N</literal>, <emphasis>except</emphasis> in <literal>-mysql-pvol</literal> and in <literal>-mysql-claim</literal></simpara>
</listitem>
<listitem>
<simpara><literal>-mysql-claim</literal> with <literal>-mysql-claim-N</literal></simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>If you want to use an external database server, replace several blocks of the file, marked with comments from <literal>BEGIN</literal> to <literal>END</literal>, with blocks from the <literal>rhpam710-kieserver-externaldb.yaml</literal> file, remove some blocks, and modify some of the newly added blocks:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Replace the block named <literal>MySQL database parameters</literal> with the block named <literal>External database parameters</literal>. (Take this block and all subsequent replacement blocks from the <literal>rhpam710-kieserver-external.yaml</literal> file.)</simpara>
<simpara>Repeat the following actions for every replicated KIE Server pod number, for example, <literal>1</literal> and <literal>2</literal> in the unmodified template. <literal>N</literal> refers to the pod number, for example, <literal>1</literal>.</simpara>
<itemizedlist>
<listitem>
<simpara>Remove the block named <literal>PostgreSQL service N</literal></simpara>
</listitem>
<listitem>
<simpara>Remove the block named <literal>PostgreSQL deployment config N</literal></simpara>
</listitem>
<listitem>
<simpara>Remove the block named <literal>PostgreSQL persistent volume claim N</literal></simpara>
</listitem>
<listitem>
<simpara>Replace the block named <literal>PostgreSQL driver settings N</literal> with the block named <literal>External database driver settings</literal>.</simpara>
</listitem>
<listitem>
<simpara>In the new <literal>External database driver settings</literal> block, if any of the following values are different for different KIE Server pods in the infrastructure, set the values for this particular pod:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>RHPAM_USERNAME</literal>: The user name for logging in to the database server</simpara>
</listitem>
<listitem>
<simpara><literal>RHPAM_PASSWORD</literal>: The password for logging in to the database server</simpara>
</listitem>
<listitem>
<simpara><literal>RHPAM_XA_CONNECTION_PROPERTY_URL</literal>: The full URL for logging in to the database server</simpara>
</listitem>
<listitem>
<simpara><literal>RHPAM_SERVICE_HOST</literal>: The host name of the database server</simpara>
</listitem>
<listitem>
<simpara><literal>RHPAM_DATABASE</literal>: The database name</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
</listitem>
</itemizedlist>
<important>
<simpara>The standard KIE Server image includes drivers for MySQL, MariaDB, and PostgreSQL external database servers. If you want to use another database server, you must build a custom KIE Server image. For instructions, see <xref linkend="externaldb-build-proc_openshift-templates"/>.</simpara>
</important>
<itemizedlist>
<listitem>
<simpara>If you want to change the number of replicas initially created for Business Central Monitoring, on the line below the comment <literal>## Replicas for Business Central Monitoring</literal>, change the number of replicas to the desired value.</simpara>
</listitem>
</itemizedlist>
</section>
</chapter>
<chapter xml:id="post-optional-con_openshift-templates">
<title>Optional procedures after deploying your environment</title>
<simpara>Depending on the needs for your environment, you might need to complete certain optional procedures after deploying it.</simpara>
<section xml:id="githooks-proc_openshift-templates">
<title>(Optional) Providing the Git hooks directory</title>
<simpara>If you deploy an authoring enviropnent and configure the <literal>GIT_HOOKS_DIR</literal> parameter, you must provide a directory of Git hooks and must mount this directory on the Business Central deployment.</simpara>
<simpara>The typical use of Git hooks is interaction with an upstream repository. To enable Git hooks to push commits into an upstream repository, you must also provide a secret key that corresponds to a public key configured on the upstream repository.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You deployed a Red Hat Process Automation Manager authoring environment using templates</simpara>
</listitem>
<listitem>
<simpara>You set the <literal>GIT_HOOKS_DIR</literal> parameter in the deployment</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>If interaction with an upstream repository using SSH authentication is required, complete the following steps to prepare and mount a secret with the necessary files:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Prepare the <literal>id_rsa</literal> file with a private key that matches a public key stored in the repository.</simpara>
</listitem>
<listitem>
<simpara>Prepare the <literal>known_hosts</literal> file with the correct name, address, and public key for the repository.</simpara>
</listitem>
<listitem>
<simpara>Create a secret with the two files using the <literal>oc</literal> command, for example:</simpara>
<screen>oc create secret git-hooks-secret --from-file=id_rsa=id_rsa --from-file=known_hosts=known_hosts</screen>
</listitem>
<listitem>
<simpara>Mount the secret in the SSH key path of the Business Central deployment, for example:</simpara>
<screen>oc set volume dc/&lt;myapp&gt;-rhpamcentr --add --type secret --secret-name git-hooks-secret --mount-path=/home/jboss/.ssh --name=ssh-key</screen>
<simpara>Replace <literal>&lt;myapp&gt;</literal> with the application name that you set when configuring the template.</simpara>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>Create the Git hooks directory. For instructions, see the <link xl:href="https://git-scm.com/docs/githooks">Git hooks reference documentation</link>.</simpara>
<simpara>For example, a simple Git hooks directory can provide a post-commit hook that pushes the changes upstream. If the project was imported into Business Central from a repository, this repository remains configured as the upstream repository. Create a file named <literal>post-commit</literal> with permission values <literal>755</literal> and the following content:</simpara>
<screen>git push</screen>
<note>
<simpara>A <literal>pre-commit</literal> script is not supported in Business Central. Use a <literal>post-commit</literal> script.</simpara>
</note>
</listitem>
<listitem>
<simpara>Supply the Git hooks directory to the Business Central deployment. You can use a configuration map or a persistent volume.</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>If the Git hooks consist of one or several fixed script files, use a configuration map. Complete the following steps:</simpara>
<orderedlist numeration="lowerroman">
<listitem>
<simpara>Change into the Git hooks directory that you have created.</simpara>
</listitem>
<listitem>
<simpara>Create an OpenShift configuration map from the files in the directory. Run the following command:</simpara>
<screen>oc create configmap git-hooks --from-file=&lt;file_1&gt;=&lt;file_1&gt; --from-file=&lt;file_2&gt;=&lt;file_2&gt; ...</screen>
<simpara>Replace <literal>file_1</literal>, <literal>file_2</literal>, and so on with Git hook script file names. Example:</simpara>
<screen>oc create configmap git-hooks --from-file=post-commit=post-commit</screen>
</listitem>
<listitem>
<simpara>Mount the configuration map on the Business Central deployment in the path that you have configured:</simpara>
<screen>oc set volume dc/&lt;myapp&gt;-rhpamcentr --add --type configmap --configmap-name git-hooks  --mount-path=&lt;git_hooks_dir&gt; --name=git-hooks</screen>
<simpara>Replace <literal>&lt;myapp&gt;</literal> with the application name that was set when configuring the template and <literal>&lt;git_hooks_dir&gt;</literal> is the value of <literal>GIT_HOOKS_DIR</literal> that was set when configuring the template.</simpara>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>If the Git hooks consist of long files or depend on binaries, such as executable or KJAR files, use a persistence volume. You must create a persistent volume, create a persistent volume claim and associate the volume with the claim, transfer files to the volume, and mount the volume in the <literal><emphasis>myapp</emphasis>-rhpamcentr</literal> deployment configuration (replace <emphasis>myapp</emphasis> with the application name). For instructions about creating and mounting persistence volumes, see <link xl:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/3.11/html/developer_guide/dev-guide-persistent-volumes">Using persistent volumes</link>. For instructions about copying files onto a persistent volume, see <link xl:href="https://blog.openshift.com/transferring-files-in-and-out-of-containers-in-openshift-part-3/">Transferring files in and out of containers</link>.</simpara>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>Wait a few minutes, then review the list and status of pods in your project. Because Business Central does not start until you provide the Git hooks directory, the KIE Server might not start at all. To see if it has started, check the output of the following command:</simpara>
<screen>oc get pods</screen>
<simpara>If a working KIE Server pod is not present, start it:</simpara>
<screen>oc rollout latest dc/&lt;myapp&gt;-kieserver</screen>
<simpara>Replace <literal>&lt;myapp&gt;</literal> with the application name that was set when configuring the template.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="truststore-template-proc_openshift-templates">
<title>(Optional) Providing a truststore for accessing HTTPS servers with self-signed certificates</title>
<simpara>Components of your Red Hat Process Automation Manager infrastructure might need to use HTTPS access to servers that have a self-signed HTTPS certificate. For example,
Business Central, Business Central Monitoring,
and KIE Server might need to interact with an internal Nexus repository that uses a self-signed HTTPS server certificate.</simpara>
<simpara>In this case, to ensure that HTTPS connections complete successfully, you must provide client certificates for these services using a truststore.</simpara>
<simpara>Skip this procedure if you do not need Red Hat Process Automation Manager components to communicate with servers that use self-signed HTTPS server certificates.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You deployed a Red Hat Process Automation Manager environment using templates</simpara>
</listitem>
<listitem>
<simpara>You have the client certificates that you want to add to the deployment</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Prepare a truststore with the certificates. Use the following command to create a truststore or to add a certificate to an existing truststore. Add all the necessary certificates to one truststore.</simpara>
<screen>keytool -importcert -file <emphasis>certificate-file</emphasis> -alias <emphasis>alias</emphasis> -keyalg <emphasis>algorithm</emphasis> -keysize <emphasis>size</emphasis> -trustcacerts -noprompt -storetype JKS -keypass <emphasis>truststore-password</emphasis> -storepass <emphasis>truststore-password</emphasis> -keystore <emphasis>keystore-file</emphasis></screen>
<simpara>Replace the following values:</simpara>
<itemizedlist>
<listitem>
<simpara><literal><emphasis>certificate-file</emphasis></literal>: The pathname of the certificate that you want to add to the truststore.</simpara>
</listitem>
<listitem>
<simpara><literal><emphasis>alias</emphasis></literal>: The alias for the certificate in the truststore. If you are adding more than one certificate to the truststore, every certificate must have a unique alias.</simpara>
</listitem>
<listitem>
<simpara><literal><emphasis>algorithm</emphasis></literal>: The encryption algorithm used for the certificate, typically <literal>RSA</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal><emphasis>size</emphasis></literal>: The size of the certificate key in bytes, for example, <literal>2048</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal><emphasis>truststore-password</emphasis></literal>: The password for the truststore.</simpara>
</listitem>
<listitem>
<simpara><literal><emphasis>keystore-file</emphasis></literal>: The pathname of the truststore file. If the file does not exist, the command creates a new truststore.</simpara>
<simpara>The following example command adds a certificate from the <literal>/var/certs/nexus.cer</literal> file to a truststore in the <literal>/var/keystores/custom-trustore.jks</literal> file. The truststore password is <literal>mykeystorepass</literal>.</simpara>
<screen>keytool -importcert -file /var/certs/nexus.cer -alias nexus-cert -keyalg RSA -keysize 2048 -trustcacerts -noprompt -storetype JKS -keypass mykeystorepass -storepass mykeystorepass -keystore /var/keystores/custom-trustore.jks</screen>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Create a secret with the truststore file using the <literal>oc</literal> command, for example:</simpara>
<screen>oc create secret generic truststore-secret --from-file=/var/keystores/custom-trustore.jks</screen>
</listitem>
<listitem>
<simpara>In the deployment for the necessary components of your infrastructure, mount the secret and then set the <literal>JAVA_OPTS_APPEND</literal> option to enable the Java application infrastructure to use the trast store, for example:</simpara>
<screen>oc set volume dc/<emphasis>myapp</emphasis>-rhpamcentr --add --overwrite --name=custom-trustore-volume --mount-path /etc/custom-secret-volume --secret-name=custom-secret

oc set env dc/<emphasis>myapp</emphasis>-rhpamcentr JAVA_OPTS_APPEND='-Djavax.net.ssl.trustStore=/etc/custom-secret-volume/custom-trustore.jks -Djavax.net.ssl.trustStoreType=jks -Djavax.net.ssl.trustStorePassword=mykeystorepass'</screen>
<screen>oc set volume dc/<emphasis>myapp</emphasis>-kieserver --add --overwrite --name=custom-trustore-volume --mount-path /etc/custom-secret-volume --secret-name=custom-secret

oc set env dc/<emphasis>myapp</emphasis>-kieserver JAVA_OPTS_APPEND='-Djavax.net.ssl.trustStore=/etc/custom-secret-volume/custom-trustore.jks -Djavax.net.ssl.trustStoreType=jks -Djavax.net.ssl.trustStorePassword=mykeystorepass'</screen>
<simpara>Replace <literal><emphasis>myapp</emphasis></literal> with the application name that you set when configuring the template.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="rolemapping-proc_openshift-templates">
<title>(Optional) Providing the LDAP role mapping file</title>
<simpara>If you configure the <literal>AUTH_ROLE_MAPPER_ROLES_PROPERTIES</literal> parameter, you must provide a file that defines the role mapping. Mount this file on all affected deployment configurations.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You deployed a Red Hat Process Automation Manager environment using templates</simpara>
</listitem>
<listitem>
<simpara>You set the <literal>AUTH_ROLE_MAPPER_ROLES_PROPERTIES</literal> parameter in the deployment</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Create the role mapping properties file, for example, <literal>my-role-map</literal>. The file must contain entries in the following format:</simpara>
<screen>ldap_role = product_role1, product_role2...</screen>
<simpara>For example:</simpara>
<screen>admins = kie-server,rest-all,admin</screen>
</listitem>
<listitem>
<simpara>Create an OpenShift configuration map from the file by entering the following command:</simpara>
<screen>oc create configmap ldap-role-mapping --from-file=&lt;new_name&gt;=&lt;existing_name&gt;</screen>
<simpara>Replace <literal>&lt;new_name&gt;</literal> with the name that the file is to have on the pods (it must be the same as the name specified in the <literal>AUTH_ROLE_MAPPER_ROLES_PROPERTIES</literal> file) and <literal>&lt;existing_name&gt;</literal> with the name of the file that you created. Example:</simpara>
<screen>oc create configmap ldap-role-mapping --from-file=rolemapping.properties=my-role-map</screen>
</listitem>
<listitem>
<simpara>Mount the configuration map on every deployment configuration that is configured for role mapping.</simpara>
<simpara>The following deployment configurations can be affected in this environment:</simpara>
<simpara>Replace <literal>myapp</literal> with the application name. Sometimes, several KIE Server deployments can be present under different application names.</simpara>
<simpara>For every deployment configuration, run the command:</simpara>
<screen> oc set volume dc/&lt;deployment_config_name&gt; --add --type configmap --configmap-name ldap-role-mapping --mount-path=&lt;mapping_dir&gt; --name=ldap-role-mapping</screen>
<simpara>Replace <literal>&lt;mapping_dir&gt;</literal> with the directory name (without file name) set in the <literal>AUTH_ROLE_MAPPER_ROLES_PROPERTIES</literal> parameter, for example, <literal>/opt/eap/standalone/configuration/rolemapping</literal> .</simpara>
</listitem>
</orderedlist>
</section>
</chapter>
<chapter xml:id="roles-users-con_openshift-templates">
<title>Red Hat Process Automation Manager roles and users</title>
<simpara>To access Business Central or KIE Server, you must create users and assign them appropriate roles before the servers are started. You can create users and roles when you install Business Central or KIE Server.</simpara>
<simpara>Business Central and KIE Server use the Java Authentication and Authorization Service (JAAS) login module to authenticate users. If both Business Central and KIE Server are running on a single instance, then they share the same JAAS subject and security domain. Therefore, a user who is authenticated for Business Central can also access KIE Server.</simpara>
<simpara>However, if Business Central and KIE Server are running on different instances, then the JAAS login module is triggered for both individually. Therefore, a user who is authenticated for Business Central must be authenticated separately to access KIE Server.  For example, if a user who is authenticated on Business Central but not authenticated on KIE Server tries to view or manage process definitions in Business Central, a 401 error is logged in the log file and the <literal>Invalid credentials to load data from remote server. Contact your system administrator.</literal> message appears in Business Central.</simpara>
<simpara>This section describes Red Hat Process Automation Manager user roles.</simpara>
<note>
<simpara>The <literal>admin</literal>,  <literal>analyst</literal>,
<literal>developer</literal>, <literal>manager</literal>, <literal>process-admin</literal>, <literal>user</literal>,
 and <literal>rest-all</literal> roles are reserved for Business Central. The <literal>kie-server</literal> role is reserved for KIE Server. For this reason, the available roles can differ depending on whether Business Central, KIE Server, or both are installed.</simpara>
</note>
<itemizedlist>
<listitem>
<simpara><literal>admin</literal>: Users with the <literal>admin</literal> role are the Business Central administrators. They can manage users and create, clone, and manage repositories. They have full access to make required changes in the application. Users with the <literal>admin</literal> role have access to all areas within Red Hat Process Automation Manager.</simpara>
</listitem>
<listitem>
<simpara><literal>analyst</literal>: Users with the <literal>analyst</literal> role have access to all high-level features. They can model
and execute their
projects. However, these users cannot add contributors to spaces or delete spaces in the <emphasis role="strong">Design &#8594; Projects</emphasis> view. Access to the <emphasis role="strong">Deploy &#8594; Execution Servers</emphasis> view, which is intended for administrators, is not available to users with the <literal>analyst</literal> role. However, the <emphasis role="strong">Deploy</emphasis> button is available to these users when they access the Library perspective.</simpara>
</listitem>
<listitem>
<simpara><literal>developer</literal>: Users with the <literal>developer</literal> role have access to almost all features and can manage rules, models, process flows, forms, and dashboards. They can manage the asset repository, they can create, build, and deploy projects, and they can use Red Hat CodeReady Studio to view processes. Only certain administrative functions such as creating and cloning a new repository are hidden from users with the <literal>developer</literal> role.</simpara>
</listitem>
<listitem>
<simpara><literal>manager</literal>: Users with the <literal>manager</literal> role can view reports. These users are usually interested in statistics about the business processes and their performance, business indicators, and other business-related reporting. A user with this role has access only to process and task reports.</simpara>
</listitem>
<listitem>
<simpara><literal>process-admin</literal>: Users with the <literal>process-admin</literal> role are business process administrators. They have full access to business processes, business tasks, and execution errors. These users can also view business reports and have access to the Task Inbox list.</simpara>
</listitem>
<listitem>
<simpara><literal>user</literal>: Users with the <literal>user</literal> role can work on the Task Inbox list, which contains business tasks that are part of currently running processes. Users with this role can view process and task reports and manage processes.</simpara>
</listitem>
<listitem>
<simpara><literal>rest-all</literal>: Users with the <literal>rest-all</literal> role can access Business Central REST capabilities.</simpara>
</listitem>
<listitem>
<simpara><literal>kie-server</literal>: Users with the <literal>kie-server</literal> role can access KIE Server REST capabilities.
This role is mandatory for users to have access to <emphasis role="strong">Manage</emphasis> and <emphasis role="strong">Track</emphasis> views in Business Central.</simpara>
</listitem>
</itemizedlist>
</chapter>
<chapter xml:id="template-overview-con_openshift-templates">
<title>OpenShift template reference information</title>
<simpara>Red Hat Process Automation Manager provides the following OpenShift templates. To access the templates, download and extract the <literal>rhpam-7.10.0-openshift-templates.zip</literal> product deliverable file from the <link xl:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?downloadType=distributions&amp;product=rhpam&amp;productChanged=yes">Software Downloads</link> page of the Red Hat customer portal.</simpara>
<itemizedlist>
<listitem>
<simpara><literal>rhpam710-trial-ephemeral.yaml</literal> provides a Business Central and a KIE Server connected to the Business Central. This environment uses an ephemeral configuration without any persistent storage. For details about this template, see <xref linkend="rhpam710-trial-ephemeral-ref_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><literal>rhpam710-authoring.yaml</literal> provides a Business Central and a KIE Server connected to the Business Central. The KIE Server uses an H2 database with persistent storage. You can use this environment to author processes, services, and other business assets. For details about this template, see <xref linkend="rhpam710-authoring-ref_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><literal>rhpam710-authoring-ha.yaml</literal> provides a high-availability Business Central, a KIE Server connected to the Business Central, and a MySQL instance that the KIE Server uses. You can use this environment to author processes, services, and other business assets. For details about this template, see <xref linkend="rhpam710-authoring-ha-ref_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><literal>rhpam710-prod-immutable-monitor.yaml</literal> provides a Business Central Monitoring instance and a Smart Router that you can use with immutable KIE Servers. When you deploy this template, OpenShift displays the settings that you must then use for deploying the <literal>rhpam710-prod-immutable-kieserver.yaml</literal> template. For details about this template, see <xref linkend="rhpam710-prod-immutable-monitor-ref_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><literal>rhpam710-prod-immutable-kieserver.yaml</literal> provides an immutable KIE Server. When you deploy this template, a source-to-image (S2I) build is triggered for one or several services that are to run on the KIE Server. The KIE Server can optionally be configured to connect to the Business Central Monitoring and Smart Router provided by <literal>rhpam710-prod-immutable-monitor.yaml</literal>. For details about this template, see <xref linkend="rhpam710-prod-immutable-kieserver-ref_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><literal>rhpam710-prod-immutable-kieserver-amq.yaml</literal> provides an immutable KIE Server. When you deploy this template, a source-to-image (S2I) build is triggered for one or several services that are to run on the KIE Server. The KIE Server can optionally be configured to connect to the Business Central Monitoring and Smart Router provided by <literal>rhpam710-prod-immutable-monitor.yaml</literal>. This version of the template includes JMS integration. For details about this template, see <xref linkend="rhpam710-prod-immutable-kieserver-amq-ref_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><literal>rhpam710-kieserver-externaldb.yaml</literal> provides a KIE Server that uses an external database. You can configure the KIE Server to connect to a Business Central. Also, you can copy sections from this template into another template to configure a KIE Server in the other template to use an external database. For details about this template, see <xref linkend="rhpam710-kieserver-externaldb-ref_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><literal>rhpam710-kieserver-mysql.yaml</literal> provides a KIE Server and a MySQL instance that the KIE Server uses. You can configure the KIE Server to connect to a Business Central. Also, you can copy sections from this template into another template to configure a KIE Server in the other template to use MySQL and to provide the MySQL instance. For details about this template, see <xref linkend="rhpam710-kieserver-mysql-ref_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><literal>rhpam710-kieserver-postgresql.yaml</literal> provides a KIE Server and a PostgreSQL instance that the KIE Server uses. You can configure the KIE Server to connect to a Business Central. Also, you can copy sections from this template into another template to configure a KIE Server in the other template to use PostgreSQL and to provide the PostgreSQL instance. For details about this template, see <xref linkend="rhpam710-kieserver-mysql-ref_openshift-templates"/>.</simpara>
</listitem>
<listitem>
<simpara><literal>rhpam710-managed.yaml</literal> provides a high-availability Business Central Monitoring instance, a KIE Server, and a PostgreSQL instance that the KIE Server uses. <literal>OpenShiftStartupStrategy</literal> is enabled, ensuring that the Business Central Monitoring instance can connect to other KIE Server instances in the same project automatically, as long as these instances have OpenShiftStartupStrategy enabled as well.</simpara>
</listitem>
<listitem>
<simpara><literal>rhpam710-prod.yaml</literal> provides a high-availability Business Central Monitoring instance, a Smart Router, two distinct KIE Servers connected to the Business Central and to the Smart Router, and two PostgreSQL instances. Each KIE Server uses its own PostgreSQL instance. You can use this environment to execute business assets in a production or staging environment. You can configure the number of replicas for each component. For details about this template, see <xref linkend="rhpam710-prod-ref_openshift-templates"/>.</simpara>
</listitem>
</itemizedlist>
<simpara>Unresolved directive in assemblies/assembly-openshift-templates.adoc - include::../doc-content/enterprise-only/openshift/rhpam79-trial-ephemeral-ref.adoc[leveloffset=+2]
Unresolved directive in assemblies/assembly-openshift-templates.adoc - include::../doc-content/enterprise-only/openshift/rhpam79-authoring-ref.adoc[leveloffset=+2]
Unresolved directive in assemblies/assembly-openshift-templates.adoc - include::../doc-content/enterprise-only/openshift/rhpam79-authoring-ha-ref.adoc[leveloffset=+2]
Unresolved directive in assemblies/assembly-openshift-templates.adoc - include::../doc-content/enterprise-only/openshift/rhpam79-prod-immutable-monitor-ref.adoc[leveloffset=+2]
Unresolved directive in assemblies/assembly-openshift-templates.adoc - include::../doc-content/enterprise-only/openshift/rhpam79-prod-immutable-kieserver-ref.adoc[leveloffset=+2]
Unresolved directive in assemblies/assembly-openshift-templates.adoc - include::../doc-content/enterprise-only/openshift/rhpam79-prod-immutable-kieserver-amq-ref.adoc[leveloffset=+2]
Unresolved directive in assemblies/assembly-openshift-templates.adoc - include::../doc-content/enterprise-only/openshift/rhpam79-kieserver-externaldb-ref.adoc[leveloffset=+2]
Unresolved directive in assemblies/assembly-openshift-templates.adoc - include::../doc-content/enterprise-only/openshift/rhpam79-kieserver-mysql-ref.adoc[leveloffset=+2]
Unresolved directive in assemblies/assembly-openshift-templates.adoc - include::../doc-content/enterprise-only/openshift/rhpam79-kieserver-postgresql-ref.adoc[leveloffset=+2]
Unresolved directive in assemblies/assembly-openshift-templates.adoc - include::../doc-content/enterprise-only/openshift/rhpam79-managed-ref.adoc[leveloffset=+2]
Unresolved directive in assemblies/assembly-openshift-templates.adoc - include::../doc-content/enterprise-only/openshift/rhpam79-prod-ref.adoc[leveloffset=+2]</simpara>
<section xml:id="openshift-usage-ref_openshift-templates">
<title>OpenShift usage quick reference</title>
<simpara>To deploy, monitor, manage, and undeploy Red Hat Process Automation Manager templates on Red Hat OpenShift Container Platform, you can use the OpenShift Web console or the <literal>oc</literal> command.</simpara>
<simpara>For instructions about using the Web console, see <link xl:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/3.11/html-single/getting_started/#getting-started-developers-console">Create and build an image using the Web console</link>.</simpara>
<simpara>For detailed instructions about using the <literal>oc</literal> command, see <link xl:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/3.11/html/cli_reference/">CLI Reference</link>. The following commands are likely to be required:</simpara>
<itemizedlist>
<listitem>
<simpara>To create a project, use the following command:</simpara>
<screen>$ oc new-project &lt;project-name&gt;</screen>
<simpara>For more information, see <link xl:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/3.11/html-single/developer_guide/#create-a-project-using-the-cli">Creating a project using the CLI</link>.</simpara>
</listitem>
<listitem>
<simpara>To deploy a template (create an application from a template), use the following command:</simpara>
<screen>$ oc new-app -f &lt;template-name&gt; -p &lt;parameter&gt;=&lt;value&gt; -p &lt;parameter&gt;=&lt;value&gt; ...</screen>
<simpara>For more information, see <link xl:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/3.11/html-single/developer_guide/#using-the-cli">Creating an application using the CLI</link>.</simpara>
</listitem>
<listitem>
<simpara>To view a list of the active pods in the project, use the following command:</simpara>
<screen>$ oc get pods</screen>
</listitem>
<listitem>
<simpara>To view the current status of a pod, including information whether or not the pod deployment has completed and it is now in a running state, use the following command:</simpara>
<screen>$ oc describe pod &lt;pod-name&gt;</screen>
<simpara>You can also use the <literal>oc describe</literal> command to view the current status of other objects. For more information, see <link xl:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/3.11/html/cli_reference/cli-reference-basic-cli-operations#application-modification-cli-operations">Application modification operations</link>.</simpara>
</listitem>
<listitem>
<simpara>To view the logs for a pod, use the following command:</simpara>
<screen>$ oc logs &lt;pod-name&gt;</screen>
</listitem>
<listitem>
<simpara>To view deployment logs, look up a <literal>DeploymentConfig</literal> name in the template reference and enter the following command:</simpara>
<screen>$ oc logs -f dc/&lt;deployment-config-name&gt;</screen>
<simpara>For more information, see <link xl:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/3.11/html-single/developer_guide/#viewing-deployment-logs">Viewing deployment logs</link>.</simpara>
</listitem>
<listitem>
<simpara>To view build logs, look up a <literal>BuildConfig</literal> name in the template reference and enter the command:</simpara>
<screen>$ oc logs -f bc/&lt;build-config-name&gt;</screen>
<simpara>For more information, see <link xl:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/3.11/html-single/developer_guide/#accessing-build-logs">Accessing build logs</link>.</simpara>
</listitem>
<listitem>
<simpara>To scale a pod in the application, look up a <literal>DeploymentConfig</literal> name in the template reference and enter the command:</simpara>
<screen>$ oc scale dc/&lt;deployment-config-name&gt; --replicas=&lt;number&gt;</screen>
<simpara>For more information, see <link xl:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/3.11/html-single/developer_guide/#scaling">Manual scaling</link>.</simpara>
</listitem>
<listitem>
<simpara>To undeploy the application, you can delete the project by using the command:</simpara>
<screen>$ oc delete project &lt;project-name&gt;</screen>
<simpara>Alternatively, you can use the <literal>oc delete</literal> command to remove any part of the application, such as a pod or replication controller. For details, see <link xl:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/3.11/html/cli_reference/cli-reference-basic-cli-operations#application-modification-cli-operations">Application modification operations</link>.</simpara>
</listitem>
</itemizedlist>
</section>
</chapter>
</part>
<part xml:id="assembly-hacep">
<title>Implementing high available event-driven decisioning using the decision engine on Red Hat OpenShift Container Platform</title>
<partintro>
<simpara>As a business rules developer, you can use high available event-driven decisioning, including Complex Event Processing (CEP), in your code that uses the decision engine. You can implement high available event-driven decisioning on Red Hat OpenShift Container Platform.</simpara>
<simpara>You cannot use a standard deployment of Red Hat Process Automation Manager on Red Hat OpenShift Container Platform, as described in <link xl:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/deploying_red_hat_process_automation_manager_on_red_hat_openshift_container_platform#assembly-openshift-operator"><emphasis>Deploying a Red Hat Process Automation Manager environment on Red Hat OpenShift Container Platform using Operators</emphasis></link>, to implement high available event-driven decisioning, because the standard deployment supports only stateless processing. You must therefore create a custom implementation using the provided reference implementation.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>A Red Hat OpenShift Container Platform version 4 environment is available. For the exact versions of Red Hat OpenShift Container Platform that the current release supports, see <link xl:href="https://access.redhat.com/articles/3405381">Red Hat Process Automation Manager 7 Supported Configurations</link>.</simpara>
</listitem>
<listitem>
<simpara>A Kafka Cluster is deployed in the OpenShift environment with Red Hat AMQ Streams.</simpara>
</listitem>
<listitem>
<simpara>The OpenJDK Java development environment is installed.</simpara>
</listitem>
<listitem>
<simpara>Maven, Docker, and kubectl are installed.</simpara>
</listitem>
<listitem>
<simpara>The <literal>oc</literal> OpenShift command line tool is installed.</simpara>
</listitem>
</itemizedlist>
</partintro>
<chapter xml:id="hacep-con_hacep">
<title>High available event-driven decisioning on Red Hat OpenShift Container Platform</title>
<simpara>Use the decision engine to implement high available event-driven decisioning on Red Hat OpenShift Container Platform.</simpara>
<simpara>An <emphasis>event</emphasis> models a fact that happened in a specific point in time. The decision engine offers a rich set of temporal operators to compare, correlate, and accumulate events. In event-driven decisioning, the decision engine processes complex series of decisions based on events. Every event can alter the state of the engine, influencing decisions for subsequent events.</simpara>
<simpara>You cannot use a standard deployment of Red Hat Process Automation Manager on Red Hat OpenShift Container Platform, as described in <xref linkend="assembly-openshift-operator"/>, to run high available event-driven decisioning. The deployment includes KIE Server pods, which remain independent of each other when scaled. The states of the pods are not synchronized. Therefore, only stateless calls can be processed reliably.</simpara>
<simpara>The Complex Event Processing (CEP) API is useful for event-driven decisioning with the decision engine. The decision engine uses CEP to detect and process multiple events within a collection of events, to uncover relationships that exist between events, and to infer new data from the events and their relationships. For more information about CEP in the decision engine, see <link xl:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/developing_decision_services_in_red_hat_process_automation_manager#cep-con_decision-engine"><emphasis>Decision engine in Red Hat Process Automation Manager</emphasis></link>.</simpara>
<simpara>Implement high available event-driven decisioning on Red Hat OpenShift Container Platform based on the reference implementation provided with Red Hat Process Automation Manager. This implementation provides an environment with safe failover.</simpara>
<simpara>In this reference implementation, you can scale the pod with the processing code. The replicas of the pod are not independent. One of the replicas is automatically designated <emphasis>leader</emphasis>. If the leader ceases to function, another replica is automatically made leader and the processing continues without interruption or data loss.</simpara>
<simpara>The election of the leader is implemented with Kubernetes ConfigMaps. Coordination of the leader with other replicas is performed with exchanged messages through Kafka. The leader is always the first to process an event. When processing is complete, the leader notifies other replicas. A replica that is not the leader starts executing an event only after it has been completely processed on the leader.</simpara>
<simpara>When a new replica joins the cluster, this replica requests a snapshot of the current Drools session from the leader. The leader can use a recent existing snapshot if one is available in a Kafka topic. If a recent snapshot is not available, the leader produces a new snapshot on demand. After receiving the snapshot, the new replica deserializes it and eventually executes the last events not included in the snapshot before starting to process new events in coordination with the leader.</simpara>
<simpara>With the default implementation method, the service is built into the HA CEP server as a fat KJAR. In this case, build and deploy the server again to change the version of the service. The content of the working memory is lost when you switch to the new version. For instructions about the default implementation method, see <xref linkend="hacep-server-proc_hacep"/>.</simpara>
<simpara>If you require upgrading versions of the service without losing the content of the working memory, use an alternate implementation method and provide the KJAR and all dependencies in a Maven repository. In this implementation method, use an <literal>UpdateKJarGAV</literal> call from the client code to trigger deployment of a new KJAR version. This call is processed by the leader and then other replicas, and each of the pods then loads the new KJAR. The contents of the working memory remain in place. For instructions about this implementation method, see <xref linkend="hacep-server-maven-proc_hacep"/>.</simpara>
</chapter>
<chapter xml:id="hacep-server-proc_hacep">
<title>Implementing the HA CEP server</title>
<simpara>The high-availability (HA) CEP server runs on the Red Hat OpenShift Container Platform environment. It includes all necessary Drools rules and other code required to process events.</simpara>
<simpara>Prepare the source, build it, and then deploy it on Red Hat OpenShift Container Platform.</simpara>
<simpara>Alternatively, use a different process to deploy the HA CEP server where you can update the KJAR service at any time. For instructions about this process, see <xref linkend="hacep-server-maven-proc_hacep"/>.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You are logged into the project with administrator privilege using the <literal>oc</literal> command-line tool.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Download the <literal>rhpam-7.10.0-reference-implementation.zip</literal> product deliverable file from the <link xl:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?downloadType=distributions&amp;product=rhpam&amp;productChanged=yes">Software Downloads</link> page of the Red Hat Customer Portal.</simpara>
</listitem>
<listitem>
<simpara>Extract the contents of the file and then uncompress the <literal>rhpam-7.10.0-openshift-drools-hacep-distribution.zip</literal> file.</simpara>
</listitem>
<listitem>
<simpara>Change to the <literal>openshift-drools-hacep-distribution/sources</literal> directory.</simpara>
</listitem>
<listitem>
<simpara>Review and modify the server code based on the sample project in the <literal>sample-hacep-project/sample-hacep-project-kjar</literal> directory. The complex event processing logic is defined by the DRL rules in the <literal>src/main/resources/org/drools/cep</literal> subdirectory.</simpara>
</listitem>
<listitem>
<simpara>Build the project using the standard Maven command:</simpara>
<screen>mvn clean install -DskipTests</screen>
</listitem>
<listitem>
<simpara>Enable the OpenShift operator for Red Hat AMQ Streams and then create an AMQ Streams (kafka) cluster in the project. For information about installing Red Hat AMQ Streams, see <link xl:href="https://access.redhat.com/documentation/en-us/red_hat_amq/7.7/html/using_amq_streams_on_openshift/"><emphasis>Using AMQ Streams on OpenShift</emphasis></link>.</simpara>
</listitem>
<listitem>
<simpara>To create the kafka topics that are required for operation of the server, remain in the <literal>openshift-drools-hacep-distribution/sources</literal> directory and run the following commands:</simpara>
<screen>oc apply -f kafka-topics/control.yaml
oc apply -f kafka-topics/events.yaml
oc apply -f kafka-topics/kiesessioninfos.yaml
oc apply -f kafka-topics/snapshot.yaml</screen>
</listitem>
<listitem>
<simpara>In order to enable application access to the ConfigMap that is used in the leader election, configure role-based access control. Change to the <literal>springboot</literal> directory and enter the following commands:</simpara>
<screen>oc create -f kubernetes/service-account.yaml
oc create -f kubernetes/role.yaml
oc create -f kubernetes/role-binding.yaml</screen>
<simpara>For more information about configuring role-based access control in Red Hat OpenShift Container Platform, see <link xl:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/4.6/html/authentication_and_authorization/using-rbac">Using RBAC to define and apply permissions</link> in the Red Hat OpenShift Container Platform product documentation.</simpara>
</listitem>
<listitem>
<simpara>In the <literal>springboot</literal> directory, enter the following commands to create the image for deployment and push it into the repository configured for your OpenShift environment:</simpara>
<screen>oc new-build --binary --strategy=docker --name openshift-kie-springboot
oc start-build openshift-kie-springboot --from-dir=. --follow</screen>
</listitem>
<listitem>
<simpara>Enter the following command to detect the name of the image that was built:</simpara>
<screen>oc get is/openshift-kie-springboot -o template --template='{{range .status.tags}}{{range .items}}{{.dockerImageReference}}{{end}}{{end}}'</screen>
</listitem>
<listitem>
<simpara>Open the <literal>kubernetes/deployment.yaml</literal> file in a text editor.</simpara>
</listitem>
<listitem>
<simpara>Replace the existing image URL with the result of the previous command.</simpara>
</listitem>
<listitem>
<simpara>Remove all characters at the end of the line starting with the <literal>@</literal> symbol, then add <literal>:latest</literal> to the line. For example:</simpara>
<screen>image: image-registry.openshift-image-registry.svc:5000/hacep/openshift-kie-springboot:latest</screen>
</listitem>
<listitem>
<simpara>Save the file.</simpara>
</listitem>
<listitem>
<simpara>Enter the following command to deploy the image:</simpara>
<screen>oc apply -f kubernetes/deployment.yaml</screen>
</listitem>
</orderedlist>
</chapter>
<chapter xml:id="hacep-server-maven-proc_hacep">
<title>Implementing the HA CEP server with a Maven repository for updating the KJAR service</title>
<simpara>You can implement the HA CEP server that retrieves the KJAR service and all dependencies from a Maven repository that you provide. In this case, you can update the KJAR service at any time by updating it in the Maven repository and then making a call from the client code.</simpara>
<simpara>Prepare the source, build it, and then deploy it on Red Hat OpenShift Container Platform. Set certain environment variables in the <literal>deployment.yaml</literal> file before deploying the server. To use a Maven repository, you must set the <literal>UPDATABLEKJAR</literal> variable to <literal>true</literal>.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You are logged into the project with administrator privilege using the <literal>oc</literal> command-line tool.</simpara>
</listitem>
<listitem>
<simpara>You configured a Maven repository that is accessible from your Red Hat OpenShift Container Platform environment.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Download the <literal>rhpam-7.10.0-reference-implementation.zip</literal> product deliverable file from the <link xl:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?downloadType=distributions&amp;product=rhpam&amp;productChanged=yes">Software Downloads</link> page of the Red Hat Customer Portal.</simpara>
</listitem>
<listitem>
<simpara>Extract the contents of the file and then uncompress the <literal>rhpam-7.10.0-openshift-drools-hacep-distribution.zip</literal> file.</simpara>
</listitem>
<listitem>
<simpara>Change to the <literal>openshift-drools-hacep-distribution/sources</literal> directory.</simpara>
</listitem>
<listitem>
<simpara>Review and modify the server code based on the sample project in the <literal>sample-hacep-project/sample-hacep-project-kjar</literal> directory. The complex event processing logic is defined by the DRL rules in the <literal>src/main/resources/org/drools/cep</literal> subdirectory.</simpara>
</listitem>
<listitem>
<simpara>Build the project using the standard Maven command:</simpara>
<screen>mvn clean install -DskipTests</screen>
<simpara>Upload the resulting KJAR and any required dependencies to the Maven repository.</simpara>
</listitem>
<listitem>
<simpara>Enable the OpenShift operator for Red Hat AMQ Streams and then create an AMQ Streams (kafka) cluster in the project. For information about installing Red Hat AMQ Streams, see <link xl:href="https://access.redhat.com/documentation/en-us/red_hat_amq/7.7/html/using_amq_streams_on_openshift/"><emphasis>Using AMQ Streams on OpenShift</emphasis></link>.</simpara>
</listitem>
<listitem>
<simpara>To create the kafka topics that are required for operation of the server, remain in the <literal>openshift-drools-hacep-distribution/sources</literal> directory and run the following commands:</simpara>
<screen>oc apply -f kafka-topics/control.yaml
oc apply -f kafka-topics/events.yaml
oc apply -f kafka-topics/kiesessioninfos.yaml
oc apply -f kafka-topics/snapshot.yaml</screen>
</listitem>
<listitem>
<simpara>In order to enable application access to the ConfigMap that is used in the leader election, configure role-based access control. Change to the <literal>springboot</literal> directory and enter the following commands:</simpara>
<screen>oc create -f kubernetes/service-account.yaml
oc create -f kubernetes/role.yaml
oc create -f kubernetes/role-binding.yaml</screen>
<simpara>For more information about configuring role-based access control in Red Hat OpenShift Container Platform, see <link xl:href="https://access.redhat.com/documentation/en-us/openshift_container_platform/4.6/html/authentication_and_authorization/using-rbac">Using RBAC to define and apply permissions</link> in the Red Hat OpenShift Container Platform product documentation.</simpara>
</listitem>
<listitem>
<simpara>In the <literal>springboot</literal> directory, edit the <literal>pom.xml</literal> file to remove the following dependency:</simpara>
<screen>&lt;dependency&gt;
      &lt;groupId&gt;org.kie&lt;/groupId&gt;
      &lt;artifactId&gt;sample-hacep-project-kjar&lt;/artifactId&gt;
&lt;/dependency&gt;</screen>
</listitem>
<listitem>
<simpara>In the <literal>springboot</literal> directory, enter the following commands to create the image for deployment and push it into the repository configured for your OpenShift environment:</simpara>
<screen>oc new-build --binary --strategy=docker --name openshift-kie-springboot
oc start-build openshift-kie-springboot --from-dir=. --follow</screen>
</listitem>
<listitem>
<simpara>Enter the following command to detect the name of the image that was built:</simpara>
<screen>oc get is/openshift-kie-springboot -o template --template='{{range .status.tags}}{{range .items}}{{.dockerImageReference}}{{end}}{{end}}'</screen>
</listitem>
<listitem>
<simpara>Open the <literal>kubernetes/deployment.yaml</literal> file in a text editor.</simpara>
</listitem>
<listitem>
<simpara>Replace the existing image URL with the result of the previous command.</simpara>
</listitem>
<listitem>
<simpara>Remove all characters at the end of the line starting with the <literal>@</literal> symbol, then add <literal>:latest</literal> to the line. For example:</simpara>
<screen>image: image-registry.openshift-image-registry.svc:5000/hacep/openshift-kie-springboot:latest</screen>
</listitem>
<listitem>
<simpara>Under the <literal>containers:</literal> line and the <literal>env:</literal> line, set environment variables as in the following example:</simpara>
<screen>containers:
  - env:
    - name: UPDATABLEKJAR
      value: "true"
    - name: KJARGAV
      value: &lt;GroupID&gt;:&lt;ArtifactID&gt;:&lt;Version&gt;
    - name: MAVEN_LOCAL_REPO
      value: /app/.m2/repository
    - name: MAVEN_MIRROR_URL
      value: http://&lt;nexus_url&gt;/repository/maven-releases/
    - name: MAVEN_SETTINGS_XML
      value: /app/.m2/settings.xml</screen>
<simpara>In this example, replace the value of the <literal>KJARGAV</literal> variable with the group, artifact, and version (GAV) of your KJAR service and the value of the <literal>MAVEN_MIRROR_URL</literal> variable with the URL to the Maven repository that contains your KJAR service.</simpara>
<simpara>Optionally, set other variables. For a list of supported environment variables, see <xref linkend="hacep-server-environment-ref_hacep"/>.</simpara>
</listitem>
<listitem>
<simpara>Save the file.</simpara>
</listitem>
<listitem>
<simpara>Enter the following command to deploy the image:</simpara>
<screen>oc apply -f kubernetes/deployment.yaml</screen>
</listitem>
</orderedlist>
<simpara>For instructions about triggering a KJAR update from the client code, see <xref linkend="hacep-client-proc_hacep"/>.</simpara>
<section xml:id="hacep-server-environment-ref_hacep">
<title>Optional environment variables supported by the HA CEP server</title>
<simpara>The following table lists optional environment variables that you can set for an HA CEP server that is configured to use a Maven repository. Add these variables to the <literal>deployment.yaml</literal> file to set them at deployment time.</simpara>
<note>
<simpara>To use a Maven repository, ensure that you set the <literal>UPDATABLEKJAR</literal> and <literal>KJARGAV</literal> environment variables for the server, as described in <xref linkend="hacep-server-maven-proc_hacep"/>.</simpara>
</note>
<table frame="all" rowsep="1" colsep="1">
<title>Optional environment variables supported by the HA CEP server</title>
<tgroup cols="3">
<colspec colname="col_1" colwidth="26*"/>
<colspec colname="col_2" colwidth="49*"/>
<colspec colname="col_3" colwidth="25*"/>
<thead>
<row>
<entry align="left" valign="top">Name</entry>
<entry align="left" valign="top">Description</entry>
<entry align="left" valign="top">Example</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara><literal>MAVEN_LOCAL_REPO</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Directory to use as the local Maven repository.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>/root/.m2/repository</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>MAVEN_MIRROR_URL</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The base URL of a Maven mirror that can be used for retrieving artifacts.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>http://nexus3-my-kafka-project.192.168.99.133.nip.io/repository/maven-public/</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>MAVEN_MIRRORS</literal></simpara></entry>
<entry align="left" valign="top"><simpara>If set, multi-mirror support is enabled. The value contains a list of mirror prefixes, divided by commas. If this variable is set, the names of other <literal>MAVEN_MIRROR_*</literal> variables must contain a prefix, for example, <literal>DEV_MAVEN_MIRROR_URL</literal> and <literal>QE_MAVEN_MIRROR_URL</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>DEV,QE</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>MAVEN_REPOS</literal></simpara></entry>
<entry align="left" valign="top"><simpara>If set, multi-repo support is enabled. The value contains a list of repo prefixes, divided by commas. If this variable is set, the names of other <literal>MAVEN_REPO_*</literal> variables must contain a prefix, for example, <literal>DEV_MAVEN_REPO_URL</literal> and <literal>QE_MAVEN_REPO_URL</literal>.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>DEV,QE</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>MAVEN_SETTINGS_XML</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The location of a custom Maven <literal>settings.xml</literal> file to use</simpara></entry>
<entry align="left" valign="top"><simpara><literal>/root/.m2/settings.xml</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal><emphasis>prefix</emphasis>_MAVEN_MIRROR_ID</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Identifier to be used for the specified mirror. If omitted, a unique ID is generated.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>internal-mirror</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal><emphasis>prefix</emphasis>_MAVEN_MIRROR_OF</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Repository IDs mirrored by this mirror. Defaults to <literal>external:*</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>external:*,!my-repo</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal><emphasis>prefix</emphasis>_MAVEN_MIRROR_URL</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The URL of the mirror</simpara></entry>
<entry align="left" valign="top"><simpara><literal>http://10.0.0.1:8080/repository/internal</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal><emphasis>prefix</emphasis>_MAVEN_REPO_HOST</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Maven repository host name</simpara></entry>
<entry align="left" valign="top"><simpara><literal>repo.example.com</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal><emphasis>prefix</emphasis>_MAVEN_REPO_ID</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Maven repository ID</simpara></entry>
<entry align="left" valign="top"><simpara><literal>my-repo</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal><emphasis>prefix</emphasis>_MAVEN_REPO_LAYOUT</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Maven repository layout</simpara></entry>
<entry align="left" valign="top"><simpara><literal>default</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal><emphasis>prefix</emphasis>_MAVEN_REPO_USERNAME</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Maven repository username</simpara></entry>
<entry align="left" valign="top"><simpara><literal>mavenUser</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal><emphasis>prefix</emphasis>_MAVEN_REPO_PASSPHRASE</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Maven repository passphrase</simpara></entry>
<entry align="left" valign="top"><simpara><literal>maven1!</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal><emphasis>prefix</emphasis>_MAVEN_REPO_PASSWORD</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Maven repository password</simpara></entry>
<entry align="left" valign="top"><simpara><literal>maven1!</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal><emphasis>prefix</emphasis>_MAVEN_REPO_PATH</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Maven repository path</simpara></entry>
<entry align="left" valign="top"><simpara><literal>/maven2/</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal><emphasis>prefix</emphasis>_MAVEN_REPO_PORT</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Maven repository port</simpara></entry>
<entry align="left" valign="top"><simpara><literal>8080</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal><emphasis>prefix</emphasis>_MAVEN_REPO_PRIVATE_KEY</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Local path to a private key for connecting to the Maven repository</simpara></entry>
<entry align="left" valign="top"><simpara><literal>${user.home}/.ssh/id_dsa</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal><emphasis>prefix</emphasis>_MAVEN_REPO_PROTOCOL</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Maven repository protocol</simpara></entry>
<entry align="left" valign="top"><simpara><literal>http</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal><emphasis>prefix</emphasis>_MAVEN_REPO_RELEASES_ENABLED</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Maven repository releases enabled</simpara></entry>
<entry align="left" valign="top"><simpara><literal>true</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal><emphasis>prefix</emphasis>_MAVEN_REPO_RELEASES_UPDATE_POLICY</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Maven repository releases update policy</simpara></entry>
<entry align="left" valign="top"><simpara><literal>always</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal><emphasis>prefix</emphasis>_MAVEN_REPO_SERVICE</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Maven repository OpenShift service. This value is used if a URL or host/port/protocol is not specified.</simpara></entry>
<entry align="left" valign="top"><simpara><literal>buscentr-myapp</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal><emphasis>prefix</emphasis>_MAVEN_REPO_SNAPSHOTS_ENABLED</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Maven repository snapshots enabled</simpara></entry>
<entry align="left" valign="top"><simpara><literal>true</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal><emphasis>prefix</emphasis>_MAVEN_REPO_SNAPSHOTS_UPDATE_POLICY</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Maven repository snapshots update policy</simpara></entry>
<entry align="left" valign="top"><simpara><literal>always</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal><emphasis>prefix</emphasis>_MAVEN_REPO_URL</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Fully qualified URL for the Maven repository</simpara></entry>
<entry align="left" valign="top"><simpara><literal>http://repo.example.com:8080/maven2/</literal></simpara></entry>
</row>
</tbody>
</tgroup>
</table>
</section>
</chapter>
<chapter xml:id="hacep-client-proc_hacep">
<title>Creating the HA CEP client</title>
<simpara>You must adapt your CEP client code to communicate with the HA CEP server image. Use the sample project included in the reference implementation for your client code. You can run your client code inside or outside the OpenShift environment.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Download the <literal>rhpam-7.10.0-reference-implementation.zip</literal> product deliverable file from the <link xl:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?downloadType=distributions&amp;product=rhpam&amp;productChanged=yes">Software Downloads</link> page of the Red Hat Customer Portal.</simpara>
</listitem>
<listitem>
<simpara>Extract the contents of the file and then uncompress the <literal>rhpam-7.10.0-openshift-drools-hacep-distribution.zip</literal> file.</simpara>
</listitem>
<listitem>
<simpara>Change to the <literal>openshift-drools-hacep-distribution/sources</literal> directory.</simpara>
</listitem>
<listitem>
<simpara>Review and modify the client code based on the sample project in the <literal>sample-hacep-project/sample-hacep-project-client</literal> directory. Ensure that the code fulfills the additional requirements described in <xref linkend="hacep-clientcode-ref_hacep"/>.</simpara>
</listitem>
<listitem>
<simpara>To update the KJAR version in an implementation that uses the method described in <xref linkend="hacep-server-maven-proc_hacep"/>, add an <literal>UpdateKJarGAV</literal> call to the client, similar to the following code:</simpara>
<programlisting language="java" linenumbering="unnumbered">        TopicsConfig envConfig = TopicsConfig.getDefaultTopicsConfig();
        Properties props = getProperties();
        try (RemoteStreamingKieSession producer = RemoteStreamingKieSession.create(props, envConfig)){
            producer.updateKJarGAV("org.kie:fake-jar:0.1");
        }</programlisting>
<simpara>Ensure that a KJAR with the specified GAV is available in the Maven repository when this call is executed.</simpara>
</listitem>
<listitem>
<simpara>In the <literal>sample-hacep-project/sample-hacep-project-client</literal> directory, generate a keystore, using <literal>password</literal> as a password. Enter the following command:</simpara>
<screen>keytool -genkeypair -keyalg RSA -keystore src/main/resources/keystore.jks</screen>
</listitem>
<listitem>
<simpara>Extract the HTTPS certificate from the OpenShift environment and add it to the keystore. Enter the following commands:</simpara>
<screen>oc extract secret/my-cluster-cluster-ca-cert --keys=ca.crt --to=- &gt; src/main/resources/ca.crt
keytool -import -trustcacerts -alias root -file src/main/resources/ca.crt -keystore src/main/resources/keystore.jks -storepass password -noprompt</screen>
</listitem>
<listitem>
<simpara>In the <literal>src/main/resources</literal> subdirectory of the project, open the <literal>configuration.properties</literal> file and replace <literal>&lt;bootstrap-hostname&gt;</literal> with the address that the route for the Kafka server provides.</simpara>
</listitem>
<listitem>
<simpara>Build the project using the standard Maven command:</simpara>
<screen>mvn clean install</screen>
</listitem>
<listitem>
<simpara>Change the <literal>sample-hacep-project-client</literal> project directory and enter the following command to run the client:</simpara>
<screen>mvn exec:java -Dexec.mainClass="org.kie.hacep.sample.client.ClientProducerDemo"</screen>
<simpara>This command executes the <literal>main</literal> method of the <literal>ClientProducerDemo</literal> class.</simpara>
</listitem>
</orderedlist>
</chapter>
<chapter xml:id="hacep-clientcode-ref_hacep">
<title>Requirements for HA CEP client and server code</title>
<simpara>When developing client and server code for high-availability CEP, follow certain additional requirements.</simpara>
<bridgehead xml:id="_kie_remote_api" renderas="sect2">kie-remote API</bridgehead>
<simpara>The client code must use the <literal>kie-remote</literal> API and not the <literal>kie</literal> API. The <literal>kie-remote</literal> API is specified in the <literal>org.kie:kie-remote</literal> Maven artifact. You can find the source code in the <literal>kie-remote</literal> Maven module.</simpara>
<bridgehead xml:id="_explicit_timestamps" renderas="sect2">Explicit timestamps</bridgehead>
<simpara>The decision engine needs to determine the sequence in which events happen. For this reason, every event must have an associated timestamp assigned to it. In a high-availability environment, make this timestamp a property of the JavaBean that models the event. Annotate the event class with the <literal>@Timestamp</literal> annotation, where the name of the timestamp attribute itself is the parameter, as in the following example:</simpara>
<programlisting language="java" linenumbering="unnumbered">@Role(Role.Type.EVENT)
@Timestamp("myTime")
public class StockTickEvent implements Serializable {

    private String company;
    private double price;
    private long myTime;
}</programlisting>
<simpara>If you do not provide a timestamp attribute, Drools assigns a timestamp to every event based on the time  when the event is inserted by the client into a remote session. However, this mechanism depends on the clocks on the client machines. If clocks between different clients diverge, inconsistencies can occur between events inserted by these hosts.</simpara>
<bridgehead xml:id="_lambda_expressions_for_non_memory_actions" renderas="sect2">Lambda expressions for non-memory actions</bridgehead>
<simpara>Working memory actions (actions to insert, modify, or delete information in the working memory of the decision engine) must be processed on every node of the cluster. Actions that are not memory actions must be executed only on the leader.</simpara>
<simpara>For example, the code might include the following rule:</simpara>
<programlisting language="drools" linenumbering="unnumbered">rule FindAdult when
  $p : Person(age &gt;= 18)
then
  modify($p) { setAdult(true) }; // working memory action
  sendEmailTo($p); // side effect
end</programlisting>
<simpara>When this rule is triggered, the person must be marked as an adult on every node. However, only the leader must send the email, so that only one copy of the email is sent.</simpara>
<simpara>Therefore, in your code, wrap the email action (called a <emphasis>side effect</emphasis>) in a lambda expression, as shown in the following example:</simpara>
<programlisting language="drools" linenumbering="unnumbered">rule FindAdult when
  $p : Person(age &gt;= 18)
then
  modify($p) { setAdult(true) };
  DroolsExecutor.getInstance().execute( () -&gt; sendEmailTo($p) );
end</programlisting>
</chapter>
</part>
<appendix xml:id="versioning-information">
<title>Versioning information</title>
<simpara>Documentation last updated on Monday, January 18, 2021.</simpara>
</appendix>
<appendix xml:id="author-group">
<title>Contact information</title>
<simpara>Red Hat Process Automation Manager documentation team: <link xl:href="mailto:brms-docs@redhat.com">brms-docs@redhat.com</link></simpara>
</appendix>
</book>