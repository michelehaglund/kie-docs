<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE book [
<!ENTITY % sgml.features "IGNORE">
<!ENTITY % xml.features "INCLUDE">
<!ENTITY % DOCBOOK_ENTS PUBLIC "-//OASIS//ENTITIES DocBook Character Entities V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/dbcentx.mod">
%DOCBOOK_ENTS;
]>
<?asciidoc-toc?><?asciidoc-numbered?><book xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0">
<info>
<title>Installing and configuring Red Hat Process Automation Manager</title><subtitle>
</subtitle>

<date>2021-01-26</date>
<productname>Red Hat Process Automation Manager</productname>
<productnumber>7.10</productnumber>
<abstract>
	<para>This document describes how to install Red Hat Process Automation Manager components on Red Hat JBoss EAP, in an Red Hat JBoss EAP clustered environment, on JBoss Web Server, and in other supported environments.</para>
</abstract>
<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="Common_Content/Legal_Notice.xml"/>
</info>
<preface>
<title>Preface</title>
<simpara>As a developer or system administrator, you can install Red Hat Process Automation Manager components on Red Hat JBoss EAP, in an Red Hat JBoss EAP clustered environment, on JBoss Web Server, and in other supported environments.</simpara>
</preface>
<preface xml:id="snip-conscious-language_installing-and-configuring">
<title>Making open source more inclusive</title>
<simpara>Red Hat is committed to replacing problematic language in our code, documentation, and web properties. We are beginning with these four terms: master, slave, blacklist, and whitelist. Because of the enormity of this endeavor, these changes will be implemented gradually over several upcoming releases. For more details, see <link xlink:href="https://www.redhat.com/en/blog/making-open-source-more-inclusive-eradicating-problematic-language"><emphasis>our CTO Chris Wrightâ€™s message</emphasis></link>.</simpara>
</preface>
<part xml:id="assembly-planning">
<title>Planning a Red Hat Process Automation Manager installation</title>
<partintro>
<simpara>As a system administrator, you have several options for installing Red Hat Process Automation Manager.</simpara>
</partintro>
<chapter xml:id="about-ba-con_planning">
<title>Red Hat Process Automation Manager versioning</title>
<simpara>Red Hat Process Automation Manager versions are designated with a numerical <literal>Major.Minor.Patch</literal> format, such as <literal>7.5.1</literal>. In this example, the major release is <literal>7.x.x</literal>, the minor release is <literal>7.5.x</literal>, and the patch release is <literal>7.5.1</literal>. Major releases often require data migration, while minor release upgrades and patch updates are typically managed with update tools provided with the Red Hat Process Automation Manager release artifacts.</simpara>
<simpara>The following are the general types of releases for Red Hat Process Automation Manager:</simpara>
<variablelist>
<varlistentry>
<term>Major release migrations</term>
<listitem>
<simpara>Major releases of Red Hat Process Automation Manager include substantial enhancements, security updates, bug fixes, and possibly redesigned features and functions. Data migration is typically required when an application is moved from one major release to another major release, such as from Red Hat JBoss BPM Suite 6.4.x to Red Hat Process Automation Manager 7.0. Automated migration tools are often provided with new major versions of Red Hat Process Automation Manager to facilitate migration, but some manual effort is likely required for certain data and configurations. The supported migration paths are specified in product announcements and documentation.</simpara>
<simpara>For example migration instructions, see
<link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.0/html/migrating_from_red_hat_jboss_bpm_suite_6.4_to_red_hat_process_automation_manager_7.0/"><emphasis>Migrating from Red Hat JBoss BPM Suite 6.4 to Red Hat Process Automation Manager 7.0</emphasis></link>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>Minor release upgrades</term>
<listitem>
<simpara>Minor releases of Red Hat Process Automation Manager include enhancements, security updates, and bug fixes. Data migration may be required when an application is moved from one minor release to another minor release, such as from Red Hat Process Automation Manager 7.5.x to 7.6. Automated update tools are often provided with both patch updates and new minor versions of Red Hat Process Automation Manager to facilitate updating certain components of Red Hat Process Automation Manager, such as Business Central, KIE Server, and the headless Process Automation Manager controller. Other Red Hat Process Automation Manager artifacts, such as the decision engine and standalone Business Central, are released as new artifacts with each minor release and you must re-install them to apply the update.</simpara>
<simpara>Before you upgrade to a new minor release, apply the latest patch update to your current version of Red Hat Process Automation Manager to ensure that the minor release upgrade is successful.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>Patch updates</term>
<listitem>
<simpara>Patch updates of Red Hat Process Automation Manager include the latest security updates and bug fixes. Scheduled patch updates contain all previously released patch updates for that minor version of the product, so you do not need to apply each patch update incrementally in order to apply the latest update. For example, you can update Red Hat Process Automation Manager 7.5.0 or 7.5.1 to Red Hat Process Automation Manager 7.5.2. However, for optimal Red Hat Process Automation Manager performance, apply product updates as they become available. Occasionally, unscheduled patch updates may be released outside the normal update cycle of the existing product. These may include security or other updates provided by Red Hat Global Support Services (GSS) to fix specific issues, and may not be cumulative updates.</simpara>
<simpara>Automated update tools are often provided with both patch updates and new minor versions of Red Hat Process Automation Manager to facilitate updating certain components of Red Hat Process Automation Manager, such as Business Central, KIE Server, and the headless Process Automation Manager controller. Other Red Hat Process Automation Manager artifacts, such as the decision engine and standalone Business Central, are released as new artifacts with each minor release and you must re-install them to apply the update.</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara>To ensure optimal transition between releases and to keep your Red Hat Process Automation Manager distribution current with the latest enhancements and fixes, apply new product releases and updates to Red Hat Process Automation Manager as they become available in the Red Hat Customer Portal. Consider also enabling product notifications in the Red Hat Customer Portal.</simpara>
</chapter>
<chapter xml:id="components-con_planning">
<title>Red Hat Process Automation Manager components</title>
<simpara>Red Hat Process Automation Manager is made up of Business Central and KIE Server.</simpara>
<itemizedlist>
<listitem>
<simpara>Business Central is the graphical user interface where you create and manage business rules. You can install Business Central in a Red Hat JBoss EAP instance or on the Red Hat OpenShift Container Platform (OpenShift).</simpara>
<simpara>Business Central is also available as a standalone JAR file. You can use the Business Central standalone JAR file to run Business Central without deploying it to an application server.</simpara>
</listitem>
<listitem>
<simpara>KIE Server is the server where rules and other artifacts are executed. It is used to instantiate and execute rules and solve planning problems. You can install KIE Server in a Red Hat JBoss EAP instance, in a Red Hat JBoss EAP cluster, on OpenShift, in an Oracle WebLogic server instance, in an IBM WebSphere Application Server instance, or as a part of Spring Boot application.</simpara>
<simpara>You can configure KIE Server to run in managed or unmanaged mode. If KIE Server is unmanaged, you must manually create and maintain KIE containers (deployment units). A KIE container is a specific version of a project. If KIE Server is managed, the Process Automation Manager controller manages the KIE Server configuration and you interact with the Process Automation Manager controller to create and maintain KIE containers.</simpara>
<simpara>The Process Automation Manager controller is integrated with Business Central. If you install Business Central on Red Hat JBoss EAP, use the Execution Server page to create and maintain KIE containers. However, if you do not install Business Central, you can install the headless Process Automation Manager controller and use the REST API or the KIE Server Java Client API to interact with it.</simpara>
</listitem>
<listitem>
<simpara>Red Hat Business Optimizer is integrated in Business Central and KIE Server. It is a lightweight, embeddable planning engine that optimizes planning problems. Red Hat Business Optimizer helps Java programmers solve planning problems efficiently, and it combines optimization heuristics and metaheuristics with efficient score calculations.</simpara>
</listitem>
</itemizedlist>
</chapter>
<chapter xml:id="ba-platforms-con_planning">
<title>Red Hat Process Automation Manager installation platforms</title>
<simpara>Every Red Hat Process Automation Manager release is certified on a variety of operating systems, JVMs, web browsers, and database combinations. Red Hat provides both production and development support for supported and tested configurations in both physical and virtual environments, according to your subscription agreement. See the following pages for information about supported configurations and version numbers:</simpara>
<itemizedlist>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/articles/3405381">Red Hat Process Automation Manager 7 Supported Configurations</link></simpara>
</listitem>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/articles/3463751">Red Hat Process Automation Manager 7 Component Details</link></simpara>
</listitem>
</itemizedlist>
<simpara>Red Hat Process Automation Manager 7.10 is available for the following application platforms:</simpara>
<itemizedlist>
<listitem>
<simpara>Red Hat JBoss EAP</simpara>
</listitem>
<listitem>
<simpara>Red Hat JBoss Web Server</simpara>
</listitem>
<listitem>
<simpara>Red Hat OpenShift Container Platform</simpara>
</listitem>
<listitem>
<simpara>Oracle WebLogic Server</simpara>
</listitem>
<listitem>
<simpara>IBM WebSphere Application Server</simpara>
</listitem>
</itemizedlist>
<section xml:id="eap-con_planning">
<title>Red Hat JBoss EAP</title>
<simpara>Red Hat JBoss Enterprise Application Platform (Red Hat JBoss EAP) is a certified implementation of the Java Enterprise Edition 7 (Java EE 7) full and web profile specifications. Red Hat JBoss EAP provides preconfigured options for features such as high availability, clustering, messaging, and distributed caching. It also enables users to write, deploy, and run applications using the various APIs and services that Red Hat JBoss EAP provides.</simpara>
<simpara>You can install both Business Central and KIE Server in a single Red Hat JBoss EAP instance. However, in production environments you should install them in separate instances.</simpara>
</section>
<section xml:id="jws-con_planning">
<title>Red Hat JBoss Web Server</title>
<simpara>Red Hat JBoss Web Server is an enterprise-ready web server designed for medium and large applications, based on Tomcat. Red Hat JBoss Web Server provides organizations with a single deployment platform for Java Server Pages (JSP) and Java Servlet technologies, PHP, and CGI.</simpara>
<simpara>You can install KIE Server and the headless Process Automation Manager controller on Red Hat JBoss Web Server.</simpara>
</section>
<section xml:id="os-con_planning">
<title>Red Hat OpenShift Container Platform</title>
<simpara>Red Hat OpenShift Container Platform (OpenShift) uses Kubernetes and provides an API to manage these services. OpenShift enables you to create and manage containers.</simpara>
<simpara>In this solution, components of Red Hat Process Automation Manager are deployed as separate OpenShift pods. You can scale each of the pods up and down individually, providing as few or as many containers as necessary for a particular component. You can use standard OpenShift methods to manage the pods and balance the load.</simpara>
<simpara>You can install both Business Central and KIE Server on OpenShift.</simpara>
</section>
<section xml:id="wls-con_planning">
<title>Oracle WebLogic Server</title>
<simpara>Oracle WebLogic Server is a Java EE application server that provides a standard set of APIs for creating distributed Java applications that can access a wide variety of services, such as databases, messaging services, and connections to external enterprise systems. Users access these applications using web browser clients or Java clients.</simpara>
<simpara>You can install KIE Server in an Oracle WebLogic Server instance and then use the headless Process Automation Manager controller and the REST API or the KIE Server Java Client API to interact with KIE Server. You can also use standalone Business Central to interact with KIE Server.</simpara>
</section>
<section xml:id="was-con_planning">
<title>IBM WebSphere Application Server</title>
<simpara>IBM WebSphere Application Server is a flexible and secure web application server that hosts Java-based web applications and provides Java EE-certified run time environments. IBM WebSphere 9.0 supports Java SE 8 and is fully compliant with Java EE 7 since version 8.5.5.6.</simpara>
<simpara>You can install KIE Server in an IBM WebSphere Application Server instance and then use the headless Process Automation Manager controller to interact with KIE Server. You can also use standalone Business Central to interact with KIE Server.</simpara>
</section>
<section xml:id="dev-options-con_planning">
<title>Red Hat Process Automation Manager development options</title>
<simpara>Developers can develop assets in Red Hat Process Automation Manager. In addition, you can integrate Red Hat CodeReady Studio with Red Hat Process Automation Manager to enable developers to write complex applications and leverage code auto-completion.</simpara>
<simpara>Red Hat CodeReady Studio is an integrated development environment (IDE) based on Eclipse. It integrates tooling and runtime components by combining Eclipse, Eclipse Tooling, and Red Hat JBoss EAP. Red Hat CodeReady Studio provides plug-ins with tools and interfaces for Red Hat Process Automation Manager. These plug-ins are based on the community version of these products.
For this reason, the Red Hat Process Automation Manager plug-ins are called the jBPM and Drools plug-ins.</simpara>
</section>
</chapter>
<chapter xml:id="supported-repos-con_planning">
<title>Red Hat Process Automation Manager supported repositories</title>
<simpara>You can use Git repositories and Apache Maven with Red Hat Process Automation Manager.</simpara>
<section xml:id="git_repositories" remap="_git_repositories">
<title>Git repositories</title>
<simpara>Git repositories are used internally within Business Central to store all processes, rules, and other artifacts that are created in the authoring environment. Git is a distributed version control system. It implements revisions as commit objects. When you commit your changes into a repository, a new commit object in the Git repository is created. When you create a project in Business Central, it is added to the Git repository that is connected to Business Central.</simpara>
<simpara>If you have projects in other Git repositories, you can import them into Business Central spaces. You can use Git hooks to synchronize the internal Git repositories with external repositories.</simpara>
</section>
<section xml:id="apache_maven" remap="_apache_maven">
<title>Apache Maven</title>
<simpara><link xlink:href="http://maven.apache.org/">Apache Maven</link> is a distributed build automation tool used in Java application development to build and manage software projects. You can use Maven to build, publish, and deploy your Red Hat Process Automation Manager projects. Maven provides the following benefits:</simpara>
<itemizedlist>
<listitem>
<simpara>The build process is easy and a uniform build system is implemented across projects.</simpara>
</listitem>
<listitem>
<simpara>All of the required JAR files for a project are made available at compile time.</simpara>
</listitem>
<listitem>
<simpara>A proper project structure is configured.</simpara>
</listitem>
<listitem>
<simpara>Dependencies and versions are well managed.</simpara>
</listitem>
<listitem>
<simpara>There is no need for additional build processing because Maven builds output into a number of predefined types, such as JAR and WAR.</simpara>
</listitem>
</itemizedlist>
<simpara>Maven uses repositories to store Java libraries, plug-ins, and other build artifacts. These repositories can be local or remote. Red Hat Process Automation Manager maintains local and remote maven repositories that you can add to your project for accessing the rules, processes, events, and other project dependencies. When building projects and archetypes, Maven dynamically retrieves Java libraries and Maven plug-ins from local or remote repositories. Doing this promotes sharing and reuse of dependencies across projects.</simpara>
</section>
</chapter>
<chapter xml:id="installation-options-ref_planning">
<title>Installation environment options for Red Hat Process Automation Manager</title>
<simpara>With Red Hat Process Automation Manager, you can set up a development environment to develop business applications, a runtime environment to run those applications to support decisions, or both.</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Development environment</emphasis>: Typically consists of one Business Central installation and at least one KIE Server installation. You can use Business Central to design decisions and other artifacts, and you can use KIE Server to execute and test the artifacts that you created.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Runtime environment</emphasis>: Consists of one or more KIE Server instances with or without Business Central. Business Central has an embedded Process Automation Manager controller. If you install Business Central, use the <emphasis role="strong">Menu</emphasis> â†’ <emphasis role="strong">Deploy</emphasis> â†’ <emphasis role="strong">Execution servers</emphasis> page to create and maintain containers. If you want to automate KIE Server management without Business Central, you can use the headless Process Automation Manager controller.</simpara>
</listitem>
</itemizedlist>
<simpara>You can also cluster both development and runtime environments. A clustered development or runtime environment consists of a unified group or cluster of two or more servers. The primary benefit of clustering Red Hat Process Automation Manager development environments is high availability and enhanced collaboration, while the primary benefit of clustering Red Hat Process Automation Manager runtime environments is high availability and load balancing. High availability decreases the chance of data loss when a single server fails. When a server fails, another server fills the gap by providing a copy of the data that was on the failed server. When the failed server comes online again, it resumes its place in the cluster.</simpara>
<note>
<simpara>Clustering of the runtime environment is currently supported on Red Hat JBoss EAP 7.3
and Red Hat OpenShift Container Platform
only.</simpara>
</note>
</chapter>
<chapter xml:id="roles-users-con_planning">
<title>Red Hat Process Automation Manager roles and users</title>
<simpara>To access Business Central or KIE Server, you must create users and assign them appropriate roles before the servers are started. You can create users and roles when you install Business Central or KIE Server.</simpara>
<simpara>Business Central and KIE Server use the Java Authentication and Authorization Service (JAAS) login module to authenticate users. If both Business Central and KIE Server are running on a single instance, then they share the same JAAS subject and security domain. Therefore, a user who is authenticated for Business Central can also access KIE Server.</simpara>
<simpara>However, if Business Central and KIE Server are running on different instances, then the JAAS login module is triggered for both individually. Therefore, a user who is authenticated for Business Central must be authenticated separately to access KIE Server.  For example, if a user who is authenticated on Business Central but not authenticated on KIE Server tries to view or manage process definitions in Business Central, a 401 error is logged in the log file and the <literal>Invalid credentials to load data from remote server. Contact your system administrator.</literal> message appears in Business Central.</simpara>
<simpara>This section describes Red Hat Process Automation Manager user roles.</simpara>
<note>
<simpara>The <literal>admin</literal>,  <literal>analyst</literal>,
<literal>developer</literal>, <literal>manager</literal>, <literal>process-admin</literal>, <literal>user</literal>,
 and <literal>rest-all</literal> roles are reserved for Business Central. The <literal>kie-server</literal> role is reserved for KIE Server. For this reason, the available roles can differ depending on whether Business Central, KIE Server, or both are installed.</simpara>
</note>
<itemizedlist>
<listitem>
<simpara><literal>admin</literal>: Users with the <literal>admin</literal> role are the Business Central administrators. They can manage users and create, clone, and manage repositories. They have full access to make required changes in the application. Users with the <literal>admin</literal> role have access to all areas within Red Hat Process Automation Manager.</simpara>
</listitem>
<listitem>
<simpara><literal>analyst</literal>: Users with the <literal>analyst</literal> role have access to all high-level features. They can model
and execute their
projects. However, these users cannot add contributors to spaces or delete spaces in the <emphasis role="strong">Design â†’ Projects</emphasis> view. Access to the <emphasis role="strong">Deploy â†’ Execution Servers</emphasis> view, which is intended for administrators, is not available to users with the <literal>analyst</literal> role. However, the <emphasis role="strong">Deploy</emphasis> button is available to these users when they access the Library perspective.</simpara>
</listitem>
<listitem>
<simpara><literal>developer</literal>: Users with the <literal>developer</literal> role have access to almost all features and can manage rules, models, process flows, forms, and dashboards. They can manage the asset repository, they can create, build, and deploy projects, and they can use Red Hat CodeReady Studio to view processes. Only certain administrative functions such as creating and cloning a new repository are hidden from users with the <literal>developer</literal> role.</simpara>
</listitem>
<listitem>
<simpara><literal>manager</literal>: Users with the <literal>manager</literal> role can view reports. These users are usually interested in statistics about the business processes and their performance, business indicators, and other business-related reporting. A user with this role has access only to process and task reports.</simpara>
</listitem>
<listitem>
<simpara><literal>process-admin</literal>: Users with the <literal>process-admin</literal> role are business process administrators. They have full access to business processes, business tasks, and execution errors. These users can also view business reports and have access to the Task Inbox list.</simpara>
</listitem>
<listitem>
<simpara><literal>user</literal>: Users with the <literal>user</literal> role can work on the Task Inbox list, which contains business tasks that are part of currently running processes. Users with this role can view process and task reports and manage processes.</simpara>
</listitem>
<listitem>
<simpara><literal>rest-all</literal>: Users with the <literal>rest-all</literal> role can access Business Central REST capabilities.</simpara>
</listitem>
<listitem>
<simpara><literal>kie-server</literal>: Users with the <literal>kie-server</literal> role can access KIE Server REST capabilities.
This role is mandatory for users to have access to <emphasis role="strong">Manage</emphasis> and <emphasis role="strong">Track</emphasis> views in Business Central.</simpara>
</listitem>
</itemizedlist>
</chapter>
<chapter xml:id="reference-implementations-con_planning">
<title>Red Hat Process Automation Manager reference implementations</title>
<simpara>Red Hat Process Automation Manager provides reference implementations that you can use as starter applications. They are included in the <emphasis role="strong">Red Hat Process Automation Manager 7.10.0 Reference Implementations</emphasis> download, available on the Red Hat Process Automation Manager Software Downloads page in the Red Hat Customer Portal.</simpara>
<formalpara>
<title>Employee Rostering reference implementation</title>
<para>The employee rostering reference implementation enables you to create an application that assigns employees to shifts on various positions in an organization. For example, you can use the application to distribute shifts in a hospital between nurses, guard duty shifts across a number of locations, or shifts on an assembly line between workers.</para>
</formalpara>
<formalpara>
<title>Vehicle route planning reference implementation</title>
<para>The vehicle route planning reference implementation enables you to create an application that solves a vehicle route planning problem with real-world maps, roads, and vehicles delivering goods to locations, each with a specific capacity. For more information, see the README file in the vehicle routing ZIP file, included in the reference implementation download.</para>
</formalpara>
<formalpara>
<title>School timetable reference implementation</title>
<para>The school timetable reference implementation enables you to build a REST application on Spring Boot that associates lessons with rooms and time slots and avoids conflicts by considering student and teacher constraints.</para>
</formalpara>
<formalpara>
<title>High available event-driven decisioning reference implementation</title>
<para>The high available event-driven decisioning reference implementation enables you to deploy Drools engine code that requires stateful processing, including rules developed with complex event processing, in an OpenShift environment. Doing this enables the decision engine to process complex event series with high availability.</para>
</formalpara>
</chapter>
<chapter xml:id="integrating-con_planning">
<title>Integrating with Red Hat Process Automation Manager</title>
<simpara>You can integrate Red Hat Process Automation Manager with other products and components, such as Spring Boot, Red Hat Fuse, and Red Hat Single Sign-On.</simpara>
<section xml:id="red_hat_process_automation_manager_spring_boot_business_applications" remap="_red_hat_process_automation_manager_spring_boot_business_applications">
<title>Red Hat Process Automation Manager Spring Boot business applications</title>
<simpara>Spring Framework is a Java platform that provides comprehensive infrastructure support for developing Java applications. Spring Boot is a lightweight framework based on Spring Boot starters. Spring Boot starters are <literal>pom.xml</literal> files that contain a set of dependency descriptors that you can include in your Spring Boot project. Red Hat offers support and maintenance for Red Hat Process Automation Manager Spring Boot projects as part of Red Hat Runtimes.</simpara>
<simpara>Red Hat Process Automation Manager Spring Boot business applications are flexible, UI-agnostic logical groupings of individual services that provide certain business capabilities. Business applications are based on Spring Boot starters. They are usually deployed separately and can be versioned individually. A complete business application enables a domain to achieve specific business goals, for example order management or accommodation management.</simpara>
<simpara>On the <link xlink:href="https://start.jbpm.org">business application</link> website you can create a Process Automation Manager, Decision Manager, or Business Optimizer business application. After you create and configure your business application, you can deploy it to an existing service or to the cloud, through OpenShift.</simpara>
</section>
<section xml:id="integrating_red_hat_fuse" remap="_integrating_red_hat_fuse">
<title>Integrating Red Hat Fuse</title>
<simpara>Fuse is a distributed, cloud-native integration platform that is part of an agile integration solution. Its distributed approach enables teams to deploy integrated services where required.</simpara>
<simpara>You can install Red Hat Fuse on the Apache Karaf container platform or Red Hat JBoss Enterprise Application Platform and then install and configure Red Hat Process Automation Manager in that container.</simpara>
</section>
<section xml:id="integrating_red_hat_single_sign_on" remap="_integrating_red_hat_single_sign_on">
<title>Integrating Red Hat Single Sign-On</title>
<simpara>Red Hat Single Sign-On (RH-SSO) is a single sign-on solution that you can use to secure your browser applications with your REST web services and Git access.</simpara>
<simpara>When you integrate Red Hat Process Automation Manager with RH-SSO, you create an SSO and identity management (IDM) environment for Red Hat Process Automation Manager. The session management feature of RH-SSO enables you to use a single authentication for different Red Hat Process Automation Manager environments on the internet.</simpara>
<simpara>RH-SSO 7.3 is supported with Red Hat Process Automation Manager on Red Hat JBoss EAP 7.3.</simpara>
</section>
</chapter>
<chapter xml:id="additional_resources" remap="_additional_resources">
<title>Additional resources</title>
<itemizedlist>
<title>Installation</title>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/installing_and_configuring_red_hat_process_automation_manager#assembly-install-on-eap"><emphasis>Installing and configuring Red Hat Process Automation Manager on Red Hat JBoss EAP 7.3</emphasis></link></simpara>
</listitem>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/installing_and_configuring_red_hat_process_automation_manager#assembly-clustering-eap"><emphasis>Installing and configuring Red Hat Process Automation Manager in a Red Hat JBoss EAP clustered environment</emphasis></link></simpara>
</listitem>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/installing_and_configuring_red_hat_process_automation_manager#assembly-install-on-jws"><emphasis>Installing and configuring Red Hat Process Automation Manager on Red Hat JBoss Web Server</emphasis></link></simpara>
</listitem>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/installing_and_configuring_red_hat_process_automation_manager#assembly-installing-kie-server-on-was"><emphasis>Installing and configuring KIE Server on IBM WebSphere Application Server</emphasis></link></simpara>
</listitem>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/installing_and_configuring_red_hat_process_automation_manager#assembly-installing-kie-server-on-wls"><emphasis>Installing and configuring KIE Server on Oracle WebLogic Server</emphasis></link></simpara>
</listitem>
</itemizedlist>
<itemizedlist>
<title>Integration</title>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/integrating_red_hat_process_automation_manager_with_other_products_and_components#assembly-integrating-codeready-studio"><emphasis>Integrating Red Hat CodeReady Studio with Red Hat Process Automation Manager</emphasis></link></simpara>
</listitem>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/integrating_red_hat_process_automation_manager_with_other_products_and_components#assembly-springboot-business-apps"><emphasis>Creating Red Hat Process Automation Manager business applications with Spring Boot</emphasis></link></simpara>
</listitem>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/integrating_red_hat_process_automation_manager_with_other_products_and_components#assembly-integrating-fuse"><emphasis>Integrating Red Hat Fuse with Red Hat Process Automation Manager</emphasis></link></simpara>
</listitem>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/integrating_red_hat_process_automation_manager_with_other_products_and_components#assembly-integrating-sso"><emphasis>Integrating Red Hat Process Automation Manager with Red Hat Single Sign-On</emphasis></link></simpara>
</listitem>
</itemizedlist>
<itemizedlist>
<title>Reference Implementations</title>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/developing_solvers_with_red_hat_business_optimizer_in_red_hat_process_automation_manager#assembly-optimizer-modifying-ER-template-IDE"><emphasis>Running and modifying the employee rostering starter application for Red Hat Business Optimizer using an IDE</emphasis></link></simpara>
</listitem>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/developing_solvers_with_red_hat_business_optimizer_in_red_hat_process_automation_manager#assembly-business-optimizer-vrp"><emphasis>Deploying and using the vehicle route planning starter application for Red Hat Business Optimizer</emphasis></link></simpara>
</listitem>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/developing_solvers_with_red_hat_business_optimizer_in_red_hat_process_automation_manager#assembly-business-optimizer-springboot"><emphasis>Creating a school timetable using Red Hat Business Optimizer with Spring Boot</emphasis></link></simpara>
</listitem>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/deploying_red_hat_process_automation_manager_on_red_hat_openshift_container_platform#assembly-hacep"><emphasis>Implementing high available event-driven decisioning using the decision engine on Red Hat OpenShift Container Platform</emphasis></link></simpara>
</listitem>
</itemizedlist>
<itemizedlist>
<title>OpenShift</title>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/deploying_red_hat_process_automation_manager_on_red_hat_openshift_container_platform#assembly-openshift-operator"><emphasis>Deploying a Red Hat Process Automation Manager environment on Red Hat OpenShift Container Platform using Operators</emphasis></link></simpara>
</listitem>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/deploying_red_hat_process_automation_manager_on_red_hat_openshift_container_platform#assembly-openshift-templates"><emphasis>Deploying a Red Hat Process Automation Manager environment on Red Hat OpenShift Container Platform using templates</emphasis></link></simpara>
</listitem>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/deploying_red_hat_process_automation_manager_on_red_hat_openshift_container_platform#assembly-hacep"><emphasis>Implementing high available event-driven decisioning using the decision engine on Red Hat OpenShift Container Platform</emphasis></link></simpara>
</listitem>
</itemizedlist>
</chapter>
</part>
<part xml:id="assembly-install-on-eap">
<title>Installing and configuring Red Hat Process Automation Manager on Red Hat JBoss EAP 7.3</title>
<partintro>
<simpara>This document describes how to install Red Hat Process Automation Manager on a Red Hat JBoss Enterprise Application Platform 7.3 instance.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You have reviewed the information in <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/installing_and_configuring_red_hat_process_automation_manager#assembly-planning"><emphasis>Planning a Red Hat Process Automation Manager installation</emphasis></link>.</simpara>
</listitem>
<listitem>
<simpara>You have installed the latest patch release of Red Hat JBoss Enterprise Application Platform 7.3. For information about installing Red Hat JBoss EAP, see the <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.3/html-single/installation_guide/index"><emphasis>Red Hat JBoss Enterprise Application Platform installaton guide</emphasis></link>.</simpara>
</listitem>
</itemizedlist>
</partintro>
<chapter xml:id="installing-con_install-on-eap">
<title>About Red Hat Process Automation Manager</title>
<simpara>Red Hat Process Automation Manager is the Red Hat middleware platform for creating business automation applications and microservices. It enables enterprise business and IT users to document, simulate, manage, automate, and monitor business processes and policies. It is designed to empower business and IT users to collaborate more effectively, so business applications can be changed easily and quickly.</simpara>
<simpara>Red Hat Process Automation Manager is made up of Business Central and KIE Server.</simpara>
<itemizedlist>
<listitem>
<simpara>KIE Server is the server where rules and other artifacts are executed. It is used to instantiate and execute rules and solve planning problems. KIE Server provides the runtime environment for business assets and accesses the data stored in the assets repository (knowledge store).</simpara>
</listitem>
<listitem>
<simpara>Business Central</simpara>
</listitem>
<listitem>
<simpara>Business Central is the graphical user interface where you create and manage business rules that KIE Server executes. It enables you to perform the following tasks:</simpara>
<itemizedlist>
<listitem>
<simpara>Create, manage, and edit your rules, processes, and related assets.</simpara>
</listitem>
<listitem>
<simpara>Manage connected KIE Server instances and their KIE containers (deployment units).</simpara>
</listitem>
<listitem>
<simpara>Execute runtime operations against processes and tasks in KIE Server instances connected to Business Central.</simpara>
<simpara>Business Central is also available as a standalone JAR file. You can use the Business Central standalone JAR file to run Business Central without needing to deploy it to an application server.</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<simpara>Red Hat JBoss Enterprise Application Platform (Red Hat JBoss EAP) 7.3 is a certified implementation of the Java Enterprise Edition 8 (Java EE 8) full and web profile specifications. Red Hat JBoss EAP provides preconfigured options for features such as high availability, clustering, messaging, and distributed caching. It also enables users to write, deploy, and run applications using the various APIs and services that Red Hat JBoss EAP provides.</simpara>
<simpara>The instructions in this document explain how to install Red Hat Process Automation Manager in
a Red Hat JBoss EAP 7.3 server instance.</simpara>
<simpara>For instructions on how to install Red Hat Process Automation Manager in other environments, see the following documents:</simpara>
<itemizedlist>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/installing_and_configuring_red_hat_process_automation_manager#assembly-installing-kie-server-on-was"><emphasis>Installing and configuring KIE Server on IBM WebSphere Application Server</emphasis></link></simpara>
</listitem>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/installing_and_configuring_red_hat_process_automation_manager#assembly-installing-kie-server-on-wls"><emphasis>Installing and configuring KIE Server on Oracle WebLogic Server</emphasis></link></simpara>
</listitem>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/deploying_red_hat_process_automation_manager_on_red_hat_openshift_container_platform#assembly-openshift-operator"><emphasis>Deploying a Red Hat Process Automation Manager environment on Red Hat OpenShift Container Platform using Operators</emphasis></link></simpara>
</listitem>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/deploying_red_hat_process_automation_manager_on_red_hat_openshift_container_platform#assembly-openshift-templates"><emphasis>Deploying a Red Hat Process Automation Manager environment on Red Hat OpenShift Container Platform using templates</emphasis></link></simpara>
</listitem>
</itemizedlist>
<simpara>For information about supported components, see the following documents:</simpara>
<itemizedlist>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/solutions/3405361">What is the mapping between Red Hat Process Automation Manager and the Maven library version?</link></simpara>
</listitem>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/articles/3405381">Red Hat Process Automation Manager 7 Supported Configurations</link></simpara>
</listitem>
</itemizedlist>
</chapter>
<chapter xml:id="roles-users-con_install-on-eap">
<title>Red Hat Process Automation Manager roles and users</title>
<simpara>To access Business Central or KIE Server, you must create users and assign them appropriate roles before the servers are started. You can create users and roles when you install Business Central or KIE Server.</simpara>
<simpara>Business Central and KIE Server use the Java Authentication and Authorization Service (JAAS) login module to authenticate users. If both Business Central and KIE Server are running on a single instance, then they share the same JAAS subject and security domain. Therefore, a user who is authenticated for Business Central can also access KIE Server.</simpara>
<simpara>However, if Business Central and KIE Server are running on different instances, then the JAAS login module is triggered for both individually. Therefore, a user who is authenticated for Business Central must be authenticated separately to access KIE Server.  For example, if a user who is authenticated on Business Central but not authenticated on KIE Server tries to view or manage process definitions in Business Central, a 401 error is logged in the log file and the <literal>Invalid credentials to load data from remote server. Contact your system administrator.</literal> message appears in Business Central.</simpara>
<simpara>This section describes Red Hat Process Automation Manager user roles.</simpara>
<note>
<simpara>The <literal>admin</literal>,  <literal>analyst</literal>,
<literal>developer</literal>, <literal>manager</literal>, <literal>process-admin</literal>, <literal>user</literal>,
 and <literal>rest-all</literal> roles are reserved for Business Central. The <literal>kie-server</literal> role is reserved for KIE Server. For this reason, the available roles can differ depending on whether Business Central, KIE Server, or both are installed.</simpara>
</note>
<itemizedlist>
<listitem>
<simpara><literal>admin</literal>: Users with the <literal>admin</literal> role are the Business Central administrators. They can manage users and create, clone, and manage repositories. They have full access to make required changes in the application. Users with the <literal>admin</literal> role have access to all areas within Red Hat Process Automation Manager.</simpara>
</listitem>
<listitem>
<simpara><literal>analyst</literal>: Users with the <literal>analyst</literal> role have access to all high-level features. They can model
and execute their
projects. However, these users cannot add contributors to spaces or delete spaces in the <emphasis role="strong">Design â†’ Projects</emphasis> view. Access to the <emphasis role="strong">Deploy â†’ Execution Servers</emphasis> view, which is intended for administrators, is not available to users with the <literal>analyst</literal> role. However, the <emphasis role="strong">Deploy</emphasis> button is available to these users when they access the Library perspective.</simpara>
</listitem>
<listitem>
<simpara><literal>developer</literal>: Users with the <literal>developer</literal> role have access to almost all features and can manage rules, models, process flows, forms, and dashboards. They can manage the asset repository, they can create, build, and deploy projects, and they can use Red Hat CodeReady Studio to view processes. Only certain administrative functions such as creating and cloning a new repository are hidden from users with the <literal>developer</literal> role.</simpara>
</listitem>
<listitem>
<simpara><literal>manager</literal>: Users with the <literal>manager</literal> role can view reports. These users are usually interested in statistics about the business processes and their performance, business indicators, and other business-related reporting. A user with this role has access only to process and task reports.</simpara>
</listitem>
<listitem>
<simpara><literal>process-admin</literal>: Users with the <literal>process-admin</literal> role are business process administrators. They have full access to business processes, business tasks, and execution errors. These users can also view business reports and have access to the Task Inbox list.</simpara>
</listitem>
<listitem>
<simpara><literal>user</literal>: Users with the <literal>user</literal> role can work on the Task Inbox list, which contains business tasks that are part of currently running processes. Users with this role can view process and task reports and manage processes.</simpara>
</listitem>
<listitem>
<simpara><literal>rest-all</literal>: Users with the <literal>rest-all</literal> role can access Business Central REST capabilities.</simpara>
</listitem>
<listitem>
<simpara><literal>kie-server</literal>: Users with the <literal>kie-server</literal> role can access KIE Server REST capabilities.
This role is mandatory for users to have access to <emphasis role="strong">Manage</emphasis> and <emphasis role="strong">Track</emphasis> views in Business Central.</simpara>
</listitem>
</itemizedlist>
</chapter>
<chapter xml:id="install-download-proc_install-on-eap">
<title>Downloading the Red Hat Process Automation Manager installation files</title>
<simpara>You can use the installer JAR file or deployable ZIP files to install Red Hat Process Automation Manager. You can run the installer in interactive or command line interface (CLI) mode. Alternatively, you can extract and configure the Business Central and KIE Server deployable ZIP files. If you want to run Business Central without deploying it to an application server, download the Business Central Standalone JAR file.</simpara>
<simpara>Download a Red Hat Process Automation Manager distribution that meets your environment and installation requirements.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Navigate to the <link xlink:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html">Software Downloads</link> page in the Red Hat Customer Portal (login required), and select the product and version from the drop-down options:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Product:</emphasis> Process Automation Manager</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Version:</emphasis> 7.10</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Download one of the following product distributions, depending on your preferred installation method:</simpara>
<note>
<simpara>You only need to download one of these distributions.</simpara>
</note>
<itemizedlist>
<listitem>
<simpara>If you want to use the installer to install Red Hat Process Automation Manager on
Red Hat JBoss EAP 7.3,
 download <emphasis role="strong">Red Hat Process Automation Manager 7.10.0 Installer</emphasis>
(<literal>rhpam-installer-7.10.0.jar</literal>).
The installer graphical user interface guides you through the installation process.</simpara>
</listitem>
<listitem>
<simpara>If you want to install Red Hat Process Automation Manager on Red Hat JBoss EAP 7.3 using the deployable ZIP files, download the following files:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Red Hat Process Automation Manager 7.10.0 KIE Server for All Supported EE8 Containers</emphasis> (<literal>rhpam-7.10.0-kie-server-ee8.zip</literal>)</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Red Hat Process Automation Manager 7.10.0 Business Central Deployable for EAP 7</emphasis>
(<literal>rhpam-7.10.0-business-central-eap7-deployable.zip</literal>)</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Red Hat Process Automation Manager 7.10.0 Add Ons</emphasis> (<literal>rhpam-7.10.0-add-ons.zip</literal>)</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>To run Business Central without needing to deploy it to an application server, download <emphasis role="strong">Red Hat Process Automation Manager 7.10.0 Business Central Standalone</emphasis> (<literal>rhpam-7.10.0-business-central-standalone.jar</literal>).</simpara>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
</chapter>
<chapter xml:id="assembly_installing-using-installer_install-on-eap">
<title>Using the Red Hat Process Automation Manager installer</title>
<simpara>This section describes how to install Business Central and the KIE Server using the installer JAR file. The JAR file is an executable file that installs Red Hat Process Automation Manager in an existing
Red Hat JBoss EAP 7.3
 server installation. You can run the installer in interactive or command line interface (CLI) mode.</simpara>
<note>
<simpara>The Red Hat Process Automation Manager JAR file installer does <emphasis>not</emphasis> support the Red Hat JBoss EAP distribution installed by yum or RPM Package Manager. If you want to install Red Hat Process Automation Manager in this type of Red Hat JBoss EAP installation, download the <emphasis role="strong">Red Hat Process Automation Manager 7.10 Deployable for Red Hat JBoss EAP 7.3</emphasis> file and follow the steps in <xref linkend="assembly_installing-on-eap-deployable_install-on-eap"/>.</simpara>
</note>
<note>
<simpara>Because IBM JDK cannot use keystores generated on other JDKs, you cannot install Red Hat Process Automation Manager into an existing Red Hat JBoss EAP installation running on IBM JDK with a keystore generated on another JDK.</simpara>
</note>
<formalpara>
<title>Next steps:</title>
<para>Follow the instructions in one of the following sections:</para>
</formalpara>
<itemizedlist>
<listitem>
<simpara><xref linkend="installer-run-proc_install-on-eap"/></simpara>
</listitem>
<listitem>
<simpara><xref linkend="installer-run-cli-proc_install-on-eap"/></simpara>
</listitem>
<listitem>
<simpara><xref linkend="installer-controller-eap-proc_install-on-eap"/></simpara>
</listitem>
</itemizedlist>
<section xml:id="installer-run-proc_install-on-eap">
<title>Using the installer in interactive mode</title>
<simpara>The installer for Red Hat Process Automation Manager is an executable JAR file. You can use it to install Red Hat Process Automation Manager in an existing
Red Hat JBoss EAP 7.3
 server installation.</simpara>
<note>
<simpara>For security reasons, you should run the installer as a non-root user.</simpara>
</note>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>The <emphasis role="strong">Red Hat Process Automation Manager 7.10.0 Installer</emphasis> has been downloaded. For instructions, see <xref linkend="install-download-proc_install-on-eap"/>.</simpara>
</listitem>
<listitem>
<simpara>A supported JDK is installed. For a list of supported JDKs, see <link xlink:href="https://access.redhat.com/articles/3405381">Red Hat Process Automation Manager 7 Supported Configurations</link>.</simpara>
</listitem>
<listitem>
<simpara>A backed-up
Red Hat JBoss EAP 7.3
 server installation is available.</simpara>
</listitem>
<listitem>
<simpara>Sufficient user permissions to complete the installation are granted.</simpara>
</listitem>
<listitem>
<simpara>The JAR binary is included in <literal>$PATH</literal> environment variable. On Red Hat Enterprise Linux, it is included in the <literal>java-$<emphasis>JAVA_VERSION</emphasis>-openjdk-devel</literal> package.</simpara>
<note>
<simpara>Red Hat Process Automation Manager is designed to work with UTF-8 encoding. If a different encoding system is used by the underlying JVM, unexpected errors might occur. To ensure UTF-8 is used by the JVM, use the <literal>"-Dfile.encoding=UTF-8"</literal> system property. For a list of system properties, see <xref linkend="business-central-system-properties-ref_install-on-eap"/>.</simpara>
</note>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>In a terminal window, navigate to the directory where you downloaded the installer JAR file and enter the following command:</simpara>
<screen>java -jar rhpam-installer-7.10.0.jar</screen>
<note>
<simpara>When running the installer on Windows, you may be prompted to provide administrator credentials during the installation. To prevent this requirement, add the <literal>izpack.mode=privileged</literal> option to the installation command:</simpara>
<screen>java -Dizpack.mode=privileged -jar
rhpam-installer-7.10.0.jar</screen>
<simpara>Furthermore, when running the installer on a 32-bit Java virtual machine, you might encounter memory limitations. To prevent this issue, run this command:</simpara>
<screen>java -XX:MaxHeapSize=4g -jar
rhpam-installer-7.10.0.jar</screen>
</note>
<simpara>The graphical installer displays a splash screen and a license agreement page.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">I accept the terms of this license agreement</emphasis> and click <emphasis role="strong">Next</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Specify the
Red Hat JBoss EAP 7.3
server home where you want to install Red Hat Process Automation Manager and click <emphasis role="strong">Next</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Select the components that you want to install and click <emphasis role="strong">Next</emphasis>.</simpara>
<note>
<simpara>You can install Business Central and KIE Server on the same server. However, you should install Business Central and KIE Server on different servers in production environments. To do this, run the installer twice.</simpara>
</note>
</listitem>
<listitem>
<simpara>Create a user and click <emphasis role="strong">Next</emphasis>.  By default, if you install both Business Central and KIE Server in the same container the new user is given the <literal>admin</literal>, <literal>kie-server</literal>, and <literal>rest-all</literal> roles. If you install only KIE Server, the user is given the <literal>kie-server</literal> role.
To select another role, deselect <literal>admin</literal>. For information about roles, see <xref linkend="roles-users-con_install-on-eap"/>.</simpara>
<note>
<simpara>Make sure that the specified user name is not the same as an existing user, role, or group. For example, do not create a user with the user name <literal>admin</literal>.</simpara>
<simpara>The password must have at least eight characters and must contain at least one number and one non-alphanumeric character, but not &amp; (ampersand).</simpara>
</note>
<simpara>Make a note of the user name and password. You will need them to access Business Central and KIE Server.</simpara>
</listitem>
<listitem>
<simpara>On the <emphasis role="strong">Installation Overview</emphasis> page, review the components that you will install and click <emphasis role="strong">Next</emphasis> to start the installation.</simpara>
</listitem>
<listitem>
<simpara>When the installation has completed, click <emphasis role="strong">Next</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>If KIE Server is installed, the <emphasis role="strong">Configure Runtime</emphasis> step appears under <emphasis role="strong">Component Installation</emphasis>. On the <emphasis role="strong">Configure Runtime Environment</emphasis> page, choose to perform the default installation or perform an advanced configuration.</simpara>
<simpara>If you choose <emphasis role="strong">Perform advanced configuration</emphasis>, you can
choose to configure database settings or customize certain KIE Server options.</simpara>
</listitem>
<listitem>
<simpara>If you selected <emphasis role="strong">Customize database settings</emphasis>, on the <emphasis role="strong">JDBC Drive Configuration</emphasis> page specify a data source JDBC driver vendor, select one or more driver JAR files, and click <emphasis role="strong">Next</emphasis>.</simpara>
<simpara>A data source is an object that enables a Java Database Connectivity (JDBC) client, such as an application server, to establish a connection with a database. Applications look up the data source on the Java Naming and Directory Interface (JNDI) tree or in the local application context and request a database connection to retrieve data. You must configure data sources for KIE Server to ensure correct data exchange between the servers and the designated database.</simpara>
</listitem>
<listitem>
<simpara>If you selected <emphasis role="strong">Customize KIE Server properties</emphasis>, on the <emphasis role="strong">KIE Server Properties Configuration</emphasis> page change any of the following properties:</simpara>
<itemizedlist>
<listitem>
<simpara>Change the value of <emphasis role="strong">KIE Server ID</emphasis> to change the name of the KIE Server property.</simpara>
</listitem>
<listitem>
<simpara>Change the value of <emphasis role="strong">Controller URL</emphasis> to change the URL of the headless Process Automation Manager controller.</simpara>
</listitem>
<listitem>
<simpara>Deselect any KIE Server functions that you want to disable.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Next</emphasis> to configure the runtime environment.</simpara>
</listitem>
<listitem>
<simpara>When <emphasis role="strong">Processing finished</emphasis> appears at the top of the screen, click <emphasis role="strong">Next</emphasis> to complete the installation.</simpara>
</listitem>
<listitem>
<simpara>Optional: Click <emphasis role="strong">Generate Installation Script and Properties File</emphasis> to save the installation data in XML files, and then click <emphasis role="strong">Done</emphasis>.</simpara>
<simpara>The installer generates two files. The <literal>auto.xml</literal> file automates future installations and the <literal>auto.xml.variables</literal> file stores user passwords and other sensitive variables.
Use the <literal>auto.xml</literal> file to repeat the Red Hat Process Automation Manager installation on multiple systems with the same type of server and the same configuration as the original installation. If necessary, update the <literal>installpath</literal> parameter in the <literal>auto.xml</literal> file. To perform an installation using the XML file, enter the following command:</simpara>
<screen>java -jar rhpam-installer-7.10.0.jar &lt;path-to-auto.xml-file&gt;</screen>
</listitem>
</orderedlist>
<simpara>You have successfully installed Red Hat Process Automation Manager using the installer.
If you installed only Business Central, repeat these steps to install KIE Server on a separate server.</simpara>
<note>
<simpara>If you use Microsoft SQL Server, make sure you have configured applicable transaction isolation for your database. If you do not, you may experience deadlocks. The recommended configuration is to turn on <literal>ALLOW_SNAPSHOT_ISOLATION</literal> and <literal>READ_COMMITTED_SNAPSHOT</literal> by entering the following statements:</simpara>
<screen>ALTER DATABASE &lt;DBNAME&gt; SET ALLOW_SNAPSHOT_ISOLATION ON
ALTER DATABASE &lt;DBNAME&gt; SET READ_COMMITTED_SNAPSHOT ON</screen>
</note>
</section>
<section xml:id="installer-run-cli-proc_install-on-eap">
<title>Using the installer in CLI mode</title>
<simpara>You can use the command-line interface (CLI) to run the Red Hat Process Automation Manager installer.</simpara>
<note>
<simpara>For security reasons, you should run the installer as a non-root user.</simpara>
</note>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>The <emphasis role="strong">Red Hat Process Automation Manager 7.10.0 Installer</emphasis> has been downloaded. For instructions, see <xref linkend="install-download-proc_install-on-eap"/>.</simpara>
</listitem>
<listitem>
<simpara>A supported JDK is installed. For a list of supported JDKs, see <link xlink:href="https://access.redhat.com/articles/3405381">Red Hat Process Automation Manager 7 Supported Configurations</link>.</simpara>
</listitem>
<listitem>
<simpara>A backed-up
Red Hat JBoss EAP 7.3
 server installation is available.</simpara>
</listitem>
<listitem>
<simpara>Sufficient user permissions to complete the installation are granted.</simpara>
</listitem>
<listitem>
<simpara>The JAR binary is included in the <literal>$PATH</literal> environment variable. On Red Hat Enterprise Linux, it is included in the <literal>java-$<emphasis>JAVA_VERSION</emphasis>-openjdk-devel</literal> package.</simpara>
<note>
<simpara>Red Hat Process Automation Manager is designed to work with UTF-8 encoding. If a different encoding system is used by the underlying JVM, unexpected errors might occur. To ensure UTF-8 is used by the JVM, use the <literal>"-Dfile.encoding=UTF-8"</literal> system property. For a list of system properties, see <xref linkend="business-central-system-properties-ref_install-on-eap"/>.</simpara>
</note>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>In a terminal window, navigate to the directory where you downloaded the installer file and enter the following command:</simpara>
<screen>java -jar rhpam-installer-7.10.0.jar -console</screen>
<simpara>The command-line interactive process will start and display the End-User License Agreement.</simpara>
<screen>press 1 to continue, 2 to quit, 3 to redisplay.</screen>
</listitem>
<listitem>
<simpara>Read the license agreement, enter <literal>1</literal>, and press <literal>Enter</literal> to continue:</simpara>
<screen>Specify the home directory of one of the following servers:  Red Hat JBoss EAP 7 or Red Hat JBoss Web Server 5. For more information, see https://access.redhat.com/articles/3405381[Red Hat Process Automation Manager 7 Supported Configurations].</screen>
</listitem>
<listitem>
<simpara>Enter the parent directory of an existing
Red Hat JBoss EAP 7.3
 installation.</simpara>
<simpara>The installer will verify the location of the installation at the location provided. Enter <literal>1</literal> to confirm and continue.</simpara>
<note>
<simpara>You can install Business Central and KIE Server on the same server. However, you should install Business Central and KIE Server on different servers in production environments.</simpara>
</note>
</listitem>
<listitem>
<simpara>Follow the instructions in the installer to complete the installation.</simpara>
<note>
<simpara>When you create the user name and password, make sure that the specified user name does not conflict with any known title of a role or a group. For example, if there is a role called <literal>admin</literal>, you should not create a user with the user name <literal>admin</literal>.</simpara>
<simpara>The password must have at least eight characters and must contain at least one number and one non-alphanumeric character (<emphasis>not</emphasis> including the character <literal>&amp;</literal>).</simpara>
<simpara>Make a note of the user name and password. You will need them to access Business Central and KIE Server.</simpara>
</note>
</listitem>
<listitem>
<simpara>When the installation has completed, you will see this message:</simpara>
<screen>Would you like to generate an automatic installation script and properties file?</screen>
</listitem>
<listitem>
<simpara>Enter <literal>y</literal> to create XML files that contain the installation data, or <literal>n</literal> to complete the installation. If you enter <literal>y</literal>, you are prompted to specify a path for the XML files.</simpara>
</listitem>
<listitem>
<simpara>Enter a path or press the Enter key to accept the suggested path.</simpara>
<simpara>The installer generates two files. The <literal>auto.xml</literal> file automates future installations and the <literal>auto.xml.variables</literal> file stores user passwords and other sensitive variables.
Use the <literal>auto.xml</literal> file on multiple systems to easily repeat a Red Hat Process Automation Manager installation on the same type of server with the same configuration as the original installation. If necessary, update the <literal>installpath</literal> parameter in the <literal>auto.xml</literal> file. To perform an installation using the XML file, enter the following command:</simpara>
<screen>java -jar rhpam-installer-7.10.0.jar &lt;path-to-auto.xml-file&gt;</screen>
</listitem>
<listitem>
<simpara>If you installed only Business Central, repeat these steps to install KIE Server on a separate server.</simpara>
</listitem>
</orderedlist>
<note>
<simpara>If you use Microsoft SQL Server, make sure you have configured applicable transaction isolation for your database. If you do not, you may experience deadlocks. The recommended configuration is to turn on ALLOW_SNAPSHOT_ISOLATION and READ_COMMITTED_SNAPSHOT by entering the following statements:</simpara>
<screen>ALTER DATABASE &lt;DBNAME&gt; SET ALLOW_SNAPSHOT_ISOLATION ON
ALTER DATABASE &lt;DBNAME&gt; SET READ_COMMITTED_SNAPSHOT ON</screen>
</note>
</section>
<section xml:id="installer-controller-eap-proc_install-on-eap">
<title>Using the installer to configure KIE Server with the Process Automation Manager controller</title>
<simpara>KIE Server can be managed by the Process Automation Manager controller or it can be unmanaged. If KIE Server is unmanaged, you must manually create and maintain KIE containers (deployment units). If KIE Server is managed, the Process Automation Manager controller manages the KIE Server configuration and you interact with the Process Automation Manager controller to create and maintain KIE containers.</simpara>
<simpara>The Process Automation Manager controller is integrated with Business Central. If you install Business Central, you can use the <emphasis role="strong">Execution Server</emphasis> page in Business Central to interact with the Process Automation Manager controller.</simpara>
<simpara>You can use the installer in interactive or CLI mode to install Business Central and KIE Server, and then configure KIE Server with the Process Automation Manager controller.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>Two computers with backed-up Red Hat JBoss EAP 7.3  server installations are available.</simpara>
</listitem>
<listitem>
<simpara>Sufficient user permissions to complete the installation are granted.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>On the first computer, run the installer in interactive mode or CLI mode.
See one of the following sections for more information:</simpara>
<itemizedlist>
<listitem>
<simpara><xref linkend="installer-run-proc_install-on-eap"/></simpara>
</listitem>
<listitem>
<simpara><xref linkend="installer-run-cli-proc_install-on-eap"/></simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>On the <emphasis role="strong">Component Selection</emphasis> page, clear the <emphasis role="strong">KIE Server</emphasis> box.</simpara>
</listitem>
<listitem>
<simpara>Complete the Business Central installation.</simpara>
</listitem>
<listitem>
<simpara>On the second computer, run the installer in interactive mode or CLI mode.</simpara>
</listitem>
<listitem>
<simpara>On the <emphasis role="strong">Component Selection</emphasis> page, clear the <emphasis role="strong">Business Central</emphasis> box.</simpara>
</listitem>
<listitem>
<simpara>On the <emphasis role="strong">Configure Runtime Environment</emphasis> page, select <emphasis role="strong">Perform Advanced Configuration</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Select <emphasis role="strong">Customize KIE Server properties</emphasis> and click <emphasis role="strong">Next</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Enter the controller URL for Business Central and configure additional properties for KIE Server. The controller URL has the following form where <literal>&lt;HOST:PORT&gt;</literal> is the address of Business Central on the second computer:</simpara>
<screen>&lt;HOST:PORT&gt;/business-central/rest/controller</screen>
</listitem>
<listitem>
<simpara>Complete the installation.</simpara>
</listitem>
<listitem>
<simpara>To verify that the Process Automation Manager controller is now integrated with Business Central, go to the <emphasis role="strong">Execution Servers</emphasis> page in Business Central and confirm that the KIE Server that you configured appears under <emphasis role="strong">REMOTE SERVERS</emphasis>.</simpara>
</listitem>
</orderedlist>
</section>
</chapter>
<chapter xml:id="assembly_installing-on-eap-deployable_install-on-eap">
<title>Installing Red Hat Process Automation Manager from ZIP files</title>
<simpara>You can use the Red Hat Process Automation Manager ZIP files (one for Business Central and one for KIE Server) to install Red Hat Process Automation Manager without using the installer.</simpara>
<note>
<simpara>You should install Business Central and the KIE Server on different servers in production environments.</simpara>
<simpara>For information about installing the headless Process Automation Manager controller, see <xref linkend="controller-con_install-on-eap"/>.</simpara>
</note>
<section xml:id="eap-dm-install-proc_install-on-eap">
<title>Installing Business Central from the ZIP file</title>
<simpara>Business Central is the graphical user interface where you create and manage business rules that KIE Server executes. You can use a deployable ZIP file to install and configure Business Central.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>A backed-up Red Hat JBoss EAP installation version 7.3 is available. The base directory of the Red Hat JBoss EAP installation is referred to as <literal><emphasis>EAP_HOME</emphasis></literal>.</simpara>
</listitem>
<listitem>
<simpara>Sufficient user permissions to complete the installation are granted.</simpara>
</listitem>
<listitem>
<simpara>The following file is downloaded as described in <xref linkend="install-download-proc_install-on-eap"/>:</simpara>
<simpara><literal>rhpam-7.10.0-business-central-eap7-deployable.zip</literal></simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Extract the
<literal>rhpam-7.10.0-business-central-eap7-deployable.zip</literal>
file to a temporary directory. In the following examples this directory is called <literal><emphasis>TEMP_DIR</emphasis></literal>.</simpara>
</listitem>
<listitem>
<simpara>Copy the contents of the
<literal><emphasis>TEMP_DIR</emphasis>/rhpam-7.10.0-business-central-eap7-deployable/jboss-eap-7.3</literal>
directory to <literal><emphasis>EAP_HOME</emphasis></literal>. When prompted, merge or replace files.</simpara>
<warning>
<simpara>Ensure that the names of the Red Hat Process Automation Manager deployments that you copy do not conflict with your existing deployments in the Red Hat JBoss EAP instance.</simpara>
</warning>
</listitem>
</orderedlist>
</section>
<section xml:id="eap_execution_server_download_install_proc_install-on-eap">
<title>Installing KIE Server from the ZIP file</title>
<simpara>KIE Server provides the runtime environment for business assets and accesses the data stored in the assets repository (knowledge store). You can use a deployable ZIP file to install and configure KIE Server.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>A backed-up Red Hat JBoss EAP installation version 7.3 is available. The base directory of the Red Hat JBoss EAP installation is referred to as <literal><emphasis>EAP_HOME</emphasis></literal>.</simpara>
</listitem>
<listitem>
<simpara>Sufficient user permissions to complete the installation are granted.</simpara>
</listitem>
<listitem>
<simpara>The following file is downloaded as described in <xref linkend="install-download-proc_install-on-eap"/>:</simpara>
<simpara><literal>rhpam-7.10.0-kie-server-ee8.zip</literal></simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Extract the
<literal>rhpam-7.10.0-kie-server-ee8.zip</literal>
 archive to a temporary directory. In the following examples this directory is called <literal><emphasis>TEMP_DIR</emphasis></literal>.</simpara>
</listitem>
<listitem>
<simpara>Copy the
<literal><emphasis>TEMP_DIR</emphasis>/rhpam-7.10.0-kie-server-ee8/kie-server.war</literal>
 directory to <literal><emphasis>EAP_HOME</emphasis>/standalone/deployments/</literal>.</simpara>
<warning>
<simpara>Ensure the names of the Red Hat Process Automation Manager deployments you copy do not conflict with your existing deployments in the Red Hat JBoss EAP instance.</simpara>
</warning>
</listitem>
<listitem>
<simpara>Copy the contents of the
<literal><emphasis>TEMP_DIR</emphasis>/rhpam-7.10.0-kie-server-ee8/rhpam-7.10.0-kie-server-ee8/SecurityPolicy/</literal>
 to <literal><emphasis>EAP_HOME</emphasis>/bin</literal>.</simpara>
</listitem>
<listitem>
<simpara>When prompted to overwrite files, click <emphasis role="strong">Replace</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <literal><emphasis>EAP_HOME</emphasis>/standalone/deployments/</literal> directory, create an empty file named <literal>kie-server.war.dodeploy</literal>. This file ensures that KIE Server is automatically deployed when the server starts.</simpara>
</listitem>
</orderedlist>
<note>
<simpara>If you use Microsoft SQL Server, make sure you have configured applicable transaction isolation for your database. If you do not, you may experience deadlocks. The recommended configuration is to turn on <literal>ALLOW_SNAPSHOT_ISOLATION</literal> and <literal>READ_COMMITTED_SNAPSHOT</literal> by entering the following statements:</simpara>
<screen>ALTER DATABASE &lt;DBNAME&gt; SET ALLOW_SNAPSHOT_ISOLATION ON
ALTER DATABASE &lt;DBNAME&gt; SET READ_COMMITTED_SNAPSHOT ON</screen>
</note>
</section>
<section xml:id="eap-data-source-add-proc_install-on-eap">
<title>Configuring JDBC data sources for KIE Server</title>
<simpara>A data source is an object that enables a Java Database Connectivity (JDBC) client, such as an application server, to establish a connection with a database. Applications look up the data source on the Java Naming and Directory Interface (JNDI) tree or in the local application context and request a database connection to retrieve data. You must configure data sources for KIE Server to ensure correct data exchange between the servers and the designated database.</simpara>
<note>
<simpara>For production environments, specify an actual data source. Do not use the example data source in production environments.</simpara>
</note>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>The JDBC providers that you want to use to create database connections are configured on all servers on which you want to deploy KIE Server, as described in the "Creating Datasources" and "JDBC Drivers" sections of the <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.3/html/configuration_guide/index"><emphasis>Red Hat JBoss Enterprise Application Server Configuration Guide</emphasis></link>.</simpara>
</listitem>
<listitem>
<simpara>The <emphasis role="strong">Red Hat Process Automation Manager 7.10.0 Add Ons</emphasis> (<literal>rhpam-7.10.0-add-ons.zip</literal>) file is downloaded from the <link xlink:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html">Software Downloads</link> page in the Red Hat Customer Portal.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Complete the following steps to prepare your database:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Extract <literal>rhpam-7.10.0-add-ons.zip</literal> in a temporary directory, for example <literal>TEMP_DIR</literal>.</simpara>
</listitem>
<listitem>
<simpara>Extract <literal>TEMP_DIR/rhpam-7.10.0-migration-tool.zip</literal>.</simpara>
</listitem>
<listitem>
<simpara>Change your current directory to the <literal>TEMP_DIR/rhpam-7.10.0-migration-tool/ddl-scripts</literal> directory. This directory contains DDL scripts for several database types.</simpara>
</listitem>
<listitem>
<simpara>Import the DDL script for your database type into the database that you want to use.</simpara>
<variablelist>
<varlistentry>
<term>The following example creates jBPM database structures in PostreSQL</term>
<listitem>
<programlisting language="shell" linenumbering="unnumbered">psql jbpm &lt; /ddl-scripts/postgresql/postgresql-jbpm-schema.sql</programlisting>
<note>
<simpara>If you are using PostgreSQL or Oracle in conjunction with Spring Boot, you must import the respective Spring Boot DDL script, for example <literal>/ddl-scripts/oracle/oracle-springboot-jbpm-schema.sql</literal> or <literal>/ddl-scripts/postgresql/postgresql-springboot-jbpm-schema.sql</literal>.</simpara>
</note>
<note>
<simpara>The PostgreSQL DDL scripts create the PostgreSQL schema with auto-incrementing integer value (OID) columns for entity attributes annotated with <literal>@LOB</literal>. To use other binary column types such as BYTEA instead of OID, you must create the PostgreSQL schema with the <literal>postgresql-bytea-jbpm-schema.sql</literal> script and set the Red Hat Process Automation Manager <literal>org.kie.persistence.postgresql.useBytea=true</literal> flag. Do not use the <literal>postgresql-jbpm-lo-trigger-clob.sql</literal> script when creating a BYTEA-based schema. Red Hat Process Automation Manager does not provide a migration tool to change from an OID-based to a BYTEA-based schema.</simpara>
</note>
</listitem>
</varlistentry>
</variablelist>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>Open <literal><emphasis>EAP_HOME</emphasis>/standalone/configuration/standalone-full.xml</literal> in a text editor and locate the <literal>&lt;system-properties&gt;</literal> tag.</simpara>
</listitem>
<listitem>
<simpara>Add the following properties to the <literal>&lt;system-properties&gt;</literal> tag where <literal>&lt;DATASOURCE&gt;</literal> is the JNDI name of your data source and <literal>&lt;HIBERNATE_DIALECT&gt;</literal> is the hibernate dialect for your database.</simpara>
<note>
<simpara>The default value of the <literal>org.kie.server.persistence.ds</literal> property is  <literal>java:jboss/datasources/ExampleDS</literal>. The default value of the <literal>org.kie.server.persistence.dialect</literal> property is <literal>org.hibernate.dialect.H2Dialect</literal>.</simpara>
</note>
<programlisting language="xml" linenumbering="unnumbered">&lt;property name="org.kie.server.persistence.ds" value="&lt;DATASOURCE&gt;"/&gt;
&lt;property name="org.kie.server.persistence.dialect" value="&lt;HIBERNATE_DIALECT&gt;"/&gt;</programlisting>
<simpara>The following example shows how to configure a datasource for the PostgreSQL hibernate dialect:</simpara>
<programlisting language="xml" linenumbering="unnumbered">&lt;system-properties&gt;
    &lt;property name="org.kie.server.repo" value="${jboss.server.data.dir}"/&gt;
    &lt;property name="org.kie.example" value="true"/&gt;
    &lt;property name="org.jbpm.designer.perspective" value="full"/&gt;
    &lt;property name="designerdataobjects" value="false"/&gt;
    &lt;property name="org.kie.server.user" value="rhpamUser"/&gt;
    &lt;property name="org.kie.server.pwd" value="rhpam123!"/&gt;
    &lt;property name="org.kie.server.location" value="http://localhost:8080/kie-server/services/rest/server"/&gt;
    &lt;property name="org.kie.server.controller" value="http://localhost:8080/business-central/rest/controller"/&gt;
    &lt;property name="org.kie.server.controller.user" value="kieserver"/&gt;
    &lt;property name="org.kie.server.controller.pwd" value="kieserver1!"/&gt;
    &lt;property name="org.kie.server.id" value="local-server-123"/&gt;

    &lt;!-- Data source properties. --&gt;
    &lt;property name="org.kie.server.persistence.ds" value="java:jboss/datasources/KieServerDS"/&gt;
    &lt;property name="org.kie.server.persistence.dialect" value="org.hibernate.dialect.PostgreSQLDialect"/&gt;
&lt;/system-properties&gt;</programlisting>
</listitem>
</orderedlist>
<simpara>The following dialects are supported:</simpara>
<itemizedlist>
<listitem>
<simpara>DB2: <literal>org.hibernate.dialect.DB2Dialect</literal></simpara>
</listitem>
<listitem>
<simpara>MSSQL: <literal>org.hibernate.dialect.SQLServer2012Dialect</literal></simpara>
</listitem>
<listitem>
<simpara>MySQL: <literal>org.hibernate.dialect.MySQL5InnoDBDialect</literal></simpara>
</listitem>
<listitem>
<simpara>MariaDB: <literal>org.hibernate.dialect.MySQL5InnoDBDialect</literal></simpara>
</listitem>
<listitem>
<simpara>Oracle: <literal>org.hibernate.dialect.Oracle10gDialect</literal></simpara>
</listitem>
<listitem>
<simpara>PostgreSQL: <literal>org.hibernate.dialect.PostgreSQL82Dialect</literal></simpara>
</listitem>
<listitem>
<simpara>PostgreSQL plus: <literal>org.hibernate.dialect.PostgresPlusDialect</literal></simpara>
</listitem>
<listitem>
<simpara>Sybase: <literal>org.hibernate.dialect.SybaseASE157Dialect</literal></simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="eap-users-create-proc_install-on-eap">
<title>Creating users</title>
<simpara>If you used the deployable ZIP files to install Red Hat Process Automation Manager, before you can log in to Business Central or KIE Server, you must create users. This section shows you how to create a Business Central user with the <literal>admin</literal>, <literal>rest-all</literal>, and <literal>kie-server</literal> roles and a KIE Server user that has the <literal>kie-server</literal> role. For information about roles, see <xref linkend="roles-users-con_install-on-eap"/>.</simpara>
<note>
<simpara>If you used the installer to install Red Hat Process Automation Manager, you created at least one user during that process. The <literal>EAP_HOME/standalone/configuration/application-users.properties</literal> file contains application users and their passwords.</simpara>
</note>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>Red Hat Process Automation Manager is installed in the base directory of the Red Hat JBoss EAP installation (<literal><emphasis>EAP_HOME</emphasis></literal>).</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>In a terminal application, navigate to the <literal><emphasis>EAP_HOME</emphasis>/bin</literal> directory.</simpara>
</listitem>
<listitem>
<simpara>Create a user with the <literal>admin</literal>, <literal>rest-all</literal>, and <literal>kie-server</literal> roles that you will use to log in to Business Central.</simpara>
<note>
<simpara>Users with the <literal>admin</literal> role are Business Central administrators. Users with <literal>rest-all</literal> role can access Business Central REST capabilities. Users with the <literal>kie-server</literal> role can access KIE Server (KIE Server) REST capabilities. The <literal>kie-server</literal> role is mandatory for users to have access to <emphasis role="strong">Manage</emphasis> and <emphasis role="strong">Track</emphasis> views in Business Central.</simpara>
</note>
<simpara>In the following command, replace <literal>&lt;USERNAME&gt;</literal> and  <literal>&lt;PASSWORD&gt;</literal> with the user name and password of your choice:</simpara>
<programlisting language="bash" linenumbering="unnumbered">$ ./add-user.sh -a --user &lt;USERNAME&gt; --password &lt;PASSWORD&gt; --role admin,rest-all,kie-server</programlisting>
<note>
<simpara>Make sure that the specified user name is not the same as an existing user, role, or group. For example, do not create a user with the user name <literal>admin</literal>.</simpara>
<simpara>The password must have at least eight characters and must contain at least one number and one non-alphanumeric character, but not &amp; (ampersand).</simpara>
</note>
</listitem>
<listitem>
<simpara>Create a user with the <literal>kie-server</literal> role that you will use to log in to KIE Server.</simpara>
<programlisting language="bash" linenumbering="unnumbered">$ ./add-user.sh -a --user &lt;USERNAME&gt; --password &lt;PASSWORD&gt; --role kie-server</programlisting>
</listitem>
<listitem>
<simpara>Make a note of your user names and passwords.</simpara>
<note>
<simpara>If you installed Business Central and KIE Server in the same server instance, you can create a single user that has both of these roles:</simpara>
<programlisting language="bash" linenumbering="unnumbered">$ ./add-user.sh -a --user &lt;USERNAME&gt;  --password &lt;PASSWORD&gt; --role admin,rest-all,kie-server</programlisting>
<simpara>You should install Business Central and KIE Server on different servers in production environments.</simpara>
</note>
</listitem>
</orderedlist>
</section>
<section xml:id="kie-server-configure-central-proc_install-on-eap">
<title>Configuring KIE Server to connect to Business Central</title>
<warning>
<simpara>This section provides a sample setup that you can use for testing purposes. Some of the values are unsuitable for a production environment, and are marked as such.</simpara>
</warning>
<simpara>If a KIE Server is not configured in your Red Hat Process Automation Manager environment, or if you require additional KIE Servers in your Red Hat Process Automation Manager environment, you must configure a KIE Server to connect to Business Central.</simpara>
<note>
<simpara>If you are deploying KIE Server on Red Hat OpenShift Container Platform, see the <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/deploying_red_hat_process_automation_manager_on_red_hat_openshift_container_platform#assembly-openshift-operator"><emphasis>Deploying a Red Hat Process Automation Manager environment on Red Hat OpenShift Container Platform using Operators</emphasis></link> document for instructions about configuring it to connect to Business Central.</simpara>
</note>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>Business Central and KIE Server are installed in the base directory of the Red Hat JBoss EAP installation (<literal><emphasis>EAP_HOME</emphasis></literal>) as described in the following sections:</simpara>
<itemizedlist>
<listitem>
<simpara><xref linkend="eap-dm-install-proc_install-on-eap"/></simpara>
</listitem>
<listitem>
<simpara><xref linkend="eap_execution_server_download_install_proc_install-on-eap"/></simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Users with the following roles exist:</simpara>
<itemizedlist>
<listitem>
<simpara>In Business Central, a user with the role <literal>rest-all</literal></simpara>
</listitem>
<listitem>
<simpara>On the KIE Server, a user with the role <literal>kie-server</literal></simpara>
<simpara>For more information, see <xref linkend="eap-users-create-proc_install-on-eap"/>.</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>In your Red Hat Process Automation Manager installation directory, navigate to the <literal>standalone-full.xml</literal> file. For example, if you use a Red Hat JBoss EAP installation for Red Hat Process Automation Manager, go to <literal>$EAP_HOME/standalone/configuration/standalone-full.xml</literal>.</simpara>
</listitem>
<listitem>
<simpara>Open the <literal>standalone-full.xml</literal> file and under the <literal>&lt;system-properties&gt;</literal> tag, set the following JVM properties:</simpara>
<table frame="all" rowsep="1" colsep="1">
<title>JVM Properties for the KIE Server instance</title>
<tgroup cols="3">
<colspec colname="col_1" colwidth="33*"/>
<colspec colname="col_2" colwidth="33*"/>
<colspec colname="col_3" colwidth="33*"/>
<thead>
<row>
<entry align="left" valign="top">Property</entry>
<entry align="left" valign="top">Value</entry>
<entry align="left" valign="top">Note</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara><literal>org.kie.server.id</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>default-kie-server</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The KIE Server ID.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>org.kie.server.controller</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>http://localhost:8080/business-central/rest/controller</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The location of Business Central. The URL for connecting to the API of Business Central.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>org.kie.server.controller.user</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>controllerUser</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The user name with the role <literal>rest-all</literal> who can log in to the Business Central.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>org.kie.server.controller.pwd</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>controllerUser1234;</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The password of the user who can log in to the Business Central.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>org.kie.server.location</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>http://localhost:8080/kie-server/services/rest/server</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The location of the KIE Server. The URL for connecting to the API of KIE Server.</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
<table frame="all" rowsep="1" colsep="1">
<title>JVM Properties for the Business Central instance</title>
<tgroup cols="3">
<colspec colname="col_1" colwidth="33*"/>
<colspec colname="col_2" colwidth="33*"/>
<colspec colname="col_3" colwidth="33*"/>
<thead>
<row>
<entry align="left" valign="top">Property</entry>
<entry align="left" valign="top">Value</entry>
<entry align="left" valign="top">Note</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara><literal>org.kie.server.user</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>controllerUser</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The user name with the role <literal>kie-server</literal>.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>org.kie.server.pwd</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>controllerUser1234;</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The password of the user.</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
<simpara>The following example shows how to configure a KIE Server instance:</simpara>
<programlisting language="xml" linenumbering="unnumbered">&lt;property name="org.kie.server.id" value="default-kie-server"/&gt;
&lt;property name="org.kie.server.controller" value="http://localhost:8080/business-central/rest/controller"/&gt;
&lt;property name="org.kie.server.controller.user" value="controllerUser"/&gt;
&lt;property name="org.kie.server.controller.pwd" value="controllerUser1234;"/&gt;
&lt;property name="org.kie.server.location" value="http://localhost:8080/kie-server/services/rest/server"/&gt;</programlisting>
<simpara>The following example shows how to configure a for Business Central instance:</simpara>
<programlisting language="xml" linenumbering="unnumbered">&lt;property name="org.kie.server.user" value="controllerUser"/&gt;
&lt;property name="org.kie.server.pwd" value="controllerUser1234;"/&gt;</programlisting>
</listitem>
<listitem>
<simpara>Send a GET request to <literal>http://<emphasis>SERVER:PORT</emphasis>/kie-server/services/rest/server/</literal> to verify that KIE Server started successfully. After authentication, you receive an XML response similar to the following example:</simpara>
<programlisting language="xml" linenumbering="unnumbered">&lt;response type="SUCCESS" msg="Kie Server info"&gt;
    &lt;kie-server-info&gt;
        &lt;capabilities&gt;KieServer&lt;/capabilities&gt;
        &lt;capabilities&gt;BRM&lt;/capabilities&gt;
        &lt;capabilities&gt;BPM&lt;/capabilities&gt;
        &lt;capabilities&gt;CaseMgmt&lt;/capabilities&gt;
        &lt;capabilities&gt;BPM-UI&lt;/capabilities&gt;
        &lt;capabilities&gt;BRP&lt;/capabilities&gt;
        &lt;capabilities&gt;DMN&lt;/capabilities&gt;
        &lt;capabilities&gt;Swagger&lt;/capabilities&gt;
        &lt;location&gt;http://localhost:8230/kie-server/services/rest/server&lt;/location&gt;
        &lt;messages&gt;
            &lt;content&gt;Server KieServerInfo{serverId='first-kie-server', version='7.5.1.Final-redhat-1', location='http://localhost:8230/kie-server/services/rest/server', capabilities=[KieServer, BRM, BPM, CaseMgmt, BPM-UI, BRP, DMN, Swagger]}started successfully at Mon Feb 05 15:44:35 AEST 2018&lt;/content&gt;
            &lt;severity&gt;INFO&lt;/severity&gt;
            &lt;timestamp&gt;2018-02-05T15:44:35.355+10:00&lt;/timestamp&gt;
        &lt;/messages&gt;
        &lt;name&gt;first-kie-server&lt;/name&gt;
        &lt;id&gt;first-kie-server&lt;/id&gt;
        &lt;version&gt;7.5.1.Final-redhat-1&lt;/version&gt;
    &lt;/kie-server-info&gt;
&lt;/response&gt;</programlisting>
</listitem>
<listitem>
<simpara>Verify successful registration:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Log in to Business Central.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Menu</emphasis> â†’ <emphasis role="strong">Deploy</emphasis> â†’ <emphasis role="strong">Execution Servers</emphasis>.</simpara>
<simpara>If registration is successful, you will see the registered server ID.</simpara>
</listitem>
</orderedlist>
</listitem>
</orderedlist>
</section>
</chapter>
<chapter xml:id="securing-passwords-eap-proc_install-on-eap">
<title>Securing passwords with a keystore</title>
<simpara>You can use a keystore to encrypt passwords that are used for communication between Business Central and KIE Server. You should encrypt both controller and KIE Server passwords. If Business Central and KIE Server are deployed to different application servers, then both application servers should use the keystore.</simpara>
<simpara>Use Java Cryptography Extension KeyStore (JCEKS) for your keystore because it supports symmetric keys. Use KeyTool, which is part of the JDK installation, to create a new JCEKS.</simpara>
<note>
<simpara>If KIE Server is not configured with JCEKS, KIE Server passwords are stored in system properties in plain text form.</simpara>
</note>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>KIE Server is installed in Red Hat JBoss EAP.</simpara>
</listitem>
<listitem>
<simpara>Java 8 or higher is installed.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>In the Red Hat JBoss EAP home directory, enter the following command to create a KIE Server user with the <literal>kie-server</literal> role and specify a password. In the following example, replace <literal>&lt;USER_NAME&gt;</literal> and <literal>&lt;PASSWORD&gt;</literal> with the user name and password of your choice.</simpara>
<programlisting language="bash" linenumbering="unnumbered">$&lt;EAP_HOME&gt;/bin/add-user.sh -a -e -u &lt;USER_NAME&gt; -p &lt;PASSWORD&gt; -g kie-server</programlisting>
</listitem>
<listitem>
<simpara>To use KeyTool to create a JCEKS, enter the following command in the Java 8 home directory:</simpara>
<programlisting language="bash" linenumbering="unnumbered">$&lt;JAVA_HOME&gt;/bin/keytool -importpassword -keystore &lt;KEYSTORE_PATH&gt; -keypass &lt;ALIAS_KEY_PASSWORD&gt; -alias &lt;PASSWORD_ALIAS&gt; -storepass &lt;KEYSTORE_PASSWORD&gt; -storetype JCEKS</programlisting>
<simpara>In this example, replace the following variables:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>&lt;KEYSTORE_PATH&gt;</literal>: The path where the keystore will be stored</simpara>
</listitem>
<listitem>
<simpara><literal>&lt;KEYSTORE_PASSWORD&gt;</literal>: The keystore password</simpara>
</listitem>
<listitem>
<simpara><literal>&lt;ALIAS_KEY_PASSWORD&gt;</literal>: The password used to access values stored with the alias</simpara>
</listitem>
<listitem>
<simpara><literal>&lt;PASSWORD_ALIAS&gt;</literal>: The alias of the entry to the process</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>When prompted, enter the password for the KIE Server user that you created.</simpara>
</listitem>
<listitem>
<simpara>Set the following system properties in the <literal>EAP_HOME/standalone/configuration/standalone-full.xml</literal> file and replace the placeholders as listed in the following table:</simpara>
<programlisting language="xml" linenumbering="unnumbered">    &lt;system-properties&gt;
        &lt;property name="kie.keystore.keyStoreURL" value="&lt;KEYSTORE_URL&gt;"/&gt;
        &lt;property name="kie.keystore.keyStorePwd" value="&lt;KEYSTORE_PWD&gt;"/&gt;
        &lt;property name="kie.keystore.key.server.alias" value="&lt;KEY_SERVER_ALIAS&gt;"/&gt;
        &lt;property name="kie.keystore.key.server.pwd" value="&lt;KEY_SERVER_PWD&gt;"/&gt;
        &lt;property name="kie.keystore.key.ctrl.alias" value="&lt;KEY_CONTROL_ALIAS&gt;"/&gt;
        &lt;property name="kie.keystore.key.ctrl.pwd" value="&lt;KEY_CONTROL_PWD&gt;"/&gt;
    &lt;/system-properties&gt;</programlisting>
<table frame="all" rowsep="1" colsep="1">
<title>System properties used to load a KIE Server JCEKS</title>
<tgroup cols="3">
<colspec colname="col_1" colwidth="36*"/>
<colspec colname="col_2" colwidth="27*"/>
<colspec colname="col_3" colwidth="36*"/>
<thead>
<row>
<entry align="left" valign="top">System property</entry>
<entry align="left" valign="top">Placeholder</entry>
<entry align="left" valign="top">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara><literal>kie.keystore.keyStoreURL</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>&lt;KEYSTORE_URL&gt;</literal></simpara></entry>
<entry align="left" valign="top"><simpara>URL for the JCEKS that you want to use, for example <literal>file:///home/kie/keystores/keystore.jceks</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>kie.keystore.keyStorePwd</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>&lt;KEYSTORE_PWD&gt;</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Password for the JCEKS</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>kie.keystore.key.server.alias</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>&lt;KEY_SERVER_ALIAS&gt;</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Alias of the key for REST services where the password is stored</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>kie.keystore.key.server.pwd</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>&lt;KEY_SERVER_PWD&gt;</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Password of the alias for REST services with the stored password</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>kie.keystore.key.ctrl.alias</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>&lt;KEY_CONTROL_ALIAS&gt;</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Alias of the key for default REST Process Automation Controller where the password is stored</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>kie.keystore.key.ctrl.key.ctrl.pwd</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>&lt;KEY_CONTROL_PWD&gt;</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Password of the alias for default REST  Process Automation Controller with the stored password</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
</listitem>
<listitem>
<simpara>Start KIE Server to verify the configuration.</simpara>
</listitem>
</orderedlist>
</chapter>
<chapter xml:id="ssh-configuring-proc_install-on-eap">
<title>Configuring SSH to use RSA</title>
<simpara>SSH is used to clone Git repositories. By default, the DSA encryption algorithm is provided by Business Central. However, some SSH clients, for example SSH clients in the Fedora 23 environment, use the RSA algorithm instead of the DSA algorithm. Business Central contains a system property that you can use to switch from DSA to RSA if required.</simpara>
<note>
<simpara>SSH clients on supported configurations, for example Red Hat Enterprise Linux 7, are not affected by this issue. For a list of supported configurations, see
<link xlink:href="https://access.redhat.com/articles/3405381">Red Hat Process Automation Manager 7 Supported Configurations</link>.</simpara>
</note>
<formalpara>
<title>Procedure</title>
<para>Complete one of the following tasks to enable this system property:</para>
</formalpara>
<itemizedlist>
<listitem>
<simpara>Modify the <literal>~/.ssh/config</literal> file on the client side as follows to force the SSH client to accept the deprecated DSA algorithm:</simpara>
<screen>Host &lt;SERVER_IP&gt;
       HostKeyAlgorithms +ssh-dss</screen>
</listitem>
<listitem>
<simpara>Include the <literal>-Dorg.uberfire.nio.git.ssh.algorithm=RSA</literal> parameter when you start Business Central, for example:</simpara>
<screen>$ ./standalone.sh -c standalone-full.xml
-Dorg.uberfire.nio.git.ssh.algorithm=RSA</screen>
</listitem>
</itemizedlist>
</chapter>
<chapter xml:id="verifying_the_red_hat_process_automation_manager_installation" remap="_verifying_the_red_hat_process_automation_manager_installation">
<title>Verifying the Red Hat Process Automation Manager installation</title>
<simpara>After you have installed Red Hat Process Automation Manager, create an asset to verify that the installation is working.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>In a terminal window, navigate to the <literal><emphasis>EAP_HOME</emphasis>/bin</literal> directory and enter the following command to start Red Hat Process Automation Manager:</simpara>
<screen>./standalone.sh -c standalone-full.xml</screen>
<note>
<simpara>If you deployed Business Central without KIE Server, you can start Business Central with the <literal>standalone.sh</literal> script without specifying the <literal>standalone-full.xml</literal> file. In this case, ensure that you make any configuration changes to the <literal>standalone.xml</literal> file before starting Business Central.</simpara>
</note>
</listitem>
<listitem>
<simpara>In a web browser, enter <literal>localhost:8080/business-central</literal>.</simpara>
<itemizedlist>
<listitem>
<simpara>If you configured Red Hat Process Automation Manager to run from a domain name, replace <literal>localhost</literal> with the domain name, for example:</simpara>
<simpara><literal>http://www.example.com:8080/business-central</literal></simpara>
</listitem>
<listitem>
<simpara>If you configured Red Hat Process Automation Manager to run in a cluster, replace <literal>localhost</literal> with the IP address of a particular node, for example:</simpara>
<simpara><literal>http://&lt;node_IP_address&gt;:8080/business-central</literal></simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Enter the <literal>admin</literal> user credentials that you created during installation. The Business Central home page appears.</simpara>
</listitem>
<listitem>
<simpara>Select <emphasis role="strong">Menu</emphasis> â†’ <emphasis role="strong">Deploy</emphasis> â†’ <emphasis role="strong">Execution Servers</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Confirm that <emphasis role="strong">default-kieserver</emphasis> is listed under <emphasis role="strong">Server Configurations</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Select <emphasis role="strong">Menu</emphasis> â†’ <emphasis role="strong">Design</emphasis> â†’ <emphasis role="strong">Projects</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Open the <emphasis role="strong">MySpace</emphasis> space.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Try Samples</emphasis> â†’ <emphasis role="strong">Mortgages</emphasis> â†’ <emphasis role="strong">OK</emphasis>. The <emphasis role="strong">Assets</emphasis> window appears.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Add Asset</emphasis> â†’ <emphasis role="strong">Data Object</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Enter <literal>MyDataObject</literal> in the <emphasis role="strong">Data Object</emphasis> field and click <emphasis role="strong">OK</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Spaces</emphasis> â†’ <emphasis role="strong">MySpace</emphasis> â†’ <emphasis role="strong">Mortgages</emphasis> and confirm that <literal>MyDataObject</literal> is in the list of assets.</simpara>
</listitem>
<listitem>
<simpara>Delete the <emphasis role="strong">Mortgages</emphasis> project.</simpara>
</listitem>
</orderedlist>
</chapter>
<chapter xml:id="eap-ba-dm-run-proc_install-on-eap">
<title>Running Red Hat Process Automation Manager</title>
<simpara>Use this procedure to run the Red Hat Process Automation Manager on Red Hat JBoss EAP in standalone mode.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>Red Hat Process Automation Manager is installed and configured.</simpara>
</listitem>
</itemizedlist>
<note>
<simpara>If you changed the default host (<literal>localhost</literal>) or the default port (<literal>9990</literal>), then before you run Red Hat Process Automation Manager, you must edit the <literal>business-central.war/WEB-INF/classes/datasource-management.properties</literal> and <literal>business-central.war/WEB-INF/classes/security-management.properties</literal> files as described in <link xlink:href="https://access.redhat.com/solutions/3519551">Solution 3519551</link>.</simpara>
</note>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>In a terminal application, navigate to <literal><emphasis>EAP_HOME</emphasis>/bin</literal>.</simpara>
</listitem>
<listitem>
<simpara>Run the standalone configuration:</simpara>
<itemizedlist>
<listitem>
<simpara>On Linux or UNIX-based systems:</simpara>
<programlisting language="bash" linenumbering="unnumbered">$ ./standalone.sh -c standalone-full.xml</programlisting>
</listitem>
<listitem>
<simpara>On Windows:</simpara>
<programlisting language="bash" linenumbering="unnumbered">standalone.bat -c standalone-full.xml</programlisting>
<note>
<simpara>If you deployed Business Central without KIE Server, you can start Business Central with the <literal>standalone.sh</literal> script without specifying the <literal>standalone-full.xml</literal> file. In this case, ensure that you make any configuration changes to the <literal>standalone.xml</literal> file before starting Business Central.</simpara>
<simpara>On Linux or UNIX-based systems:</simpara>
<screen>$ /standalone.sh</screen>
<simpara>On Windows:</simpara>
<programlisting language="bash" linenumbering="unnumbered">standalone.bat</programlisting>
</note>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>In a web browser, open the URL <literal>localhost:8080/business-central</literal>.</simpara>
<simpara>If you configured Red Hat Process Automation Manager to run from a domain name, replace <literal>localhost</literal> with the domain name, for example:</simpara>
<simpara><literal>http://www.example.com:8080/business-central</literal></simpara>
</listitem>
<listitem>
<simpara>Log in using the credentials of the user that you created for Business Central in <xref linkend="eap-users-create-proc_install-on-eap"/>.</simpara>
</listitem>
</orderedlist>
</chapter>
<chapter xml:id="controller-con_install-on-eap">
<title>Installing and running the headless Process Automation Manager controller</title>
<simpara>You can configure KIE Server to run in managed or unmanaged mode. If KIE Server is unmanaged, you must manually create and maintain KIE containers (deployment units). If KIE Server is managed, the Process Automation Manager controller manages the KIE Server configuration and you interact with the Process Automation Manager controller to create and maintain KIE containers.</simpara>
<simpara>Business Central has an embedded Process Automation Manager controller. If you install Business Central, use the <emphasis role="strong">Execution Server</emphasis> page to create and maintain KIE containers. If you want to automate KIE Server management without Business Central, you can use the headless Process Automation Manager controller.</simpara>
<section xml:id="controller-eap-install-proc_install-on-eap">
<title>Installing the headless Process Automation Manager controller</title>
<simpara>You can install the headless Process Automation Manager controller and use the REST API or the KIE Server Java Client API to interact with it.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>A backed-up Red Hat JBoss EAP installation version 7.3 is available. The base directory of the Red Hat JBoss EAP installation is referred to as <literal><emphasis>EAP_HOME</emphasis></literal>.</simpara>
</listitem>
<listitem>
<simpara>Sufficient user permissions to complete the installation are granted.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Navigate to the <link xlink:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html">Software Downloads</link> page in the Red Hat Customer Portal (login required), and select the product and version from the drop-down options:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Product:</emphasis> Process Automation Manager</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Version:</emphasis> 7.10</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Download <emphasis role="strong">Red Hat Process Automation Manager 7.10.0 Add Ons</emphasis> (the <literal>rhpam-7.10.0-add-ons.zip</literal> file).</simpara>
</listitem>
<listitem>
<simpara>Extract the <literal>rhpam-7.10.0-add-ons.zip</literal> file. The <literal>rhpam-7.10.0-controller-ee7.zip</literal> file is in the extracted directory.</simpara>
</listitem>
<listitem>
<simpara>Extract the <literal>rhpam-7.10.0-controller-ee7</literal> archive to a temporary directory. In the following examples this directory is called <literal><emphasis>TEMP_DIR</emphasis></literal>.</simpara>
</listitem>
<listitem>
<simpara>Copy the <literal><emphasis>TEMP_DIR</emphasis>/rhpam-7.10.0-controller-ee7/controller.war</literal> directory to <literal><emphasis>EAP_HOME</emphasis>/standalone/deployments/</literal>.</simpara>
<warning>
<simpara>Ensure that the names of the headless Process Automation Manager controller deployments you copy do not conflict with your existing deployments in the Red Hat JBoss EAP instance.</simpara>
</warning>
</listitem>
<listitem>
<simpara>Copy the contents of the <literal><emphasis>TEMP_DIR</emphasis>/rhpam-7.10.0-controller-ee7/SecurityPolicy/</literal> directory to <literal><emphasis>EAP_HOME</emphasis>/bin</literal>.</simpara>
</listitem>
<listitem>
<simpara>When prompted to overwrite files, select <emphasis role="strong">Yes</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <literal><emphasis>EAP_HOME</emphasis>/standalone/deployments/</literal> directory, create an empty file named <literal>controller.war.dodeploy</literal>. This file ensures that the headless Process Automation Manager controller is automatically deployed when the server starts.</simpara>
</listitem>
</orderedlist>
<section xml:id="controller-eap-users-create-proc_install-on-eap">
<title>Creating a headless Process Automation Manager controller user</title>
<simpara>Before you can use the headless Process Automation Manager controller, you must create a user that has the <literal>kie-server</literal> role.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>The headless Process Automation Manager controller is installed in the base directory of the Red Hat JBoss EAP installation (<literal><emphasis>EAP_HOME</emphasis></literal>).</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>In a terminal application, navigate to the <literal><emphasis>EAP_HOME</emphasis>/bin</literal> directory.</simpara>
</listitem>
<listitem>
<simpara>Enter the following command and replace <literal>&lt;USER_NAME&gt;</literal> and <literal>&lt;PASSWORD&gt;</literal> with the user name and password of your choice.</simpara>
<programlisting language="bash" linenumbering="unnumbered">$ ./add-user.sh -a --user &lt;USER_NAME&gt; --password &lt;PASSWORD&gt; --role kie-server</programlisting>
<note>
<simpara>Make sure that the specified user name is not the same as an existing user, role, or group. For example, do not create a user with the user name <literal>admin</literal>.</simpara>
<simpara>The password must have at least eight characters and must contain at least one number and one non-alphanumeric character, but not &amp; (ampersand).</simpara>
</note>
</listitem>
<listitem>
<simpara>Make a note of your user name and password.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="controller-eap-configure-proc_install-on-eap">
<title>Configuring KIE Server and the headless Process Automation Manager controller</title>
<simpara>If KIE Server will be managed by the headless Process Automation Manager controller, you must edit the <literal>standalone-full.xml</literal> file in KIE Server installation and the <literal>standalone.xml</literal> file in the headless Process Automation Manager controller installation.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>KIE Server is installed in an <literal><emphasis>EAP_HOME</emphasis></literal>.</simpara>
</listitem>
<listitem>
<simpara>The headless Process Automation Manager controller is installed in an <literal><emphasis>EAP_HOME</emphasis></literal>.</simpara>
<note>
<simpara>You should install KIE Server and the headless Process Automation Manager controller
on different servers in production environments. However, if you install KIE Server and the headless Process Automation Manager controller on the same server, for example in a development environment, make these changes in the shared <literal>standalone-full.xml</literal> file.</simpara>
</note>
</listitem>
<listitem>
<simpara>On KIE Server nodes, a user with the <literal>kie-server</literal> role exists.</simpara>
</listitem>
<listitem>
<simpara>On the  server nodes, a user with the <literal>kie-server</literal> role exists.</simpara>
<simpara>For more information, see <xref linkend="eap-users-create-proc_install-on-eap"/>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>In the   <literal><emphasis>EAP_HOME</emphasis>/standalone/configuration/standalone-full.xml</literal> file, add the following properties to the <literal>&lt;system-properties&gt;</literal> section and replace <literal>&lt;USERNAME&gt;</literal> and <literal>&lt;USER_PWD&gt;</literal> with the credentials of a user with the <literal>kie-server</literal> role:</simpara>
<programlisting language="xml" linenumbering="unnumbered">   &lt;property name="org.kie.server.user" value="&lt;USERNAME&gt;"/&gt;
   &lt;property name="org.kie.server.pwd" value="&lt;USER_PWD&gt;"/&gt;</programlisting>
</listitem>
<listitem>
<simpara>In the KIE Server  <literal><emphasis>EAP_HOME</emphasis>/standalone/configuration/standalone-full.xml</literal> file, add the following properties to the <literal>&lt;system-properties&gt;</literal> section:</simpara>
<programlisting language="xml" linenumbering="unnumbered">  &lt;property name="org.kie.server.controller.user" value="&lt;CONTROLLER_USER&gt;"/&gt;
  &lt;property name="org.kie.server.controller.pwd" value="&lt;CONTROLLER_PWD&gt;"/&gt;
  &lt;property name="org.kie.server.id" value="&lt;KIE_SERVER_ID&gt;"/&gt;
  &lt;property name="org.kie.server.location" value="http://&lt;HOST&gt;:&lt;PORT&gt;/kie-server/services/rest/server"/&gt;
  &lt;property name="org.kie.server.controller" value="&lt;CONTROLLER_URL&gt;"/&gt;</programlisting>
</listitem>
<listitem>
<simpara>In this file, replace the following values:</simpara>
<itemizedlist>
<listitem>
<simpara>Replace <literal>&lt;CONTROLLER_USER&gt;</literal> and <literal>&lt;CONTROLLER_PWD&gt;</literal> with the credentials of a user with the <literal>kie-server</literal> role.</simpara>
</listitem>
<listitem>
<simpara>Replace <literal>&lt;KIE_SERVER_ID&gt;</literal> with the ID or name of the KIE Server installation, for example, <literal>rhpam-7.10.0-kie-server-1</literal>.</simpara>
</listitem>
<listitem>
<simpara>Replace <literal>&lt;HOST&gt;</literal> with the ID or name of the KIE Server host, for example, <literal>localhost</literal> or <literal>192.7.8.9</literal>.</simpara>
</listitem>
<listitem>
<simpara>Replace <literal>&lt;PORT&gt;</literal> with the port of the KIE Server host, for example, <literal>8080</literal>.</simpara>
<note>
<simpara>The <literal>org.kie.server.location</literal> property specifies the location of KIE Server.</simpara>
</note>
</listitem>
<listitem>
<simpara>Replace <literal>&lt;CONTROLLER_URL&gt;</literal> with the URL of the headless Process Automation Manager controller. KIE Server connects to this URL during startup.</simpara>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
</section>
</section>
<section xml:id="controller-eap-run-proc_install-on-eap">
<title>Running the headless Process Automation Manager controller</title>
<simpara>After you have installed the headless Process Automation Manager controller on Red Hat JBoss EAP, use this procedure to run the headless Process Automation Manager controller.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>The headless Process Automation Manager controller is installed and configured in the base directory of the Red Hat JBoss EAP installation (<literal><emphasis>EAP_HOME</emphasis></literal>).</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>In a terminal application, navigate to <literal><emphasis>EAP_HOME</emphasis>/bin</literal>.</simpara>
</listitem>
<listitem>
<simpara>If you installed the headless Process Automation Manager controller on the same Red Hat JBoss EAP instance as the Red Hat JBoss EAP instance where you installed the KIE Server, enter one of the following commands:</simpara>
<itemizedlist>
<listitem>
<simpara>On Linux or UNIX-based systems:</simpara>
<programlisting language="bash" linenumbering="unnumbered">$ ./standalone.sh -c standalone-full.xml</programlisting>
</listitem>
<listitem>
<simpara>On Windows:</simpara>
<programlisting language="bash" linenumbering="unnumbered">standalone.bat -c standalone-full.xml</programlisting>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>If you installed the headless Process Automation Manager controller on a separate Red Hat JBoss EAP instance from the Red Hat JBoss EAP instance where you installed the KIE Server, start the headless Process Automation Manager controller with the <literal>standalone.sh</literal> script:</simpara>
<note>
<simpara>In this case, ensure that you made all required configuration changes to the <literal>standalone.xml</literal> file.</simpara>
</note>
<itemizedlist>
<listitem>
<simpara>On Linux or UNIX-based systems:</simpara>
<programlisting language="bash" linenumbering="unnumbered">$ ./standalone.sh</programlisting>
</listitem>
<listitem>
<simpara>On Windows:</simpara>
<programlisting language="bash" linenumbering="unnumbered">standalone.bat</programlisting>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>To verify that the headless Process Automation Manager controller is working on Red Hat JBoss EAP, enter the following command where <literal>&lt;CONTROLLER&gt;</literal> and <literal>&lt;CONTROLLER_PWD&gt;</literal> is the user name and password combination that you created in <xref linkend="controller-eap-users-create-proc_install-on-eap"/>. The output of this command provides information about the KIE Server instance.</simpara>
<screen>curl -X GET "http://&lt;HOST&gt;:&lt;PORT&gt;/controller/rest/controller/management/servers" -H  "accept: application/xml" -u '&lt;CONTROLLER&gt;:&lt;CONTROLLER_PWD&gt;'</screen>
</listitem>
</orderedlist>
<note>
<simpara>Alternatively, you can use the KIE Server Java API Client to access the headless Process Automation Manager controller.</simpara>
</note>
</section>
</chapter>
<chapter xml:id="run-dc-standalone-proc_install-on-eap">
<title>Configuring and running standalone Business Central</title>
<simpara>You can use the Business Central standalone JAR file to run Business Central without deploying it to an application server. You can use sample configuration files to run the Business Central standalone JAR file out of the box or you can customize the sampfiles for your requirements.</simpara>
<note>
<simpara>This JAR file is supported only when it is run on Red Hat Enterprise Linux.</simpara>
</note>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>The <emphasis role="strong">Red Hat Process Automation Manager 7.10.0 Business Central Standalone</emphasis> (<literal>rhpam-7.10.0-business-central-standalone.jar</literal>) and the <emphasis role="strong">Red Hat Process Automation Manager 7.10.0 Add Ons</emphasis> (<literal>rhpam-7.10.0-add-ons.zip</literal>) files have been downloaded from the <link xlink:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?downloadType=distributions&amp;product=rhpam&amp;productChanged=yes">Software Downloads</link> page for Red Hat Process Automation Manager 7.10, as described in <xref linkend="install-download-proc_install-on-eap"/>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Extract the downloaded <literal>rhpam-7.10.0-addons.zip</literal> to a temporary directory. This archive includes the <literal>rhpam-7.10.0-standalone-sample-configuration.zip</literal> file.</simpara>
</listitem>
<listitem>
<simpara>Extract the <literal>rhpam-7.10.0-standalone-sample-configuration.zip</literal> file to the directory that contains the <literal>rhpam-7.10.0-business-central-standalone.jar</literal> file. The <literal>rhpam-7.10.0-standalone-sample-configuration.zip</literal> file contains the following sample configuration files:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>application-roles.properties</literal></simpara>
</listitem>
<listitem>
<simpara><literal>application-users.properties</literal></simpara>
</listitem>
<listitem>
<simpara><literal>sample-standalone-config.yml</literal></simpara>
<simpara>You can run the <literal>rhpam-7.10.0-business-central-standalone.jar</literal> files with the sample data provided in the configuration files or you can customize the data for your requirements.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>To customize the configuration data, complete the following steps:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Edit the <literal>application-users.properties</literal> file. Include an administrative user and if this Business Central instance will be a Process Automation Manager controller for KIE Server, include a Process Automation Manager controller user, for example:</simpara>
<screen>rhpamAdmin=password1</screen>
</listitem>
<listitem>
<simpara>Edit the <literal>application-roles.properties</literal> file to assign roles to the users that you included in the <literal>application-users.properties</literal> file, for example:</simpara>
<screen>rhpamAdmin=admin
controllerUser=kie-server</screen>
<simpara>For more information, see <xref linkend="roles-users-con_install-on-eap"/>.</simpara>
</listitem>
<listitem>
<simpara>Review the contents of the the <literal>sample-standalone-config.yml</literal> configuration file and update as required.</simpara>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>To run the Business Central standalone JAR file, enter the following command:</simpara>
<screen>java -jar rhpam-7.10.0-business-central-standalone.jar -s sample-standalone-config.yml</screen>
</listitem>
<listitem>
<simpara>To set application properties when you run the JAR file, include the  <literal>-D&lt;PROPERTY&gt;=&lt;VALUE&gt;</literal> parameter in the command, where <literal>&lt;PROPERTY&gt;</literal> is the name of a supported application property and <literal>&lt;VALUE&gt;</literal> is the property value:</simpara>
<screen>java -jar rhpam-7.10.0-business-central-standalone.jar -s sample-standalone-config.yml -D&lt;PROPERTY&gt;=&lt;VALUE&gt; -D&lt;PROPERTY&gt;=&lt;VALUE&gt;</screen>
<simpara>For example, to run Business Central and connect to KIE Server as the user <literal>controllerUser</literal>, enter:</simpara>
<screen>java -jar {PRODUCT_FILE}-{URL_COMPONENT_CENTRAL}-standalone.jar \
-s sample-standalone-config.yml \
-Dorg.kie.server.user=controllerUser
-Dorg.kie.server.pwd=controllerUser1234</screen>
<simpara>Doing this enables you to deploy containers to KIE Server.
See <xref linkend="business-central-system-properties-ref_install-on-eap"/> for more information.</simpara>
</listitem>
</orderedlist>
</chapter>
<chapter xml:id="maven-repo-using-con_install-on-eap">
<title>Maven settings and repositories for Red Hat Process Automation Manager</title>
<simpara>When you create a Red Hat Process Automation Manager project, Business Central uses the Maven repositories that are configured for Business Central. You can use the Maven global or user settings to direct all Red Hat Process Automation Manager projects to retrieve dependencies from the public Red Hat Process Automation Manager repository by modifying the Maven project object model (POM) file (<literal>pom.xml</literal>). You can also configure Business Central and KIE Server to use an external Maven repository or prepare a Maven mirror for offline use.</simpara>
<simpara>For more information about Red Hat Process Automation Manager packaging and deployment options, see  <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/deploying_and_managing_red_hat_process_automation_manager_services#assembly-packaging-deploying"><emphasis>Packaging and deploying a Red Hat Process Automation Manager project</emphasis></link>.</simpara>
<section xml:id="maven-managing-dependencies-proc_install-on-eap">
<title>Adding Maven dependencies for Red Hat Process Automation Manager</title>
<simpara>To use the correct Maven dependencies in your Red Hat Process Automation Manager project, add the Red Hat Business Automation bill of materials (BOM) files to the projectâ€™s <literal>pom.xml</literal> file. The Red Hat Business Automation BOM applies to both Red Hat Decision Manager and Red Hat Process Automation Manager. When you add the BOM files, the correct versions of transitive dependencies from the provided Maven repositories are included in the project.</simpara>
<simpara>For more information about the Red Hat Business Automation BOM, see
<link xlink:href="https://access.redhat.com/solutions/3405361">What is the mapping between Red Hat Process Automation Manager and the Maven library version?</link>.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Declare the Red Hat Business Automation BOM in the <literal>pom.xml</literal> file:</simpara>
<informalexample>
<programlisting language="xml" linenumbering="unnumbered">&lt;dependencyManagement&gt;
 &lt;dependencies&gt;
  &lt;dependency&gt;
   &lt;groupId&gt;com.redhat.ba&lt;/groupId&gt;
   &lt;artifactId&gt;ba-platform-bom&lt;/artifactId&gt;
   &lt;version&gt;7.10.0.redhat-00002&lt;/version&gt;
   &lt;type&gt;pom&lt;/type&gt;
   &lt;scope&gt;import&lt;/scope&gt;
  &lt;/dependency&gt;
 &lt;/dependencies&gt;
&lt;/dependencyManagement&gt;
&lt;dependencies&gt;
&lt;!-- Your dependencies --&gt;
&lt;/dependencies&gt;</programlisting>
</informalexample>
</listitem>
<listitem>
<simpara>Declare dependencies required for your project in the <literal>&lt;dependencies&gt;</literal> tag. After you import the product BOM into your project, the versions of the user-facing product dependencies are defined so you do not need to specify the <literal>&lt;version&gt;</literal> sub-element of these <literal>&lt;dependency&gt;</literal> elements. However, you must use the <literal>&lt;dependency&gt;</literal> element to declare dependencies which you want to use in your project.</simpara>
</listitem>
<listitem>
<simpara>For standalone projects that are not authored in Business Central, specify all dependencies required for your projects. In projects that you author in Business Central, the basic decision engine
and process engine
dependencies are provided automatically by Business Central.</simpara>
<itemizedlist>
<listitem>
<simpara>For a basic Red Hat Process Automation Manager project, declare the following dependencies, depending on the features that you want to use:</simpara>
<formalpara>
<title>Embedded process engine dependencies</title>
<para>
<programlisting language="xml" linenumbering="unnumbered">&lt;!-- Public KIE API --&gt;
&lt;dependency&gt;
  &lt;groupId&gt;org.kie&lt;/groupId&gt;
  &lt;artifactId&gt;kie-api&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;!-- Core dependencies for process engine --&gt;
&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-flow&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-flow-builder&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-bpmn2&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-runtime-manager&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-persistence-jpa&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-query-jpa&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-audit&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-kie-services&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;!-- Dependency needed for default WorkItemHandler implementations. --&gt;
&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-workitems-core&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;!-- Logging dependency. You can use any logging framework compatible with slf4j. --&gt;
&lt;dependency&gt;
  &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;
  &lt;artifactId&gt;logback-classic&lt;/artifactId&gt;
  &lt;version&gt;${logback.version}&lt;/version&gt;
&lt;/dependency&gt;</programlisting>
</para>
</formalpara>
</listitem>
<listitem>
<simpara>For a Red Hat Process Automation Manager project that uses CDI, you typically declare the following dependencies:</simpara>
<formalpara>
<title>CDI-enabled process engine dependencies</title>
<para>
<programlisting language="xml" linenumbering="unnumbered">&lt;dependency&gt;
  &lt;groupId&gt;org.kie&lt;/groupId&gt;
  &lt;artifactId&gt;kie-api&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-kie-services&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-services-cdi&lt;/artifactId&gt;
&lt;/dependency&gt;</programlisting>
</para>
</formalpara>
</listitem>
<listitem>
<simpara>For a basic Red Hat Process Automation Manager project, declare the following dependencies:</simpara>
<formalpara>
<title>Embedded decision engine dependencies</title>
<para>
<programlisting language="xml" linenumbering="unnumbered">&lt;dependency&gt;
  &lt;groupId&gt;org.drools&lt;/groupId&gt;
  &lt;artifactId&gt;drools-compiler&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;!-- Dependency for persistence support. --&gt;
&lt;dependency&gt;
  &lt;groupId&gt;org.drools&lt;/groupId&gt;
  &lt;artifactId&gt;drools-persistence-jpa&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;!-- Dependencies for decision tables, templates, and scorecards.
For other assets, declare org.drools:business-central-models-* dependencies. --&gt;
&lt;dependency&gt;
  &lt;groupId&gt;org.drools&lt;/groupId&gt;
  &lt;artifactId&gt;drools-decisiontables&lt;/artifactId&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
  &lt;groupId&gt;org.drools&lt;/groupId&gt;
  &lt;artifactId&gt;drools-templates&lt;/artifactId&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
  &lt;groupId&gt;org.drools&lt;/groupId&gt;
  &lt;artifactId&gt;drools-scorecards&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;!-- Dependency for loading KJARs from a Maven repository using KieScanner. --&gt;
&lt;dependency&gt;
  &lt;groupId&gt;org.kie&lt;/groupId&gt;
  &lt;artifactId&gt;kie-ci&lt;/artifactId&gt;
&lt;/dependency&gt;</programlisting>
</para>
</formalpara>
</listitem>
<listitem>
<simpara>To use the KIE Server, declare the following dependencies:</simpara>
<formalpara>
<title>Client application KIE Server dependencies</title>
<para>
<programlisting language="xml" linenumbering="unnumbered">&lt;dependency&gt;
  &lt;groupId&gt;org.kie.server&lt;/groupId&gt;
  &lt;artifactId&gt;kie-server-client&lt;/artifactId&gt;
&lt;/dependency&gt;</programlisting>
</para>
</formalpara>
</listitem>
<listitem>
<simpara>To create a remote client for Red Hat Process Automation Manager, declare the following dependency:</simpara>
<formalpara>
<title>Client dependency</title>
<para>
<programlisting language="xml" linenumbering="unnumbered">&lt;dependency&gt;
  &lt;groupId&gt;org.uberfire&lt;/groupId&gt;
  &lt;artifactId&gt;uberfire-rest-client&lt;/artifactId&gt;
&lt;/dependency&gt;</programlisting>
</para>
</formalpara>
</listitem>
<listitem>
<simpara>When creating a JAR file that includes assets, such as rules and process definitions, specify the packaging type for your Maven project as <literal>kjar</literal> and use <literal>org.kie:kie-maven-plugin</literal> to process the <literal>kjar</literal> packaging type located under the <literal>&lt;project&gt;</literal> element. In the following example, <literal>${kie.version}</literal> is the Maven library version listed in
<link xlink:href="https://access.redhat.com/solutions/3405361">What is the mapping between Red Hat Process Automation Manager and the Maven library version?</link>:</simpara>
<programlisting language="xml" linenumbering="unnumbered">&lt;packaging&gt;kjar&lt;/packaging&gt;
&lt;build&gt;
 &lt;plugins&gt;
  &lt;plugin&gt;
   &lt;groupId&gt;org.kie&lt;/groupId&gt;
   &lt;artifactId&gt;kie-maven-plugin&lt;/artifactId&gt;
   &lt;version&gt;${kie.version}&lt;/version&gt;
   &lt;extensions&gt;true&lt;/extensions&gt;
  &lt;/plugin&gt;
 &lt;/plugins&gt;
&lt;/build&gt;</programlisting>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
</section>
<section xml:id="maven-external-configure-proc_install-on-eap">
<title>Configuring an external Maven repository for Business Central and KIE Server</title>
<simpara>You can configure Business Central and KIE Server to use an external Maven repository, such as Nexus or Artifactory, instead of the built-in repository. This enables Business Central and KIE Server to access and download artifacts that are maintained in the external Maven repository.</simpara>
<important>
<simpara>Artifacts in the repository do not receive automated security patches because Maven requires that artifacts be immutable. As a result, artifacts that are missing patches for known security flaws will remain in the repository to avoid breaking builds that depend on them. The version numbers of patched artifacts are incremented. For more information, see <link xlink:href="https://access.redhat.com/maven-repository">JBoss Enterprise Maven Repository</link>.</simpara>
</important>
<note>
<simpara>For information about configuring an external Maven repository for an authoring environment on Red Hat OpenShift Container Platform, see the following documents:</simpara>
<itemizedlist>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/deploying_red_hat_process_automation_manager_on_red_hat_openshift_container_platform#operator-deploy-central-proc_openshift-operator"><emphasis>Deploying a Red Hat Process Automation Manager environment on Red Hat OpenShift Container Platform using Operators</emphasis></link></simpara>
</listitem>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/deploying_red_hat_process_automation_manager_on_red_hat_openshift_container_platform#assembly-openshift-templates"><emphasis>Deploying a Red Hat Process Automation Manager environment on Red Hat OpenShift Container Platform using templates</emphasis></link></simpara>
</listitem>
</itemizedlist>
</note>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>Business Central and KIE Server are installed. For installation options, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/installing_and_configuring_red_hat_process_automation_manager#assembly-planning"><emphasis>Planning a Red Hat Process Automation Manager installation</emphasis></link>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Create a Maven <literal>settings.xml</literal> file with connection and access details for your external repository. For details about the <literal>settings.xml</literal> file, see the Maven <link xlink:href="https://maven.apache.org/settings.html">Settings Reference</link>.</simpara>
</listitem>
<listitem>
<simpara>Save the file in a known location, for example, <literal>/opt/custom-config/settings.xml</literal>.</simpara>
</listitem>
<listitem>
<simpara>In your Red Hat Process Automation Manager installation directory, navigate to the <literal>standalone-full.xml</literal> file. For example, if you use a Red Hat JBoss EAP installation for Red Hat Process Automation Manager, go to <literal>$EAP_HOME/standalone/configuration/standalone-full.xml</literal>.</simpara>
</listitem>
<listitem>
<simpara>Open <literal>standalone-full.xml</literal> and under the <literal>&lt;system-properties&gt;</literal> tag, set the <literal>kie.maven.settings.custom</literal> property to the full path name of the <literal>settings.xml</literal> file.</simpara>
<simpara>For example:</simpara>
<programlisting language="xml" linenumbering="unnumbered">&lt;property name="kie.maven.settings.custom" value="/opt/custom-config/settings.xml"/&gt;</programlisting>
</listitem>
<listitem>
<simpara>Start or restart Business Central and KIE Server.</simpara>
</listitem>
</orderedlist>
<formalpara>
<title>Next steps</title>
<para>For each Business Central project that you want to export or push as a KJAR artifact to the external Maven repository, you must add the repository information in the project <literal>pom.xml</literal> file. For instructions, see
<link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/deploying_and_managing_red_hat_process_automation_manager_services#maven-external-export-proc_packaging-deploying"><emphasis>Packaging and deploying a Red Hat Process Automation Manager project</emphasis></link>.</para>
</formalpara>
</section>
<section xml:id="offline-repo-proc_install-on-eap">
<title>Preparing a Maven mirror repository for offline use</title>
<simpara>If your
Red Hat Process Automation Manager deployment
does not have outgoing access to the public Internet, you must prepare a Maven repository with a mirror of all the necessary artifacts and make this repository available to your environment.</simpara>
<note>
<simpara>You do not need to complete this procedure if your
Red Hat Process Automation Manager deployment
is connected to the Internet.</simpara>
</note>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>A computer that has outgoing access to the public Internet is available.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>On the computer that has an outgoing connection to the public Internet, complete the following steps:</simpara>
</listitem>
<listitem>
<simpara>Navigate to the <link xlink:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html">Software Downloads</link> page in the Red Hat Customer Portal (login required), and select the product and version from the drop-down options:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Product:</emphasis> Red Hat Process Automation Manager</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Version:</emphasis> 7.10</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Download and extract the <emphasis role="strong">Red Hat Process Automation Manager 7.10.0 Offliner Content List</emphasis> (<literal>rhpam-7.10.0-offliner.zip</literal>) product deliverable file.</simpara>
</listitem>
<listitem>
<simpara>Extract the contents of the <literal>rhpam-7.10.0-offliner.zip</literal> file into any directory.</simpara>
</listitem>
<listitem>
<simpara>Change to the directory and enter the following command:</simpara>
<screen>./offline-repo-builder.sh offliner.txt</screen>
<simpara>This command creates the <literal>repository</literal> subdirectory and downloads the necessary artifacts into this subdirectory. This is the mirror repository.</simpara>
<simpara>If a message reports that some downloads have failed, run the same command again. If downloads fail again, contact Red Hat support.</simpara>
</listitem>
</orderedlist>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>If you developed services outside of Business Central and they have additional dependencies, add the dependencies to the mirror repository. If you developed the services as Maven projects, you can use the following steps to prepare these dependencies automatically. Complete the steps on the computer that has an outgoing connection to the public Internet.</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Create a backup of the local Maven cache directory (<literal>~/.m2/repository</literal>) and then clear the directory.</simpara>
</listitem>
<listitem>
<simpara>Build the source of your projects using the <literal>mvn clean install</literal> command.</simpara>
</listitem>
<listitem>
<simpara>For every project, enter the following command to ensure that Maven downloads all runtime dependencies for all the artifacts generated by the project:</simpara>
<screen>mvn -e -DskipTests dependency:go-offline -f /path/to/project/pom.xml --batch-mode -Djava.net.preferIPv4Stack=true</screen>
<simpara>Replace <literal>/path/to/project/pom.xml</literal> with the path of the <literal>pom.xml</literal> file of the project.</simpara>
</listitem>
<listitem>
<simpara>Copy the contents of the local Maven cache directory (<literal>~/.m2/repository</literal>) to the <literal>repository</literal> subdirectory that was created.</simpara>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>Copy the contents of the <literal>repository</literal> subdirectory to a directory on the computer on which you deployed Red Hat Process Automation Manager. This directory becomes the offline Maven mirror repository.</simpara>
</listitem>
<listitem>
<simpara>Create and configure a <literal>settings.xml</literal> file for your Red Hat Process Automation Manager deployment as described in
<xref linkend="maven-external-configure-proc_install-on-eap"/>.</simpara>
</listitem>
<listitem>
<simpara>Make the following changes in the <literal>settings.xml</literal> file:</simpara>
<itemizedlist>
<listitem>
<simpara>Under the <literal>&lt;profile&gt;</literal> tag, if a <literal>&lt;repositories&gt;</literal> or <literal>&lt;pluginRepositores&gt;</literal> tag is missing, add the missing tags.</simpara>
</listitem>
<listitem>
<simpara>Under <literal>&lt;repositories&gt;</literal> add the following content:</simpara>
<programlisting language="xml" linenumbering="unnumbered">&lt;repository&gt;
  &lt;id&gt;offline-repository&lt;/id&gt;
  &lt;url&gt;file:///path/to/repo&lt;/url&gt;
  &lt;releases&gt;
    &lt;enabled&gt;true&lt;/enabled&gt;
  &lt;/releases&gt;
  &lt;snapshots&gt;
    &lt;enabled&gt;false&lt;/enabled&gt;
  &lt;/snapshots&gt;
&lt;/repository&gt;</programlisting>
<simpara>Replace <literal>/path/to/repo</literal> with the full path to the local Maven mirror repository directory.</simpara>
</listitem>
<listitem>
<simpara>Under <literal>&lt;pluginRepositories&gt;</literal> add the following content:</simpara>
<programlisting language="xml" linenumbering="unnumbered">&lt;repository&gt;
  &lt;id&gt;offline-plugin-repository&lt;/id&gt;
  &lt;url&gt;file:///path/to/repo&lt;/url&gt;
  &lt;releases&gt;
    &lt;enabled&gt;true&lt;/enabled&gt;
  &lt;/releases&gt;
  &lt;snapshots&gt;
    &lt;enabled&gt;false&lt;/enabled&gt;
  &lt;/snapshots&gt;
&lt;/repository&gt;</programlisting>
<simpara>Replace <literal>/path/to/repo</literal> with the full path to the local Maven mirror repository directory.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Set the <literal>kie.maven.offline.force</literal> property for Business Central to <literal>true</literal>. For instructions about setting properties for Business Central, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/installing_and_configuring_red_hat_process_automation_manager#business-central-system-properties-ref_install-on-eap"><emphasis>Installing and configuring Red Hat Process Automation Manager on Red Hat JBoss EAP 7.3</emphasis></link>.</simpara>
</listitem>
</orderedlist>
</section>
</chapter>
<chapter xml:id="git-import-proc_install-on-eap">
<title>Importing projects from Git repositories</title>
<simpara>Git is a distributed version control system. It implements revisions as commit objects. When you save your changes to a repository, a new commit object in the Git repository is created.</simpara>
<simpara>Business Central uses Git to store project data, including assets such as rules and processes. When you create a project in Business Central, it is added to a Git repository that is embedded in Business Central. If you have projects in other Git repositories, you can import those projects into the Business Central Git repository through Business Central spaces.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>Red Hat Process Automation Manager projects exist in an external Git repository.</simpara>
</listitem>
<listitem>
<simpara>You have the credentials required for read access to that external Git repository.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>In Business Central, click <emphasis role="strong">Menu</emphasis> â†’ <emphasis role="strong">Design</emphasis> â†’ <emphasis role="strong">Projects</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Select or create the space into which you want to import the projects. The default space is <emphasis role="strong">MySpace</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>To import a project, do one of the following:</simpara>
<itemizedlist>
<listitem>
<simpara>Click <emphasis role="strong">Import Project</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Select <emphasis role="strong">Import Project</emphasis> from the drop-down list.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Import Project</emphasis> window, enter the URL and credentials for the Git repository that contains the projects that you want to import and click <emphasis role="strong">Import</emphasis>. The projects are added to the Business Central Git repository and are available from the current space.</simpara>
</listitem>
</orderedlist>
</chapter>
<chapter xml:id="customizing_the_branding_of_business_central" remap="_customizing_the_branding_of_business_central">
<title>Customizing the branding of Business Central</title>
<simpara>You can customize the branding of the Business Central login page and application header by replacing the images with your own.</simpara>
<section xml:id="central-login-customize-proc_install-on-eap">
<title>Customizing the Business Central login page</title>
<simpara>You can customize the company logo and the project logo on the Business Central login page.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Start Red Hat JBoss EAP and open Business Central in a web browser.</simpara>
</listitem>
<listitem>
<simpara>Copy an SVG format image to the <literal><emphasis>EAP_HOME</emphasis>/standalone/deployments/business-central.war/img/</literal> directory in your Red Hat Process Automation Manager installation.</simpara>
</listitem>
<listitem>
<simpara>In the <literal><emphasis>EAP_HOME</emphasis>/standalone/deployments/business-central.war/img/</literal> directory, either move or rename the existing <literal>redhat_logo.png</literal> file.</simpara>
</listitem>
<listitem>
<simpara>Rename your PNG file <literal>redhat_logo.png</literal>.</simpara>
</listitem>
<listitem>
<simpara>To change the project logo that appears above the <emphasis role="strong">User name</emphasis> and <emphasis role="strong">Password</emphasis> fields, replace the default image <literal>BC_Logo.png</literal> with a new SVG file.</simpara>
</listitem>
<listitem>
<simpara>Force a full reload of the login page, bypassing the cache, to view the changes. For example, in most Linux and Windows web browsers, press Ctrl+F5.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="central-app-header-customize-proc">
<title>Customizing Business Central application header</title>
<simpara>You can customize the Business Central application header.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Start Red Hat JBoss EAP, open Business Central in a web browser, and log in with your user credentials.</simpara>
</listitem>
<listitem>
<simpara>Copy your new application header image in the SVG format to the <literal><emphasis>EAP_HOME</emphasis>/standalone/deployments/business-central.war/banner/</literal> directory in your Red Hat Process Automation Manager installation.</simpara>
</listitem>
<listitem>
<simpara>Open the <literal><emphasis>EAP_HOME</emphasis>/standalone/deployments/business-central.war/banner/banner.html</literal> file in a text editor.</simpara>
</listitem>
<listitem>
<simpara>Replace <literal>logo.png</literal> in the <literal>&lt;img&gt;</literal> tag with the file name of your new image:admin-and-config/</simpara>
<screen>&lt;img src="banner/logo.png"/&gt;</screen>
</listitem>
<listitem>
<simpara>Force a full reload of the login page, bypassing the cache, to view the changes. For example, in most Linux and Windows web browsers, press Ctrl+F5.</simpara>
</listitem>
</orderedlist>
</section>
</chapter>
<chapter xml:id="ldap-ssl-con_install-on-eap">
<title>Integrating LDAP and SSL</title>
<simpara>With Red Hat Process Automation Manager you can integrate LDAP and SSL through RH-SSO. For more information, see the <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_single_sign-on/7.4/html-single/server_administration_guide/"><emphasis>Red Hat Single Sign-On Server Administration Guide</emphasis></link>.</simpara>
</chapter>
<chapter xml:id="dashbuilder-runtimes-con_install-on-eap">
<title>Dashbuilder Runtime</title>
<simpara>Dashbuilder Runtime is an add-on Red Hat Process Automation Manager application WAR that you can use to view dashboards created in and exported from Business Central. This is useful for reviewing business metrics in Red Hat JBoss EAP installations that do not have Business Central.</simpara>
<simpara>Navigation between the pages of a dashboard in Dashbuilder Runtime is identical to navigation in the Business Central where the dashboard was created. If a page belongs to a group, that group is imported to Dashbuilder Runtime as well as the page. If a page is imported to Dashbuilder Runtime but not used for navigation, then the page is added to the <emphasis role="strong">Runtime Dashboards</emphasis> menu group. If no navigation is exported then all pages are added to the <emphasis role="strong">Runtime Dashboards</emphasis> menu group.</simpara>
<section xml:id="installing-dashbuilder-proc_install-on-eap">
<title>Installing Dashbuilder Runtime</title>
<simpara>To install Dashbuilder Runtime, download the Dashbuilder Runtime WAR and create a user with the <literal>admin</literal> role.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You have created and exported a dashboard in Business Central. For more information about exporting Dashbuilder data, see the "Exporting and importing Dashbuilder data" section in the <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/managing_red_hat_process_automation_manager_and_kie_server_settings"><emphasis>Configuring Business Central settings and properties</emphasis></link> guide.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Navigate to the <link xlink:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html">Software Downloads</link> page in the Red Hat Customer Portal (login required), and select the product and version from the drop-down options:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Product:</emphasis> Process Automation Manager</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Version:</emphasis> 7.10</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Download <emphasis role="strong">Red Hat Process Automation Manager 7.10.0 Add Ons</emphasis> (<literal>rhpam-7.10.0-add-ons.zip</literal>) and extract the ZIP file.</simpara>
</listitem>
<listitem>
<simpara>Navigate to the directory that contains the extracted files and extract the <literal>rhpam-7.10.0-dashbuilder-runtime.zip</literal> file.</simpara>
</listitem>
<listitem>
<simpara>Copy the contents of the <literal>dashbuilder-runtime.zip</literal> file that you extracted into the <literal>&lt;EAP_HOME&gt;/standalone/deployments</literal> folder.</simpara>
</listitem>
<listitem>
<simpara>In the Red Hat JBoss EAP home directory, enter the following command to create a user with the <literal>admin</literal> role and specify a password. In the following example, replace <literal>&lt;USER_NAME&gt;</literal> and <literal>&lt;PASSWORD&gt;</literal> with the user name and password of your choice.</simpara>
<programlisting language="bash" linenumbering="unnumbered">$&lt;EAP_HOME&gt;/bin/add-user.sh -a -e -u &lt;USER_NAME&gt; -p &lt;PASSWORD&gt; -g admin</programlisting>
</listitem>
<listitem>
<simpara>In a terminal application, navigate to <literal><emphasis>EAP_HOME</emphasis>/bin</literal>.</simpara>
</listitem>
<listitem>
<simpara>Enter the following command to start Red Hat JBoss EAP:</simpara>
<itemizedlist>
<listitem>
<simpara>On Linux or UNIX-based systems:</simpara>
<programlisting language="bash" linenumbering="unnumbered">$ ./standalone.sh -c standalone-full.xml</programlisting>
</listitem>
<listitem>
<simpara>On Windows:</simpara>
<programlisting language="bash" linenumbering="unnumbered">standalone.bat -c standalone-full.xml</programlisting>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>In a web browser, open the URL <literal>http://localhost:8080</literal>.</simpara>
</listitem>
<listitem>
<simpara>Log in using the credentials of the user that you created for Dashbuilder Runtime.</simpara>
</listitem>
<listitem>
<simpara>When promted, upload a dashboard that you exported from Business Central.  Dashbuilder Runtime uses that dashboard until it is restarted.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="datasets-dashbuilder-runtimes-con">
<title>KIE Server data sets on Dashbuilder Runtime</title>
<simpara>A data set is a collection of related information. If you have a KIE Server that contains imported data sets, you can use Dashbuilder Runtime and the KIE Server REST API to run queries on imported data sets.</simpara>
<simpara>Because KIE Server uses Business Central as a controller, KIE Server containers are created in Business Central. Data sets are also created in Business Central. The KIE Server configuration is a template that you can refer to when you create data sets or install containers.</simpara>
<simpara>Other services, such as Dashbuilder Runtime, use the KIE Server REST API to retrieve KIE Server information. Dashbuilder Runtime accesses the KIE Server REST API to run queries from data sets.</simpara>
<simpara>When a KIE Server data set is created in Business Central, the server template information is provided and it is used by Dashbuilder Runtime to look for the KIE Server information. For example:</simpara>
<screen>dashbuilder.kieserver.serverTemplate.{SERVER_TEMPLATE}.location={LOCATION}
dashbuilder.kieserver.serverTemplate.{SERVER_TEMPLATE}.user={USER}
dashbuilder.kieserver.serverTemplate.{SERVER_TEMPLATE}.password={PASSWORD}
dashbuilder.kieserver.serverTemplate.{SERVER_TEMPLATE}.token={TOKEN}</screen>
<simpara>You can also setup KIE Server for each  data set. For example:</simpara>
<screen>dashbuilder.kieserver.dataset.{DATA_SET_NAME}.location={LOCATION}
dashbuilder.kieserver.dataset.{DATA_SET_NAME}.user={USER}
dashbuilder.kieserver.dataset.{DATA_SET_NAME}.password={PASSWORD}
dashbuilder.kieserver.dataset.{DATA_SET_NAME}.token={TOKEN}</screen>
<note>
<simpara>Token authentication is not used if credentials are provided.</simpara>
</note>
<simpara>You might want to run the dashboard against another KIE Server installation. When data sets are created on a KIE Server in a development environment, the data sets queries are created on the development KIE Server, for example DEV. If the dashboards are exported to a production environment, for example PROD, with a different KIE Server, the queries that you created in DEV are not available, so an error is thrown. In this case it is possible to port queries from  a data set to another KIE Server by using the replace query functionality, either through a server template or a data set:</simpara>
<itemizedlist>
<listitem>
<simpara>Server template example:</simpara>
<screen>dashbuilder.kieserver.serverTemplate.{SERVER_TEMPLATE}.replace_query=true</screen>
</listitem>
<listitem>
<simpara>Data set example:</simpara>
<screen>dashbuilder.kieserver.dataset.{DATA_SET_NAME}.replace_query=true</screen>
</listitem>
</itemizedlist>
<simpara>The <literal>replace_query=true property</literal> only needs to be set once so that Dashbuilder Runtime creates the queries. After the queries are created you can remove this system property.</simpara>
<itemizedlist>
<title>Additional resources</title>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/deploying_and_managing_red_hat_process_automation_manager_services#assembly-kie-apis"><emphasis>Interacting with Red Hat Process Automation Manager using KIE APIs</emphasis></link></simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="customizing-dashbuilder-con">
<title>Customizing Dashbuilder Runtime</title>
<simpara>You can use system properties to customize Dashbuilder Runtime.</simpara>
<variablelist>
<varlistentry>
<term>Dashboards Path</term>
<listitem>
<simpara>When a dashboard is uploaded it is stored in the filesystem. The path where it is stored is controlled by the system property <literal>dashbuilder.import.base.dir</literal>. The default is <literal>/tmp/dashbuilder</literal>.</simpara>
<simpara>The system property is the root path for any dashboard model. For example, if there are multiple files on this path, the file can be imported by accessing Dashbuilder Runtime and passing a query parameter import with the name of the file that should be loaded. For example, if you want to load the <literal>sales_dashboard</literal>, execute <literal>runtime_host?import=sales_dashboard</literal> and Dashbuilder Runtime will try to load the file <literal>/tmp/dashbuilder/sales_dashboard.zip</literal>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>Static Dashboard</term>
<listitem>
<simpara>If you want the runtime instance to load a specific dashboard, you can change the system property <literal>dashbuilder.runtime.import</literal>. Setting the property to a local file path will cause that specific dashboard to be loaded during Runtime startup.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>Controlling upload size</term>
<listitem>
<simpara>Application servers control POST request size by default. You can control the allowable size of uploaded dashboards by using the system property <literal>dashbuilder.runtime.upload.size</literal>. The size should be in KB and by default the value is 96kb, meaning that if someone tries to upload a file larger than 96kb then an error will be displayed and the dashboard wonâ€™t be installed.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>Loading external dashboards</term>
<listitem>
<simpara>A Dashboard that is located at an accessible URL can be accessed by Dashbuilder Runtime. You can access the URL by passing the URL with the import query parameter such as <literal>runtime_host?import=http://filesHost/sales_dashboard.zip</literal>.</simpara>
<note>
<simpara>For security reasons this option is disabled by default. You can enable it by setting the system property <literal>dashbuilder.runtime.allowExternal</literal> as true.</simpara>
</note>
</listitem>
</varlistentry>
</variablelist>
</section>
</chapter>
<appendix xml:id="business-central-system-properties-ref_install-on-eap">
<title>Business Central system properties</title>
<simpara>The Business Central system properties listed in this section are passed to <literal>standalone*.xml</literal> files.</simpara>
<variablelist>
<varlistentry>
<term>Git directory</term>
<listitem>
<simpara>Use the following properties to set the location and name for the Business Central Git directory:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>org.uberfire.nio.git.dir</literal>: Location of the Business Central Git directory.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.dirname</literal>: Name of the Business Central Git directory. Default value: <literal>.niogit</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.ketch</literal>: Enables or disables Git ketch.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.hooks</literal>: Location of the Git hooks directory.</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>Git over HTTP</term>
<listitem>
<simpara>Use the following properties to configure access to the Git repository over HTTP:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>org.uberfire.nio.git.proxy.ssh.over.http</literal>: Specifies whether SSH should use an HTTP proxy. Default value: <literal>false</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>http.proxyHost</literal>: Defines the host name of the HTTP proxy. Default value: <literal>null</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>http.proxyPort</literal>: Defines the host port (integer value) of the HTTP proxy. Default value: <literal>null</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>http.proxyUser</literal>: Defines the user name of the HTTP proxy.</simpara>
</listitem>
<listitem>
<simpara><literal>http.proxyPassword</literal>: Defines the user password of the HTTP proxy.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.http.enabled</literal>: Enables or disables the HTTP daemon. Default value: <literal>true</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.http.host</literal>: If the HTTP daemon is enabled, it uses this property as the host identifier. This is an informative property that is used to display how to access the Git repository over HTTP.  The HTTP still relies on the servlet container. Default value: <literal>localhost</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.http.hostname</literal>: If the HTTP daemon is enabled, it uses this property as the host name identifier. This is an informative property that is used to display how to access the Git repository over HTTP.  The HTTP still relies on the servlet container. Default value: <literal>localhost</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.http.port</literal>: If the HTTP daemon is enabled, it uses this property as the port number. This is an informative property that is used to display how to access the Git repository over HTTP.  The HTTP still relies on the servlet container. Default value: <literal>8080</literal>.</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>Git over HTTPS</term>
<listitem>
<simpara>Use the following properties to configure access to the Git repository over HTTPS:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>org.uberfire.nio.git.proxy.ssh.over.https</literal>: Specifies whether SSH uses an HTTPS proxy. Default value: <literal>false</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>https.proxyHost</literal>: Defines the host name of the HTTPS proxy. Default value: <literal>null</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>https.proxyPort</literal>: Defines the host port (integer value) of the HTTPS proxy. Default value: <literal>null</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>https.proxyUser</literal>: Defines the user name of the HTTPS proxy.</simpara>
</listitem>
<listitem>
<simpara><literal>https.proxyPassword</literal>: Defines the user password of the HTTPS proxy.</simpara>
</listitem>
<listitem>
<simpara><literal>user.dir</literal>: Location of the user directory.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.https.enabled</literal>: Enables or disables the HTTPS daemon. Default value: <literal>false</literal></simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.https.host</literal>: If the HTTPS daemon is enabled, it uses this property as the host identifier. This is an informative property that is used to display how to access the Git repository over HTTPS.  The HTTPS still relies on the servlet container. Default value: <literal>localhost</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.https.hostname</literal>: If the HTTPS daemon is enabled, it uses this property as the host name identifier. This is an informative property that is used to display how to access the Git repository over HTTPS.  The HTTPS still relies on the servlet container. Default value: <literal>localhost</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.https.port</literal>: If the HTTPS daemon is enabled, it uses this property as the port number. This is an informative property that is used to display how to access the Git repository over HTTPS.  The HTTPS still relies on the servlet container. Default value: <literal>8080</literal>.</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>JGit</term>
<listitem>
<itemizedlist>
<listitem>
<simpara><literal>org.uberfire.nio.jgit.cache.instances</literal>: Defines the JGit cache size.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.jgit.cache.overflow.cleanup.size</literal>: Defines the JGit cache overflow cleanup size.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.jgit.remove.eldest.iterations</literal>: Enables or disables whether to remove eldest JGit iterations.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.jgit.cache.evict.threshold.duration</literal>: Defines the JGit evict threshold duration.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.jgit.cache.evict.threshold.time.unit</literal>: Defines the JGit evict threshold time unit.</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>Git daemon</term>
<listitem>
<simpara>Use the following properties to enable and configure the Git daemon:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>org.uberfire.nio.git.daemon.enabled</literal>: Enables or disables the Git daemon. Default value: <literal>true</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.daemon.host</literal>: If the Git daemon is enabled, it uses this property as the local host identifier. Default value: <literal>localhost</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.daemon.hostname</literal>: If the Git daemon is enabled, it uses this property as the local host name identifier. Default value: <literal>localhost</literal></simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.daemon.port</literal>: If the Git daemon is enabled, it uses this property as the port number. Default value: <literal>9418</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.http.sslVerify</literal>: Enables or disables SSL certificate checking for Git repositories. Default value: <literal>true</literal>.</simpara>
<note>
<simpara>If the default or assigned port is already in use, a new port is automatically selected. Ensure that the ports are available and check the log for more information.</simpara>
</note>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>Git SSH</term>
<listitem>
<simpara>Use the following properties to enable and configure the Git SSH daemon:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>org.uberfire.nio.git.ssh.enabled</literal>: Enables or disables the SSH daemon. Default value: <literal>true</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.ssh.host</literal>: If the SSH daemon enabled, it uses this property as the local host identifier. Default value: <literal>localhost</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.ssh.hostname</literal>: If the SSH daemon is enabled, it uses this property as local host name identifier. Default value: <literal>localhost</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.ssh.port</literal>: If the SSH daemon is enabled, it uses this property as the port number. Default value: <literal>8001</literal>.</simpara>
<note>
<simpara>If the default or assigned port is already in use, a new port is automatically selected. Ensure that the ports are available and check the log for more information.</simpara>
</note>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.ssh.cert.dir</literal>: Location of the <literal>.security</literal> directory where local certificates are stored. Default value: Working directory.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.ssh.idle.timeout</literal>: Sets the SSH idle timeout.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.ssh.passphrase</literal>: Pass phrase used to access the public key store of your operating system when cloning git repositories with SCP style URLs. Example: <literal>git@github.com:user/repository.git</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.ssh.algorithm</literal>: Algorithm used by SSH. Default value: <literal>RSA</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.gc.limit</literal>: Sets the GC limit.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.ssh.ciphers</literal>: A comma-separated string of ciphers. The available ciphers are <literal>aes128-ctr</literal>, <literal>aes192-ctr</literal>, <literal>aes256-ctr</literal>, <literal>arcfour128</literal>, <literal>arcfour256</literal>, <literal>aes192-cbc</literal>, <literal>aes256-cbc</literal>. If the property is not used, all available ciphers are loaded.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.ssh.macs</literal>: A comma-separated string of message authentication codes (MACs). The available MACs are <literal>hmac-md5</literal>, <literal>hmac-md5-96</literal>, <literal>hmac-sha1</literal>, <literal>hmac-sha1-96</literal>, <literal>hmac-sha2-256</literal>, <literal>hmac-sha2-512</literal>. If the property is not used, all available MACs are loaded.</simpara>
<note>
<simpara>If you plan to use RSA or any algorithm other than DSA, make sure you set up your application server to use the Bouncy Castle JCE library.</simpara>
</note>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>KIE Server nodes and Process Automation Manager controller</term>
<listitem>
<simpara>Use the following properties to configure the connections with the KIE Server nodes from the Process Automation Manager controller:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>org.kie.server.controller</literal>: The URL is used to connect to the Process Automation Manager controller. For example, <literal>ws://localhost:8080/business-central/websocket/controller</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.kie.server.user</literal>: User name used to connect to the KIE Server nodes from the Process Automation Manager controller. This property is only required when using this Business Central installation as a Process Automation Manager controller.</simpara>
</listitem>
<listitem>
<simpara><literal>org.kie.server.pwd</literal>: Password used to connect to the KIE Server nodes from the Process Automation Manager controller. This property is only required when using this Business Central installation as a Process Automation Manager controller.</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>Maven and miscellaneous</term>
<listitem>
<simpara>Use the following properties to configure Maven and other miscellaneous functions:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>kie.maven.offline.force</literal>: Forces Maven to behave as if offline. If true, disables online dependency resolution. Default value: <literal>false</literal>.</simpara>
<note>
<simpara>Use this property for Business Central only. If you share a runtime environment with any other component, isolate the configuration and apply it only to Business Central.</simpara>
</note>
</listitem>
<listitem>
<simpara><literal>org.uberfire.gzip.enable</literal>: Enables or disables Gzip compression on the <literal>GzipFilter</literal> compression filter. Default value: <literal>true</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.kie.workbench.profile</literal>: Selects the Business Central profile. Possible values are <literal>FULL</literal> or <literal>PLANNER_AND_RULES</literal>. A prefix <literal>FULL_</literal> sets the profile and hides the profile preferences from the administrator preferences. Default value: <literal>FULL</literal></simpara>
</listitem>
<listitem>
<simpara><literal>org.appformer.m2repo.url</literal>: Business Central uses the default location of the Maven repository when looking for dependencies. It directs to the Maven repository inside Business Central, for example, <literal>http://localhost:8080/business-central/maven2</literal>. Set this property before starting Business Central. Default value: File path to the inner <literal>m2</literal> repository.</simpara>
</listitem>
<listitem>
<simpara><literal>appformer.ssh.keystore</literal>: Defines the custom SSH keystore to be used with Business Central by specifying a class name. If the property is not available, the default SSH keystore is used.</simpara>
</listitem>
<listitem>
<simpara><literal>appformer.ssh.keys.storage.folder</literal>: When using the default SSH keystore, this property defines the storage folder for the userâ€™s SSH public keys. If the property is not available, the keys are stored in the Business Central <literal>.security</literal> folder.</simpara>
</listitem>
<listitem>
<simpara><literal>appformer.experimental.features</literal>: Enables the experimental features framework. Default value: <literal>false</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.kie.demo</literal>: Enables an external clone of a demo application from GitHub.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.metadata.index.dir</literal>: Place where the Lucene <literal>.index</literal> directory is stored. Default value: Working directory.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.ldap.regex.role_mapper</literal>: Regex pattern used to map LDAP principal names to the application role name. Note that the variable role must be a part of the pattern as the application role name substitutes the variable role when matching a principle value and role name.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.sys.repo.monitor.disabled</literal>: Disables the configuration monitor. Do not disable unless you are sure. Default value: <literal>false</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.secure.key</literal>: Password used by password encryption. Default value: <literal>org.uberfire.admin</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.secure.alg</literal>: Crypto algorithm used by password encryption. Default value: <literal>PBEWithMD5AndDES</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.domain</literal>: Security-domain name used by uberfire. Default value: <literal>ApplicationRealm</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.guvnor.m2repo.dir</literal>: Place where the Maven repository folder is stored. Default value: <literal>&lt;working-directory&gt;/repositories/kie</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.guvnor.project.gav.check.disabled</literal>: Disables group ID, artifact ID, and version (GAV) checks. Default value: <literal>false</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.kie.build.disable-project-explorer</literal>: Disables automatic build of a selected project in Project Explorer. Default value: <literal>false</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.kie.builder.cache.size</literal>: Defines the cache size of the project builder. Default value: <literal>20</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.kie.verification.disable-dtable-realtime-verification</literal>: Disables the real-time validation and verification of decision tables. Default value: <literal>false</literal>.</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>Process Automation Manager controller</term>
<listitem>
<simpara>Use the following properties to configure how to connect to the Process Automation Manager controller:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>org.kie.workbench.controller</literal>: The URL used to connect to the Process Automation Manager controller, for example, <literal>ws://localhost:8080/kie-server-controller/websocket/controller</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.kie.workbench.controller.user</literal>: The Process Automation Manager controller user. Default value: <literal>kieserver</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.kie.workbench.controller.pwd</literal>: The Process Automation Manager controller password. Default value: <literal>kieserver1!</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.kie.workbench.controller.token</literal>: The token string used to connect to the Process Automation Manager controller.</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>Java Cryptography Extension KeyStore (JCEKS)</term>
<listitem>
<simpara>Use the following properties to configure JCEKS:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>kie.keystore.keyStoreURL</literal>: The URL used to load a Java Cryptography Extension KeyStore (JCEKS). For example, <literal>file:///home/kie/keystores/keystore.jceks.</literal></simpara>
</listitem>
<listitem>
<simpara><literal>kie.keystore.keyStorePwd</literal>: The password used for the JCEKS.</simpara>
</listitem>
<listitem>
<simpara><literal>kie.keystore.key.ctrl.alias</literal>: The alias of the key for the default REST Process Automation Manager controller.</simpara>
</listitem>
<listitem>
<simpara><literal>kie.keystore.key.ctrl.pwd</literal>: The password of the alias for the default REST Process Automation Manager controller.</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>Rendering</term>
<listitem>
<simpara>Use the following properties to switch between Business Central and KIE Server rendered forms:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>org.jbpm.wb.forms.renderer.ext</literal>: Switches the form rendering between Business Central and KIE Server. By default, the form rendering is performed by Business Central. Default value: <literal>false</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.jbpm.wb.forms.renderer.name</literal>: Enables you to switch between Business Central and KIE Server rendered forms. Default value: <literal>workbench</literal>.</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
</variablelist>
</appendix>
<chapter xml:id="additional_resources_2" remap="_additional_resources_2">
<title>Additional resources</title>
<itemizedlist>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/installing_and_configuring_red_hat_process_automation_manager#assembly-clustering-eap"><emphasis>Installing and configuring Red Hat Process Automation Manager in a Red Hat JBoss EAP clustered environment</emphasis></link></simpara>
</listitem>
</itemizedlist>
</chapter>
<chapter xml:id="next_steps" remap="_next_steps">
<title>Next steps</title>
<itemizedlist>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/integrating_red_hat_process_automation_manager_with_other_products_and_components#assembly-integrating-sso"><emphasis>Integrating Red Hat Process Automation Manager with Red Hat Single Sign-On</emphasis></link></simpara>
</listitem>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/getting_started_with_red_hat_process_automation_manager#assembly-getting-started-process-services"><emphasis>Getting started with business processes</emphasis></link></simpara>
</listitem>
</itemizedlist>
</chapter>
</part>
<part xml:id="assembly-clustering-eap">
<title>Installing and configuring Red Hat Process Automation Manager in a Red Hat JBoss EAP clustered environment</title>
<partintro>
<simpara>As a system engineer, you can create a Red Hat Process Automation Manager clustered environment to provide high availability and load balancing for your development and runtime environments.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You have reviewed the information in <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/installing_and_configuring_red_hat_process_automation_manager#assembly-planning"><emphasis>Planning a Red Hat Process Automation Manager installation</emphasis></link>.</simpara>
</listitem>
</itemizedlist>
</partintro>
<chapter xml:id="clustering-con_clustering">
<title>Red Hat Process Automation Manager clusters</title>
<simpara>By clustering two or more computers, you have the benefits of high availability, enhanced collaboration, and load balancing. High availability decreases the chance of data loss when a single computer fails. When a computer fails, another computer fills the gap by providing a copy of the data that was on the failed computer. When the failed computer comes online again, it resumes its place in the cluster.</simpara>
<simpara>There are several ways that you can cluster Red Hat Process Automation Manager components. This document describes how to cluster the following scenarios:</simpara>
<itemizedlist>
<listitem>
<simpara><xref linkend="clustering-dev-con_clustering-dev"/></simpara>
</listitem>
<listitem>
<simpara><xref linkend="clustering-ps-con_clustering-runtime-standalone"/></simpara>
</listitem>
</itemizedlist>
</chapter>
<chapter xml:id="clustering-dev-con_clustering-dev">
<title>Red Hat Process Automation Manager clusters in a development (authoring) environment</title>
<simpara>Developers can use Red Hat Process Automation Manager to author rules and processes that assist users with decision making.</simpara>
<simpara>You can configure Red Hat Process Automation Manager as a clustered development environment to benefit from high availability. With a clustered environment, if a developer is working on a node and that node fails, that developerâ€™s work is preserved and visible on any other node of the cluster.</simpara>
<simpara>Most development environments consist of Business Central
for creating rules and processes.
 and at least one KIE Server
 to test those rules and processes
.</simpara>
<simpara>To create a Red Hat Process Automation Manager clustered development environment, you must perform the following tasks:</simpara>
<itemizedlist>
<listitem>
<simpara>Configure Red Hat JBoss EAP 7.3 with Red Hat Data Grid 7.3 on a machine.</simpara>
</listitem>
<listitem>
<simpara>Configure AMQ Broker, a Java messaging server (JMS) broker, on a machine.</simpara>
</listitem>
<listitem>
<simpara>Configure an NFS file server on a machine.</simpara>
</listitem>
<listitem>
<simpara>Download Red Hat JBoss EAP 7.3 and Red Hat Process Automation Manager 7.10, then install them on each machine that is to become a cluster node.</simpara>
</listitem>
<listitem>
<simpara>Configure and start Business Central on each cluster node to start the operation of the cluster.</simpara>
</listitem>
</itemizedlist>
<simpara>Red Hat Data Grid is built from the Infinispan open-source software project. It is a distributed in-memory key/value data store that has indexing capabilities that enable you to store, search, and analyze high volumes of data quickly and in near-real time. In a Red Hat Process Automation Manager clustered environment, it enables you to perform complex and efficient searches across cluster nodes.</simpara>
<simpara>A JMS broker is a software component that receives messages, stores them locally, and forwards the messages to a recipient. AMQ Broker enables your applications to communicate with any messaging provider. It specifies how components such as message-driven beans, Enterprise JavaBeans, and servlets can send or receive messages.</simpara>
<section xml:id="clustering-datagrid-proc_clustering-dev">
<title>Installing and configuring Red Hat Data Grid</title>
<simpara>Install and configure Red Hat Data Grid for the Red Hat Process Automation Manager clustered environment for more efficient searching across cluster nodes.</simpara>
<simpara>For information about advanced installation and configuration options, and Red Hat Data Grid modules for Red Hat JBoss EAP, see the <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_data_grid/7.3/html-single/red_hat_data_grid_user_guide/index#"><emphasis>Red Hat Data Grid User Guide</emphasis></link>.</simpara>
<note>
<simpara>Do not install Red Hat Data Grid on the same node as Business Central.</simpara>
</note>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>A Java Virtual Machine (JVM) environment compatible with Java 8.0 or later is installed.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Navigate to the <link xlink:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html">Software Downloads</link> page in the Red Hat Customer Portal (login required), and select the product and version from the drop-down options:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Product:</emphasis> Data Grid</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Version:</emphasis> 7.3</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Download and extract the <emphasis role="strong">Red Hat JBoss Data Grid 7.3.0 Server</emphasis> (<literal>jboss-datagrid-7.3.0-1-server.zip</literal>) installation file to the preferred location on your system.</simpara>
<simpara>The extracted directory is referred to as <literal><emphasis>JDG_HOME</emphasis></literal>.</simpara>
</listitem>
<listitem>
<simpara>Update Red Hat Data Grid to the latest version. For more information, see Red Hat Data Grid <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_data_grid/7.3/html-single/red_hat_data_grid_user_guide/index#"><emphasis>Red Hat Data Grid User Guide</emphasis></link>.</simpara>
</listitem>
<listitem>
<simpara>To run Red Hat Data Grid, navigate to <literal><emphasis>JDG_HOME</emphasis>/bin</literal> and enter the following command:</simpara>
<screen>$ ./standalone.sh -c clustered.xml -b &lt;HOST&gt;</screen>
<simpara>Replace <literal>&lt;HOST&gt;</literal> with the IP address or host name of the server where you installed Red Hat Data Grid.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="JMS-broker-configure_clustering-dev">
<title>Downloading and configuring AMQ Broker</title>
<simpara>Red Hat AMQ Broker enables your applications to communicate with any messaging provider. It specifies how components such as message-driven beans, Enterprise JavaBeans, and servlets can send or receive messages.</simpara>
<simpara>For information about advanced installations and configuration options, see  <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_amq/7.7/html-single/getting_started_with_amq_broker"><emphasis>Getting started with AMQ Broker</emphasis></link>.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Navigate to the <link xlink:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html">Software Downloads</link> page in the Red Hat Customer Portal (login required), and select the product and version from the drop-down options:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Product: AMQ Broker</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Version: 7.7.0</emphasis></simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Download</emphasis> next to <emphasis role="strong">Red Hat AMQ Broker 7.7.0</emphasis> (<literal>amq-broker-7.7.0-bin.zip</literal>).</simpara>
</listitem>
<listitem>
<simpara>Extract the <literal>amq-broker-7.7.0-bin.zip</literal> file.</simpara>
</listitem>
<listitem>
<simpara>Change directory to <literal>amq-broker-7.7.0-bin/amq-broker-7.7.0/bin</literal>.</simpara>
</listitem>
<listitem>
<simpara>Enter the following command and replace the following placeholders to create the broker and broker user:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>&lt;HOST&gt;</literal> is the IP address or host name of the server where you installed AMQ Broker.</simpara>
</listitem>
<listitem>
<simpara><literal>&lt;AMQ_USER&gt;</literal> and <literal>&lt;AMQ_PASSWORD&gt;</literal> is a user name and password combination of your choice.</simpara>
</listitem>
<listitem>
<simpara><literal>&lt;BROKER_NAME&gt;</literal> is a name for the broker that you are creating.</simpara>
<screen>./artemis create --host &lt;HOST&gt; --user &lt;AMQ_USER&gt; --password &lt;AMQ_PASSWORD&gt; --require-login &lt;BROKER_NAME&gt;</screen>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>To run AMQ Broker, enter the following command in the <literal>amq-broker-7.7.0-bin/amq-broker-7.7.0/bin</literal> directory:</simpara>
<screen>&lt;BROKER_NAME&gt;/bin/artemis run</screen>
</listitem>
</orderedlist>
</section>
<section xml:id="nfs-server-configure-proc_clustering-dev">
<title>Configuring an NFS server</title>
<simpara>A shared file system is required for a Business Central clustered environment and each client node must have access to the shared file system.</simpara>
<simpara>You must deploy and configure an NFS version 4 server.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Configure a server to export NFS version 4 shares. For instructions about exporting NFS shares on Red Hat Enterprise Linux, see <emphasis>Exporting NFS shares</emphasis> in <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/managing_file_systems/index"><emphasis>Managing file systems</emphasis></link>. For more information about creating the NFS server, see <link xlink:href="https://access.redhat.com/solutions/1355233"><emphasis>How to configure NFS in RHEL 7</emphasis></link>.</simpara>
</listitem>
<listitem>
<simpara>On the server, create an <literal>/opt/kie/data</literal> share with the <literal>rw,sync,no_root_squash</literal> options by adding the following line to the <literal>/etc/exports</literal> file:</simpara>
<screen>/opt/kie/data *(rw,sync,no_root_squash)</screen>
<simpara>In this example, <literal>/opt/kie/data</literal> is the shared folder, <literal>*</literal> are the IP addresses allowed to connect to the NFS server, and <literal>(rw,sync,no_root_squash)</literal> are the minimum options required for NFS. For example:</simpara>
<screen>/opt/kie/data 192.268.1.0/24(rw,sync,no_root_squash)</screen>
<note>
<simpara>You can use another share name instead of '/opt/kie/data'. In this case, you must use this name when configuring all nodes that run Business Central.</simpara>
</note>
</listitem>
</orderedlist>
</section>
<section xml:id="clustering-download-eap-bc-proc_clustering-dev">
<title>Downloading and extracting Red Hat JBoss EAP 7.3 and Red Hat Process Automation Manager</title>
<simpara>Download and install Red Hat JBoss EAP 7.3 and Red Hat Process Automation Manager 7.10 on each node of the cluster.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Download Red Hat JBoss EAP 7.3 on each node of the cluster:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Navigate to the <link xlink:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html">Software Downloads</link> page in the Red Hat Customer Portal (login required), and select the product and version from the drop-down options:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Product: Enterprise Application Platform</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Version: 7.3</emphasis></simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Download</emphasis> next to <emphasis role="strong">Red Hat JBoss Enterprise Application Platform 7.3.4</emphasis>. (<literal>JBEAP-7.3.4/jboss-eap-7.3.4.zip</literal>).</simpara>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>Extract the <literal>jboss-eap-7.3.4.zip</literal> file. In the following steps, <literal><emphasis>EAP_HOME</emphasis></literal> is the <literal>jboss-eap-7.3/jboss-eap-7.3</literal> directory.</simpara>
</listitem>
<listitem>
<simpara>Download and apply the latest Red Hat JBoss EAP patch, if available.</simpara>
</listitem>
<listitem>
<simpara>Download Red Hat Process Automation Manager on each node of the cluster:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Navigate to the <link xlink:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html">Software Downloads</link> page in the Red Hat Customer Portal, and select the product and version from the drop-down options:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Product: Process Automation Manager</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Version: 7.10</emphasis></simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Download  <emphasis role="strong">Red Hat Process Automation Manager 7.10.0</emphasis> Business Central Deployable for Red Hat JBoss EAP 7 (<literal>rhpam-7.10.0-business-central-eap7-deployable.zip</literal>).</simpara>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>Extract the <literal>rhpam-7.10.0-business-central-eap7-deployable.zip</literal> file to a temporary directory. In the following commands this directory is called <literal><emphasis>TEMP_DIR</emphasis></literal>.</simpara>
</listitem>
<listitem>
<simpara>Copy the contents of <literal><emphasis>TEMP_DIR</emphasis>/rhpam-7.10.0-business-central-eap7-deployable/jboss-eap-7.3</literal> to <literal><emphasis>EAP_HOME</emphasis></literal>.</simpara>
</listitem>
<listitem>
<simpara>Download and apply the latest Red Hat Process Automation Manager patch, if available.</simpara>
</listitem>
<listitem>
<simpara>Configure Red Hat Single Sign-On for your high availability environment. For more information, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/integrating_red_hat_process_automation_manager_with_other_products_and_components#assembly-integrating-sso"><emphasis>Integrating Red Hat Process Automation Manager with Red Hat Single Sign-On</emphasis></link> and the <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_single_sign-on/7.4/html-single/server_administration_guide/"><emphasis>Red Hat Single Sign-On Server Administration Guide</emphasis></link>.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="clustering-bc-configure-standalone_proc_clustering-dev">
<title>Configuring and running Business Central in a cluster</title>
<simpara>After you install Red Hat JBoss EAP and Business Central you can use Red Hat Data Grid and the AMQ Broker to configure the cluster. Complete these steps on each node of the cluster.</simpara>
<note>
<simpara>These steps describe a basic cluster configuration. For more complex configurations, see the <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.3/html-single/configuration_guide/"><emphasis>Red Hat JBoss EAP 7.3 Configuration Guide</emphasis></link>.</simpara>
</note>
<note>
<simpara>Do not connect KIE Server to Business Central in high availability (HA) on premise environments.</simpara>
<simpara>Business Central instances are not able to keep in sync with the status of each  KIE Server. For example, if a KIE Server is up but not in sync, Business Central will not be able to deploy through that instance.</simpara>
</note>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>Red Hat Data Grid 7.3 is installed as described in <xref linkend="clustering-datagrid-proc_clustering-dev"/>.</simpara>
</listitem>
<listitem>
<simpara>AMQ Broker is installed and configured, as described in <xref linkend="JMS-broker-configure_clustering-dev"/>.</simpara>
</listitem>
<listitem>
<simpara>Red Hat JBoss EAP and Red Hat Process Automation Manager are installed on each node of the cluster as described in <xref linkend="clustering-download-eap-bc-proc_clustering-dev"/>.</simpara>
</listitem>
<listitem>
<simpara>An NFS server with a shared folder is available as described in <xref linkend="nfs-server-configure-proc_clustering-dev"/>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Mount the directory shared over NFS as <literal>/data</literal>. Enter the following commands as the root user:</simpara>
<screen>mkdir /data
mount &lt;NFS_SERVER_IP&gt;:&lt;DATA_SHARE&gt; /data</screen>
<simpara>Replace <emphasis>&lt;NFS_SERVER_IP&gt;</emphasis> with the IP address or hostname of the NFS server machine. Replace <emphasis>&lt;DATA_SHARE&gt;</emphasis> with the share name that you configured (for example, <literal>/opt/kie/data</literal>).</simpara>
</listitem>
<listitem>
<simpara>Create a <literal>kie-wb-playground</literal> directory in the <literal>/data</literal> NFS directory:</simpara>
<screen>mkdir /kie-wb-playground</screen>
</listitem>
<listitem>
<simpara>Create a <literal>kie-wb-playground</literal> directory in the <literal><emphasis>EAP_HOME</emphasis>/bin</literal> directory and mount the directory:</simpara>
<screen>mount -o rw,sync,actimeo=1 &lt;NFS_SERVER_IP&gt;:&lt;DATA_SHARE&gt;/kie-wb-playground kie-wb-playground</screen>
</listitem>
<listitem>
<simpara>Open the <literal><emphasis>EAP_HOME</emphasis>/standalone/configuration/standalone-full.xml</literal> file in a text editor.</simpara>
</listitem>
<listitem>
<simpara>Edit or add the properties under the <literal>&lt;system-properties&gt;</literal> element and replace the following placeholders:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>&lt;AMQ_USER&gt;</literal> and <literal>&lt;AMQ_PASSWORD&gt;</literal> are the credentials that you defined when creating the AMQ Broker.</simpara>
</listitem>
<listitem>
<simpara><literal>&lt;AMQ_BROKER_IP_ADDRESS&gt;</literal> is the IP address of the AMQ Broker.</simpara>
</listitem>
<listitem>
<simpara><literal>&lt;DATA_GRID_NODE_IP&gt;</literal> is the IP address where Red Hat Data Grid is installed.</simpara>
<programlisting language="xml" linenumbering="unnumbered">&lt;system-properties&gt;
  &lt;property name="appformer-jms-connection-mode" value="REMOTE"/&gt;
  &lt;property name="appformer-jms-username" value="&lt;AMQ_USER&gt;"/&gt;
  &lt;property name="appformer-jms-password" value="&lt;AMQ_USER_PASSWORD&gt;"/&gt;
  &lt;property name="appformer-jms-url"
     value="tcp://&lt;AMQ_BROKER_IP_ADDRESS&gt;:61616?ha=true&amp;amp;retryInterval=1000&amp;amp;retryIntervalMultiplier=1.0&amp;amp;reconnectAttempts=-1"/&gt;
  &lt;property name="org.appformer.ext.metadata.infinispan.port"
     value="11222"/&gt;
  &lt;property name="org.appformer.ext.metadata.infinispan.host"
     value="&lt;DATA_GRID_NODE_IP&gt;"/&gt;
  &lt;property name="org.appformer.ext.metadata.infinispan.realm"
     value="ApplicationRealm"/&gt;
  &lt;property name="org.appformer.ext.metadata.infinispan.cluster"
     value="kie-cluster"/&gt;
  &lt;property name="org.appformer.ext.metadata.index"
     value="infinispan"/&gt;
  &lt;property name="org.uberfire.nio.git.dir"
     value="/data"/&gt;
  &lt;property name="es.set.netty.runtime.available.processors"
     value="false"/&gt;
&lt;/system-properties&gt;</programlisting>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Optional: If the Red Hat Data Grid deployment requires authentication, edit or add the properties under the <literal>&lt;system-properties&gt;</literal> element and replace the following placeholders:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>&lt;SERVER_NAME&gt;</literal> is the server name specified in your Red Hat Data Grid server configuration.</simpara>
</listitem>
<listitem>
<simpara><literal>&lt;SASL_QOP&gt;</literal> is the combination of auth, auth-int and auth-conf values for your Red Hat Data Grid server configuration.</simpara>
<programlisting language="xml" linenumbering="unnumbered">&lt;property name="org.appformer.ext.metadata.infinispan.server.name"
   value="&lt;SERVER_NAME&gt;"/&gt;
&lt;property name="org.appformer.ext.metadata.infinispan.sasl.qop"
   value="&lt;SASL_QOP&gt;"/&gt;
&lt;property name="org.appformer.ext.metadata.infinispan.username"
   value=""/&gt;
&lt;property name="org.appformer.ext.metadata.infinispan.password"
   value=""/&gt;</programlisting>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Save the <literal>standalone-full.xml</literal> file.</simpara>
</listitem>
<listitem>
<simpara>To start the cluster, navigate to <literal><emphasis>EAP_HOME</emphasis>/bin</literal> and enter the following command:</simpara>
<screen>$ ./standalone.sh -c standalone-full.xml -b &lt;HOST&gt;</screen>
<simpara>Replace <literal>&lt;HOST&gt;</literal> with the IP address or host name of the server where you installed Red Hat Process Automation Manager.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="testing-clustering-environment-proc_clustering-dev">
<title>Testing your high availability (HA) on-premise infrastructure</title>
<simpara>When you create a production-ready high availability (HA) on-premises infrastructure for Business Central, you must ensure that it meets the minimum hardware and performance requirements for a viable HA environment. An HA on-premise infrastructure consists of the following four main components: Business Central, the message system (AMQ), the indexing server (Red Hat Data Grid), and a shared file system (NFS/GlusterFS/Ceph).</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>A network environment of at least 3 nodes is configured with the following layout:</simpara>
<simpara>Node 1: Business Central</simpara>
<simpara>Node 2: Business Central</simpara>
<simpara>Node 3: AMQ, Red Hat Data Grid, and NFS</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Test the network speed by following these steps:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>In the command terminal of each server node, install <literal>iPerf3</literal>:</simpara>
<screen>$ dnf install iperf3</screen>
</listitem>
<listitem>
<simpara>In the command terminal of the NFS server node (server node 3), start <literal>iPerf3</literal> in server mode:</simpara>
<screen>$ iperf3 -s</screen>
</listitem>
<listitem>
<simpara>In the command terminal of each Business Central server node, start <literal>iPerf3</literal> in client mode with the NFS server node set as the host:</simpara>
<screen>$ iperf3 -c &lt;NFS_SERVER_IP&gt;</screen>
</listitem>
<listitem>
<simpara>Compare the results from each server node with the following example of minimum values:</simpara>
<screen>iperf3 -c 172.31.47.103
Connecting to host 172.31.47.103, port 5201
[  5] local 172.31.39.4 port 44820 connected to 172.31.47.103 port 5201
[ ID] Interval           Transfer     Bitrate         Retr  Cwnd
[  5]   0.00-1.00   sec   143 MBytes  1.20 Gbits/sec    0    419 KBytes
[  5]   1.00-2.00   sec   111 MBytes   928 Mbits/sec    6    848 KBytes
[  5]   2.00-3.00   sec  53.8 MBytes   451 Mbits/sec    0   1.08 MBytes
[  5]   3.00-4.00   sec  52.5 MBytes   440 Mbits/sec    1   1022 KBytes
[  5]   4.00-5.00   sec  53.8 MBytes   451 Mbits/sec    1    935 KBytes
[  5]   5.00-6.00   sec  53.8 MBytes   451 Mbits/sec    1    848 KBytes
[  5]   6.00-7.00   sec  52.5 MBytes   440 Mbits/sec    0   1.08 MBytes
[  5]   7.00-8.00   sec  53.8 MBytes   451 Mbits/sec    1   1.01 MBytes
[  5]   8.00-9.00   sec  53.8 MBytes   451 Mbits/sec    1    953 KBytes
[  5]   9.00-10.00  sec  52.5 MBytes   440 Mbits/sec    1    856 KBytes
- - - - - - - - - - - - - - - - - - - - - - - - -
[ ID] Interval           Transfer     Bitrate         Retr
[  5]   0.00-10.00  sec   680 MBytes   570 Mbits/sec   12             sender
[  5]   0.00-10.04  sec   677 MBytes   566 Mbits/sec                  receiver

iperf Done.</screen>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>Verify the NFS information by following these steps:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>In the command terminal of each Business Central server node, mount the NFS node:</simpara>
<screen>$ mount -o actimeo=1 &lt;NFS_SERVER_IP&gt;:/opt/nfs/kie /opt/kie/niogit</screen>
</listitem>
<listitem>
<simpara>In the command terminal of each mounted node, enter <literal>nfsiostat</literal>:</simpara>
<screen>$ nfsiostat</screen>
</listitem>
<listitem>
<simpara>Compare the results from each server node with the following example of minimum values:</simpara>
<screen>nfsiostat
ops/s	rpc bklog
6.415	0.000

read:
ops/s	kB/s	kB/op	retrans	avg RTT (ms)	avg exe (ms)	avg queue (ms)	errors
0.031	0.045	1.452	0 (0.0%)	0.129		0.166		0.019		0 (0.0%)

write:
ops/s	kB/s	kB/op	retrans	avg RTT (ms)	avg exe (ms)	avg queue (ms)	errors
0.517	0.467	0.903	0 (0.0%)	1.235		1.269		0.01 8		0 (0.0%)</screen>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>Verify that the disk is an SSD by following these steps:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>In the command terminal of the NFS server, enter <literal>df -h</literal> to identify the disk as shown in the following example:</simpara>
<screen>$ df -h
Filesystem               Size  Used Avail Use% Mounted on
devtmpfs                 3.8G     0  3.8G   0% /dev
tmpfs                    3.9G     0  3.9G   0% /dev/shm
tmpfs                    3.9G   33M  3.8G   1% /run
tmpfs                    3.9G     0  3.9G   0% /sys/fs/cgroup
/dev/xvda2                25G  3.2G   22G  13% /
tmpfs                    781M     0  781M   0% /run/user/1000
172.31.47.103:/root/nfs   25G  2.1G   23G   9% /root/nfs</screen>
</listitem>
<listitem>
<simpara>Enter <literal>lsblk -d</literal> to verify that the disk is an SSD:</simpara>
<screen>$ lsblk -d</screen>
</listitem>
<listitem>
<simpara>Enter <literal>hdparm -Tt</literal> to test the disk:</simpara>
<screen>$ hdparm -Tt /dev/xvda2</screen>
</listitem>
<listitem>
<simpara>Compare the results from each server node with the following example of minimum values:</simpara>
<screen>$ hdparm -Tt /dev/xvda2

/dev/xvda2:
 Timing cached reads:   18670 MB in  1.99 seconds = 9389.01 MB/sec
 Timing buffered disk reads: 216 MB in  3.03 seconds =  71.40 MB/sec</screen>
</listitem>
</orderedlist>
</listitem>
</orderedlist>
</section>
<section xml:id="clustering-bc-testing-proc_clustering-dev">
<title>Verifying the Red Hat Process Automation Manager cluster</title>
<simpara>After configuring the cluster for Red Hat Process Automation Manager, create an asset to verify that the installation is working.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>In a web browser, enter <literal>&lt;node-IP-address&gt;:8080/business-central</literal>. Replace <literal>&lt;node-IP-address&gt;</literal> with the IP address of a particular node.</simpara>
</listitem>
<listitem>
<simpara>Enter the <literal>admin</literal> user credentials that you created during installation. The Business Central home page appears.</simpara>
</listitem>
<listitem>
<simpara>Select <emphasis role="strong">Menu</emphasis> â†’ <emphasis role="strong">Design</emphasis> â†’ <emphasis role="strong">Projects</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Open the <emphasis role="strong">MySpace</emphasis> space.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Try Samples</emphasis> â†’ <emphasis role="strong">Mortgages</emphasis> â†’ <emphasis role="strong">OK</emphasis>. The <emphasis role="strong">Assets</emphasis> window appears.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Add Asset</emphasis> â†’ <emphasis role="strong">Data Object</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Enter <literal>MyDataObject</literal> in the <emphasis role="strong">Data Object</emphasis> field and click <emphasis role="strong">OK</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Spaces</emphasis> â†’ <emphasis role="strong">MySpace</emphasis> â†’ <emphasis role="strong">Mortgages</emphasis> and confirm that <literal>MyDataObject</literal> is in the list of assets.</simpara>
</listitem>
<listitem>
<simpara>Enter the following URL in a web browser, where <literal>&lt;node_IP_address&gt;</literal> is the address of a different node of the cluster:</simpara>
<simpara><literal>http://&lt;node_IP_address&gt;:8080/business-central</literal></simpara>
</listitem>
<listitem>
<simpara>Enter the same credentials that you used to log in to Business Central on the first node, where you created the <literal>MyDataObject</literal> asset.</simpara>
</listitem>
<listitem>
<simpara>Select <emphasis role="strong">Menu</emphasis>â†’ <emphasis role="strong">Design</emphasis> â†’ <emphasis role="strong">Projects</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Open the <emphasis role="strong">MySpace</emphasis> space.</simpara>
</listitem>
<listitem>
<simpara>Select the <emphasis role="strong">Mortgages</emphasis> project.</simpara>
</listitem>
<listitem>
<simpara>Verify that <literal>MyDataObject</literal> is in the asset list.</simpara>
</listitem>
<listitem>
<simpara>Delete the <emphasis role="strong">Mortgages</emphasis> project.</simpara>
</listitem>
</orderedlist>
</section>
</chapter>
<chapter xml:id="clustering-ps-con_clustering-runtime-standalone">
<title>KIE Server clusters in a runtime environment</title>
<simpara>In a runtime environment, KIE Server runs services that contain rules and processes that support business decisions.
The primary benefit of clustering a KIE Server runtime environment is load balancing. If activity on one node of the cluster increases, that activity can be shared among the other nodes of the cluster to improve performance.</simpara>
<simpara>To create a KIE Server clustered runtime environment, you download and extract Red Hat JBoss EAP 7.3 and KIE Server. Then, you configure Red Hat JBoss EAP 7.3 for a cluster, start the cluster, and install KIE Server on each cluster node.</simpara>
<simpara>Optionally, you can then cluster the headless Process Automation Manager controller and Smart Router.</simpara>
<note>
<simpara>Do not connect KIE Server to Business Central in high availability (HA) on premise environments.</simpara>
<simpara>Business Central instances are not able to keep in sync with the status of each  KIE Server. For example, if a KIE Server is up but not in sync, Business Central will not be able to deploy through that instance.</simpara>
</note>
<section xml:id="clustering-download-eap-ps-proc_clustering-runtime-standalone">
<title>Downloading and extracting Red Hat JBoss EAP 7.3 and KIE Server</title>
<simpara>Complete the steps in this section to download and install Red Hat JBoss EAP 7.3 and KIE Server for installation in a clustered environment.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Download Red Hat JBoss EAP 7.3 on each node of the cluster:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Navigate to the <link xlink:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html">Software Downloads</link> page in the Red Hat Customer Portal (login required) and select the product and version from the drop-down options:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Product: Red Hat JBoss EAP</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Version: 7.3</emphasis></simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Download</emphasis> next to <emphasis role="strong">Red Hat JBoss Enterprise Application Platform 7.3.4</emphasis>. (<literal>jboss-eap-7.3.4.zip</literal>).</simpara>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>Extract the <literal>jboss-eap-7.3.4.zip</literal> file. The <literal>jboss-eap-7.3/jboss-eap-7.3</literal> directory is referred to as <literal><emphasis>EAP_HOME</emphasis></literal>.</simpara>
</listitem>
<listitem>
<simpara>Download and apply the latest Red Hat JBoss EAP patch, if available.</simpara>
</listitem>
<listitem>
<simpara>Download KIE Server:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Navigate to the <link xlink:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html">Software Downloads</link> page in the Red Hat Customer Portal and select the product and version from the drop-down options:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Product: Process Automation Manager</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Version: 7.10</emphasis></simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Download  <emphasis role="strong">Red Hat Process Automation Manager 7.10.0 KIE Server for All Supported EE8 Containers</emphasis> (<literal>rhpam-7.10.0-kie-server-ee8.zip</literal>).</simpara>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>Extract the <literal>rhpam-7.10.0-kie-server-ee8.zip</literal> archive to a temporary directory. In the following examples this directory is called <literal><emphasis>TEMP_DIR</emphasis></literal>.</simpara>
</listitem>
<listitem>
<simpara>Copy the
<literal><emphasis>TEMP_DIR</emphasis>/rhpam-7.10.0-kie-server-ee8/rhpam-7.10.0-kie-server-ee8/kie-server.war</literal>
 directory to <literal><emphasis>EAP_HOME</emphasis>/standalone/deployments/</literal>.</simpara>
<warning>
<simpara>Ensure the names of the Red Hat Process Automation Manager deployments you copy do not conflict with your existing deployments in the Red Hat JBoss EAP instance.</simpara>
</warning>
</listitem>
<listitem>
<simpara>Copy the contents of the
<literal><emphasis>TEMP_DIR</emphasis>/rhpam-7.10.0-kie-server-ee8/rhpam-7.10.0-kie-server-ee8/SecurityPolicy/</literal>
 to <literal><emphasis>EAP_HOME</emphasis>/bin</literal>.</simpara>
</listitem>
<listitem>
<simpara>When prompted to overwrite files, click <emphasis role="strong">Replace</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <literal><emphasis>EAP_HOME</emphasis>/standalone/deployments/</literal> directory, create an empty file named <literal>kie-server.war.dodeploy</literal>. This file ensures that KIE Server is automatically deployed when the server starts.</simpara>
</listitem>
<listitem>
<simpara>Download and apply the latest Red Hat Process Automation Manager patch, if available.</simpara>
</listitem>
<listitem>
<simpara>Navigate to the <literal><emphasis>EAP_HOME</emphasis>/bin</literal> directory.</simpara>
</listitem>
<listitem>
<simpara>Create a user with the <literal>kie-server</literal> role that you will use to log in to KIE Server.</simpara>
<programlisting language="bash" linenumbering="unnumbered">$ ./add-user.sh -a --user &lt;USERNAME&gt; --password &lt;PASSWORD&gt; --role kie-server</programlisting>
</listitem>
<listitem>
<simpara>Make a note of your user names and passwords.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="clustering-ps-configure-standalone_clustering-runtime-standalone">
<title>Configuring and running a Red Hat JBoss EAP 7.3  cluster for KIE Server</title>
<simpara>Configure the Red Hat JBoss EAP cluster  for KIE Server, and then start the cluster.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Install the JDBC driver on all Red Hat JBoss EAP instances that are part of this cluster. For more information, see the <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.3/html-single/configuration_guide/#jdbc_drivers">"JDBC Drivers"</link> section of the <emphasis>Red Hat JBoss EAP 7.3 Configuration Guide</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Open the <literal><emphasis>EAP_HOME</emphasis>/standalone/configuration/standalone-full.xml</literal> file in a text editor.</simpara>
</listitem>
<listitem>
<simpara>Edit the <literal>data-stores</literal> property and the <literal>timer-service thread-pool-name</literal> above it:</simpara>
<itemizedlist>
<listitem>
<simpara>The <literal>datasource-jndi-name</literal> is the JNDI name of the database specified at the beginning of this procedure.</simpara>
</listitem>
<listitem>
<simpara>You can enter any name for the value of the <literal>partition</literal> property. However, a node will only see timers from other nodes that have the same partition name. Grouping nodes into partitions by assigning partition names enables you to break a large cluster up into several smaller clusters. Doing this improves performance. For example, instead of having a cluster of 100 nodes, where all 100 nodes are trying to execute and refresh the same timers, you can create 20 clusters of 5 nodes by giving every group of 5 a different partition name.</simpara>
</listitem>
<listitem>
<simpara>Replace the  <literal>default-data-store</literal> attribute value with <literal>ejb_timer_ds</literal>.</simpara>
</listitem>
<listitem>
<simpara>Set the value of <literal>refresh-interval</literal> in milliseconds to specify how often the EJB timer connects to the database to synchronize and load tasks to be processed.</simpara>
<programlisting language="xml" linenumbering="unnumbered">&lt;timer-service thread-pool-name="default" default-data-store="ejb_timer_ds"&gt;
&lt;data-stores&gt;
    &lt;database-data-store name="ejb_timer_ds" datasource-jndi-name="java:jboss/datasources/ejb_timer" database="postgresql" partition="ejb_timer_part" refresh-interval="30000"/&gt;
&lt;/data-stores&gt;
&lt;/timer-service&gt;</programlisting>
<simpara>The following table lists the supported databases and the corresponding <literal>database</literal> attribute value:</simpara>
<table frame="all" rowsep="1" colsep="1">
<title>Supported databases</title>
<tgroup cols="2">
<colspec colname="col_1" colwidth="50*"/>
<colspec colname="col_2" colwidth="50*"/>
<thead>
<row>
<entry align="left" valign="top">Database</entry>
<entry align="left" valign="top">Attribute value</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>Hyper SQL (for demonstration purposes only, not supported)</simpara></entry>
<entry align="left" valign="top"><simpara><literal>hsql</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>PostgreSQL</simpara></entry>
<entry align="left" valign="top"><simpara><literal>postgresql</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Oracle</simpara></entry>
<entry align="left" valign="top"><simpara><literal>oracle</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>IBM DB2</simpara></entry>
<entry align="left" valign="top"><simpara><literal>db2</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Microsoft SQL Server</simpara></entry>
<entry align="left" valign="top"><simpara><literal>mssql</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>MySQL and MariaDB</simpara></entry>
<entry align="left" valign="top"><simpara><literal>mysql</literal></simpara></entry>
</row>
</tbody>
</tgroup>
</table>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Add the KIE Server and EJB timer data sources to the <literal>standalone-full.xml</literal> file. In these examples, <literal>&lt;DATABASE&gt;</literal> is the name of the database, <literal>&lt;SERVER_NAME&gt;</literal> is the host name of the JNDI database, and <literal>&lt;USER_NAME&gt;</literal> and <literal>&lt;USER_PWD&gt;</literal> are the credentials for that database.</simpara>
<itemizedlist>
<listitem>
<simpara>Add the data source to allow KIE Server to connect to the database, for example:</simpara>
<programlisting language="xml" linenumbering="unnumbered">&lt;xa-datasource jndi-name="java:/jboss/datasources/rhpam" pool-name="rhpam-RHPAM" use-java-context="true" enabled="true"&gt;
  &lt;xa-datasource-property name="DatabaseName"&gt;&lt;DATABASE&gt;&lt;/xa-datasource-property&gt;
  &lt;xa-datasource-property name="PortNumber"&gt;5432&lt;/xa-datasource-property&gt;
  &lt;xa-datasource-property name="ServerName"&gt;&lt;SERVER_NAME&gt;&lt;/xa-datasource-property&gt;
  &lt;driver&gt;postgresql&lt;/driver&gt;
  &lt;security&gt;
    &lt;user-name&gt;&lt;USER_NAME&gt;&lt;/user-name&gt;
    &lt;password&gt;&lt;USER_PWD&gt;&lt;/password&gt;
&lt;/security&gt;
&lt;/xa-datasource&gt;</programlisting>
</listitem>
<listitem>
<simpara>Add the data source to enable the EJB timer, for example:</simpara>
<programlisting language="xml" linenumbering="unnumbered">&lt;xa-datasource jndi-name="java:jboss/datasources/ejb_timer" pool-name="ejb_timer" use-java-context="true" enabled="true"&gt;
    &lt;xa-datasource-property name="DatabaseName"&gt;&lt;DATABASE&gt;&lt;/xa-datasource-property&gt;
    &lt;xa-datasource-property name="PortNumber"&gt;5432&lt;/xa-datasource-property&gt;
    &lt;xa-datasource-property name="ServerName"&gt;&lt;SERVER_NAME&gt;&lt;/xa-datasource-property&gt;
    &lt;driver&gt;postgresql&lt;/driver&gt;
    &lt;transaction-isolation&gt;TRANSACTION_READ_COMMITTED&lt;/transaction-isolation&gt;
    &lt;security&gt;
        &lt;user-name&gt;&lt;USER_NAME&gt;&lt;/user-name&gt;
        &lt;password&gt;&lt;USER_PWD&gt;&lt;/password&gt;
    &lt;/security&gt;
&lt;/xa-datasource&gt;</programlisting>
<warning>
<simpara>You must use two different databases for KIE Server runtime data and EJB timer data.</simpara>
</warning>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Add the following properties to the <literal>&lt;system-properties&gt;</literal> element and replace the following placeholders:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>&lt;JNDI_NAME&gt;</literal> is the JNDI name of your data source. For Red Hat Process Automation Manager, this is <literal>java:/jboss/datasources/rhpam</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>&lt;DIALECT&gt;</literal> is the hibernate dialect for your database.</simpara>
<simpara>The following dialects are supported:</simpara>
<itemizedlist>
<listitem>
<simpara>DB2: <literal>org.hibernate.dialect.DB2Dialect</literal></simpara>
</listitem>
<listitem>
<simpara>MSSQL: <literal>org.hibernate.dialect.SQLServer2012Dialect</literal></simpara>
</listitem>
<listitem>
<simpara>MySQL: <literal>org.hibernate.dialect.MySQL5InnoDBDialect</literal></simpara>
</listitem>
<listitem>
<simpara>MariaDB: <literal>org.hibernate.dialect.MySQL5InnoDBDialect</literal></simpara>
</listitem>
<listitem>
<simpara>Oracle: <literal>org.hibernate.dialect.Oracle10gDialect</literal></simpara>
</listitem>
<listitem>
<simpara>PostgreSQL: <literal>org.hibernate.dialect.PostgreSQL82Dialect</literal></simpara>
</listitem>
<listitem>
<simpara>PostgreSQL plus: <literal>org.hibernate.dialect.PostgresPlusDialect</literal></simpara>
<programlisting language="xml" linenumbering="unnumbered">&lt;system-properties&gt;
  &lt;property name="org.kie.server.persistence.ds" value="&lt;JNDI_NAME&gt;"/&gt;
  &lt;property name="org.kie.server.persistence.dialect" value="&lt;DIALECT&gt;"/&gt;
  &lt;property name="org.jbpm.ejb.timer.tx" value="true"/&gt;
&lt;/system-properties&gt;</programlisting>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Save the <literal>standalone-full.xml</literal> file.</simpara>
</listitem>
<listitem>
<simpara>To start the cluster, navigate to <literal><emphasis>EAP_HOME</emphasis>/bin</literal> and enter one of the following commands:</simpara>
<itemizedlist>
<listitem>
<simpara>On Linux or UNIX-based systems:</simpara>
<programlisting language="bash" linenumbering="unnumbered">$ ./standalone.sh -c standalone-full.xml</programlisting>
</listitem>
<listitem>
<simpara>On Windows:</simpara>
<programlisting language="bash" linenumbering="unnumbered">standalone.bat -c standalone-full.xml</programlisting>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
</section>
<section xml:id="clustering-headless-controller-proc_clustering-runtime-standalone">
<title>Clustering KIE Servers with the headless Process Automation Manager controller</title>
<simpara>The Process Automation Manager controller is integrated with Business Central. However, if you do not install Business Central, you can install the headless Process Automation Manager controller and use the REST API or the KIE Server Java Client API to interact with it.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>A backed-up Red Hat JBoss EAP installation version 7.3 or later is available. The base directory of the Red Hat JBoss EAP installation is referred to as <literal><emphasis>EAP_HOME</emphasis></literal>.</simpara>
</listitem>
<listitem>
<simpara>Sufficient user permissions to complete the installation are granted.</simpara>
</listitem>
<listitem>
<simpara>An NFS server with a shared folder is available as described in
<xref linkend="nfs-server-configure-proc_clustering-dev"/>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Navigate to the <link xlink:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html">Software Downloads</link> page in the Red Hat Customer Portal (login required), and select the product and version from the drop-down options:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Product: Process Automation Manager</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Version: 7.10</emphasis></simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Download <emphasis role="strong">Red Hat Process Automation Manager 7.10.0 Add Ons</emphasis> (the <literal>rhpam-7.10.0-add-ons.zip</literal> file).</simpara>
</listitem>
<listitem>
<simpara>Extract the <literal>rhpam-7.10.0-add-ons.zip</literal> file. The <literal>rhpam-7.10.0-controller-ee7.zip</literal> file is in the extracted directory.</simpara>
</listitem>
<listitem>
<simpara>Extract the <literal>rhpam-7.10.0-controller-ee7</literal> archive to a temporary directory. In the following examples this directory is called <literal><emphasis>TEMP_DIR</emphasis></literal>.</simpara>
</listitem>
<listitem>
<simpara>Copy the <literal><emphasis>TEMP_DIR</emphasis>/rhpam-7.10.0-controller-ee7/controller.war</literal> directory to <literal><emphasis>EAP_HOME</emphasis>/standalone/deployments/</literal>.</simpara>
<warning>
<simpara>Ensure that the names of the headless Process Automation Manager controller deployments you copy do not conflict with your existing deployments in the Red Hat JBoss EAP instance.</simpara>
</warning>
</listitem>
<listitem>
<simpara>Copy the contents of the <literal><emphasis>TEMP_DIR</emphasis>/rhpam-7.10.0-controller-ee7/SecurityPolicy/</literal> directory to <literal><emphasis>EAP_HOME</emphasis>/bin</literal>.</simpara>
</listitem>
<listitem>
<simpara>When prompted to overwrite files, click <emphasis role="strong">Yes</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <literal><emphasis>EAP_HOME</emphasis>/standalone/deployments/</literal> directory, create an empty file named <literal>controller.war.dodeploy</literal>. This file ensures that the headless Process Automation Manager controller is automatically deployed when the server starts.</simpara>
</listitem>
<listitem>
<simpara>Open the <literal><emphasis>EAP_HOME</emphasis>/standalone/configuration/standalone.xml</literal> file in a text editor.</simpara>
</listitem>
<listitem>
<simpara>Add the following properties to the <literal>&lt;system-properties&gt;</literal> element and replace <literal>&lt;NFS_STORAGE&gt;</literal> with the absolute path to the NFS storage where the template configuration is stored:</simpara>
<screen>&lt;system-properties&gt;
  &lt;property name="org.kie.server.controller.templatefile.watcher.enabled" value="true"/&gt;
  &lt;property name="org.kie.server.controller.templatefile" value="&lt;NFS_STORAGE&gt;"/&gt;
&lt;/system-properties&gt;</screen>
<simpara>Template files contain default configurations for specific deployment scenarios.</simpara>
<simpara>If the value of the <literal>org.kie.server.controller.templatefile.watcher.enabled</literal> property is set to true, a separate thread is started to watch for modifications of the template file. The default interval for these checks is 30000 milliseconds and can be further controlled by the <literal>org.kie.server.controller.templatefile.watcher.interval</literal> system property. If the value of this property is set to false, changes to the template file are detected only when the server restarts.</simpara>
</listitem>
<listitem>
<simpara>To start the headless Process Automation Manager controller, navigate to <literal><emphasis>EAP_HOME</emphasis>/bin</literal> and enter the following command:</simpara>
<itemizedlist>
<listitem>
<simpara>On Linux or UNIX-based systems:</simpara>
<programlisting language="bash" linenumbering="unnumbered">$ ./standalone.sh</programlisting>
</listitem>
<listitem>
<simpara>On Windows:</simpara>
<programlisting language="bash" linenumbering="unnumbered">standalone.bat</programlisting>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
</section>
</chapter>
<chapter xml:id="installing-and-configuring-smart-router-con_clustering-runtime-standalone">
<title>Installing and configuring Smart Router</title>
<simpara>Smart Router (KIE Server router) is a lightweight Java component that you can use as an integration layer between multiple KIE Servers, client applications, and other components. Depending on your deployment and execution environment, Smart Router can aggregate multiple independent KIE Server instances as though they are a single server. Smart Router provides the following features:</simpara>
<variablelist>
<varlistentry>
<term>Data aggregation</term>
<listitem>
<simpara>Collects data from all KIE Server instances (one instance from each group) when there is a client application request and aggregates the results in a single response.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>Routing</term>
<listitem>
<simpara>Functions as a single endpoint that receives calls from client applications to any of your services and routes each call automatically to the KIE Server that runs the specific service. This means that KIE Servers do not need to have the same services deployed.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>Load balancing</term>
<listitem>
<simpara>Provides efficient load balancing. Load balancing requests for a Smart Router cluster must be managed externally with standard load balancing tools.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>Authentication</term>
<listitem>
<simpara>Authenticates KIE Server instances by using a system property flag and can enable HTTPS traffic.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>Environment Management</term>
<listitem>
<simpara>Manages the changing environment, for example adding or removing server instances.</simpara>
</listitem>
</varlistentry>
</variablelist>
<section xml:id="clustering-smart-router-install-proc_clustering-runtime-standalone">
<title>Clustering KIE Servers with Smart Router</title>
<simpara>You can use Smart Router to aggregate multiple independent KIE Server instances as though they are a single server. It performs the role of an intelligent load balancer because it can route requests to individual KIE Servers and aggregate data from different KIE Servers. Smart Router uses aliases to perform as a proxy.</simpara>
<simpara>This section describes how to install Smart Router and configure it for a Red Hat Process Automation Manager runtime environment.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>KIE Server is installed on each node of a Red Hat JBoss EAP 7.3 cluster.</simpara>
<note>
<simpara>You do not need to configure KIE Server as unmanaged for Smart Router.</simpara>
<simpara>An unmanaged KIE Server does not connect to the controller.</simpara>
<simpara>For example, if you connect an unmanaged KIE Server to Smart Router and register Smart Router with the controller, then Business Central contacts the unmanaged KIE Server by using Smart Router.</simpara>
</note>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Navigate to the <link xlink:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html">Software Downloads</link> page in the Red Hat Customer Portal (login required), and select the product and version from the drop-down options:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Product: Process Automation Manager</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Version: 7.10</emphasis></simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Download <emphasis role="strong">Red Hat Process Automation Manager 7.10.0 Add-Ons</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Extract the downloaded <literal>rhpam-7.10.0-add-ons.zip</literal> file to a temporary directory. The <literal>rhpam-7.10.0-smart-router.jar</literal> file is in the extracted <literal>rhpam-7.10.0-add-ons</literal> directory.</simpara>
</listitem>
<listitem>
<simpara>Copy the <literal>rhpam-7.10.0-smart-router.jar</literal> file to the location where you will run the file.</simpara>
</listitem>
<listitem>
<simpara>Enter the following command to start Smart Router:</simpara>
<screen>java
-Dorg.kie.server.router.host=&lt;ROUTER_HOST&gt;
-Dorg.kie.server.router.port=&lt;ROUTER_PORT&gt;
-Dorg.kie.server.controller=&lt;CONTROLLER_URL&gt;
-Dorg.kie.server.controller.user=&lt;CONTROLLER_USER&gt;
-Dorg.kie.server.controller.pwd=&lt;CONTROLLER_PWD&gt;
-Dorg.kie.server.router.config.watcher.enabled=true
-Dorg.kie.server.router.repo=&lt;NFS_STORAGE&gt;
-jar rhpam-7.9.0-smart-router.jar</screen>
<simpara>The properties in the preceding command have the following default values:</simpara>
<screen>org.kie.server.router.host=localhost
org.kie.server.router.port=9000
org.kie.server.controller= N/A
org.kie.server.controller.user=kieserver
org.kie.server.controller.pwd=kieserver1!
org.kie.server.router.repo= &lt;CURRENT_WORKING_DIR&gt;
org.kie.server.router.config.watcher.enabled=false</screen>
<simpara><literal>org.kie.server.controller</literal> is the URL of the server controller, for example:</simpara>
<screen>org.kie.server.controller=http://&lt;HOST&gt;:&lt;PORT&gt;/controller/rest/controller</screen>
<simpara><literal>org.kie.server.router.config.watcher.enabled</literal> is an optional settings to enable the watcher service system property.</simpara>
</listitem>
<listitem>
<simpara>To access Smart Router from the client side, use the Smart Router URL instead of the KIE Server URL, for example:</simpara>
<screen>KieServicesConfiguration config = KieServicesFactory.newRestConfiguration("http://smartrouter.example.com:9000", "USERNAME", "PASSWORD");</screen>
<simpara>In this example, <literal>smartrouter.example.com</literal> is the Smart Router URL, and <literal>USERNAME</literal> and <literal>PASSWORD</literal> are the log in credentials for the Smart Router configuration.</simpara>
</listitem>
</orderedlist>
<note>
<simpara>You must create containers directly against the <literal>kie-server</literal>. For example:</simpara>
<screen>$ curl -v -X POST -H 'Content-type: application/xml' -H 'X-KIE-Content-Type: xstream' -d @create-container.xml -u ${KIE_CRED} http://${KIE-SERVER-HOST}:${KIE-SERVER-PORT}/kie-server/services/rest/server/config/</screen>
<screen>$ cat create-container.xml
&lt;script&gt;
  &lt;create-container&gt;
    &lt;container container-id="example:timer-test:1.1"&gt;
      &lt;release-id&gt;
        &lt;group-id&gt;example&lt;/group-id&gt;
        &lt;artifact-id&gt;timer-test&lt;/artifact-id&gt;
        &lt;version&gt;1.1&lt;/version&gt;
      &lt;/release-id&gt;
      &lt;config-items&gt;
        &lt;itemName&gt;RuntimeStrategy&lt;/itemName&gt;
        &lt;itemValue&gt;PER_PROCESS_INSTANCE&lt;/itemValue&gt;
        &lt;itemType&gt;&lt;/itemType&gt;
      &lt;/config-items&gt;
    &lt;/container&gt;
  &lt;/create-container&gt;
&lt;/script&gt;</screen>
<simpara>A message about the deployed container is displayed in the smart-router console. For example:</simpara>
<screen>INFO: Added http://localhost:8180/kie-server/services/rest/server as server location for container example:timer-test:1.1</screen>
<simpara>To display a list of containers, enter the following command:</simpara>
<screen>$ curl http://localhost:9000/mgmt/list</screen>
<simpara>The list of containers is displayed:</simpara>
<screen>{
  "containerInfo": [{
    "alias": "timer-test",
    "containerId": "example:timer-test:1.1",
    "releaseId": "example:timer-test:1.1"
  }],
  "containers": [
    {"example:timer-test:1.1": ["http://localhost:8180/kie-server/services/rest/server"]},
    {"timer-test": ["http://localhost:8180/kie-server/services/rest/server"]}
  ],
  "servers": [
    {"kieserver2": []},
    {"kieserver1": ["http://localhost:8180/kie-server/services/rest/server"]}
  ]
}</screen>
<simpara>To initiate a process using the Smart Router URL, enter the following command:</simpara>
<screen>$ curl -s -X POST -H 'Content-type: application/json' -H 'X-KIE-Content-Type: json' -d '{"timerDuration":"9s"}' -u kieserver:kieserver1! http://localhost:9000/containers/example:timer-test:1.1/processes/timer-test.TimerProcess/instances</screen>
</note>
</section>
<section xml:id="kie-server-smart-router-enable-tls-support-proc_clustering-runtime-standalone">
<title>Configuring Smart Router for TLS support</title>
<simpara>You can configure Smart Router (KIE Server Router) for TLS support to allow HTTPS traffic.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>KIE Server is installed on each node of a Red Hat JBoss EAP 7.3 cluster.</simpara>
</listitem>
<listitem>
<simpara>Smart Router is installed and configured. For more information, see
<xref linkend="clustering-smart-router-install-proc_clustering-runtime-standalone"/>.</simpara>
</listitem>
</itemizedlist>
<itemizedlist>
<title>Procedure</title>
<listitem>
<simpara>To start Smart Router with TLS support and HTTPS enabled, use the TLS keystore properties, for example:</simpara>
<programlisting language="java" linenumbering="unnumbered">java  -Dorg.kie.server.router.tls.keystore = &lt;KEYSTORE_PATH&gt;
      -Dorg.kie.server.router.tls.keystore.password = &lt;KEYSTORE_PWD&gt;
      -Dorg.kie.server.router.tls.keystore.keyalias = &lt;KEYSTORE_ALIAS&gt;
      -Dorg.kie.server.router.tls.port = &lt;HTTPS_PORT&gt;
      -jar rhpam-7.9.0-smart-router.jar</programlisting>
<simpara><literal>org.kie.server.router.tls.port</literal> is a property used to configure the HTTPS port. The default HTTPS port value is <literal>9443</literal>.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="kie-server-smart-router-enable-endpoint-authentication-proc">
<title>Configuring Smart Router for endpoint authentication</title>
<simpara>You can configure Smart Router (KIE Server Router) for endpoint authentication.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>KIE Server is installed on each node of a Red Hat JBoss EAP 7.3 cluster.</simpara>
</listitem>
<listitem>
<simpara>Smart Router is installed and configured. For more information, see
<xref linkend="clustering-smart-router-install-proc_clustering-runtime-standalone"/>.</simpara>
</listitem>
</itemizedlist>
<itemizedlist>
<title>Procedure</title>
<listitem>
<simpara>To start Smart Router with endpoint authentication enabled, configure the management credentials:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Add the following properties to your KIE Server configuration:</simpara>
<screen>`org.kie.server.router.management.username`
`org.kie.server.router.management.password`</screen>
<simpara>The default <literal>username</literal> is the KIE Server ID.</simpara>
</listitem>
<listitem>
<simpara>Add the following property to your Smart Router configuration:</simpara>
<screen>`org.kie.server.router.management.password`</screen>
<simpara>The <literal>password</literal> property values are <literal>true</literal> or <literal>false</literal> (default).</simpara>
</listitem>
</orderedlist>
<note>
<simpara>Enabling endpoint authentication means any any operation that lists, adds or removes containers must be authenticated.</simpara>
</note>
<orderedlist numeration="arabic">
<listitem>
<simpara>Optional: Add users to Smart Router. For example:</simpara>
<screen>java -jar rhpam-7.9.0-smart-router.jar -addUser &lt;USERNAME&gt; &lt;PASSWORD&gt;</screen>
</listitem>
<listitem>
<simpara>Optional: Remove users from Smart Router. For example:</simpara>
<screen>java -jar rhpam-7.9.0-smart-router.jar -removeUser &lt;USERNAME&gt;</screen>
</listitem>
</orderedlist>
</listitem>
</itemizedlist>
</section>
<section xml:id="configuring-smart-router-behavior-con">
<title>Configuring Smart Router behavior</title>
<simpara>In a clustered environment with multiple KIE Servers, the default behavior is to send requests to each KIE Server in parallel and a host of each KIE Server is sent the request using the "round-robin" method. In the following example environment, each KIE Server is deployed with the same KJAR but each KJAR version is different:</simpara>
<table frame="all" rowsep="1" colsep="1">
<title>Example environment</title>
<tgroup cols="3">
<colspec colname="col_1" colwidth="20*"/>
<colspec colname="col_2" colwidth="50*"/>
<colspec colname="col_3" colwidth="30*"/>
<thead>
<row>
<entry align="left" valign="top">Server Name</entry>
<entry align="left" valign="top">KJAR version</entry>
<entry align="left" valign="top">Hosts</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara><literal>kie-server1</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>kjar:1.0</literal> <literal>(alias=kjar, group-id=com.example, artifact-id=sample-kjar, version=1.0)</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>129.0.1.1, 129.0.1.2, 129.0.1.3</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>kie-server2</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>kjar:2.0</literal> <literal>(alias=kjar, group-id=com.example, artifact-id=sample-kjar, version=2.0)</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>129.0.2.1, 129.0.2.2, 129.0.2.3</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>kie-server3</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>kjar:3.0</literal> <literal>(alias=kjar, group-id=com.example, artifact-id=sample-kjar, version=3.0)</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>129.0.3.1, 129.0.3.2, 129.0.3.3</literal></simpara></entry>
</row>
</tbody>
</tgroup>
</table>
<simpara>If you send a request, the request is sent to <literal>kie-server1 (129.0.1.2)</literal>, <literal>kie-server2 (129.0.2.3)</literal>, and <literal>kie-server3 (129.0.3.1)</literal>.</simpara>
<simpara>If you send a second request, that request is sent to the next host of each KIE Server. For example, <literal>kie-server1 (129.0.1.3)</literal>, <literal>kie-server2 (129.0.2.1)</literal>, and <literal>kie-server3 (129.0.3.2)</literal>.</simpara>
<simpara>Smart Router has three components that you can modify to change this behavior:</simpara>
<variablelist>
<varlistentry>
<term>ContainerResolver</term>
<listitem>
<simpara>The component responsible for finding the container id to use when interacting with servers.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>RestrictionPolicy</term>
<listitem>
<simpara>The component responsible for disallowing Smart Router to use specific endpoints.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>ConfigRepository</term>
<listitem>
<simpara>The component responsible for maintaining the Smart Router configuration. This is mainly related to the routing table.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>IdentityService</term>
<listitem>
<simpara>The component responsible for allowing you to use your own identity provider. This is for KIE Server instances.</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara>Smart Router uses the <literal>ServiceLoader</literal> utility to implement these components:</simpara>
<variablelist>
<varlistentry>
<term>ContainerResolver</term>
<listitem>
<simpara><literal>META-INF/services/org.kie.server.router.spi.ContainerResolver</literal></simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>RestrictionPolicy</term>
<listitem>
<simpara><literal>META-INF/services/org.kie.server.router.spi.RestrictionPolicy</literal></simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>ConfigRepository</term>
<listitem>
<simpara><literal>META-INF/services/org.kie.server.router.spi.ConfigRepository</literal></simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>IdentityService</term>
<listitem>
<simpara><literal>META-INF/services/org.kie.server.router.identity.IdentityService</literal></simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara>For example, for the above scenario, you can customize the <literal>ContainerResolver</literal> to make Smart Router search for the latest version of the KJAR process across all available KIE Servers and to always start with that process. This scenario would mean that each KIE Server hosts a single KJAR and each version will share the same alias.</simpara>
<simpara>Since Smart Router is an executable jar, to include extensions, you need to modify the command. For example:</simpara>
<screen>java -cp LOCATION/router-ext-7.9.0.redhat-00002.jar:rhpam-7.9.0-smart-router.jar org.kie.server.router.KieServerRouter</screen>
<simpara>Once the service is started you will see log output stating the implementation that is used for the components:</simpara>
<screen>Mar 01, 2017 1:47:10 PM org.kie.server.router.KieServerRouter &lt;init&gt;
INFO: KIE Server router repository implementation is InMemoryConfigRepository
Mar 01, 2017 1:47:10 PM org.kie.server.router.proxy.KieServerProxyClient &lt;init&gt;
INFO: Using 'LatestVersionContainerResolver' container resolver and restriction policy 'ByPassUserNotAllowedRestrictionPolicy'
Mar 01, 2017 1:47:10 PM org.xnio.Xnio &lt;clinit&gt;
INFO: XNIO version 3.3.6.Final
Mar 01, 2017 1:47:10 PM org.xnio.nio.NioXnio &lt;clinit&gt;
INFO: XNIO NIO Implementation Version 3.3.6.Final
Mar 01, 2017 1:47:11 PM org.kie.server.router.KieServerRouter start
INFO: KieServerRouter started on localhost:9000 at Wed Mar 01 13:47:11 CET 2017</screen>
</section>
</chapter>
<chapter xml:id="clustering-quartz-proc_clustering-runtime-standalone">
<title>Configuring Quartz timer service</title>
<simpara>When you run KIE Server in a cluster you can configure the Quartz timer service.</simpara>
<simpara>Before you configure a database on your application server, you must prepare the database for Quartz to create Quartz tables, which will hold the timer data, and the Quartz definition file.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>A supported non-JTA data source is connected to your application server, for example a PostgreSQL data source.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Create Quartz tables in your database to enable timer events to synchronize using the DDL script for your database.</simpara>
<simpara>The DDL script is available in the extracted supplementary ZIP archive in <literal><emphasis>QUARTZ_HOME</emphasis>/docs/dbTables</literal>.</simpara>
<note>
<simpara>Scripts containing the word <literal>drop</literal> such as <literal>quartz_tables_drop_db2.sql</literal> drop the Quartz table before creating it.</simpara>
</note>
</listitem>
<listitem>
<simpara>Create the Quartz configuration file <literal>quartz-definition.properties</literal> in the <literal><emphasis>JBOSS_HOME</emphasis>/<emphasis>MODE</emphasis>/configuration/</literal> directory and add the following example content:</simpara>
<programlisting language="bash" linenumbering="unnumbered">#=========================================================================
# Configure Main Scheduler Properties
#=========================================================================
org.quartz.scheduler.instanceName = jBPMClusteredScheduler
org.quartz.scheduler.instanceId = AUTO
#=========================================================================
# Configure ThreadPool
#=========================================================================
org.quartz.threadPool.class = org.quartz.simpl.SimpleThreadPool
org.quartz.threadPool.threadCount = 5
org.quartz.threadPool.threadPriority = 5
#=========================================================================
# Configure JobStore
#=========================================================================
org.quartz.jobStore.misfireThreshold = 60000
org.quartz.jobStore.class=org.quartz.impl.jdbcjobstore.JobStoreCMT
org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.PostgreSQLDelegate
org.quartz.jobStore.useProperties=false
org.quartz.jobStore.dataSource=managedDS
org.quartz.jobStore.nonManagedTXDataSource=notManagedDS
org.quartz.jobStore.tablePrefix=QRTZ_
org.quartz.jobStore.isClustered=true
org.quartz.jobStore.clusterCheckinInterval = 20000
#=========================================================================
# Configure Datasources
#=========================================================================
org.quartz.dataSource.managedDS.jndiURL=jboss/datasources/psbpmsDS
org.quartz.dataSource.notManagedDS.jndiURL=jboss/datasources/quartzNotManagedDS
# Note the configured data sources that accommodate the two Quartz schemes at the very end of the file.</programlisting>
<important>
<simpara>The recommended interval for cluster discovery is 20 seconds and is set in the <literal>org.quartz.jobStore.clusterCheckinInterval</literal> attribute of the <literal>quartz-definition.properties</literal> file. Consider the performance impact on your system and modify the settings as necessary.</simpara>
</important>
</listitem>
<listitem>
<simpara>Provide the absolute path to your <literal>quartz-definition.properties</literal> file in the <literal>org.quartz.properties</literal> property.</simpara>
</listitem>
<listitem>
<simpara>Optional: To configure the number of retries and delay for the Quartz trigger, update the following system properties:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>org.jbpm.timer.quartz.retries</literal> (default value is 5)</simpara>
</listitem>
<listitem>
<simpara><literal>org.jbpm.timer.quartz.delay</literal> in milliseconds  (default value is 1000)</simpara>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
<note>
<simpara>By default, Quartz requires two data sources:</simpara>
<itemizedlist>
<listitem>
<simpara>Managed data source to participate in the transaction of the process engine.</simpara>
</listitem>
<listitem>
<simpara>Unmanaged data source to look up timers to trigger without any transaction handling</simpara>
</listitem>
</itemizedlist>
<simpara>Red Hat Process Automation Manager business applications assume that the Quartz database (schema) will be co-located with Red Hat Process Automation Manager tables and therefore produce data sources used for transactional operations for Quartz.</simpara>
<simpara>The other (non transactional) data source must be configured but it should point
to the same database as the main data source.</simpara>
</note>
</chapter>
<chapter xml:id="additional_resources_3" remap="_additional_resources_3">
<title>Additional resources</title>
<itemizedlist>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/installing_and_configuring_red_hat_process_automation_manager#assembly-install-on-eap"><emphasis>Installing and configuring Red Hat Process Automation Manager on Red Hat JBoss EAP 7.3</emphasis></link></simpara>
</listitem>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/installing_and_configuring_red_hat_process_automation_manager#assembly-planning"><emphasis>Planning a Red Hat Process Automation Manager installation</emphasis></link></simpara>
</listitem>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/deploying_red_hat_process_automation_manager_on_red_hat_openshift_container_platform#assembly-openshift-operator"><emphasis>Deploying a Red Hat Process Automation Manager environment on Red Hat OpenShift Container Platform using Operators</emphasis></link></simpara>
</listitem>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/deploying_red_hat_process_automation_manager_on_red_hat_openshift_container_platform#assembly-openshift-templates"><emphasis>Deploying a Red Hat Process Automation Manager environment on Red Hat OpenShift Container Platform using templates</emphasis></link></simpara>
</listitem>
</itemizedlist>
</chapter>
</part>
<part xml:id="assembly-install-on-jws">
<title>Installing and configuring Red Hat Process Automation Manager on Red Hat JBoss Web Server</title>
<partintro>
<simpara>This document describes how to install Red Hat Process Automation Manager 7.10 on JBoss Web Server.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You have reviewed the information in <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/installing_and_configuring_red_hat_process_automation_manager#assembly-planning"><emphasis>Planning a Red Hat Process Automation Manager installation</emphasis></link>.</simpara>
</listitem>
<listitem>
<simpara>You have installed Red Hat JBoss Web Server 5.3.0. For information about installing Red Hat JBoss Web Server, see the <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_jboss_web_server/5.4/html-single/installation_guide/index"><emphasis>Red Hat JBoss Web Server Installation Guide</emphasis></link>.</simpara>
</listitem>
</itemizedlist>
</partintro>
<chapter xml:id="installing-con_install-on-jws">
<title>About Red Hat Process Automation Manager</title>
<simpara>Red Hat Process Automation Manager is the Red Hat middleware platform for creating business automation applications and microservices. It enables enterprise business and IT users to document, simulate, manage, automate, and monitor business processes and policies. It is designed to empower business and IT users to collaborate more effectively, so business applications can be changed easily and quickly.</simpara>
<simpara>Red Hat Process Automation Manager is made up of Business Central and KIE Server.</simpara>
<itemizedlist>
<listitem>
<simpara>KIE Server is the server where rules and other artifacts are executed. It is used to instantiate and execute rules and solve planning problems. KIE Server provides the runtime environment for business assets and accesses the data stored in the assets repository (knowledge store).</simpara>
</listitem>
<listitem>
<simpara>Business Central</simpara>
</listitem>
<listitem>
<simpara>Business Central is the graphical user interface where you create and manage business rules that KIE Server executes. It enables you to perform the following tasks:</simpara>
<itemizedlist>
<listitem>
<simpara>Create, manage, and edit your rules, processes, and related assets.</simpara>
</listitem>
<listitem>
<simpara>Manage connected KIE Server instances and their KIE containers (deployment units).</simpara>
</listitem>
<listitem>
<simpara>Execute runtime operations against processes and tasks in KIE Server instances connected to Business Central.</simpara>
<simpara>Business Central is also available as a standalone JAR file. You can use the Business Central standalone JAR file to run Business Central without needing to deploy it to an application server.</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<simpara>Red Hat JBoss Web Server is an enterprise ready web server designed for medium and large applications, based on Tomcat. Red Hat JBoss Web Server provides organizations with a single deployment platform for Java Server Pages (JSP) and Java Servlet technologies, PHP, and CGI.</simpara>
<simpara>On a Red Hat JBoss Web Server installation, you can install KIE Server and the headless Process Automation Manager controller. Alternatively, you can run the standalone Business Central JAR file.</simpara>
<simpara>The instructions in this document explain how to install Red Hat Process Automation Manager in
a Red Hat JBoss Web Server instance.</simpara>
<simpara>For instructions on how to install Red Hat Process Automation Manager in other environments, see the following documents:</simpara>
<itemizedlist>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/installing_and_configuring_red_hat_process_automation_manager#assembly-install-on-eap"><emphasis>Installing and configuring Red Hat Process Automation Manager on Red Hat JBoss EAP 7.3</emphasis></link></simpara>
</listitem>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/installing_and_configuring_red_hat_process_automation_manager#assembly-installing-kie-server-on-was"><emphasis>Installing and configuring KIE Server on IBM WebSphere Application Server</emphasis></link></simpara>
</listitem>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/installing_and_configuring_red_hat_process_automation_manager#assembly-installing-kie-server-on-wls"><emphasis>Installing and configuring KIE Server on Oracle WebLogic Server</emphasis></link></simpara>
</listitem>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/deploying_red_hat_process_automation_manager_on_red_hat_openshift_container_platform#assembly-openshift-operator"><emphasis>Deploying a Red Hat Process Automation Manager environment on Red Hat OpenShift Container Platform using Operators</emphasis></link></simpara>
</listitem>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/deploying_red_hat_process_automation_manager_on_red_hat_openshift_container_platform#assembly-openshift-templates"><emphasis>Deploying a Red Hat Process Automation Manager environment on Red Hat OpenShift Container Platform using templates</emphasis></link></simpara>
</listitem>
</itemizedlist>
<simpara>For information about supported components, see the following documents:</simpara>
<itemizedlist>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/solutions/3405361">What is the mapping between Red Hat Process Automation Manager and the Maven library version?</link></simpara>
</listitem>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/articles/3405381">Red Hat Process Automation Manager 7 Supported Configurations</link></simpara>
</listitem>
</itemizedlist>
<section xml:id="components-con_install-on-jws">
<title>Red Hat Process Automation Manager components</title>
<simpara>Red Hat Process Automation Manager is made up of Business Central and KIE Server.</simpara>
<itemizedlist>
<listitem>
<simpara>Business Central is the graphical user interface where you create and manage business rules. You can install Business Central in a Red Hat JBoss EAP instance or on the Red Hat OpenShift Container Platform (OpenShift).</simpara>
<simpara>Business Central is also available as a standalone JAR file. You can use the Business Central standalone JAR file to run Business Central without deploying it to an application server.</simpara>
</listitem>
<listitem>
<simpara>KIE Server is the server where rules and other artifacts are executed. It is used to instantiate and execute rules and solve planning problems. You can install KIE Server in a Red Hat JBoss EAP instance, in a Red Hat JBoss EAP cluster, on OpenShift, in an Oracle WebLogic server instance, in an IBM WebSphere Application Server instance, or as a part of Spring Boot application.</simpara>
<simpara>You can configure KIE Server to run in managed or unmanaged mode. If KIE Server is unmanaged, you must manually create and maintain KIE containers (deployment units). A KIE container is a specific version of a project. If KIE Server is managed, the Process Automation Manager controller manages the KIE Server configuration and you interact with the Process Automation Manager controller to create and maintain KIE containers.</simpara>
<simpara>On a Red Hat JBoss Web Server installation, you can install KIE Server and the headless Process Automation Manager controller. Alternatively, you can run the standalone Business Central JAR file.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="roles-users-con_install-on-jws">
<title>Red Hat Process Automation Manager roles and users</title>
<simpara>To access Business Central or KIE Server, you must create users and assign them appropriate roles before the servers are started. You can create users and roles when you install Business Central or KIE Server.</simpara>
<simpara>Business Central and KIE Server use the Java Authentication and Authorization Service (JAAS) login module to authenticate users. If both Business Central and KIE Server are running on a single instance, then they share the same JAAS subject and security domain. Therefore, a user who is authenticated for Business Central can also access KIE Server.</simpara>
<simpara>However, if Business Central and KIE Server are running on different instances, then the JAAS login module is triggered for both individually. Therefore, a user who is authenticated for Business Central must be authenticated separately to access KIE Server.  For example, if a user who is authenticated on Business Central but not authenticated on KIE Server tries to view or manage process definitions in Business Central, a 401 error is logged in the log file and the <literal>Invalid credentials to load data from remote server. Contact your system administrator.</literal> message appears in Business Central.</simpara>
<simpara>This section describes Red Hat Process Automation Manager user roles.</simpara>
<note>
<simpara>The <literal>admin</literal>,  <literal>analyst</literal>,
<literal>developer</literal>, <literal>manager</literal>, <literal>process-admin</literal>, <literal>user</literal>,
 and <literal>rest-all</literal> roles are reserved for Business Central. The <literal>kie-server</literal> role is reserved for KIE Server. For this reason, the available roles can differ depending on whether Business Central, KIE Server, or both are installed.</simpara>
</note>
<itemizedlist>
<listitem>
<simpara><literal>admin</literal>: Users with the <literal>admin</literal> role are the Business Central administrators. They can manage users and create, clone, and manage repositories. They have full access to make required changes in the application. Users with the <literal>admin</literal> role have access to all areas within Red Hat Process Automation Manager.</simpara>
</listitem>
<listitem>
<simpara><literal>analyst</literal>: Users with the <literal>analyst</literal> role have access to all high-level features. They can model
and execute their
projects. However, these users cannot add contributors to spaces or delete spaces in the <emphasis role="strong">Design â†’ Projects</emphasis> view. Access to the <emphasis role="strong">Deploy â†’ Execution Servers</emphasis> view, which is intended for administrators, is not available to users with the <literal>analyst</literal> role. However, the <emphasis role="strong">Deploy</emphasis> button is available to these users when they access the Library perspective.</simpara>
</listitem>
<listitem>
<simpara><literal>developer</literal>: Users with the <literal>developer</literal> role have access to almost all features and can manage rules, models, process flows, forms, and dashboards. They can manage the asset repository, they can create, build, and deploy projects, and they can use Red Hat CodeReady Studio to view processes. Only certain administrative functions such as creating and cloning a new repository are hidden from users with the <literal>developer</literal> role.</simpara>
</listitem>
<listitem>
<simpara><literal>manager</literal>: Users with the <literal>manager</literal> role can view reports. These users are usually interested in statistics about the business processes and their performance, business indicators, and other business-related reporting. A user with this role has access only to process and task reports.</simpara>
</listitem>
<listitem>
<simpara><literal>process-admin</literal>: Users with the <literal>process-admin</literal> role are business process administrators. They have full access to business processes, business tasks, and execution errors. These users can also view business reports and have access to the Task Inbox list.</simpara>
</listitem>
<listitem>
<simpara><literal>user</literal>: Users with the <literal>user</literal> role can work on the Task Inbox list, which contains business tasks that are part of currently running processes. Users with this role can view process and task reports and manage processes.</simpara>
</listitem>
<listitem>
<simpara><literal>rest-all</literal>: Users with the <literal>rest-all</literal> role can access Business Central REST capabilities.</simpara>
</listitem>
<listitem>
<simpara><literal>kie-server</literal>: Users with the <literal>kie-server</literal> role can access KIE Server REST capabilities.
This role is mandatory for users to have access to <emphasis role="strong">Manage</emphasis> and <emphasis role="strong">Track</emphasis> views in Business Central.</simpara>
</listitem>
</itemizedlist>
</section>
</chapter>
<chapter xml:id="install-download-proc_install-on-jws">
<title>Downloading the Red Hat Process Automation Manager installation files</title>
<simpara>You can use the installer JAR file or deployable ZIP files to install Red Hat Process Automation Manager. You can run the installer in interactive or command line interface (CLI) mode. Alternatively, you can extract and configure the Business Central and KIE Server deployable ZIP files. If you want to run Business Central without deploying it to an application server, download the Business Central Standalone JAR file.</simpara>
<simpara>Download a Red Hat Process Automation Manager distribution that meets your environment and installation requirements.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Navigate to the <link xlink:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html">Software Downloads</link> page in the Red Hat Customer Portal (login required), and select the product and version from the drop-down options:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Product:</emphasis> Process Automation Manager</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Version:</emphasis> 7.10</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Download one of the following product distributions, depending on your preferred installation method:</simpara>
<note>
<simpara>You only need to download one of these distributions.</simpara>
</note>
<itemizedlist>
<listitem>
<simpara>If you want to use the installer to install Red Hat Process Automation Manager on
Red Hat JBoss Web Server,
 download <emphasis role="strong">Red Hat Process Automation Manager 7.10.0 Installer</emphasis>
(<literal>rhpam-installer-7.10.0.jar</literal>).
The installer graphical user interface guides you through the installation process.</simpara>
</listitem>
<listitem>
<simpara>To install KIE Server on Red Hat JBoss Web Server using the deployable ZIP files, download the following files:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Red Hat Process Automation Manager 7.10.0 Add Ons</emphasis> (<literal>rhpam-7.10.0-add-ons.zip</literal>)</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Red Hat Process Automation Manager 7.10.0 Maven Repository</emphasis> (<literal>rhpam-7.10.0-maven-repository.zip</literal>)</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>To run Business Central without needing to deploy it to an application server, download <emphasis role="strong">Red Hat Process Automation Manager 7.10.0 Business Central Standalone</emphasis> (<literal>rhpam-7.10.0-business-central-standalone.jar</literal>).</simpara>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
</chapter>
<chapter xml:id="assembly_installing-using-installer_install-on-jws">
<title>Using the Red Hat Process Automation Manager installer</title>
<simpara>This section describes how to install Business Central and the KIE Server using the installer JAR file. The JAR file is an executable file that installs Red Hat Process Automation Manager in an existing
Red Hat JBoss Web Server 5.3.0
 server installation. You can run the installer in interactive or command line interface (CLI) mode.</simpara>
<formalpara>
<title>Next steps:</title>
<para>Follow the instructions in one of the following sections:</para>
</formalpara>
<itemizedlist>
<listitem>
<simpara><xref linkend="installer-run-proc_install-on-jws"/></simpara>
</listitem>
<listitem>
<simpara><xref linkend="installer-run-cli-proc_install-on-jws"/></simpara>
</listitem>
</itemizedlist>
<section xml:id="installer-run-proc_install-on-jws">
<title>Using the installer in interactive mode</title>
<simpara>The installer for Red Hat Process Automation Manager is an executable JAR file. You can use it to install Red Hat Process Automation Manager in an existing
Red Hat JBoss Web Server 5.3.0
 server installation.</simpara>
<note>
<simpara>For security reasons, you should run the installer as a non-root user.</simpara>
</note>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>The <emphasis role="strong">Red Hat Process Automation Manager 7.10.0 Installer</emphasis> has been downloaded. For instructions, see <xref linkend="install-download-proc_install-on-jws"/>.</simpara>
</listitem>
<listitem>
<simpara>A supported JDK is installed. For a list of supported JDKs, see <link xlink:href="https://access.redhat.com/articles/3405381">Red Hat Process Automation Manager 7 Supported Configurations</link>.</simpara>
</listitem>
<listitem>
<simpara>A backed-up
Red Hat JBoss Web Server 5.3.0
 server installation is available.</simpara>
</listitem>
<listitem>
<simpara>Sufficient user permissions to complete the installation are granted.</simpara>
<note>
<simpara>Ensure that you are logged in with a user that has write permission for Tomcat.</simpara>
</note>
</listitem>
<listitem>
<simpara>The JAR binary is included in <literal>$PATH</literal> environment variable. On Red Hat Enterprise Linux, it is included in the <literal>java-$<emphasis>JAVA_VERSION</emphasis>-openjdk-devel</literal> package.</simpara>
<note>
<simpara>Red Hat Process Automation Manager is designed to work with UTF-8 encoding. If a different encoding system is used by the underlying JVM, unexpected errors might occur. To ensure UTF-8 is used by the JVM, use the <literal>"-Dfile.encoding=UTF-8"</literal> system property. For a list of system properties, see <xref linkend="business-central-system-properties-ref_install-on-jws"/>.</simpara>
</note>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>In a terminal window, navigate to the directory where you downloaded the installer JAR file and enter the following command:</simpara>
<screen>java -jar rhpam-installer-7.10.0.jar</screen>
<note>
<simpara>When running the installer on Windows, you may be prompted to provide administrator credentials during the installation. To prevent this requirement, add the <literal>izpack.mode=privileged</literal> option to the installation command:</simpara>
<screen>java -Dizpack.mode=privileged -jar
rhpam-installer-7.10.0.jar</screen>
<simpara>Furthermore, when running the installer on a 32-bit Java virtual machine, you might encounter memory limitations. To prevent this issue, run this command:</simpara>
<screen>java -XX:MaxHeapSize=4g -jar
rhpam-installer-7.10.0.jar</screen>
</note>
<simpara>The graphical installer displays a splash screen and a license agreement page.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">I accept the terms of this license agreement</emphasis> and click <emphasis role="strong">Next</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Specify the
Red Hat JBoss Web Server 5.3.0
server home where you want to install Red Hat Process Automation Manager and click <emphasis role="strong">Next</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Select the components that you want to install and click <emphasis role="strong">Next</emphasis>.</simpara>
<simpara>You cannot install Business Central on Red Hat JBoss Web Server. You can only install it on Red Hat JBoss EAP. However, you can install KIE Server and the headless Process Automation Manager controller on Red Hat JBoss Web Server. The headless Process Automation Manager controller is used to manage KIE Server. Install the headless Process Automation Manager controller if you plan to manage multiple KIE Server instances.</simpara>
</listitem>
<listitem>
<simpara>Create a user and click <emphasis role="strong">Next</emphasis>.  By default, if you install both Business Central and KIE Server in the same container the new user is given the <literal>admin</literal>, <literal>kie-server</literal>, and <literal>rest-all</literal> roles. If you install only KIE Server, the user is given the <literal>kie-server</literal> role.
The <literal>kie-server</literal> role is required to access KIE Server REST capabilities.</simpara>
<note>
<simpara>Make sure that the specified user name is not the same as an existing user, role, or group. For example, do not create a user with the user name <literal>admin</literal>.</simpara>
<simpara>The password must have at least eight characters and must contain at least one number and one non-alphanumeric character, but not &amp; (ampersand).</simpara>
</note>
<simpara>Make a note of the user name and password. You will need them to access Business Central and KIE Server.</simpara>
</listitem>
<listitem>
<simpara>On the <emphasis role="strong">Installation Overview</emphasis> page, review the components that you will install and click <emphasis role="strong">Next</emphasis> to start the installation.</simpara>
</listitem>
<listitem>
<simpara>When the installation has completed, click <emphasis role="strong">Next</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>If KIE Server is installed, the <emphasis role="strong">Configure Runtime</emphasis> step appears under <emphasis role="strong">Component Installation</emphasis>. On the <emphasis role="strong">Configure Runtime Environment</emphasis> page, choose to perform the default installation or perform an advanced configuration.</simpara>
<simpara>If you choose <emphasis role="strong">Perform advanced configuration</emphasis>, you can
choose to configure database settings or customize certain KIE Server options.</simpara>
</listitem>
<listitem>
<simpara>If you selected <emphasis role="strong">Customize database settings</emphasis>, on the <emphasis role="strong">JDBC Drive Configuration</emphasis> page specify a data source JDBC driver vendor, select one or more driver JAR files, and click <emphasis role="strong">Next</emphasis>.</simpara>
<simpara>A data source is an object that enables a Java Database Connectivity (JDBC) client, such as an application server, to establish a connection with a database. Applications look up the data source on the Java Naming and Directory Interface (JNDI) tree or in the local application context and request a database connection to retrieve data. You must configure data sources for KIE Server to ensure correct data exchange between the servers and the designated database.</simpara>
</listitem>
<listitem>
<simpara>If you selected <emphasis role="strong">Customize KIE Server properties</emphasis>, on the <emphasis role="strong">KIE Server Properties Configuration</emphasis> page change any of the following properties:</simpara>
<itemizedlist>
<listitem>
<simpara>Change the value of <emphasis role="strong">KIE Server ID</emphasis> to change the name of the KIE Server property.</simpara>
</listitem>
<listitem>
<simpara>Deselect any KIE Server functions that you want to disable.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Next</emphasis> to configure the runtime environment.</simpara>
</listitem>
<listitem>
<simpara>When <emphasis role="strong">Processing finished</emphasis> appears at the top of the screen, click <emphasis role="strong">Next</emphasis> to complete the installation.</simpara>
</listitem>
<listitem>
<simpara>Optional: Click <emphasis role="strong">Generate Installation Script and Properties File</emphasis> to save the installation data in XML files, and then click <emphasis role="strong">Done</emphasis>.</simpara>
<simpara>The installer generates two files. The <literal>auto.xml</literal> file automates future installations and the <literal>auto.xml.variables</literal> file stores user passwords and other sensitive variables.
Use the <literal>auto.xml</literal> file to repeat the Red Hat Process Automation Manager installation on multiple systems with the same type of server and the same configuration as the original installation. If necessary, update the <literal>installpath</literal> parameter in the <literal>auto.xml</literal> file. To perform an installation using the XML file, enter the following command:</simpara>
<screen>java -jar rhpam-installer-7.10.0.jar &lt;path-to-auto.xml-file&gt;</screen>
</listitem>
</orderedlist>
<simpara>You have successfully installed Red Hat Process Automation Manager using the installer.
If you installed only Business Central, repeat these steps to install KIE Server on a separate server.</simpara>
<note>
<simpara>If you use Microsoft SQL Server, make sure you have configured applicable transaction isolation for your database. If you do not, you may experience deadlocks. The recommended configuration is to turn on <literal>ALLOW_SNAPSHOT_ISOLATION</literal> and <literal>READ_COMMITTED_SNAPSHOT</literal> by entering the following statements:</simpara>
<screen>ALTER DATABASE &lt;DBNAME&gt; SET ALLOW_SNAPSHOT_ISOLATION ON
ALTER DATABASE &lt;DBNAME&gt; SET READ_COMMITTED_SNAPSHOT ON</screen>
</note>
</section>
<section xml:id="installer-run-cli-proc_install-on-jws">
<title>Using the installer in CLI mode</title>
<simpara>You can use the command-line interface (CLI) to run the Red Hat Process Automation Manager installer.</simpara>
<note>
<simpara>For security reasons, you should run the installer as a non-root user.</simpara>
</note>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>The <emphasis role="strong">Red Hat Process Automation Manager 7.10.0 Installer</emphasis> has been downloaded. For instructions, see <xref linkend="install-download-proc_install-on-jws"/>.</simpara>
</listitem>
<listitem>
<simpara>A supported JDK is installed. For a list of supported JDKs, see <link xlink:href="https://access.redhat.com/articles/3405381">Red Hat Process Automation Manager 7 Supported Configurations</link>.</simpara>
</listitem>
<listitem>
<simpara>A backed-up
Red Hat JBoss Web Server 5.3.0
 server installation is available.</simpara>
</listitem>
<listitem>
<simpara>Sufficient user permissions to complete the installation are granted.</simpara>
<note>
<simpara>Ensure that you are logged in with a user that has write permission for Tomcat.</simpara>
</note>
</listitem>
<listitem>
<simpara>The JAR binary is included in the <literal>$PATH</literal> environment variable. On Red Hat Enterprise Linux, it is included in the <literal>java-$<emphasis>JAVA_VERSION</emphasis>-openjdk-devel</literal> package.</simpara>
<note>
<simpara>Red Hat Process Automation Manager is designed to work with UTF-8 encoding. If a different encoding system is used by the underlying JVM, unexpected errors might occur. To ensure UTF-8 is used by the JVM, use the <literal>"-Dfile.encoding=UTF-8"</literal> system property. For a list of system properties, see <xref linkend="business-central-system-properties-ref_install-on-jws"/>.</simpara>
</note>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>In a terminal window, navigate to the directory where you downloaded the installer file and enter the following command:</simpara>
<screen>java -jar rhpam-installer-7.10.0.jar -console</screen>
<simpara>The command-line interactive process will start and display the End-User License Agreement.</simpara>
<screen>press 1 to continue, 2 to quit, 3 to redisplay.</screen>
</listitem>
<listitem>
<simpara>Read the license agreement, enter <literal>1</literal>, and press <literal>Enter</literal> to continue:</simpara>
<screen>Specify the home directory of one of the following servers:  Red Hat JBoss EAP 7 or Red Hat JBoss Web Server 5. For more information, see https://access.redhat.com/articles/3405381[Red Hat Process Automation Manager 7 Supported Configurations].</screen>
</listitem>
<listitem>
<simpara>Enter the parent directory of an existing
Red Hat JBoss Web Server 5.3.0
 installation.</simpara>
<simpara>The installer will verify the location of the installation at the location provided. Enter <literal>1</literal> to confirm and continue.</simpara>
</listitem>
<listitem>
<simpara>Follow the instructions in the installer to complete the installation.</simpara>
<note>
<simpara>When you create the user name and password, make sure that the specified user name does not conflict with any known title of a role or a group. For example, if there is a role called <literal>admin</literal>, you should not create a user with the user name <literal>admin</literal>.</simpara>
<simpara>The password must have at least eight characters and must contain at least one number and one non-alphanumeric character (<emphasis>not</emphasis> including the character <literal>&amp;</literal>).</simpara>
<simpara>Make a note of the user name and password. You will need them to access Business Central and KIE Server.</simpara>
</note>
</listitem>
<listitem>
<simpara>When the installation has completed, you will see this message:</simpara>
<screen>Would you like to generate an automatic installation script and properties file?</screen>
</listitem>
<listitem>
<simpara>Enter <literal>y</literal> to create XML files that contain the installation data, or <literal>n</literal> to complete the installation. If you enter <literal>y</literal>, you are prompted to specify a path for the XML files.</simpara>
</listitem>
<listitem>
<simpara>Enter a path or press the Enter key to accept the suggested path.</simpara>
<simpara>The installer generates two files. The <literal>auto.xml</literal> file automates future installations and the <literal>auto.xml.variables</literal> file stores user passwords and other sensitive variables.
Use the <literal>auto.xml</literal> file on multiple systems to easily repeat a Red Hat Process Automation Manager installation on the same type of server with the same configuration as the original installation. If necessary, update the <literal>installpath</literal> parameter in the <literal>auto.xml</literal> file. To perform an installation using the XML file, enter the following command:</simpara>
<screen>java -jar rhpam-installer-7.10.0.jar &lt;path-to-auto.xml-file&gt;</screen>
</listitem>
<listitem>
<simpara>If you installed only KIE Server, repeat these steps to install the headless Process Automation Manager controller on a separate server.</simpara>
</listitem>
</orderedlist>
<note>
<simpara>If you use Microsoft SQL Server, make sure you have configured applicable transaction isolation for your database. If you do not, you may experience deadlocks. The recommended configuration is to turn on ALLOW_SNAPSHOT_ISOLATION and READ_COMMITTED_SNAPSHOT by entering the following statements:</simpara>
<screen>ALTER DATABASE &lt;DBNAME&gt; SET ALLOW_SNAPSHOT_ISOLATION ON
ALTER DATABASE &lt;DBNAME&gt; SET READ_COMMITTED_SNAPSHOT ON</screen>
</note>
</section>
</chapter>
<chapter xml:id="kie_server_zip_file_installation_and_configuration" remap="_kie_server_zip_file_installation_and_configuration">
<title>KIE Server ZIP file installation and configuration</title>
<simpara>You can install KIE Server using the <literal>rhpam-7.10.0-kie-server-jws.zip</literal> file available from the <emphasis role="strong">Red Hat Process Automation Manager 7.10.0 Add Ons</emphasis> (<literal>rhpam-7.10.0-add-ons.zip</literal>) file on the Customer Portal
 and then configure the Java Database Connectivity (JDBC) web server data sources on Red Hat JBoss Web Server
 .</simpara>
<section xml:id="jws-zip-install-proc_install-on-jws">
<title>Installing KIE Server from ZIP files</title>
<simpara>KIE Server provides the runtime environment for business assets and accesses the data stored in the assets repository (knowledge store). You can use  ZIP files to install KIE Server on an existing
Red Hat JBoss Web Server 5.3.0 server instance.</simpara>
<note>
<simpara>To use the installer JAR file to install KIE Server, see <xref linkend="assembly_installing-using-installer_install-on-jws"/>.</simpara>
</note>
<itemizedlist>
<listitem>
<simpara>The following files have been downloaded, as described in  <xref linkend="install-download-proc_install-on-jws"/>:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Red Hat Process Automation Manager 7.10.0 Add Ons</emphasis> (<literal>rhpam-7.10.0-add-ons.zip</literal>)</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Red Hat Process Automation Manager 7.10.0 Maven Repository</emphasis> (<literal>rhpam-7.10.0-maven-repository.zip</literal>)</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>A backed-up Red Hat JBoss Web Server 5.3.0 server installation is available. The base directory of the Red Hat JBoss Web Server installation is referred to as <literal><emphasis>JWS_HOME</emphasis></literal>.</simpara>
</listitem>
<listitem>
<simpara>Sufficient user permissions to complete the installation are granted.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Extract the <literal>rhpam-7.10.0-add-ons.zip</literal> file.</simpara>
</listitem>
<listitem>
<simpara>From the extracted <literal>rhpam-7.10.0-add-ons.zip</literal> file, extract the following files:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>rhpam-7.10.0-kie-server-jws.zip</literal></simpara>
</listitem>
<listitem>
<simpara><literal>rhpam-7.10.0-process-engine.zip</literal></simpara>
</listitem>
</itemizedlist>
<simpara>In the following instructions, the directory that contains the extracted <literal>rhpam-7.10.0-kie-server-jws.zip</literal> file is called
<literal>JWS_TEMP_DIR</literal>
 and the directory that contains the extracted
<literal>rhpam-7.10.0-process-engine.zip</literal> file is called <literal>ENGINE_TEMP_DIR</literal>.</simpara>
</listitem>
<listitem>
<simpara>Copy the
<literal>JWS_TEMP_DIR/rhpam-7.10.0-kie-server-jws/kie-server.war</literal> directory to the <literal><emphasis>JWS_HOME</emphasis>/tomcat/webapps</literal> directory.</simpara>
<note>
<simpara>Ensure the names of the Red Hat Process Automation Manager deployments you copy do not conflict with your existing deployments in the Red Hat JBoss Web Server instance.</simpara>
</note>
</listitem>
<listitem>
<simpara>Remove the <literal>.war</literal> extensions from the <literal>kie-server.war</literal> folder.</simpara>
</listitem>
<listitem>
<simpara>Move the <literal>kie-tomcat-integration-7.48.0.Final-redhat-00002.jar</literal> file from the <literal>ENGINE_TEMP_DIR</literal> directory to the <literal><emphasis>JWS_HOME</emphasis>/tomcat/lib</literal> directory.</simpara>
</listitem>
<listitem>
<simpara>Move the <literal>jboss-jacc-api-&lt;VERSION&gt;.jar</literal>, <literal>slf4j-api-&lt;VERSION&gt;.jar</literal>, and <literal>slf4j-jdk14-&lt;VERSION&gt;.jar</literal> files from the <literal>ENGINE_TEMP_DIR/lib</literal> directory to the <literal><emphasis>JWS_HOME</emphasis>/tomcat/lib</literal> directory, where <literal>&lt;VERSION&gt;</literal> is the version artifact file name, in the <literal>lib</literal> directory.</simpara>
</listitem>
<listitem>
<simpara>Add the following line to the <literal>&lt;host&gt;</literal> element in the <literal><emphasis>JWS_HOME</emphasis>/tomcat/conf/server.xml</literal> file after the last Valve definition:</simpara>
<screen>&lt;Valve className="org.kie.integration.tomcat.JACCValve" /&gt;</screen>
</listitem>
<listitem>
<simpara>Open the <literal><emphasis>JWS_HOME</emphasis>/tomcat/conf/tomcat-users.xml</literal> file in a text editor.</simpara>
</listitem>
<listitem>
<simpara>Add users and roles to the <literal><emphasis>JWS_HOME</emphasis>/tomcat/conf/tomcat-users.xml</literal> file.
In the following example, <literal>&lt;ROLE_NAME&gt;</literal> is a role supported by Red Hat Process Automation Manager.
<literal>&lt;USER_NAME&gt;</literal> and <literal>&lt;USER_PWD&gt;</literal> are the user name and password of your choice:</simpara>
<screen>&lt;role rolename="&lt;ROLE_NAME&gt;"/&gt;
&lt;user username="&lt;USER_NAME&gt;" password="&lt;USER_PWD&gt;" roles="&lt;ROLE_NAME&gt;"/&gt;</screen>
<simpara>If a user has more than one role, as shown in the following example, separate the roles with a comma:</simpara>
<screen>&lt;role rolename="admin"/&gt;
&lt;role rolename="kie-server"/&gt;
&lt;user username="rhpamUser" password="user1234" roles="admin,kie-server"/&gt;</screen>
</listitem>
<listitem>
<simpara>Complete one of the following steps in the
<literal><emphasis>JWS_HOME</emphasis>/tomcat/bin</literal> directory:</simpara>
<itemizedlist>
<listitem>
<simpara>On Linux or UNIX, create the <literal>setenv.sh</literal> file with the following content:</simpara>
<screen>CATALINA_OPTS="-Xmx1024m -Dorg.jboss.logging.provider=jdk"</screen>
</listitem>
<listitem>
<simpara>On Windows, add the following content to the <literal>setenv.bat</literal> file:</simpara>
<screen>set CATALINA_OPTS=-Xmx1024m -Dorg.jboss.logging.provider=jdk</screen>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
<note>
<simpara>If you use Microsoft SQL Server, make sure you have configured proper transaction isolation for your database. If you do not, you may experience deadlocks. The recommended configuration is to turn on ALLOW_SNAPSHOT_ISOLATION and READ_COMMITTED_SNAPSHOT by entering the following statements:</simpara>
<screen>ALTER DATABASE &lt;DBNAME&gt; SET ALLOW_SNAPSHOT_ISOLATION ON
ALTER DATABASE &lt;DBNAME&gt; SET READ_COMMITTED_SNAPSHOT ON</screen>
</note>
</section>
<section xml:id="jws-jdbc-config_install-on-jws">
<title>Configuring JDBC Web Server data sources</title>
<simpara>Java Database Connectivity (JDBC) is an API specification that is used to connect programs written in Java to the data in popular databases. A data source is an object that enables a JDBC client, such as an application server, to establish a connection with a database. Applications look up the data source on the Java Naming and Directory Interface (JNDI) tree or in the local application context and request a database connection to retrieve data. You must configure data sources for KIE Server to ensure proper data exchange between the servers and the designated database.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>Red Hat Process Automation Manager is installed on Red Hat JBoss Web Server.</simpara>
</listitem>
<listitem>
<simpara>The Red Hat Process Automation Manager 7.10.x Maven Repository (<literal>rhpam-7.10.0-maven-repository.zip</literal>) and the Red Hat Process Automation Manager 7.10.x Add-Ons (<literal>rhpam-7.10.0-add-ons.zip</literal>) files have been downloaded, as described in  <xref linkend="install-download-proc_install-on-jws"/>.</simpara>
</listitem>
<listitem>
<simpara>You want to configure one of the following supported databases and Hibernate dialects:</simpara>
<itemizedlist>
<listitem>
<simpara>DB2: <literal>org.hibernate.dialect.DB2Dialect</literal></simpara>
</listitem>
<listitem>
<simpara>MSSQL: <literal>org.hibernate.dialect.SQLServer2012Dialect</literal></simpara>
</listitem>
<listitem>
<simpara>MySQL: <literal>org.hibernate.dialect.MySQL5InnoDBDialect</literal></simpara>
</listitem>
<listitem>
<simpara>MariaDB: <literal>org.hibernate.dialect.MySQL5InnoDBDialect</literal></simpara>
</listitem>
<listitem>
<simpara>Oracle: <literal>org.hibernate.dialect.Oracle10gDialect</literal></simpara>
</listitem>
<listitem>
<simpara>PostgreSQL: <literal>org.hibernate.dialect.PostgreSQL82Dialect</literal></simpara>
</listitem>
<listitem>
<simpara>PostgreSQL plus: <literal>org.hibernate.dialect.PostgresPlusDialect</literal></simpara>
</listitem>
<listitem>
<simpara>Sybase: <literal>org.hibernate.dialect.SybaseASE157Dialect</literal></simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Complete the following steps to prepare your database:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Extract <literal>rhpam-7.10.0-add-ons.zip</literal> in a temporary directory, for example <literal>TEMP_DIR</literal>.</simpara>
</listitem>
<listitem>
<simpara>Extract <literal>TEMP_DIR/rhpam-7.10.0-migration-tool.zip</literal>.</simpara>
</listitem>
<listitem>
<simpara>Change your current directory to the <literal>TEMP_DIR/rhpam-7.10.0-migration-tool/ddl-scripts</literal> directory. This directory contains DDL scripts for several database types.</simpara>
</listitem>
<listitem>
<simpara>Import the DDL script for your database type into the database that you want to use, for example:</simpara>
<programlisting language="shell" linenumbering="unnumbered">psql jbpm &lt; /ddl-scripts/postgresql/postgresql-jbpm-schema.sql</programlisting>
<note>
<simpara>If you are using PostgreSQL or Oracle in conjunction with Spring Boot, you must import the respective Spring Boot DDL script, for example <literal>/ddl-scripts/oracle/oracle-springboot-jbpm-schema.sql</literal> or <literal>/ddl-scripts/postgresql/postgresql-springboot-jbpm-schema.sql</literal>.</simpara>
</note>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>Extract the <literal>rhpam-7.10.0-maven-repository.zip</literal> offline Maven repository file.</simpara>
</listitem>
<listitem>
<simpara>Copy the following libraries from the extracted offline Maven repository to the
<literal>JWS_HOME/tomcat/lib</literal>
 folder where <literal>VERSION</literal> is the version of that library:</simpara>
<screen>org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/{VERSION}/jboss-transaction-api_1.2_spec-{VERSION}.jar
org/jboss/integration/narayana-tomcat/{VERSION}/narayana-tomcat-{VERSION}.jar
org/jboss/narayana/jta/narayana-jta/{VERSION}/narayana-jta-{VERSION}.jar
org/jboss/jboss-transaction-spi/{VERSION}/jboss-transaction-spi-{VERSION}.jar</screen>
</listitem>
<listitem>
<simpara>Copy your database JDBC driver to the
<literal>JWS_HOME/tomcat/lib</literal> folder.</simpara>
</listitem>
<listitem>
<simpara>Configure the pooling XA data source in the
<literal>JWS_HOME/tomcat/conf/context.xml</literal> file:</simpara>
<note>
<simpara>Some of the properties in the following examples might not apply to your database server. Check the documentation for your JDBC driver to determine which properties to set.</simpara>
</note>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Configure an XA data source without pooling capabilities. This XA data source is used to create new connections to the target database. In the following example, the XA datasource is <literal>xads</literal> and the variables are defined in <xref linkend="xa_data_source_install-on-jws"/>:</simpara>
<screen>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Context&gt;
&lt;Resource
auth="Container"
databaseName="${datasource.dbName}"
description="XA Data Source"
factory="org.apache.tomcat.jdbc.naming.GenericNamingResourcesFactory" loginTimeout="0"
name="xads"
uniqueName="xads"
portNumber="${datasource.port}"
serverName="${datasource.hostname}"
testOnBorrow="false"
type="${datasource.class}"
url="${datasource.url}"
URL="${datasource.url}"
user="${datasource.username}"
password="${datasource.password}"
driverType="4"
schema="${datasource.schema}"
/&gt;
&lt;/Context&gt;</screen>
<table xml:id="xa_data_source_install-on-jws" frame="all" rowsep="1" colsep="1">
<title>XA data source variables</title>
<tgroup cols="2">
<colspec colname="col_1" colwidth="40*"/>
<colspec colname="col_2" colwidth="60*"/>
<thead>
<row>
<entry align="left" valign="top">Variable</entry>
<entry align="left" valign="top">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara><literal>&lt;datasource.dbName&gt;</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The name of the database.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>&lt;datasource.port&gt;</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The port number of the database.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>&lt;datasource.hostname&gt;</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The name of the database host.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>&lt;datasource.class&gt;</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>XADataSource</literal> class of JDBC driver.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>&lt;datasource.url&gt;</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The JDBC database connection URL. With some databases, the URL property is <literal>url</literal> and with other databases (for example H2 databases) this property is <literal>URL</literal>.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>&lt;datasource.username&gt;</literal></simpara></entry>
<entry align="left" valign="top"><simpara>User name for the database connection.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>&lt;datasource.password&gt;</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Password for the database connection.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>&lt;datasource.schema&gt;</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The database schema.</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
</listitem>
<listitem>
<simpara>Configure a pooling data source that relies on the XA data source for creating new connections. In this example, the data source is <literal>poolingXaDs</literal>, <literal>&lt;datasource.username&gt;</literal> is the user name for the database connection, and <literal>&lt;datasource.password&gt;</literal> is the password for the database connection:</simpara>
<screen>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Context&gt;
&lt;Resource
name="poolingXaDs"
uniqueName="poolingXaDs"
auth="Container"
description="Pooling XA Data Source" factory="org.jboss.narayana.tomcat.jta.TransactionalDataSourceFactory" testOnBorrow="true"
transactionManager="TransactionManager" transactionSynchronizationRegistry="TransactionSynchronizationRegistry" type="javax.sql.XADataSource"
username="${datasource.username}"
password="${datasource.password}"
xaDataSource="xads"
/&gt;
&lt;/Context&gt;</screen>
<simpara>The data source is now available under the <literal>java:comp/env/poolingXaDs</literal> JNDI name and  passes it to the KIE Server through the <literal>org.kie.server.persistence.ds</literal> system property as described in the next steps.</simpara>
<note>
<simpara>The pooling data source configuration relies on additional resources that have been previously configured in <literal>context.xml</literal> file in <literal>kie-server</literal> application, specifically <literal>TransactionManager</literal> and <literal>TransactionSynchronizationRegistry</literal>.</simpara>
</note>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>Configure KIE Server to use the data source:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Open one of the following scripts in a text editor:</simpara>
<note>
<simpara>The <literal>setenv.sh</literal> or <literal>setenv.bat</literal> script should already exist. However, if it does not, create it.</simpara>
</note>
<itemizedlist>
<listitem>
<simpara>For Linux or Unix:</simpara>
<screen>JWS_HOME/tomcat/bin/setenv.sh</screen>
</listitem>
<listitem>
<simpara>For Windows:</simpara>
<screen>JWS_HOME/tomcat/bin/setenv.bat</screen>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Add the following properties to <literal>CATALINA_OPS</literal> where <literal>&lt;hibernate.dialect&gt;</literal> is the Hibernate dialect for your database:</simpara>
<screen>CATALINA_OPTS="-Xmx1024m
-Dorg.jboss.logging.provider=jdk
-Dorg.kie.server.persistence.ds=java:comp/env/poolingXaDs
-Dorg.kie.server.persistence.tm=JBossTS
-Dorg.kie.server.persistence.dialect=${&lt;hibernate.dialect&gt;}"</screen>
</listitem>
</orderedlist>
</listitem>
</orderedlist>
</section>
</chapter>
<chapter xml:id="securing-passwords-jws-proc_install-on-jws">
<title>Securing passwords with a keystore</title>
<simpara>You can use a keystore to encrypt passwords that are used for communication between Business Central and KIE Server. You should encrypt both controller and KIE Server passwords. If Business Central and KIE Server are deployed to different application servers, then both application servers should use the keystore.</simpara>
<simpara>Use Java Cryptography Extension KeyStore (JCEKS) for your keystore because it supports symmetric keys. Use KeyTool, which is part of the JDK installation, to create a new JCEKS.</simpara>
<note>
<simpara>If KIE Server is not configured with JCEKS, KIE Server passwords are stored in system properties in plain text form.</simpara>
</note>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>KIE Server is installed in
Red Hat JBoss Web Server.</simpara>
</listitem>
<listitem>
<simpara>Java 8 or higher is installed.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Open the <literal><emphasis>JWS_HOME</emphasis>/tomcat/conf/tomcat-users.xml</literal> file in a text editor.</simpara>
</listitem>
<listitem>
<simpara>Add a KIE Server user with the <literal>kie-server</literal> role to the <literal><emphasis>JWS_HOME</emphasis>/tomcat/conf/tomcat-users.xml</literal> file. In the following example, replace <literal>&lt;USER_NAME&gt;</literal> and <literal>&lt;PASSWORD&gt;</literal> with the user name and password of your choice.</simpara>
<screen>&lt;role rolename="kie-server"/&gt;
&lt;user username="&lt;USER_NAME&gt;" password="&lt;PASSWORD&gt;" roles="kie-server"/&gt;</screen>
</listitem>
<listitem>
<simpara>To use KeyTool to create a JCEKS, enter the following command in the Java 8 home directory:</simpara>
<programlisting language="bash" linenumbering="unnumbered">$&lt;JAVA_HOME&gt;/bin/keytool -importpassword -keystore &lt;KEYSTORE_PATH&gt; -keypass &lt;ALIAS_KEY_PASSWORD&gt; -alias &lt;PASSWORD_ALIAS&gt; -storepass &lt;KEYSTORE_PASSWORD&gt; -storetype JCEKS</programlisting>
<simpara>In this example, replace the following variables:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>&lt;KEYSTORE_PATH&gt;</literal>: The path where the keystore will be stored</simpara>
</listitem>
<listitem>
<simpara><literal>&lt;KEYSTORE_PASSWORD&gt;</literal>: The keystore password</simpara>
</listitem>
<listitem>
<simpara><literal>&lt;ALIAS_KEY_PASSWORD&gt;</literal>: The password used to access values stored with the alias</simpara>
</listitem>
<listitem>
<simpara><literal>&lt;PASSWORD_ALIAS&gt;</literal>: The alias of the entry to the process</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>When prompted, enter the password for the KIE Server user that you created.</simpara>
</listitem>
<listitem>
<simpara>To set the system properties, complete one of these steps in the
<literal><emphasis>JWS_HOME</emphasis>/tomcat/bin</literal> directory
and replace the variables as described in the following table:</simpara>
<note>
<simpara>If Business Central or the standalone controller are installed in separate instances from Red Hat JBoss Web Server, do not add the <literal>kie.keystore.key.server.alias</literal> and <literal>kie.keystore.key.server.pwd</literal> properties to <literal>CATALINA_OPTS</literal>.</simpara>
</note>
<itemizedlist>
<listitem>
<simpara>On Linux or UNIX, create the <literal>setenv.sh</literal> file with the following content:</simpara>
<screen>set CATALINA_OPTS="
-Dkie.keystore.keyStoreURL=&lt;KEYSTORE_URL&gt;
-Dkie.keystore.keyStorePwd=&lt;KEYSTORE_PWD&gt;
-Dkie.keystore.key.server.alias=&lt;KEY_SERVER_ALIAS&gt;
-Dkie.keystore.key.server.pwd=&lt;KEY_SERVER_PWD&gt;
-Dkie.keystore.key.ctrl.alias=&lt;KEY_CONTROL_ALIAS&gt;
-Dkie.keystore.key.ctrl.key.ctrl.pwd=&lt;KEY_CONTROL_PWD&gt;</screen>
</listitem>
<listitem>
<simpara>On Windows, add the following content to the <literal>setenv.bat</literal> file:</simpara>
<screen>set CATALINA_OPTS="
-Dkie.keystore.keyStoreURL=&lt;KEYSTORE_URL&gt;
-Dkie.keystore.keyStorePwd=&lt;KEYSTORE_PWD&gt;
-Dkie.keystore.key.server.alias=&lt;KEY_SERVER_ALIAS&gt;
-Dkie.keystore.key.server.pwd=&lt;KEY_SERVER_PWD&gt;
-Dkie.keystore.key.ctrl.alias=&lt;KEY_CONTROL_ALIAS&gt;
-Dkie.keystore.key.ctrl.pwd=&lt;KEY_CONTROL_PWD&gt;</screen>
</listitem>
</itemizedlist>
<table frame="all" rowsep="1" colsep="1">
<title>System properties used to load a KIE Server JCEKS</title>
<tgroup cols="3">
<colspec colname="col_1" colwidth="36*"/>
<colspec colname="col_2" colwidth="27*"/>
<colspec colname="col_3" colwidth="36*"/>
<thead>
<row>
<entry align="left" valign="top">System property</entry>
<entry align="left" valign="top">Placeholder</entry>
<entry align="left" valign="top">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara><literal>kie.keystore.keyStoreURL</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>&lt;KEYSTORE_URL&gt;</literal></simpara></entry>
<entry align="left" valign="top"><simpara>URL for the JCEKS that you want to use, for example <literal>file:///home/kie/keystores/keystore.jceks</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>kie.keystore.keyStorePwd</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>&lt;KEYSTORE_PWD&gt;</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Password for the JCEKS</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>kie.keystore.key.server.alias</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>&lt;KEY_SERVER_ALIAS&gt;</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Alias of the key for REST services where the password is stored</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>kie.keystore.key.server.pwd</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>&lt;KEY_SERVER_PWD&gt;</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Password of the alias for REST services with the stored password</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>kie.keystore.key.ctrl.alias</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>&lt;KEY_CONTROL_ALIAS&gt;</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Alias of the key for default REST Process Automation Controller where the password is stored</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>kie.keystore.key.ctrl.pwd</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>&lt;KEY_CONTROL_PWD&gt;</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Password of the alias for default REST  Process Automation Controller with the stored password</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
</listitem>
<listitem>
<simpara>Start KIE Server to verify the configuration.</simpara>
</listitem>
</orderedlist>
</chapter>
<chapter xml:id="jws-kie-server-verify-proc_install-on-jws">
<title>Verifying the KIE Server installation</title>
<simpara>Verify that KIE Server is installed correctly.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>KIE Server is installed and configured.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>To start KIE Server, enter one of the following commands in the
<literal><emphasis>JWS_HOME</emphasis>/tomcat/bin</literal>
 directory:</simpara>
<itemizedlist>
<listitem>
<simpara>On Linux or UNIX-based systems:</simpara>
<programlisting language="bash" linenumbering="unnumbered">$ ./startup.sh</programlisting>
</listitem>
<listitem>
<simpara>On Windows:</simpara>
<programlisting language="bash" linenumbering="unnumbered">startup.bat</programlisting>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>After a few minutes, review the files in the
<literal><emphasis>JWS_HOME</emphasis>/tomcat/logs</literal>
 directory and correct any errors.</simpara>
</listitem>
<listitem>
<simpara>To verify that KIE Server is working correctly, enter <literal>http://localhost:8080/kie-server/services/rest/server</literal> in a web browser.</simpara>
</listitem>
<listitem>
<simpara>Enter the user name and password stored in the <literal>tomcat-users.xml</literal> file.</simpara>
</listitem>
</orderedlist>
</chapter>
<chapter xml:id="controller-jws-install-proc_install-on-jws">
<title>Downloading and installing the headless Process Automation Manager controller</title>
<simpara>You can configure KIE Server to run in managed or unmanaged mode. If KIE Server is unmanaged, you must manually create and maintain KIE containers (deployment units). If KIE Server is managed, the Process Automation Manager controller manages the KIE Server configuration and you interact with the Process Automation Manager controller to create and maintain KIE containers.</simpara>
<simpara>The Process Automation Manager controller is integrated with Business Central. If you install Business Central, use the <emphasis role="strong">Execution Server</emphasis> page to create and maintain KIE containers. However, if you do not install Business Central, you can install the headless Process Automation Manager controller and use the REST API or the KIE Server Java Client API to interact with it.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>The <emphasis role="strong">Red Hat Process Automation Manager 7.10.0 Add Ons</emphasis> (<literal>rhpam-7.10.0-add-ons.zip</literal>) file has been downloaded, as described in <xref linkend="install-download-proc_install-on-jws"/>.</simpara>
</listitem>
<listitem>
<simpara>A Red Hat JBoss Web Server 5.3.0 server installation is available. The base directory of the Red Hat JBoss Web Server installation is referred to as <literal><emphasis>JWS_HOME</emphasis></literal>.</simpara>
</listitem>
<listitem>
<simpara>Sufficient user permissions to complete the installation are granted.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Extract the <literal>rhpam-7.10.0-add-ons.zip</literal> file. The <literal>rhpam-7.10.0-controller-jws.zip</literal> file is in the extracted directory.</simpara>
</listitem>
<listitem>
<simpara>Extract the
<literal>rhpam-7.10.0-controller-jws.zip</literal>
 archive to a temporary directory. In the following examples this directory is called <literal><emphasis>TEMP_DIR</emphasis></literal>.</simpara>
</listitem>
<listitem>
<simpara>Copy the
<literal><emphasis>TEMP_DIR</emphasis>/rhpam-7.10.0-controller-jws.zip/controller.war</literal>
 directory to the
<literal><emphasis>JWS_HOME</emphasis>/tomcat/webapps</literal>
  directory.</simpara>
<note>
<simpara>Ensure the names of the Red Hat Process Automation Manager deployments you copy do not conflict with your existing deployments in the
Red Hat JBoss Web Server
 instance.</simpara>
</note>
</listitem>
<listitem>
<simpara>Remove the <literal>.war</literal> extensions from the <literal>controller.war</literal> folder.</simpara>
</listitem>
<listitem>
<simpara>Copy the contents of the
<literal><emphasis>TEMP_DIR</emphasis>/rhpam-7.10.0-controller-jws/SecurityPolicy/</literal>
 directory to
 <literal><emphasis>JWS_HOME</emphasis>/bin</literal></simpara>
</listitem>
<listitem>
<simpara>When prompted to overwrite files, select <emphasis role="strong">Yes</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Add the <literal>kie-server</literal> role and user to the
<literal><emphasis>JWS_HOME</emphasis>/tomcat/conf/tomcat-users.xml</literal>
 file. In the following example,  <literal>&lt;USER_NAME&gt;</literal> and <literal>&lt;PASSWORD&gt;</literal> are the user name and password of your choice:</simpara>
<screen>&lt;role rolename="kie-server"/&gt;
&lt;user username="&lt;USER_NAME&gt;" password="&lt;PASSWORD&gt;" roles="kie-server"/&gt;</screen>
</listitem>
<listitem>
<simpara>Complete one of the following tasks in the
<literal><emphasis>JWS_HOME</emphasis>/tomcat/bin</literal>
 directory of the instance running KIE Server:</simpara>
<itemizedlist>
<listitem>
<simpara>On Linux or UNIX, create the <literal>setenv.sh</literal> file with the following content:</simpara>
<screen>CATALINA_OPTS="-Xmx1024m
 -Dorg.jboss.logging.provider=jdk
 -Dorg.kie.server.controller.user=&lt;CONTROLLER_USER&gt;
 -Dorg.kie.server.controller.pwd=&lt;CONTROLLER_PWD&gt;
 -Dorg.kie.server.id=&lt;KIE_SERVER_ID&gt;
 -Dorg.kie.server.location=http://&lt;HOST&gt;:&lt;PORT&gt;/kie-server/services/rest/server
 -Dorg.kie.server.controller=http://&lt;HOST&gt;:&lt;PORT&gt;/controller/rest/controller"</screen>
</listitem>
<listitem>
<simpara>On Windows, add the following content to the <literal>setenv.bat</literal> file:</simpara>
<screen>set CATALINA_OPTS=-Xmx1024m -Dorg.jboss.logging.provider=jdk
 -Dorg.kie.server.controller.user=&lt;CONTROLLER_USER&gt;
 -Dorg.kie.server.controller.pwd=&lt;CONTROLLER_PWD&gt;
 -Dorg.kie.server.id=&lt;KIE_SERVER_ID&gt;
 -Dorg.kie.server.location=http://&lt;HOST&gt;:&lt;PORT&gt;/kie-server/services/rest/server
 -Dorg.kie.server.controller=http://&lt;HOST&gt;:&lt;PORT&gt;/controller/rest/controller</screen>
<simpara>In the preceding examples, replace the following variables:</simpara>
</listitem>
<listitem>
<simpara>Replace <literal>&lt;CONTROLLER_USER&gt;</literal> and <literal>&lt;CONTROLLER_PWD&gt;</literal> with the user name and password for the <literal>kie-server</literal> role that you defined earlier in this procedure.</simpara>
</listitem>
<listitem>
<simpara>Replace <literal>&lt;KIE_SERVER_ID&gt;</literal> with a unique identifier.</simpara>
</listitem>
<listitem>
<simpara>Replace <literal>&lt;CONTROLLER_HOST&gt;:&lt;CONTROLLER_PORT&gt;</literal> with the IP address (host and port) of the controller. If you use the same server for KIE Server and the controller, <literal>&lt;CONTROLLER_HOST&gt;:&lt;CONTROLLER_PORT&gt;</literal> is <literal>localhost:8080</literal>.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>In the
<literal><emphasis>JWS_HOME</emphasis>/tomcat/bin</literal>
 directory of the instance running the headless Process Automation Manager controller, create a readable <literal>setenv.sh</literal> file with the following content, where <literal>&lt;USERNAME&gt;</literal> is the KIE Server user and <literal>&lt;USER_PWD&gt;</literal> is the password for that user:</simpara>
<simpara><literal>CATALINA_OPTS="-Dorg.kie.server.user=&lt;USERNAME&gt; -Dorg.kie.server.pwd=&lt;USER_PWD&gt;"</literal></simpara>
</listitem>
<listitem>
<simpara>To start the headless Process Automation Manager controller, enter one of the following commands in the
<literal><emphasis>JWS_HOME</emphasis>/tomcat/bin</literal>
directory:</simpara>
<itemizedlist>
<listitem>
<simpara>On Linux or UNIX-based systems:</simpara>
<programlisting language="bash" linenumbering="unnumbered">$ ./startup.sh</programlisting>
</listitem>
<listitem>
<simpara>On Windows:</simpara>
<programlisting language="bash" linenumbering="unnumbered">startup.bat</programlisting>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>After a few minutes, review the
<literal><emphasis>JWS_HOME</emphasis>/tomcat/logs</literal>
 directory and correct any errors.</simpara>
</listitem>
<listitem>
<simpara>To verify that the headless Process Automation Manager controller is working correctly, enter <literal>http://&lt;CONTROLLER_HOST&gt;:&lt;CONTROLLER_PORT&gt;/controller/rest/controller/management/servers</literal> in a web browser. If you use the same server for KIE Server and the controller, <literal>&lt;CONTROLLER_HOST&gt;:&lt;CONTROLLER_PORT&gt;</literal> is <literal>localhost:8080</literal>.</simpara>
</listitem>
<listitem>
<simpara>Enter the user name and password stored in the <literal>tomcat-users.xml</literal> file.</simpara>
</listitem>
</orderedlist>
</chapter>
<chapter xml:id="run-dc-standalone-proc_install-on-jws">
<title>Configuring and running standalone Business Central</title>
<simpara>You can use the Business Central standalone JAR file to run Business Central without deploying it to an application server. You can use sample configuration files to run the Business Central standalone JAR file out of the box or you can customize the sampfiles for your requirements.</simpara>
<note>
<simpara>This JAR file is supported only when it is run on Red Hat Enterprise Linux.</simpara>
</note>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>The <emphasis role="strong">Red Hat Process Automation Manager 7.10.0 Business Central Standalone</emphasis> (<literal>rhpam-7.10.0-business-central-standalone.jar</literal>) and the <emphasis role="strong">Red Hat Process Automation Manager 7.10.0 Add Ons</emphasis> (<literal>rhpam-7.10.0-add-ons.zip</literal>) files have been downloaded from the <link xlink:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?downloadType=distributions&amp;product=rhpam&amp;productChanged=yes">Software Downloads</link> page for Red Hat Process Automation Manager 7.10, as described in <xref linkend="install-download-proc_install-on-jws"/>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Extract the downloaded <literal>rhpam-7.10.0-addons.zip</literal> to a temporary directory. This archive includes the <literal>rhpam-7.10.0-standalone-sample-configuration.zip</literal> file.</simpara>
</listitem>
<listitem>
<simpara>Extract the <literal>rhpam-7.10.0-standalone-sample-configuration.zip</literal> file to the directory that contains the <literal>rhpam-7.10.0-business-central-standalone.jar</literal> file. The <literal>rhpam-7.10.0-standalone-sample-configuration.zip</literal> file contains the following sample configuration files:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>application-roles.properties</literal></simpara>
</listitem>
<listitem>
<simpara><literal>application-users.properties</literal></simpara>
</listitem>
<listitem>
<simpara><literal>sample-standalone-config.yml</literal></simpara>
<simpara>You can run the <literal>rhpam-7.10.0-business-central-standalone.jar</literal> files with the sample data provided in the configuration files or you can customize the data for your requirements.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>To customize the configuration data, complete the following steps:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Edit the <literal>application-users.properties</literal> file. Include an administrative user and if this Business Central instance will be a Process Automation Manager controller for KIE Server, include a Process Automation Manager controller user, for example:</simpara>
<screen>rhpamAdmin=password1</screen>
</listitem>
<listitem>
<simpara>Edit the <literal>application-roles.properties</literal> file to assign roles to the users that you included in the <literal>application-users.properties</literal> file, for example:</simpara>
<screen>rhpamAdmin=admin
controllerUser=kie-server</screen>
<simpara>For more information, see <xref linkend="roles-users-con_install-on-jws"/>.</simpara>
</listitem>
<listitem>
<simpara>Review the contents of the the <literal>sample-standalone-config.yml</literal> configuration file and update as required.</simpara>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>To run the Business Central standalone JAR file, enter the following command:</simpara>
<screen>java -jar rhpam-7.10.0-business-central-standalone.jar -s sample-standalone-config.yml</screen>
</listitem>
<listitem>
<simpara>To set application properties when you run the JAR file, include the  <literal>-D&lt;PROPERTY&gt;=&lt;VALUE&gt;</literal> parameter in the command, where <literal>&lt;PROPERTY&gt;</literal> is the name of a supported application property and <literal>&lt;VALUE&gt;</literal> is the property value:</simpara>
<screen>java -jar rhpam-7.10.0-business-central-standalone.jar -s sample-standalone-config.yml -D&lt;PROPERTY&gt;=&lt;VALUE&gt; -D&lt;PROPERTY&gt;=&lt;VALUE&gt;</screen>
<simpara>For example, to run Business Central and connect to KIE Server as the user <literal>controllerUser</literal>, enter:</simpara>
<screen>java -jar {PRODUCT_FILE}-{URL_COMPONENT_CENTRAL}-standalone.jar \
-s sample-standalone-config.yml \
-Dorg.kie.server.user=controllerUser
-Dorg.kie.server.pwd=controllerUser1234</screen>
<simpara>Doing this enables you to deploy containers to KIE Server.
See <xref linkend="business-central-system-properties-ref_install-on-eap"/> for more information.</simpara>
</listitem>
</orderedlist>
</chapter>
<chapter xml:id="maven-repo-using-con_install-on-jws">
<title>Maven settings and repositories for Red Hat Process Automation Manager</title>
<simpara>When you create a Red Hat Process Automation Manager project, Business Central uses the Maven repositories that are configured for Business Central. You can use the Maven global or user settings to direct all Red Hat Process Automation Manager projects to retrieve dependencies from the public Red Hat Process Automation Manager repository by modifying the Maven project object model (POM) file (<literal>pom.xml</literal>). You can also configure Business Central and KIE Server to use an external Maven repository or prepare a Maven mirror for offline use.</simpara>
<simpara>For more information about Red Hat Process Automation Manager packaging and deployment options, see  <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/deploying_and_managing_red_hat_process_automation_manager_services#assembly-packaging-deploying"><emphasis>Packaging and deploying a Red Hat Process Automation Manager project</emphasis></link>.</simpara>
<section xml:id="maven-pom-configuration-proc_install-on-jws">
<title>Configuring Maven using the project configuration file (<literal>pom.xml</literal>)</title>
<simpara>To use Maven for building and managing your Red Hat Process Automation Manager projects, you must create and configure the POM file (<literal>pom.xml</literal>). This file holds configuration information for your project. For more information, see <link xlink:href="https://maven.apache.org/pom.html">Apache Maven Project</link>.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Generate a Maven project. A <literal>pom.xml</literal> file is automatically generated when you create a Maven project.</simpara>
</listitem>
<listitem>
<simpara>Edit the <literal>pom.xml</literal> file to add more dependencies and new repositories.</simpara>
<simpara>Maven downloads all of the JAR files and the dependent JAR files from the Maven repository when you compile and package your project.</simpara>
</listitem>
</orderedlist>
<simpara>Find the schema for the <literal>pom.xml</literal> file at <link xlink:href="http://maven.apache.org/maven-v4_0_0.xsd">http://maven.apache.org/maven-v4_0_0.xsd</link>.
For more information about POM files, see <link xlink:href="http://maven.apache.org/pom.html">Apache Maven Project POM</link>.</simpara>
</section>
<section xml:id="maven-settings-configuration-ref_install-on-jws">
<title>Modifying the Maven settings file</title>
<simpara>Red Hat Process Automation Manager uses Maven <literal>settings.xml</literal> file to configure itâ€™s Maven execution. You must create and activate a profile in the <literal>settings.xml</literal> file and declare the Maven repositories used by your Red Hat Process Automation Manager projects.</simpara>
<simpara>For information about the Maven <literal>settings.xml</literal> file, see the Apache Maven Project  <link xlink:href="https://maven.apache.org/settings.html">Setting Reference</link>.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>In the <literal>settings.xml</literal> file, declare the repositories that your Red Hat Process Automation Manager projects use. Usually, this is either the <link xlink:href="https://maven.repository.redhat.com/ga/">online Red Hat Process Automation Manager Maven repository</link> or the
Red Hat Process Automation Manager Maven repository that you download from the Red Hat Customer Portal and any repositories for custom artifacts that you want to use.</simpara>
</listitem>
<listitem>
<simpara>Ensure that Business Central or KIE Server is configured to use the <literal>settings.xml</literal> file. For example, specify the <literal>kie.maven.settings.custom=&lt;SETTINGS_FILE_PATH&gt;</literal> property where <literal>&lt;SETTINGS_FILE_PATH&gt;</literal> is the path to the <literal>settings.xml</literal> file.</simpara>
<simpara>On Red Hat JBoss Web Server, for KIE Server add <literal>-Dkie.maven.settings.custom=&lt;SETTINGS_FILE_PATH&gt;</literal> to the  <literal>CATALINA_OPTS</literal> section of the <literal>setenv.sh</literal> (Linux) or <literal>setenv.bat</literal> (Windows) file. For standalone Business Central, enter the following command:</simpara>
<screen>java -jar rhpam-7.10.0-business-central-standalone.jar -s application-config.yaml -Dkie.maven.settings.custom=&lt;SETTINGS_FILE_PATH&gt;</screen>
</listitem>
</orderedlist>
</section>
<section xml:id="maven-managing-dependencies-proc_install-on-jws">
<title>Adding Maven dependencies for Red Hat Process Automation Manager</title>
<simpara>To use the correct Maven dependencies in your Red Hat Process Automation Manager project, add the Red Hat Business Automation bill of materials (BOM) files to the projectâ€™s <literal>pom.xml</literal> file. The Red Hat Business Automation BOM applies to both Red Hat Decision Manager and Red Hat Process Automation Manager. When you add the BOM files, the correct versions of transitive dependencies from the provided Maven repositories are included in the project.</simpara>
<simpara>For more information about the Red Hat Business Automation BOM, see
<link xlink:href="https://access.redhat.com/solutions/3405361">What is the mapping between Red Hat Process Automation Manager and the Maven library version?</link>.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Declare the Red Hat Business Automation BOM in the <literal>pom.xml</literal> file:</simpara>
<informalexample>
<programlisting language="xml" linenumbering="unnumbered">&lt;dependencyManagement&gt;
 &lt;dependencies&gt;
  &lt;dependency&gt;
   &lt;groupId&gt;com.redhat.ba&lt;/groupId&gt;
   &lt;artifactId&gt;ba-platform-bom&lt;/artifactId&gt;
   &lt;version&gt;7.10.0.redhat-00002&lt;/version&gt;
   &lt;type&gt;pom&lt;/type&gt;
   &lt;scope&gt;import&lt;/scope&gt;
  &lt;/dependency&gt;
 &lt;/dependencies&gt;
&lt;/dependencyManagement&gt;
&lt;dependencies&gt;
&lt;!-- Your dependencies --&gt;
&lt;/dependencies&gt;</programlisting>
</informalexample>
</listitem>
<listitem>
<simpara>Declare dependencies required for your project in the <literal>&lt;dependencies&gt;</literal> tag. After you import the product BOM into your project, the versions of the user-facing product dependencies are defined so you do not need to specify the <literal>&lt;version&gt;</literal> sub-element of these <literal>&lt;dependency&gt;</literal> elements. However, you must use the <literal>&lt;dependency&gt;</literal> element to declare dependencies which you want to use in your project.</simpara>
</listitem>
<listitem>
<simpara>For standalone projects that are not authored in Business Central, specify all dependencies required for your projects. In projects that you author in Business Central, the basic decision engine
and process engine
dependencies are provided automatically by Business Central.</simpara>
<itemizedlist>
<listitem>
<simpara>For a basic Red Hat Process Automation Manager project, declare the following dependencies, depending on the features that you want to use:</simpara>
<formalpara>
<title>Embedded process engine dependencies</title>
<para>
<programlisting language="xml" linenumbering="unnumbered">&lt;!-- Public KIE API --&gt;
&lt;dependency&gt;
  &lt;groupId&gt;org.kie&lt;/groupId&gt;
  &lt;artifactId&gt;kie-api&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;!-- Core dependencies for process engine --&gt;
&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-flow&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-flow-builder&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-bpmn2&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-runtime-manager&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-persistence-jpa&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-query-jpa&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-audit&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-kie-services&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;!-- Dependency needed for default WorkItemHandler implementations. --&gt;
&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-workitems-core&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;!-- Logging dependency. You can use any logging framework compatible with slf4j. --&gt;
&lt;dependency&gt;
  &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;
  &lt;artifactId&gt;logback-classic&lt;/artifactId&gt;
  &lt;version&gt;${logback.version}&lt;/version&gt;
&lt;/dependency&gt;</programlisting>
</para>
</formalpara>
</listitem>
<listitem>
<simpara>For a Red Hat Process Automation Manager project that uses CDI, you typically declare the following dependencies:</simpara>
<formalpara>
<title>CDI-enabled process engine dependencies</title>
<para>
<programlisting language="xml" linenumbering="unnumbered">&lt;dependency&gt;
  &lt;groupId&gt;org.kie&lt;/groupId&gt;
  &lt;artifactId&gt;kie-api&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-kie-services&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-services-cdi&lt;/artifactId&gt;
&lt;/dependency&gt;</programlisting>
</para>
</formalpara>
</listitem>
<listitem>
<simpara>For a basic Red Hat Process Automation Manager project, declare the following dependencies:</simpara>
<formalpara>
<title>Embedded decision engine dependencies</title>
<para>
<programlisting language="xml" linenumbering="unnumbered">&lt;dependency&gt;
  &lt;groupId&gt;org.drools&lt;/groupId&gt;
  &lt;artifactId&gt;drools-compiler&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;!-- Dependency for persistence support. --&gt;
&lt;dependency&gt;
  &lt;groupId&gt;org.drools&lt;/groupId&gt;
  &lt;artifactId&gt;drools-persistence-jpa&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;!-- Dependencies for decision tables, templates, and scorecards.
For other assets, declare org.drools:business-central-models-* dependencies. --&gt;
&lt;dependency&gt;
  &lt;groupId&gt;org.drools&lt;/groupId&gt;
  &lt;artifactId&gt;drools-decisiontables&lt;/artifactId&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
  &lt;groupId&gt;org.drools&lt;/groupId&gt;
  &lt;artifactId&gt;drools-templates&lt;/artifactId&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
  &lt;groupId&gt;org.drools&lt;/groupId&gt;
  &lt;artifactId&gt;drools-scorecards&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;!-- Dependency for loading KJARs from a Maven repository using KieScanner. --&gt;
&lt;dependency&gt;
  &lt;groupId&gt;org.kie&lt;/groupId&gt;
  &lt;artifactId&gt;kie-ci&lt;/artifactId&gt;
&lt;/dependency&gt;</programlisting>
</para>
</formalpara>
</listitem>
<listitem>
<simpara>To use the KIE Server, declare the following dependencies:</simpara>
<formalpara>
<title>Client application KIE Server dependencies</title>
<para>
<programlisting language="xml" linenumbering="unnumbered">&lt;dependency&gt;
  &lt;groupId&gt;org.kie.server&lt;/groupId&gt;
  &lt;artifactId&gt;kie-server-client&lt;/artifactId&gt;
&lt;/dependency&gt;</programlisting>
</para>
</formalpara>
</listitem>
<listitem>
<simpara>To create a remote client for Red Hat Process Automation Manager, declare the following dependency:</simpara>
<formalpara>
<title>Client dependency</title>
<para>
<programlisting language="xml" linenumbering="unnumbered">&lt;dependency&gt;
  &lt;groupId&gt;org.uberfire&lt;/groupId&gt;
  &lt;artifactId&gt;uberfire-rest-client&lt;/artifactId&gt;
&lt;/dependency&gt;</programlisting>
</para>
</formalpara>
</listitem>
<listitem>
<simpara>When creating a JAR file that includes assets, such as rules and process definitions, specify the packaging type for your Maven project as <literal>kjar</literal> and use <literal>org.kie:kie-maven-plugin</literal> to process the <literal>kjar</literal> packaging type located under the <literal>&lt;project&gt;</literal> element. In the following example, <literal>${kie.version}</literal> is the Maven library version listed in
<link xlink:href="https://access.redhat.com/solutions/3405361">What is the mapping between Red Hat Process Automation Manager and the Maven library version?</link>:</simpara>
<programlisting language="xml" linenumbering="unnumbered">&lt;packaging&gt;kjar&lt;/packaging&gt;
&lt;build&gt;
 &lt;plugins&gt;
  &lt;plugin&gt;
   &lt;groupId&gt;org.kie&lt;/groupId&gt;
   &lt;artifactId&gt;kie-maven-plugin&lt;/artifactId&gt;
   &lt;version&gt;${kie.version}&lt;/version&gt;
   &lt;extensions&gt;true&lt;/extensions&gt;
  &lt;/plugin&gt;
 &lt;/plugins&gt;
&lt;/build&gt;</programlisting>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
</section>
<section xml:id="offline-repo-proc_install-on-jws">
<title>Preparing a Maven mirror repository for offline use</title>
<simpara>If your
Red Hat Process Automation Manager deployment
does not have outgoing access to the public Internet, you must prepare a Maven repository with a mirror of all the necessary artifacts and make this repository available to your environment.</simpara>
<note>
<simpara>You do not need to complete this procedure if your
Red Hat Process Automation Manager deployment
is connected to the Internet.</simpara>
</note>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>A computer that has outgoing access to the public Internet is available.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>On the computer that has an outgoing connection to the public Internet, complete the following steps:</simpara>
</listitem>
<listitem>
<simpara>Navigate to the <link xlink:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html">Software Downloads</link> page in the Red Hat Customer Portal (login required), and select the product and version from the drop-down options:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Product:</emphasis> Red Hat Process Automation Manager</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Version:</emphasis> 7.10</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Download and extract the <emphasis role="strong">Red Hat Process Automation Manager 7.10.0 Offliner Content List</emphasis> (<literal>rhpam-7.10.0-offliner.zip</literal>) product deliverable file.</simpara>
</listitem>
<listitem>
<simpara>Extract the contents of the <literal>rhpam-7.10.0-offliner.zip</literal> file into any directory.</simpara>
</listitem>
<listitem>
<simpara>Change to the directory and enter the following command:</simpara>
<screen>./offline-repo-builder.sh offliner.txt</screen>
<simpara>This command creates the <literal>repository</literal> subdirectory and downloads the necessary artifacts into this subdirectory. This is the mirror repository.</simpara>
<simpara>If a message reports that some downloads have failed, run the same command again. If downloads fail again, contact Red Hat support.</simpara>
</listitem>
</orderedlist>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>If you developed services outside of Business Central and they have additional dependencies, add the dependencies to the mirror repository. If you developed the services as Maven projects, you can use the following steps to prepare these dependencies automatically. Complete the steps on the computer that has an outgoing connection to the public Internet.</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Create a backup of the local Maven cache directory (<literal>~/.m2/repository</literal>) and then clear the directory.</simpara>
</listitem>
<listitem>
<simpara>Build the source of your projects using the <literal>mvn clean install</literal> command.</simpara>
</listitem>
<listitem>
<simpara>For every project, enter the following command to ensure that Maven downloads all runtime dependencies for all the artifacts generated by the project:</simpara>
<screen>mvn -e -DskipTests dependency:go-offline -f /path/to/project/pom.xml --batch-mode -Djava.net.preferIPv4Stack=true</screen>
<simpara>Replace <literal>/path/to/project/pom.xml</literal> with the path of the <literal>pom.xml</literal> file of the project.</simpara>
</listitem>
<listitem>
<simpara>Copy the contents of the local Maven cache directory (<literal>~/.m2/repository</literal>) to the <literal>repository</literal> subdirectory that was created.</simpara>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>Copy the contents of the <literal>repository</literal> subdirectory to a directory on the computer on which you deployed Red Hat Process Automation Manager. This directory becomes the offline Maven mirror repository.</simpara>
</listitem>
<listitem>
<simpara>Create and configure a <literal>settings.xml</literal> file for your Red Hat Process Automation Manager deployment as described in
<xref linkend="maven-settings-configuration-ref_install-on-jws"/>.</simpara>
</listitem>
<listitem>
<simpara>Make the following changes in the <literal>settings.xml</literal> file:</simpara>
<itemizedlist>
<listitem>
<simpara>Under the <literal>&lt;profile&gt;</literal> tag, if a <literal>&lt;repositories&gt;</literal> or <literal>&lt;pluginRepositores&gt;</literal> tag is missing, add the missing tags.</simpara>
</listitem>
<listitem>
<simpara>Under <literal>&lt;repositories&gt;</literal> add the following content:</simpara>
<programlisting language="xml" linenumbering="unnumbered">&lt;repository&gt;
  &lt;id&gt;offline-repository&lt;/id&gt;
  &lt;url&gt;file:///path/to/repo&lt;/url&gt;
  &lt;releases&gt;
    &lt;enabled&gt;true&lt;/enabled&gt;
  &lt;/releases&gt;
  &lt;snapshots&gt;
    &lt;enabled&gt;false&lt;/enabled&gt;
  &lt;/snapshots&gt;
&lt;/repository&gt;</programlisting>
<simpara>Replace <literal>/path/to/repo</literal> with the full path to the local Maven mirror repository directory.</simpara>
</listitem>
<listitem>
<simpara>Under <literal>&lt;pluginRepositories&gt;</literal> add the following content:</simpara>
<programlisting language="xml" linenumbering="unnumbered">&lt;repository&gt;
  &lt;id&gt;offline-plugin-repository&lt;/id&gt;
  &lt;url&gt;file:///path/to/repo&lt;/url&gt;
  &lt;releases&gt;
    &lt;enabled&gt;true&lt;/enabled&gt;
  &lt;/releases&gt;
  &lt;snapshots&gt;
    &lt;enabled&gt;false&lt;/enabled&gt;
  &lt;/snapshots&gt;
&lt;/repository&gt;</programlisting>
<simpara>Replace <literal>/path/to/repo</literal> with the full path to the local Maven mirror repository directory.</simpara>
</listitem>
</itemizedlist>
</listitem>
</orderedlist>
</section>
</chapter>
<chapter xml:id="git-import-proc_install-on-jws">
<title>Importing projects from Git repositories</title>
<simpara>Git is a distributed version control system. It implements revisions as commit objects. When you save your changes to a repository, a new commit object in the Git repository is created.</simpara>
<simpara>Business Central uses Git to store project data, including assets such as rules and processes. When you create a project in Business Central, it is added to a Git repository that is embedded in Business Central. If you have projects in other Git repositories, you can import those projects into the Business Central Git repository through Business Central spaces.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>Red Hat Process Automation Manager projects exist in an external Git repository.</simpara>
</listitem>
<listitem>
<simpara>You have the credentials required for read access to that external Git repository.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>In Business Central, click <emphasis role="strong">Menu</emphasis> â†’ <emphasis role="strong">Design</emphasis> â†’ <emphasis role="strong">Projects</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Select or create the space into which you want to import the projects. The default space is <emphasis role="strong">MySpace</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>To import a project, do one of the following:</simpara>
<itemizedlist>
<listitem>
<simpara>Click <emphasis role="strong">Import Project</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Select <emphasis role="strong">Import Project</emphasis> from the drop-down list.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Import Project</emphasis> window, enter the URL and credentials for the Git repository that contains the projects that you want to import and click <emphasis role="strong">Import</emphasis>. The projects are added to the Business Central Git repository and are available from the current space.</simpara>
</listitem>
</orderedlist>
</chapter>
<chapter xml:id="ldap-ssl-con_install-on-jws">
<title>Integrating LDAP and SSL</title>
<simpara>With Red Hat Process Automation Manager you can integrate LDAP and SSL through RH-SSO. For more information, see the <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_single_sign-on/7.4/html-single/server_administration_guide/"><emphasis>Red Hat Single Sign-On Server Administration Guide</emphasis></link>.</simpara>
</chapter>
<appendix xml:id="business-central-system-properties-ref_install-on-jws">
<title>Business Central system properties</title>
<simpara>The Business Central system properties listed in this section are passed to <literal>standalone*.xml</literal> files.</simpara>
<variablelist>
<varlistentry>
<term>Git directory</term>
<listitem>
<simpara>Use the following properties to set the location and name for the Business Central Git directory:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>org.uberfire.nio.git.dir</literal>: Location of the Business Central Git directory.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.dirname</literal>: Name of the Business Central Git directory. Default value: <literal>.niogit</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.ketch</literal>: Enables or disables Git ketch.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.hooks</literal>: Location of the Git hooks directory.</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>Git over HTTP</term>
<listitem>
<simpara>Use the following properties to configure access to the Git repository over HTTP:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>org.uberfire.nio.git.proxy.ssh.over.http</literal>: Specifies whether SSH should use an HTTP proxy. Default value: <literal>false</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>http.proxyHost</literal>: Defines the host name of the HTTP proxy. Default value: <literal>null</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>http.proxyPort</literal>: Defines the host port (integer value) of the HTTP proxy. Default value: <literal>null</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>http.proxyUser</literal>: Defines the user name of the HTTP proxy.</simpara>
</listitem>
<listitem>
<simpara><literal>http.proxyPassword</literal>: Defines the user password of the HTTP proxy.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.http.enabled</literal>: Enables or disables the HTTP daemon. Default value: <literal>true</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.http.host</literal>: If the HTTP daemon is enabled, it uses this property as the host identifier. This is an informative property that is used to display how to access the Git repository over HTTP.  The HTTP still relies on the servlet container. Default value: <literal>localhost</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.http.hostname</literal>: If the HTTP daemon is enabled, it uses this property as the host name identifier. This is an informative property that is used to display how to access the Git repository over HTTP.  The HTTP still relies on the servlet container. Default value: <literal>localhost</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.http.port</literal>: If the HTTP daemon is enabled, it uses this property as the port number. This is an informative property that is used to display how to access the Git repository over HTTP.  The HTTP still relies on the servlet container. Default value: <literal>8080</literal>.</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>Git over HTTPS</term>
<listitem>
<simpara>Use the following properties to configure access to the Git repository over HTTPS:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>org.uberfire.nio.git.proxy.ssh.over.https</literal>: Specifies whether SSH uses an HTTPS proxy. Default value: <literal>false</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>https.proxyHost</literal>: Defines the host name of the HTTPS proxy. Default value: <literal>null</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>https.proxyPort</literal>: Defines the host port (integer value) of the HTTPS proxy. Default value: <literal>null</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>https.proxyUser</literal>: Defines the user name of the HTTPS proxy.</simpara>
</listitem>
<listitem>
<simpara><literal>https.proxyPassword</literal>: Defines the user password of the HTTPS proxy.</simpara>
</listitem>
<listitem>
<simpara><literal>user.dir</literal>: Location of the user directory.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.https.enabled</literal>: Enables or disables the HTTPS daemon. Default value: <literal>false</literal></simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.https.host</literal>: If the HTTPS daemon is enabled, it uses this property as the host identifier. This is an informative property that is used to display how to access the Git repository over HTTPS.  The HTTPS still relies on the servlet container. Default value: <literal>localhost</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.https.hostname</literal>: If the HTTPS daemon is enabled, it uses this property as the host name identifier. This is an informative property that is used to display how to access the Git repository over HTTPS.  The HTTPS still relies on the servlet container. Default value: <literal>localhost</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.https.port</literal>: If the HTTPS daemon is enabled, it uses this property as the port number. This is an informative property that is used to display how to access the Git repository over HTTPS.  The HTTPS still relies on the servlet container. Default value: <literal>8080</literal>.</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>JGit</term>
<listitem>
<itemizedlist>
<listitem>
<simpara><literal>org.uberfire.nio.jgit.cache.instances</literal>: Defines the JGit cache size.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.jgit.cache.overflow.cleanup.size</literal>: Defines the JGit cache overflow cleanup size.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.jgit.remove.eldest.iterations</literal>: Enables or disables whether to remove eldest JGit iterations.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.jgit.cache.evict.threshold.duration</literal>: Defines the JGit evict threshold duration.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.jgit.cache.evict.threshold.time.unit</literal>: Defines the JGit evict threshold time unit.</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>Git daemon</term>
<listitem>
<simpara>Use the following properties to enable and configure the Git daemon:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>org.uberfire.nio.git.daemon.enabled</literal>: Enables or disables the Git daemon. Default value: <literal>true</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.daemon.host</literal>: If the Git daemon is enabled, it uses this property as the local host identifier. Default value: <literal>localhost</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.daemon.hostname</literal>: If the Git daemon is enabled, it uses this property as the local host name identifier. Default value: <literal>localhost</literal></simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.daemon.port</literal>: If the Git daemon is enabled, it uses this property as the port number. Default value: <literal>9418</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.http.sslVerify</literal>: Enables or disables SSL certificate checking for Git repositories. Default value: <literal>true</literal>.</simpara>
<note>
<simpara>If the default or assigned port is already in use, a new port is automatically selected. Ensure that the ports are available and check the log for more information.</simpara>
</note>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>Git SSH</term>
<listitem>
<simpara>Use the following properties to enable and configure the Git SSH daemon:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>org.uberfire.nio.git.ssh.enabled</literal>: Enables or disables the SSH daemon. Default value: <literal>true</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.ssh.host</literal>: If the SSH daemon enabled, it uses this property as the local host identifier. Default value: <literal>localhost</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.ssh.hostname</literal>: If the SSH daemon is enabled, it uses this property as local host name identifier. Default value: <literal>localhost</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.ssh.port</literal>: If the SSH daemon is enabled, it uses this property as the port number. Default value: <literal>8001</literal>.</simpara>
<note>
<simpara>If the default or assigned port is already in use, a new port is automatically selected. Ensure that the ports are available and check the log for more information.</simpara>
</note>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.ssh.cert.dir</literal>: Location of the <literal>.security</literal> directory where local certificates are stored. Default value: Working directory.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.ssh.idle.timeout</literal>: Sets the SSH idle timeout.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.ssh.passphrase</literal>: Pass phrase used to access the public key store of your operating system when cloning git repositories with SCP style URLs. Example: <literal>git@github.com:user/repository.git</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.ssh.algorithm</literal>: Algorithm used by SSH. Default value: <literal>RSA</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.gc.limit</literal>: Sets the GC limit.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.ssh.ciphers</literal>: A comma-separated string of ciphers. The available ciphers are <literal>aes128-ctr</literal>, <literal>aes192-ctr</literal>, <literal>aes256-ctr</literal>, <literal>arcfour128</literal>, <literal>arcfour256</literal>, <literal>aes192-cbc</literal>, <literal>aes256-cbc</literal>. If the property is not used, all available ciphers are loaded.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.nio.git.ssh.macs</literal>: A comma-separated string of message authentication codes (MACs). The available MACs are <literal>hmac-md5</literal>, <literal>hmac-md5-96</literal>, <literal>hmac-sha1</literal>, <literal>hmac-sha1-96</literal>, <literal>hmac-sha2-256</literal>, <literal>hmac-sha2-512</literal>. If the property is not used, all available MACs are loaded.</simpara>
<note>
<simpara>If you plan to use RSA or any algorithm other than DSA, make sure you set up your application server to use the Bouncy Castle JCE library.</simpara>
</note>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>KIE Server nodes and Process Automation Manager controller</term>
<listitem>
<simpara>Use the following properties to configure the connections with the KIE Server nodes from the Process Automation Manager controller:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>org.kie.server.controller</literal>: The URL is used to connect to the Process Automation Manager controller. For example, <literal>ws://localhost:8080/business-central/websocket/controller</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.kie.server.user</literal>: User name used to connect to the KIE Server nodes from the Process Automation Manager controller. This property is only required when using this Business Central installation as a Process Automation Manager controller.</simpara>
</listitem>
<listitem>
<simpara><literal>org.kie.server.pwd</literal>: Password used to connect to the KIE Server nodes from the Process Automation Manager controller. This property is only required when using this Business Central installation as a Process Automation Manager controller.</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>Maven and miscellaneous</term>
<listitem>
<simpara>Use the following properties to configure Maven and other miscellaneous functions:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>kie.maven.offline.force</literal>: Forces Maven to behave as if offline. If true, disables online dependency resolution. Default value: <literal>false</literal>.</simpara>
<note>
<simpara>Use this property for Business Central only. If you share a runtime environment with any other component, isolate the configuration and apply it only to Business Central.</simpara>
</note>
</listitem>
<listitem>
<simpara><literal>org.uberfire.gzip.enable</literal>: Enables or disables Gzip compression on the <literal>GzipFilter</literal> compression filter. Default value: <literal>true</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.kie.workbench.profile</literal>: Selects the Business Central profile. Possible values are <literal>FULL</literal> or <literal>PLANNER_AND_RULES</literal>. A prefix <literal>FULL_</literal> sets the profile and hides the profile preferences from the administrator preferences. Default value: <literal>FULL</literal></simpara>
</listitem>
<listitem>
<simpara><literal>org.appformer.m2repo.url</literal>: Business Central uses the default location of the Maven repository when looking for dependencies. It directs to the Maven repository inside Business Central, for example, <literal>http://localhost:8080/business-central/maven2</literal>. Set this property before starting Business Central. Default value: File path to the inner <literal>m2</literal> repository.</simpara>
</listitem>
<listitem>
<simpara><literal>appformer.ssh.keystore</literal>: Defines the custom SSH keystore to be used with Business Central by specifying a class name. If the property is not available, the default SSH keystore is used.</simpara>
</listitem>
<listitem>
<simpara><literal>appformer.ssh.keys.storage.folder</literal>: When using the default SSH keystore, this property defines the storage folder for the userâ€™s SSH public keys. If the property is not available, the keys are stored in the Business Central <literal>.security</literal> folder.</simpara>
</listitem>
<listitem>
<simpara><literal>appformer.experimental.features</literal>: Enables the experimental features framework. Default value: <literal>false</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.kie.demo</literal>: Enables an external clone of a demo application from GitHub.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.metadata.index.dir</literal>: Place where the Lucene <literal>.index</literal> directory is stored. Default value: Working directory.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.ldap.regex.role_mapper</literal>: Regex pattern used to map LDAP principal names to the application role name. Note that the variable role must be a part of the pattern as the application role name substitutes the variable role when matching a principle value and role name.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.sys.repo.monitor.disabled</literal>: Disables the configuration monitor. Do not disable unless you are sure. Default value: <literal>false</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.secure.key</literal>: Password used by password encryption. Default value: <literal>org.uberfire.admin</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.secure.alg</literal>: Crypto algorithm used by password encryption. Default value: <literal>PBEWithMD5AndDES</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.uberfire.domain</literal>: Security-domain name used by uberfire. Default value: <literal>ApplicationRealm</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.guvnor.m2repo.dir</literal>: Place where the Maven repository folder is stored. Default value: <literal>&lt;working-directory&gt;/repositories/kie</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.guvnor.project.gav.check.disabled</literal>: Disables group ID, artifact ID, and version (GAV) checks. Default value: <literal>false</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.kie.build.disable-project-explorer</literal>: Disables automatic build of a selected project in Project Explorer. Default value: <literal>false</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.kie.builder.cache.size</literal>: Defines the cache size of the project builder. Default value: <literal>20</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.kie.verification.disable-dtable-realtime-verification</literal>: Disables the real-time validation and verification of decision tables. Default value: <literal>false</literal>.</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>Process Automation Manager controller</term>
<listitem>
<simpara>Use the following properties to configure how to connect to the Process Automation Manager controller:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>org.kie.workbench.controller</literal>: The URL used to connect to the Process Automation Manager controller, for example, <literal>ws://localhost:8080/kie-server-controller/websocket/controller</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.kie.workbench.controller.user</literal>: The Process Automation Manager controller user. Default value: <literal>kieserver</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.kie.workbench.controller.pwd</literal>: The Process Automation Manager controller password. Default value: <literal>kieserver1!</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.kie.workbench.controller.token</literal>: The token string used to connect to the Process Automation Manager controller.</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>Java Cryptography Extension KeyStore (JCEKS)</term>
<listitem>
<simpara>Use the following properties to configure JCEKS:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>kie.keystore.keyStoreURL</literal>: The URL used to load a Java Cryptography Extension KeyStore (JCEKS). For example, <literal>file:///home/kie/keystores/keystore.jceks.</literal></simpara>
</listitem>
<listitem>
<simpara><literal>kie.keystore.keyStorePwd</literal>: The password used for the JCEKS.</simpara>
</listitem>
<listitem>
<simpara><literal>kie.keystore.key.ctrl.alias</literal>: The alias of the key for the default REST Process Automation Manager controller.</simpara>
</listitem>
<listitem>
<simpara><literal>kie.keystore.key.ctrl.pwd</literal>: The password of the alias for the default REST Process Automation Manager controller.</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
<varlistentry>
<term>Rendering</term>
<listitem>
<simpara>Use the following properties to switch between Business Central and KIE Server rendered forms:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>org.jbpm.wb.forms.renderer.ext</literal>: Switches the form rendering between Business Central and KIE Server. By default, the form rendering is performed by Business Central. Default value: <literal>false</literal>.</simpara>
</listitem>
<listitem>
<simpara><literal>org.jbpm.wb.forms.renderer.name</literal>: Enables you to switch between Business Central and KIE Server rendered forms. Default value: <literal>workbench</literal>.</simpara>
</listitem>
</itemizedlist>
</listitem>
</varlistentry>
</variablelist>
</appendix>
</part>
<part xml:id="assembly-installing-kie-server-on-was">
<title>Installing and configuring KIE Server on IBM WebSphere Application Server</title>
<partintro>
<simpara>As a system administrator, you can configure your IBM WebSphere Application Server for Red Hat KIE Server and install KIE Server on that IBM server instance.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>An IBM WebSphere Application Server instance version 9.0 or later is installed. For complete installation instructions, see the <link xlink:href="https://www.ibm.com/cloud/websphere-application-platform">IBM WebSphere Application Server product page</link>.</simpara>
</listitem>
<listitem>
<simpara>You have access to the WebSphere Integrated Solutions Console, usually at <literal>http://&lt;HOST&gt;:9060/ibm/console</literal>.</simpara>
</listitem>
</itemizedlist>
</partintro>
<chapter xml:id="kie-server-con_kie-server-on-was">
<title>KIE Server</title>
<simpara>KIE Server is the server where the rules and other artifacts for Red Hat Process Automation Manager are stored and run. KIE Server is a standalone built-in component that can be used to instantiate and execute rules through interfaces available for REST, Java Message Service (JMS), or Java client-side applications,
as well as to manage processes, jobs,
and Red Hat Business Optimizer functionality through solvers.</simpara>
<simpara>Created as a web deployable WAR file, KIE Server can be deployed on any web container. The current version of the KIE Server is included with default extensions for both Red Hat Decision Manager and Red Hat Process Automation Manager.</simpara>
<simpara>KIE Server has a low footprint with minimal memory consumption and therefore can be deployed easily on a cloud instance. Each instance of this server can open and instantiate multiple containers, which enables you to execute multiple rule services in parallel.</simpara>
<simpara>KIE Server can be integrated with other application servers, such as Oracle WebLogic Server or IBM WebSphere Application Server, to streamline Red Hat Process Automation Manager application management.</simpara>
</chapter>
<chapter xml:id="was-con">
<title>IBM WebSphere Application Server</title>
<simpara>IBM WebSphere Application Server is a flexible and secure web application server that hosts Java-based web applications and provides Java EE-certified run time environments. IBM WebSphere 9.0 supports Java SE 8 and is fully compliant with Java EE 7.</simpara>
</chapter>
<chapter xml:id="was-install-start-proc">
<title>Installing and running IBM WebSphere Application Server</title>
<simpara>IBM WebSphere Application Server must be installed and running for you to apply many of the configurations that accommodate KIE Server. This section describes how to install and start IBM WebSphere.</simpara>
<simpara>For the most up-to-date and detailed installation instructions, see the <link xlink:href="https://www.ibm.com/support/knowledgecenter/en">IBM Knowledge Center</link>.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Download IBM Installation Manager version 1.8.5 or later from the <link xlink:href="http://www-01.ibm.com/support/docview.wss?uid=swg27025142">IBM Installation Manager and Packaging Utility download links</link> page. IBM Installation Manager is required for installing IBM WebSphere.</simpara>
</listitem>
<listitem>
<simpara>Extract the downloaded archive and run the following command as the root user in the new directory:</simpara>
<screen>sudo ./install</screen>
<simpara>The <emphasis role="strong">IBM Installation Manager</emphasis> opens.</simpara>
</listitem>
<listitem>
<simpara>Go to <emphasis role="strong">File</emphasis> â†’ <emphasis role="strong">Preferences</emphasis> and click <emphasis role="strong">Add Repository</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Add Repository</emphasis> window, enter the repository URL for IBM WebSphere 9.0. You can find all the repository URLs in the <link xlink:href="https://www.ibm.com/support/knowledgecenter/SSEQTP_9.0.5/com.ibm.websphere.installation.base.doc/ae/cins_repositories.html">Online product repositories for IBM WebSphere Application Server offerings</link> page of the IBM Knowledge Center.</simpara>
</listitem>
<listitem>
<simpara>In your command terminal, navigate to the IBM WebSphere Application Server folder location that you specified during the installation.</simpara>
</listitem>
<listitem>
<simpara>Change to the <literal>/bin</literal> directory and run a command similar to the following example to create an IBM WebSphere profile, user name, and password. A profile defines the run time environment. The profile includes all the files that the server processes in the runtime environment and that you can change. The user is required for login.</simpara>
<screen>sudo ./manageprofiles.sh -create -profileName testprofile -profilePath /profiles/testprofile  -adminUserName websphere -adminPassword password123</screen>
</listitem>
<listitem>
<simpara>In your command terminal, navigate to the <literal>bin</literal> directory within the profile that you created (for example, <literal>/profiles/testprofile/bin</literal>) and run the following command to start the IBM WebSphere Application Server instance:</simpara>
<screen>sudo ./startServer.sh &lt;SERVER_NAME&gt;</screen>
<simpara><literal>&lt;SERVER_NAME&gt;</literal> is the IBM WebSphere Application Server name defined in <emphasis role="strong">Servers</emphasis> â†’ <emphasis role="strong">Server Types</emphasis> â†’ <emphasis role="strong">IBM WebSphere Application Servers</emphasis> of the WebSphere Integrated Solutions Console.</simpara>
</listitem>
<listitem>
<simpara>Open the following URL in a web browser:</simpara>
<screen>http://&lt;HOST&gt;:9060/ibm/console</screen>
<simpara><literal>&lt;HOST&gt;</literal> is the system name or IP address of the target server.</simpara>
<simpara>For example, to start the WebSphere Integrated Solutions Console for a local instance of IBM WebSphere running on your system, enter the following URL in a web browser:</simpara>
<screen>http://localhost:9060/ibm/console</screen>
</listitem>
<listitem>
<simpara>When the login page of the WebSphere Integrated Solutions Console appears, enter your administrative credentials.</simpara>
</listitem>
</orderedlist>
</chapter>
<chapter xml:id="was-configure-proc">
<title>Configuring IBM WebSphere Application Server for KIE Server</title>
<simpara>Before you deploy KIE Server with IBM WebSphere Application Server, you must configure system properties, security settings, JMS requirements, and other properties on IBM WebSphere. These configurations promote an optimal integration with KIE Server.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>IBM WebSphere Application Server is installed and running.</simpara>
</listitem>
<listitem>
<simpara>You are logged in to the WebSphere Integrated Solutions Console.</simpara>
</listitem>
</itemizedlist>
<section xml:id="was-security-set-proc">
<title>Enabling administrative security</title>
<simpara>You must enable administrative security in the WebSphere Integrated Solutions Console so that you have the required permissions to create users and groups.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>In the WebSphere Integrated Solutions Console, click <emphasis role="strong">Security</emphasis> â†’ <emphasis role="strong">Global Security</emphasis> and ensure that the option <emphasis role="strong">Enable Application Security</emphasis> is selected. This may already be selected and overridden at the server level.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Security Configuration Wizard</emphasis> and click <emphasis role="strong">Next</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Select the repository that contains the user information. For example, select <emphasis role="strong">Federated repositories</emphasis> for local configurations.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Next</emphasis></simpara>
</listitem>
<listitem>
<simpara>Enter the <emphasis role="strong">Primary administrative user name</emphasis> and <emphasis role="strong">Password</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Next</emphasis> and then click <emphasis role="strong">Finish</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Save</emphasis> in the <emphasis role="strong">Messages</emphasis> window to save your changes to the master configuration.</simpara>
<figure>
<title>Save security changes</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/_images/websphere/messages_popup.png"/>
</imageobject>
<textobject><phrase>Save security changes</phrase></textobject>
</mediaobject>
</figure>
</listitem>
<listitem>
<simpara>In your command terminal, navigate to the IBM WebSphere Application Server <literal>/bin</literal> directory location that you specified during installation, and run the following commands to stop and restart IBM WebSphere to apply the security changes:</simpara>
<screen>sudo ./stopServer.sh &lt;SERVER_NAME&gt;</screen>
<screen>sudo ./startServer.sh &lt;SERVER_NAME&gt;</screen>
<simpara><literal>&lt;SERVER_NAME&gt;</literal> is the IBM WebSphere Application Server name defined in <emphasis role="strong">Servers</emphasis> â†’ <emphasis role="strong">Server Types</emphasis> â†’ <emphasis role="strong">IBM WebSphere Application Servers</emphasis> of the WebSphere Integrated Solutions Console.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="was-data-source-create-proc">
<title>Configuring JDBC data sources in IBM WebSphere Application Server</title>
<simpara>A data source is an object that enables a Java Database Connectivity (JDBC) client, such as an application server, to establish a connection with a database. Applications look up the data source on the Java Naming and Directory Interface (JNDI) tree or in the local application context and request a database connection to retrieve data. You must configure data sources for IBM WebSphere Application Server to ensure proper data exchange between the servers and the designated database.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>The JDBC providers that you want to use to create database connections are configured on all servers on which you want to deploy the data source. For more information about JDBC providers, see <link xlink:href="https://www.ibm.com/support/knowledgecenter/en/SSEQTP_9.0.5/com.ibm.websphere.base.doc/ae/tdat_ccrtprov.html">Configuring a JDBC provider</link> in the IBM Knowledge Center.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Navigate to the <link xlink:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html">Software Downloads</link> page in the Red Hat Customer Portal (login required), and select the product and version from the drop-down options:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Product:</emphasis> Process Automation Manager</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Version:</emphasis> 7.10</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Download <emphasis role="strong">Red Hat Process Automation Manager 7.10.0 Add-Ons</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Complete the following steps to prepare your database:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Extract <literal>rhpam-7.10.0-add-ons.zip</literal> in a temporary directory, for example <literal>TEMP_DIR</literal>.</simpara>
</listitem>
<listitem>
<simpara>Extract <literal>TEMP_DIR/rhpam-7.10.0-migration-tool.zip</literal>.</simpara>
</listitem>
<listitem>
<simpara>Change your current directory to the <literal>TEMP_DIR/rhpam-7.10.0-migration-tool/ddl-scripts</literal> directory. This directory contains DDL scripts for several database types.</simpara>
</listitem>
<listitem>
<simpara>Import the DDL script for your database type into the database that you want to use, for example:</simpara>
<programlisting language="shell" linenumbering="unnumbered">psql jbpm &lt; /ddl-scripts/postgresql/postgresql-jbpm-schema.sql</programlisting>
<note>
<simpara>If you are using PostgreSQL or Oracle in conjunction with Spring Boot, you must import the respective Spring Boot DDL script, for example <literal>/ddl-scripts/oracle/oracle-springboot-jbpm-schema.sql</literal> or <literal>/ddl-scripts/postgresql/postgresql-springboot-jbpm-schema.sql</literal>.</simpara>
</note>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>In the WebSphere Integrated Solutions Console, navigate to <emphasis role="strong">Resources</emphasis> â†’ <emphasis role="strong">JDBC</emphasis> â†’ <emphasis role="strong">Data sources</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Select the scope at which applications can use the data source. You can choose a cell, node, cluster, or server.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">New</emphasis> to open the <emphasis role="strong">Create a data source</emphasis> wizard.</simpara>
</listitem>
<listitem>
<simpara>Enter a unique name in the <emphasis role="strong">Data source name</emphasis> field and a Java Naming and Directory Interface (JNDI) name in the <emphasis role="strong">JNDI name</emphasis> field. The application server uses the JNDI name to bind resource references for an application to this data source.</simpara>
<simpara>Do not assign duplicate JNDI names across different resource types, such as data sources versus J2C connection factories or JMS connection factories.</simpara>
<simpara>Do not assign duplicate JNDI names for multiple resources of the same type in the same scope.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Next</emphasis> and choose <emphasis role="strong">Select an existing JDBC provider</emphasis> if the provider has been created, or choose <emphasis role="strong">Create new JDBC provider</emphasis> to define details for a new provider. (Creating the JDBC provider before this point is recommended, as a prerequisite to adding data sources.)</simpara>
</listitem>
<listitem>
<simpara>On the <emphasis role="strong">Enter database specific properties for the data source</emphasis> panel, click <emphasis role="strong">Use this data source in container managed persistence (CMP)</emphasis> if container managed persistence (CMP) enterprise beans must access this data source. Then fill in any other database-specific properties.</simpara>
</listitem>
<listitem>
<simpara>Optional: Configure the security aliases for the data source. You can select <emphasis role="strong">None</emphasis> for any of the authentication methods, or choose one of the following types:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Component-managed authentication alias:</emphasis> Specifies an authentication alias to use when the component resource reference res-auth value is <literal>Application</literal>. To define a new alias, navigate to <emphasis role="strong">Related Items â†’ J2EE Connector Architecture (J2C) authentication data entries</emphasis>. A component-managed alias represents a combination of ID and password that is specified in an application for data source authentication. Therefore, the alias that you set on the data source must be identical to the alias in the application code.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Mapping-configuration alias:</emphasis> Used only in the absence of a login configuration on the component resource reference. The specification of a login configuration and the associated properties on the component resource reference is the preferred way to define the authentication strategy when the res-auth value is set to <literal>Container</literal>. If you specify the <literal>DefaultPrincipalMapping</literal> login configuration, the associated property is a JAAS - J2C authentication data entry alias.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Container-managed authentication alias:</emphasis> Used only in the absence of a login configuration on the component resource reference. The specification of a login configuration and the associated properties on the component resource reference determines the container-managed authentication strategy when the res-auth value is set to <literal>Container</literal>.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Next</emphasis>, review the information for the data source, and click <emphasis role="strong">Finish</emphasis> to save the configuration and exit the wizard.</simpara>
<simpara>The <emphasis role="strong">Data sources</emphasis> panel displays your new configuration in a table along with any other data sources that are configured for the same scope.</simpara>
</listitem>
</orderedlist>
<simpara>For more information about IBM WebSphere Application Server data sources, see <link xlink:href="https://www.ibm.com/support/knowledgecenter/SSEQTP_9.0.5/com.ibm.websphere.base.doc/ae/tdat_tccrtprovds.html">Configuring a JDBC provider and data source</link> in the IBM Knowledge Center.</simpara>
</section>
<section xml:id="wls-was-jms-configure-con_kie-server-on-was">
<title>Configuring Java Message Service (JMS)</title>
<simpara>The Java Message Service (JMS) is a Java API that KIE Server uses to exchange messages with other application servers such as Oracle WebLogic Server and IBM WebSphere Application Server. You must configure your application server to send and receive JMS messages through KIE Server to ensure proper collaboration between the two servers.</simpara>
<section xml:id="was-jms-bus-proc">
<title>Create a service bus and add IBM WebSphere</title>
<simpara>You must create a service bus and add the IBM WebSphere Application Server as a member of it in order to use JMS.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>In the WebSphere Integrated Solutions Console, navigate to <emphasis role="strong">Service Integration</emphasis> â†’ <emphasis role="strong">Buses</emphasis> â†’ <emphasis role="strong">New</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Enter a new bus name and clear the <emphasis role="strong">Bus Security</emphasis> option.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Next</emphasis> and then <emphasis role="strong">Finish</emphasis> to create the service bus.</simpara>
</listitem>
<listitem>
<simpara>Select the service bus that you have created.</simpara>
</listitem>
<listitem>
<simpara>Under <emphasis role="strong">Topology</emphasis>, click <emphasis role="strong">Bus Members</emphasis> â†’ <emphasis role="strong">Add</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Add a New Bus Member</emphasis> wizard, choose the IBM WebSphere Application Server and the type of message store for persistence. You can also specify the properties of the message store.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Finish</emphasis> to add the new bus member.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="was-jms-factory-create-proc">
<title>Create JMS connection factories</title>
<simpara>To enable messaging with KIE Server, you must create certain JMS connection factories for sending and receiving messages.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You have created a service bus for IBM WebSphere Application Server.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>In the WebSphere Integrated Solutions Console, navigate to <emphasis role="strong">Resources</emphasis> â†’ <emphasis role="strong">JMS</emphasis> â†’ <emphasis role="strong">Connection Factories</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Select the correct scope and click <emphasis role="strong">New</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Select the <emphasis role="strong">Default Messaging Provider</emphasis> option and click <emphasis role="strong">OK</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>For each of the following required connection factories, enter the name of the connection factory (for example, <literal>KIE.SERVER.REQUEST</literal>) and the JNDI name (for example, <literal>jms/cf/KIE.SERVER.REQUEST</literal>), and then select the service bus from the <emphasis role="strong">Bus Name</emphasis> drop-down list. Leave the default values for the remaining options.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Apply</emphasis> and <emphasis role="strong">Save</emphasis> to save the changes to the master configuration, and repeat for each required factory.</simpara>
</listitem>
</orderedlist>
<section xml:id="jms-factories-ref_kie-server-on-was">
<title>JMS connection factories for KIE Server</title>
<simpara>The following are the required Java Message Service (JMS) connection factories that enable JMS messaging with KIE Server:</simpara>
<table frame="all" rowsep="1" colsep="1">
<title>Required JMS connection factories for KIE Server</title>
<tgroup cols="3">
<colspec colname="col_1" colwidth="25*"/>
<colspec colname="col_2" colwidth="35*"/>
<colspec colname="col_3" colwidth="40*"/>
<thead>
<row>
<entry align="left" valign="top">Name</entry>
<entry align="left" valign="top">Default value</entry>
<entry align="left" valign="top">Used for</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara><literal>KIE.SERVER.REQUEST</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>jms/cf/KIE.SERVER.REQUEST</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Sending all requests to KIE Server</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>KIE.SERVER.RESPONSE</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>jms/cf/KIE.SERVER.RESPONSE</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Receiving all responses produced by KIE Server</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>KIE.SERVER.EXECUTOR</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>jms/cf/KIE.SERVER.EXECUTOR</literal></simpara></entry>
<entry align="left" valign="top"><simpara>KIE Server executor services</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
</section>
</section>
<section xml:id="was-jms-queues-create-proc">
<title>Create JMS queues</title>
<simpara>JMS queues are the destination end points for point-to-point messaging. You must create certain JMS queues to enable JMS messaging with KIE Server.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You have created a service bus for IBM WebSphere Application Server.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>In the WebSphere Integrated Solutions Console, navigate to <emphasis role="strong">Resources</emphasis> â†’ <emphasis role="strong">JMS</emphasis> â†’ <emphasis role="strong">Queues</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Select the correct scope and click <emphasis role="strong">New</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Select the <emphasis role="strong">Default Messaging Provider</emphasis> option and click <emphasis role="strong">OK</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>For each of the following required queues, enter the name of the queue (for example, <literal>KIE.SERVER.REQUEST</literal>) and the JNDI name (for example, <literal>jms/KIE.SERVER.REQUEST</literal>), and then select the service bus from the <emphasis role="strong">Bus Name</emphasis> drop-down list.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Queue Name</emphasis> drop-down list, select the <emphasis role="strong">Create Service Integration Bus Destination</emphasis>, enter a unique identifier, and select the bus member that you created previously.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Apply</emphasis> and <emphasis role="strong">Save</emphasis> to save the changes to the master configuration, and repeat for each required queue.</simpara>
</listitem>
</orderedlist>
<section xml:id="jms-queues-ref_kie-server-on-was">
<title>JMS queues for KIE Server</title>
<simpara>The following are the required Java Message Service (JMS) queues that enable JMS messaging with KIE Server:</simpara>
<table frame="all" rowsep="1" colsep="1">
<title>Required JMS queues for KIE Server</title>
<tgroup cols="3">
<colspec colname="col_1" colwidth="25*"/>
<colspec colname="col_2" colwidth="35*"/>
<colspec colname="col_3" colwidth="40*"/>
<thead>
<row>
<entry align="left" valign="top">Name</entry>
<entry align="left" valign="top">Default value</entry>
<entry align="left" valign="top">Used for</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara><literal>KIE.SERVER.REQUEST</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>jms/KIE.SERVER.REQUEST</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Sending all requests to KIE Server</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>KIE.SERVER.RESPONSE</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>jms/KIE.SERVER.RESPONSE</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Receiving all responses produced by KIE Server</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>KIE.SERVER.EXECUTOR</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>jms/KIE.SERVER.EXECUTOR</literal></simpara></entry>
<entry align="left" valign="top"><simpara>KIE Server executor services</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
</section>
</section>
<section xml:id="was-jms-activation-proc">
<title>Create JMS activation specifications</title>
<simpara>A JMS activation specification is required in order to bridge the queue and the message-driven bean that enables JMS.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You have created a service bus for IBM WebSphere Application Server.</simpara>
</listitem>
<listitem>
<simpara>You have created JMS queues.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>In the WebSphere Integrated Solutions Console, navigate to <emphasis role="strong">Resources</emphasis> â†’ <emphasis role="strong">JMS</emphasis> â†’ <emphasis role="strong">Activation Specifications</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Select the correct scope and click <emphasis role="strong">New</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Select the <emphasis role="strong">Default Messaging Provider</emphasis> option and click <emphasis role="strong">OK</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>For each of the following required activation specifications, enter the name of the activation specification (for example, <literal>KIE.SERVER.REQUEST</literal>) and the JNDI name (for example, <literal>jms/activation/KIE.SERVER.REQUEST</literal>), and then select the service bus from the <emphasis role="strong">Bus Name</emphasis> drop-down list.</simpara>
</listitem>
<listitem>
<simpara>From the <emphasis role="strong">Destination Type</emphasis> drop-down list, select <emphasis role="strong">Queue</emphasis> and enter the name of the corresponding queue as a <emphasis role="strong">Destination lookup</emphasis> (for example, <literal>jms/KIE.SERVER.REQUEST</literal>).</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Apply</emphasis> and <emphasis role="strong">Save</emphasis> to save the changes to the master configuration, and repeat for each required activation specification.</simpara>
</listitem>
</orderedlist>
<section xml:id="jms-activation-ref_kie-server-on-was">
<title>JMS activation specifications for KIE Server</title>
<simpara>The following are the required Java Message Service (JMS) activation specifications that enable JMS messaging with KIE Server:</simpara>
<table frame="all" rowsep="1" colsep="1">
<title>Required JMS activation specifications for KIE Server</title>
<tgroup cols="3">
<colspec colname="col_1" colwidth="25*"/>
<colspec colname="col_2" colwidth="35*"/>
<colspec colname="col_3" colwidth="40*"/>
<thead>
<row>
<entry align="left" valign="top">Name</entry>
<entry align="left" valign="top">Default value</entry>
<entry align="left" valign="top">Used for</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara><literal>KIE.SERVER.REQUEST</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>jms/activation/KIE.SERVER.REQUEST</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Sending all requests to KIE Server</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>KIE.SERVER.RESPONSE</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>jms/activation/KIE.SERVER.RESPONSE</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Receiving all responses produced by KIE Server</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>KIE.SERVER.EXECUTOR</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>jms/activation/KIE.SERVER.EXECUTOR</literal></simpara></entry>
<entry align="left" valign="top"><simpara>KIE Server executor services</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
</section>
</section>
</section>
<section xml:id="kie-server-was-environment-set-proc">
<title>Setting system properties in IBM WebSphere Application Server</title>
<simpara>Set the system properties listed in this section on your IBM WebSphere Application Server before you deploy KIE Server.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>In the WebSphere Integrated Solutions Console, navigate to <emphasis role="strong">Servers</emphasis> â†’ <emphasis role="strong">Server Types</emphasis> â†’ <emphasis role="strong">IBM WebSphere Application Servers</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the list of application servers, choose the server on which you are going to deploy KIE Server.</simpara>
</listitem>
<listitem>
<simpara>Under the <emphasis role="strong">Server Infrastructure</emphasis>, click <emphasis role="strong">Java and Process Management</emphasis> â†’ <emphasis role="strong">Process Definition</emphasis>.</simpara>
<figure>
<title>WebSphere configuration page</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/_images/websphere/process_definition.png"/>
</imageobject>
<textobject><phrase>WebSphere configuration page</phrase></textobject>
</mediaobject>
</figure>
</listitem>
<listitem>
<simpara>Under <emphasis role="strong">Additional Properties</emphasis>, click <emphasis role="strong">Java Virtual Machine</emphasis>.</simpara>
<figure>
<title>Process definition configuration page</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/_images/websphere/process_definition2.png"/>
</imageobject>
<textobject><phrase>process definition2</phrase></textobject>
</mediaobject>
</figure>
<simpara>This opens the configuration properties for the JVM that is used to start IBM WebSphere.</simpara>
</listitem>
<listitem>
<simpara>Set both the <emphasis role="strong">Initial heap size</emphasis> and <emphasis role="strong">Maximum heap size</emphasis> to <literal>2048</literal> and click <emphasis role="strong">Apply</emphasis> to increase the Java Virtual Machine (JVM) memory size. KIE Server has been tested with these values. If you do not increase the JVM memory size, IBM WebSphere Application Server freezes or causes deployment errors when deploying KIE Server.</simpara>
</listitem>
<listitem>
<simpara>Under <emphasis role="strong">Additional Properties</emphasis>, click <emphasis role="strong">Custom Properties</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">New</emphasis> â†’ <emphasis role="strong">Custom JVM Properties</emphasis> and add the following properties to IBM WebSphere:</simpara>
<table frame="all" rowsep="1" colsep="1">
<title>System properties for KIE Server</title>
<tgroup cols="3">
<colspec colname="col_1" colwidth="30*"/>
<colspec colname="col_2" colwidth="40*"/>
<colspec colname="col_3" colwidth="30*"/>
<thead>
<row>
<entry align="left" valign="top">Name</entry>
<entry align="left" valign="top">Value</entry>
<entry align="left" valign="top">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara><literal>kie.server.jms.queues.response</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>jms/KIE.SERVER.RESPONSE</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The JNDI name of JMS queue for responses used by KIE Server.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>org.kie.server.domain</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>WSLogin</literal></simpara></entry>
<entry align="left" valign="top"><simpara>JAAS <literal>LoginContext</literal> domain used to authenticate users when using JMS.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>org.kie.server.persistence.ds</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>jdbc/jbpm</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Data source JNDI name for KIE Server.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>org.kie.server.persistence.tm</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>org.hibernate.engine.transaction.jta.platform.internal.WebSphereJtaPlatform</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Transaction manager platform for setting Hibernate properties.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>org.kie.server.persistence.dialect</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Example: <literal>org.hibernate.dialect.H2Dialect</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Specifies the Hibernate dialect to be used. Set according to data source.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>org.kie.executor.jms.queue</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>jms/KIE.SERVER.EXECUTOR</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Job executor JMS queue for KIE Server.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>org.kie.executor.jms.cf</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>jms/cf/KIE.SERVER.EXECUTOR</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Job executor JMS connection factory for KIE Server.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>org.kie.server.router</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Example: <literal>http://localhost:9000</literal></simpara></entry>
<entry align="left" valign="top"><simpara>(Optional) Specifies one or more URLs for one or more KIE Server routers (Smart Routers) that the application server is a part of in a clustered KIE Server environment.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>org.jboss.logging.provider</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>jdk</literal></simpara></entry>
<entry align="left" valign="top"><simpara>This property is only required where a <literal>CA SiteMinder TAI (SMTAI)</literal> is installed in the environment. Using this property forces Hibernate to use <literal>JDK</literal> instead of <literal>log4j</literal> for logging within Dashbuilder. <literal>CA SiteMinder TAI (SMTAI)</literal> contains an old version of <literal>log4j</literal>, which causes conflicts.</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Save</emphasis> to save the changes to the master configuration.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="was-stop-start-proc">
<title>Stopping and restarting IBM WebSphere Application Server</title>
<simpara>After you have configured all required system properties in IBM WebSphere Application Server, stop and restart the IBM server to ensure that the configurations are applied.</simpara>
<formalpara>
<title>Procedure</title>
<para>In your command terminal, navigate to the IBM WebSphere Application Server <literal>/bin</literal> directory location that you specified during installation, and run the following commands to stop and restart IBM WebSphere to apply the configuration changes:</para>
</formalpara>
<screen>sudo ./stopServer.sh &lt;SERVER_NAME&gt;</screen>
<screen>sudo ./startServer.sh &lt;SERVER_NAME&gt;</screen>
<simpara><literal>&lt;SERVER_NAME&gt;</literal> is the IBM WebSphere Application Server name defined in <emphasis role="strong">Servers</emphasis> â†’ <emphasis role="strong">Server Types</emphasis> â†’ <emphasis role="strong">IBM WebSphere Application Servers</emphasis> of the WebSphere Integrated Solutions Console.</simpara>
</section>
</chapter>
<chapter xml:id="kie-server-was-install-proc">
<title>Installing and running KIE Server with IBM WebSphere Application Server</title>
<simpara>After you have configured all required system properties in IBM WebSphere Application Server, you can install KIE Server with IBM WebSphere to streamline Red Hat Process Automation Manager application management.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>An IBM WebSphere Application Server instance is configured as described in <xref linkend="was-configure-proc"/>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Navigate to the <link xlink:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html">Software Downloads</link> page in the Red Hat Customer Portal (login required), and select the product and version from the drop-down options:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Product:</emphasis> Process Automation Manager</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Version:</emphasis> 7.10</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Download <emphasis role="strong">Red Hat Process Automation Manager 7.10.0 KIE Server for All Supported EE7 Containers</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Extract the
<literal>rhpam-7.10.0-kie-server-ee7.zip</literal>
 archive to a temporary directory. In the following examples this directory is called <literal><emphasis>TEMP_DIR</emphasis></literal>.</simpara>
</listitem>
<listitem>
<simpara>Repackage the <literal>kie-server.war</literal> directory:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Navigate to the <literal><emphasis>TEMP_DIR</emphasis>/rhpam-7.10.0-kie-server-ee7/kie-server.war</literal> directory.</simpara>
</listitem>
<listitem>
<simpara>Select the contents of the  <literal><emphasis>TEMP_DIR</emphasis>/rhpam-7.10.0-kie-server-ee7/kie-server.war</literal> directory and create the <literal>kie-server.zip</literal> file.</simpara>
</listitem>
<listitem>
<simpara>Rename <literal>kie-server.zip</literal> to <literal>kie-server.war</literal>. This is the file that you will use to deploy KIE Server.</simpara>
</listitem>
<listitem>
<simpara>Optional: Copy the new <literal>kie-server.war</literal> file to a location that is more convenient to deploy from.</simpara>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>In the WebSphere Integrated Solutions Console, navigate to <emphasis role="strong">Applications</emphasis> â†’ <emphasis role="strong">Application Types</emphasis> â†’ <emphasis role="strong">WebSphere Enterprise Applications</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">InstCll</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Navigate to the <literal>kie-server.war</literal> file that you repackaged and select it to upload.</simpara>
</listitem>
<listitem>
<simpara>Select <emphasis role="strong">Fast Path</emphasis> and click <emphasis role="strong">Next</emphasis>.</simpara>
<simpara>The <emphasis role="strong">Install New Application</emphasis> wizard opens.</simpara>
</listitem>
<listitem>
<simpara>Change the <emphasis role="strong">Application Name</emphasis> to <literal>kie-server</literal> and click <emphasis role="strong">Next</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Map the KIE Server modules to servers according to your specific requirements and click <emphasis role="strong">Next</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>For <emphasis role="strong">Bind Listeners for Message-Driven Beans</emphasis>, select <emphasis role="strong">Activation Specification</emphasis> for both beans, enter <literal>jms/activation/KIE.SERVER.REQUEST</literal> in the <emphasis role="strong">Target Resource JNDI Name</emphasis> field, and enter the <literal>jms/cf/KIE.SERVER.REQUEST</literal> JNDI name for the <literal>KIE.SERVER.REQUEST</literal> connection factory.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Map Virtual Hosts for Web Modules</emphasis> section, keep the default values and click <emphasis role="strong">Next</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Set the context root to <literal>kie-server</literal>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Metadata for Modules</emphasis> section, keep the default values and click <emphasis role="strong">Next</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Finish</emphasis> to install KIE Server and click <emphasis role="strong">Save</emphasis> to save the changes to the master configuration.</simpara>
</listitem>
</orderedlist>
<section xml:id="kie-server-was-goup-proc">
<title>Creating the KIE Server group and role</title>
<simpara>After KIE Server is installed, you must create the <literal>kie-server</literal> group and a user.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>KIE Server is installed on the IBM WebSphere Application Server instance.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>In the WebSphere Integrated Solutions Console, click <emphasis role="strong">Users and Groups</emphasis> â†’ <emphasis role="strong">Manage Groups</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Manage Groups</emphasis> screen, click <emphasis role="strong">Create</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Create a Group</emphasis> screen, enter <literal>kie-server</literal> in the <emphasis role="strong">Group name</emphasis> box, then click <emphasis role="strong">Create</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>To create a user to add to the <literal>kie-server</literal> group, click <emphasis role="strong">Users and Groups</emphasis> â†’ <emphasis role="strong">Manage Users</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Create a User</emphasis> screen, complete the required information.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Group Membership</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Group Membership</emphasis> screen, click <literal>kie-server</literal>, move it to <emphasis role="strong">Mapped To</emphasis>, and click <emphasis role="strong">Close</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>On the  <emphasis role="strong">Create a User</emphasis> screen click <emphasis role="strong">Create</emphasis>.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="kie-server-was-mapping-proc_kie-server-on-was">
<title>Mapping the KIE Server group and role</title>
<simpara>After KIE Server is installed, you must map the <literal>kie-server</literal> role to the <literal>kie-server</literal> group in the WebSphere Integrated Solutions Console to run KIE Server.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>KIE Server is installed on the IBM WebSphere Application Server instance.</simpara>
</listitem>
<listitem>
<simpara>IBM WebSphere Application Server has the <literal>kie-server</literal> group with at least one user.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>In the WebSphere Integrated Solutions Console, navigate to <emphasis role="strong">Applications</emphasis> â†’ <emphasis role="strong">Application Types</emphasis> â†’ <emphasis role="strong">WebSphere Enterprise Applications</emphasis> and select the newly installed <literal>kie-server</literal> application.</simpara>
</listitem>
<listitem>
<simpara>Under <emphasis role="strong">Detail Properties</emphasis>, click <emphasis role="strong">Security Role to User/Group Mapping</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Select the <literal>kie-server</literal> role and click <emphasis role="strong">Map Groups</emphasis> to search for the <literal>kie-server</literal> group.</simpara>
</listitem>
<listitem>
<simpara>Move the <literal>kie-server</literal> group from the <emphasis role="strong">Available</emphasis> list to the <emphasis role="strong">Selected</emphasis> list and click <emphasis role="strong">OK</emphasis>.</simpara>
<simpara>This mapping gives users in the IBM WebSphere Application Server <literal>kie-server</literal> group access to KIE Server.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Save</emphasis> to complete the mapping.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="was-ks-classloader-proc_kie-server-on-was">
<title>Configuring class loading for KIE Server</title>
<simpara>After KIE Server is installed, you must configure class loading to set parent classes to load last.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Navigate to <emphasis role="strong">Applications</emphasis> â†’ <emphasis role="strong">Application Types</emphasis> â†’ <emphasis role="strong">WebSphere Enterprise Applications</emphasis> and click <literal>kie-server</literal>.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Class Loading and Update Detection</emphasis> under the <emphasis role="strong">Detail Properties</emphasis> heading on the left.</simpara>
</listitem>
<listitem>
<simpara>In the properties, change <emphasis>Class Loader Order</emphasis> to <emphasis role="strong">Classes loaded with local class loader first (parent last)</emphasis> and <emphasis>WAR Class Loader Policy</emphasis> to <emphasis role="strong">Single class loader for application</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Save the changes to the master configuration.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="kie-server-was-verify-proc">
<title>Verifying the installation</title>
<simpara>After you install KIE Server and define the KIE Server group mapping, verify that the server is running.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>KIE Server is installed on the IBM WebSphere Application Server instance.</simpara>
</listitem>
<listitem>
<simpara>You have set all required system properties for the headless Process Automation Manager controller.</simpara>
</listitem>
<listitem>
<simpara>You have defined the KIE Server group mapping in IBM WebSphere Application Server.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Procedure</title>
<para>Navigate to the KIE Server URL <literal>http://&lt;HOST&gt;:&lt;PORT&gt;/kie-server</literal> to verify that the server is running, or send a <literal>GET</literal> request to <literal>http://&lt;HOST&gt;:&lt;PORT&gt;/kie-server/services/rest/server</literal> to check whether the KIE Server REST API responds.</para>
</formalpara>
<simpara><literal>&lt;HOST&gt;</literal> is the ID or name of the KIE Server host, for example, <literal>localhost</literal> or <literal>192.7.8.9</literal>.</simpara>
<simpara><literal>&lt;PORT&gt;</literal> is the port of the KIE Server host, for example, <literal>9060</literal>.</simpara>
<simpara>If KIE Server is not running, stop and restart the IBM WebSphere Application Server instance and try again to access the KIE Server URL or API.</simpara>
</section>
</chapter>
<chapter xml:id="controller-was-install-proc">
<title>Installing and running the headless Process Automation Manager controller with IBM WebSphere Application Server</title>
<simpara>To use the KIE Server REST API or Java Client API to interact with KIE Server, install the headless Process Automation Manager controller with IBM WebSphere Application Server. The headless Process Automation Manager controller manages KIE Server configuration in a centralized way so that you can use the headless Process Automation Manager controller to create and maintain containers and perform other server-level tasks.</simpara>
<note>
<simpara>For optimal results, install KIE Server and the headless Process Automation Manager controller on different servers in production environments. In development environments, you can install KIE Server and the headless Process Automation Manager controller on the same server.</simpara>
</note>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>The IBM WebSphere Application Server instance is configured as described in <xref linkend="was-configure-proc"/>.</simpara>
</listitem>
<listitem>
<simpara>KIE Server is installed on the IBM WebSphere Application Server instance.</simpara>
</listitem>
<listitem>
<simpara>You have sufficient user permissions to complete the installation.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Navigate to the <link xlink:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html">Software Downloads</link> page in the Red Hat Customer Portal (login required), and select the product and version from the drop-down options:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Product:</emphasis> Process Automation Manager</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Version:</emphasis> 7.10</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Download <emphasis role="strong">Red Hat Process Automation Manager 7.10.0 Add-Ons</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Extract the downloaded <literal>rhpam-7.10.0-add-ons.zip</literal> file to a temporary directory.</simpara>
</listitem>
<listitem>
<simpara>Extract the <literal>rhpam-7.10.0-add-ons.zip</literal> file to a temporary directory. In the following examples this directory is called <literal><emphasis>TEMP_DIR</emphasis></literal>.</simpara>
</listitem>
<listitem>
<simpara>Extract the <literal>rhpam-7.10.0-add-ons/rhpam-7.10.0-controller-ee7.zip</literal> file.</simpara>
</listitem>
<listitem>
<simpara>Repackage the <literal>controller.war</literal> directory:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Navigate to the <literal><emphasis>TEMP_DIR</emphasis>/rhpam-7.10.0-add-ons/rhpam-7.10.0-controller-ee7/controller.war</literal> directory.</simpara>
</listitem>
<listitem>
<simpara>Select the contents of the  <literal><emphasis>TEMP_DIR</emphasis>/rhpam-7.10.0-add-ons/rhpam-7.10.0-controller-ee7/controller.war</literal> directory and create the <literal>controller.zip</literal> file.</simpara>
</listitem>
<listitem>
<simpara>Rename <literal>controller.zip</literal> to <literal>controller.war</literal>. This is the file that you will use to deploy the headless Process Automation Manager controller.</simpara>
</listitem>
<listitem>
<simpara>Optional: Copy the new <literal>controller.war</literal> file to a location that is more convenient to deploy from.</simpara>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>In the WebSphere Integrated Solutions Console, navigate to <emphasis role="strong">Applications</emphasis> â†’ <emphasis role="strong">Application Types</emphasis> â†’ <emphasis role="strong">WebSphere Enterprise Applications</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Install</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Navigate to the <literal>controller.war</literal> file that you repackaged and select it to upload.</simpara>
</listitem>
<listitem>
<simpara>Select <emphasis role="strong">Fast Path</emphasis> and click <emphasis role="strong">Next</emphasis>.</simpara>
<simpara>The <emphasis role="strong">Install New Application</emphasis> wizard opens.</simpara>
</listitem>
<listitem>
<simpara>Change the <emphasis role="strong">Application Name</emphasis> to <literal>controller</literal> and click <emphasis role="strong">Next</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Map the headless Process Automation Manager controller modules to servers according to your specific requirements and click <emphasis role="strong">Next</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>For <emphasis role="strong">Bind Listeners for Message-Driven Beans</emphasis>, select <emphasis role="strong">Activation Specification</emphasis> for both beans, enter <literal>jms/activation/KIE.SERVER.REQUEST</literal> in the <emphasis role="strong">Target Resource JNDI Name</emphasis> field, and enter the <literal>jms/cf/KIE.SERVER.REQUEST</literal> JNDI name for the <literal>KIE.SERVER.REQUEST</literal> connection factory.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Map Virtual Hosts for Web Modules</emphasis> section, keep the default values and click <emphasis role="strong">Next</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Set the context root to <literal>controller</literal>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Metadata for Modules</emphasis> section, keep the default values and click <emphasis role="strong">Next</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Finish</emphasis> to install the headless Process Automation Manager controller and click <emphasis role="strong">Save</emphasis> to save the changes to the master configuration.</simpara>
</listitem>
</orderedlist>
<section xml:id="was-controller-classloader-proc_kie-server-on-was">
<title>Configuring class loading for the headless Process Automation Manager controller</title>
<simpara>After the headless Process Automation Manager controller is installed, you must configure KIE Server class loading to set parent classes to load last.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Navigate to <emphasis role="strong">Applications</emphasis> â†’ <emphasis role="strong">Application Types</emphasis> â†’ <emphasis role="strong">WebSphere Enterprise Applications</emphasis> and click <literal>kie-server</literal>.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Class Loading and Update Detection</emphasis> under the <emphasis role="strong">Detail Properties</emphasis> heading on the left.</simpara>
</listitem>
<listitem>
<simpara>In the properties, change <emphasis>Class Loader Order</emphasis> to <emphasis role="strong">Classes loaded with local class loader first (parent last)</emphasis> and <emphasis>WAR Class Loader Policy</emphasis> to <emphasis role="strong">Single class loader for application</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Save the changes to the master configuration.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="controller-wls-was-environment-set-proc_kie-server-on-was">
<title>Setting system properties for the headless Process Automation Manager controller</title>
<simpara>After you install the headless Process Automation Manager controller, set the system properties listed in this section on your application server or servers to enable proper interaction with the headless Process Automation Manager controller.</simpara>
<note>
<simpara>For optimal results, install KIE Server and the headless Process Automation Manager controller on different servers in production environments. In development environments, you can install KIE Server and the headless Process Automation Manager controller on the same server. In either case, be sure to make these property changes on all application servers where the headless Process Automation Manager controller is installed.</simpara>
</note>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>KIE Server and the headless Process Automation Manager controller are installed on the application server instance.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Specify the following JVM property values on the application server instance where the headless Process Automation Manager controller is installed:</simpara>
<table frame="all" rowsep="1" colsep="1">
<title>Required properties for the headless Process Automation Manager controller</title>
<tgroup cols="2">
<colspec colname="col_1" colwidth="40*"/>
<colspec colname="col_2" colwidth="60*"/>
<thead>
<row>
<entry align="left" valign="top">Name</entry>
<entry align="left" valign="top">Requirement</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara><literal>org.kie.server.user</literal></simpara></entry>
<entry align="left" valign="top"><simpara>A user with the <literal>kie-server</literal> role</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>org.kie.server.pwd</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The password for the user specified in the <literal>org.kie.server.user</literal> property</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
</listitem>
<listitem>
<simpara>Specify the following JVM property values on the application server instance where KIE Server is installed:</simpara>
<table frame="all" rowsep="1" colsep="1">
<title>Required properties for KIE Server when headless Process Automation Manager controller is installed</title>
<tgroup cols="2">
<colspec colname="col_1" colwidth="40*"/>
<colspec colname="col_2" colwidth="60*"/>
<thead>
<row>
<entry align="left" valign="top">Name</entry>
<entry align="left" valign="top">Requirement</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara><literal>org.kie.server.controller.user</literal></simpara></entry>
<entry align="left" valign="top"><simpara>A user with the <literal>kie-server</literal> role</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>org.kie.server.controller.pwd</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The password for the user specified for the <literal>org.kie.server.controller.user</literal> property</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>org.kie.server.id</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The ID or name of the KIE Server installation, such as <literal>rhdm700-decision-server-1</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>org.kie.server.location</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The URL of the KIE Server, <literal>http://&lt;HOST&gt;:&lt;PORT&gt;/kie-server/services/rest/server</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>org.kie.server.controller</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The URL of the headless Process Automation Manager controller, <literal>http://&lt;HOST&gt;:&lt;PORT&gt;/controller/rest/controller</literal></simpara></entry>
</row>
</tbody>
</tgroup>
</table>
<simpara><literal>&lt;HOST&gt;</literal> is the ID or name of the KIE Server host, for example, <literal>localhost</literal> or <literal>192.7.8.9</literal>.</simpara>
<simpara><literal>&lt;PORT&gt;</literal> is the port of the KIE Server host, for example, <literal>7001</literal>.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="controller-was-mapping-proc_kie-server-on-was">
<title>Mapping the headless Process Automation Manager controller group and role</title>
<simpara>After the headless Process Automation Manager controller is installed, in the WebSphere Integrated Solutions Console, you must create the <literal>kie-server</literal> group and then map the <literal>kie-server</literal> role to the <literal>kie-server</literal> group.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>The headless Process Automation Manager controller is installed on the IBM WebSphere Application Server instance.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>In the WebSphere Integrated Solutions Console, create the <literal>kie-server</literal> group and a user for that group, as described in <link linkend="kie-server-was-goup-proc"><emphasis>Creating the KIE Server group and role</emphasis></link>.</simpara>
</listitem>
<listitem>
<simpara>Navigate to <emphasis role="strong">Applications</emphasis> â†’ <emphasis role="strong">Application Types</emphasis> â†’ <emphasis role="strong">WebSphere Enterprise Applications</emphasis> and select the newly installed headless Process Automation Manager controller.</simpara>
</listitem>
<listitem>
<simpara>Under <emphasis role="strong">Detail Properties</emphasis>, click <emphasis role="strong">Security Role to User/Group Mapping</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Select the <literal>kie-server</literal> role and click <emphasis role="strong">Map Groups</emphasis> to search for the <literal>kie-server</literal> group.</simpara>
</listitem>
<listitem>
<simpara>Move the <literal>kie-server</literal> group from the <emphasis role="strong">Available</emphasis> list to the <emphasis role="strong">Selected</emphasis> list and click <emphasis role="strong">OK</emphasis>.</simpara>
<simpara>This mapping gives the previously created administrator user access to Process Automation Manager.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Save</emphasis> to complete the mapping.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="controller-wls-was-verify-proc_kie-server-on-was">
<title>Verifying the installation</title>
<simpara>After you install the headless Process Automation Manager controller and define the required system properties and role requirements on the application server, verify that the headless Process Automation Manager controller works correctly.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>KIE Server and the headless Process Automation Manager controller are installed on the application server instance.</simpara>
</listitem>
<listitem>
<simpara>You have set all required system properties and role requirements for the headless Process Automation Manager controller on the application server.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Procedure</title>
<para>In your command terminal, enter the following command to verify that the headless Process Automation Manager controller is working:</para>
</formalpara>
<screen>curl -X GET "http://&lt;HOST&gt;:&lt;PORT&gt;/controller/rest/controller/management/servers" -H  "accept: application/xml" -u '&lt;CONTROLLER&gt;:&lt;CONTROLLER_PWD&gt;'</screen>
<simpara><literal>&lt;HOST&gt;</literal> is the ID or name of the KIE Server host, for example, <literal>localhost</literal> or <literal>192.7.8.9</literal>.</simpara>
<simpara><literal>&lt;PORT&gt;</literal> is the port of the KIE Server host, for example, <literal>7001</literal>.</simpara>
<simpara><literal>&lt;CONTROLLER&gt;</literal> and <literal>&lt;CONTROLLER_PWD&gt;</literal> are the user credentials that you created in this section.</simpara>
<simpara>The command should return information about the KIE Server instance.</simpara>
<note>
<simpara>Alternatively, you can use the KIE Server Java API Client to access the headless Process Automation Manager controller.</simpara>
</note>
<simpara>If the headless Process Automation Manager controller is not running, stop and restart the application server instance and try again to access the headless Process Automation Manager controller URL or API.</simpara>
</section>
</chapter>
<chapter xml:id="was-configure-embedded-engine-proc">
<title>Configuring an embedded process engine and decision engine in IBM WebSphere Application Server</title>
<simpara>An embedded engine is a light-weight workflow and rule engine that enables you to execute your decisions and business processes. An embedded engine can be part of a Red Hat Process Automation Manager application or it can be deployed as a service through OpenShift, Kubernetes, and Docker. You can embed an engine in a Red Hat Process Automation Manager application through the API or as a set of contexts and dependency injection (CDI) services.</simpara>
<simpara>If you intend to use an embedded engine with your Red Hat Process Automation Manager application, you must add Maven dependencies to your project by adding the Red Hat Business Automation bill of materials (BOM) files to the projectâ€™s <literal>pom.xml</literal> file. The Red Hat Business Automation BOM applies to both Red Hat Decision Manager and Red Hat Process Automation Manager. For more information about the Red Hat Business Automation BOM, see <link xlink:href="https://access.redhat.com/solutions/3405361">What is the mapping between Red Hat Process Automation Manager and the Maven library version?</link>.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Declare the Red Hat Business Automation BOM in the <literal>pom.xml</literal> file:</simpara>
<informalexample>
<programlisting language="xml" linenumbering="unnumbered">&lt;dependencyManagement&gt;
 &lt;dependencies&gt;
  &lt;dependency&gt;
   &lt;groupId&gt;com.redhat.ba&lt;/groupId&gt;
   &lt;artifactId&gt;ba-platform-bom&lt;/artifactId&gt;
   &lt;version&gt;7.10.0.redhat-00002&lt;/version&gt;
   &lt;type&gt;pom&lt;/type&gt;
   &lt;scope&gt;import&lt;/scope&gt;
  &lt;/dependency&gt;
 &lt;/dependencies&gt;
&lt;/dependencyManagement&gt;
&lt;dependencies&gt;
&lt;!-- Your dependencies --&gt;
&lt;/dependencies&gt;</programlisting>
</informalexample>
</listitem>
<listitem>
<simpara>Declare dependencies required for your project in the <literal>&lt;dependencies&gt;</literal> tag. After you import the product BOM into your project, the versions of the user-facing product dependencies are defined so you do not need to specify the <literal>&lt;version&gt;</literal> sub-element of these <literal>&lt;dependency&gt;</literal> elements. However, you must use the <literal>&lt;dependency&gt;</literal> element to declare dependencies which you want to use in your project.</simpara>
<itemizedlist>
<listitem>
<simpara>For a basic Red Hat Process Automation Manager project, declare the following dependencies, depending on the features that you want to use:</simpara>
<formalpara>
<title>Embedded process engine dependencies</title>
<para>
<programlisting language="xml" linenumbering="unnumbered">&lt;!-- Public KIE API --&gt;
&lt;dependency&gt;
  &lt;groupId&gt;org.kie&lt;/groupId&gt;
  &lt;artifactId&gt;kie-api&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;!-- Core dependencies for process engine --&gt;
&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-flow&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
 &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-flow-builder&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-bpmn2&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-runtime-manager&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-persistence-jpa&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-query-jpa&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-audit&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-kie-services&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;!-- Dependency needed for default WorkItemHandler implementations. --&gt;
&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-workitems-core&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;!-- Logging dependency. You can use any logging framework compatible with slf4j. --&gt;
&lt;dependency&gt;
  &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;
  &lt;artifactId&gt;logback-classic&lt;/artifactId&gt;
  &lt;version&gt;${logback.version}&lt;/version&gt;
&lt;/dependency&gt;</programlisting>
</para>
</formalpara>
</listitem>
<listitem>
<simpara>For a Red Hat Process Automation Manager project that uses CDI, you typically declare the following dependencies:</simpara>
<formalpara>
<title>CDI-enabled process engine dependencies</title>
<para>
<programlisting language="xml" linenumbering="unnumbered">&lt;dependency&gt;
  &lt;groupId&gt;org.kie&lt;/groupId&gt;
  &lt;artifactId&gt;kie-api&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-kie-services&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-services-cdi&lt;/artifactId&gt;
&lt;/dependency&gt;</programlisting>
</para>
</formalpara>
<formalpara>
<title>Embedded decision engine dependencies</title>
<para>
<programlisting language="xml" linenumbering="unnumbered">&lt;dependency&gt;
  &lt;groupId&gt;org.drools&lt;/groupId&gt;
  &lt;artifactId&gt;drools-compiler&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;!-- Dependency for persistence support. --&gt;
&lt;dependency&gt;
  &lt;groupId&gt;org.drools&lt;/groupId&gt;
  &lt;artifactId&gt;drools-persistence-jpa&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;!-- Dependencies for decision tables, templates, and scorecards.
For other assets, declare org.drools:business-central-models-* dependencies. --&gt;
&lt;dependency&gt;
  &lt;groupId&gt;org.drools&lt;/groupId&gt;
  &lt;artifactId&gt;drools-decisiontables&lt;/artifactId&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
  &lt;groupId&gt;org.drools&lt;/groupId&gt;
  &lt;artifactId&gt;drools-templates&lt;/artifactId&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
  &lt;groupId&gt;org.drools&lt;/groupId&gt;
  &lt;artifactId&gt;drools-scorecards&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;!-- Dependency for loading KJARs from a Maven repository using KieScanner. --&gt;
&lt;dependency&gt;
  &lt;groupId&gt;org.kie&lt;/groupId&gt;
  &lt;artifactId&gt;kie-ci&lt;/artifactId&gt;
&lt;/dependency&gt;</programlisting>
</para>
</formalpara>
</listitem>
<listitem>
<simpara>To use the KIE Server, declare the following dependencies:</simpara>
<formalpara>
<title>Client application KIE Server dependencies</title>
<para>
<programlisting language="xml" linenumbering="unnumbered">&lt;dependency&gt;
  &lt;groupId&gt;org.kie.server&lt;/groupId&gt;
  &lt;artifactId&gt;kie-server-client&lt;/artifactId&gt;
&lt;/dependency&gt;</programlisting>
</para>
</formalpara>
</listitem>
<listitem>
<simpara>To create a remote client for Red Hat Process Automation Manager, declare the following dependency:</simpara>
<formalpara>
<title>Client dependency</title>
<para>
<programlisting language="xml" linenumbering="unnumbered">&lt;dependency&gt;
  &lt;groupId&gt;org.uberfire&lt;/groupId&gt;
  &lt;artifactId&gt;uberfire-rest-client&lt;/artifactId&gt;
&lt;/dependency&gt;</programlisting>
</para>
</formalpara>
</listitem>
<listitem>
<simpara>When creating a JAR file that includes assets, such as rules and process definitions, specify the packaging type for your Maven project as <literal>kjar</literal> and use <literal>org.kie:kie-maven-plugin</literal> to process the <literal>kjar</literal> packaging type located under the <literal>&lt;project&gt;</literal> element. In the following example, <literal>${kie.version}</literal> is the Maven library version listed in
<link xlink:href="https://access.redhat.com/solutions/3405361">What is the mapping between Red Hat Process Automation Manager and the Maven library version?</link>:</simpara>
<programlisting language="xml" linenumbering="unnumbered">&lt;packaging&gt;kjar&lt;/packaging&gt;
&lt;build&gt;
 &lt;plugins&gt;
  &lt;plugin&gt;
   &lt;groupId&gt;org.kie&lt;/groupId&gt;
   &lt;artifactId&gt;kie-maven-plugin&lt;/artifactId&gt;
   &lt;version&gt;${kie.version}&lt;/version&gt;
   &lt;extensions&gt;true&lt;/extensions&gt;
  &lt;/plugin&gt;
 &lt;/plugins&gt;
&lt;/build&gt;</programlisting>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>If you use a process engine or decision engine with persistence support in your project, you must declare the following hibernate dependencies in the <literal>dependencyManagement</literal> section of your <literal>pom.xml</literal> file by copying the <literal>version.org.hibernate-4ee7</literal> property from the Red Hat Business Automation BOM file:</simpara>
<formalpara>
<title>Hibernate dependencies</title>
<para>
<programlisting language="xml" linenumbering="unnumbered">&lt;!-- hibernate dependencies --&gt;
&lt;dependencyManagement&gt;
  &lt;dependencies&gt;
    &lt;dependency&gt;
    &lt;groupId&gt;org.hibernate&lt;/groupId&gt;
    &lt;artifactId&gt;hibernate-entitymanager&lt;/artifactId&gt;
    &lt;version&gt;${version.org.hibernate-4ee7}&lt;/version&gt;
    &lt;/dependency&gt;

    &lt;dependency&gt;
    &lt;groupId&gt;org.hibernate&lt;/groupId&gt;
    &lt;artifactId&gt;hibernate-core&lt;/artifactId&gt;
    &lt;version&gt;${version.org.hibernate-4ee7}&lt;/version&gt;
    &lt;/dependency&gt;
  &lt;/dependencies&gt;
&lt;/dependencyManagement&gt;</programlisting>
</para>
</formalpara>
</listitem>
</orderedlist>
</chapter>
<chapter xml:id="securing-passwords-was-proc_kie-server-on-was">
<title>Securing passwords with a keystore</title>
<simpara>You can use a keystore to encrypt passwords that are used for communication between Business Central and KIE Server. You should encrypt both controller and KIE Server passwords. If Business Central and KIE Server are deployed to different application servers, then both application servers should use the keystore.</simpara>
<simpara>Use Java Cryptography Extension KeyStore (JCEKS) for your keystore because it supports symmetric keys.</simpara>
<note>
<simpara>If KIE Server is not configured with JCEKS, KIE Server passwords are stored in system properties in plain text form.</simpara>
</note>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>KIE Server is installed in IBM WebSphere Application Server.</simpara>
</listitem>
<listitem>
<simpara>A KIE Server user with the <literal>kie-server</literal> role has been created, as described in <xref linkend="kie-server-was-goup-proc"/>.</simpara>
</listitem>
<listitem>
<simpara>Java 8 or higher is installed.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Create a JCEKS keystore.</simpara>
</listitem>
<listitem>
<simpara>When prompted, enter the password for the KIE Server user that you created.</simpara>
</listitem>
<listitem>
<simpara>Set the system properties listed in the following table:</simpara>
<table frame="all" rowsep="1" colsep="1">
<title>System properties used to load a KIE Server JCEKS</title>
<tgroup cols="3">
<colspec colname="col_1" colwidth="36*"/>
<colspec colname="col_2" colwidth="27*"/>
<colspec colname="col_3" colwidth="36*"/>
<thead>
<row>
<entry align="left" valign="top">System property</entry>
<entry align="left" valign="top">Placeholder</entry>
<entry align="left" valign="top">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara><literal>kie.keystore.keyStoreURL</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>&lt;KEYSTORE_URL&gt;</literal></simpara></entry>
<entry align="left" valign="top"><simpara>URL for the JCEKS that you want to use, for example <literal>file:///home/kie/keystores/keystore.jceks</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>kie.keystore.keyStorePwd</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>&lt;KEYSTORE_PWD&gt;</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Password for the JCEKS</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>kie.keystore.key.server.alias</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>&lt;KEY_SERVER_ALIAS&gt;</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Alias of the key for REST services where the password is stored</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>kie.keystore.key.server.pwd</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>&lt;KEY_SERVER_PWD&gt;</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Password of the alias for REST services with the stored password</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>kie.keystore.key.ctrl.alias</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>&lt;KEY_CONTROL_ALIAS&gt;</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Alias of the key for default REST Process Automation Controller where the password is stored</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>kie.keystore.key.ctrl.pwd</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>&lt;KEY_CONTROL_PWD&gt;</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Password of the alias for default REST  Process Automation Controller with the stored password</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
</listitem>
<listitem>
<simpara>Start KIE Server to verify the configuration.</simpara>
</listitem>
</orderedlist>
</chapter>
<chapter xml:id="next_steps_2" remap="_next_steps_2">
<title>Next steps</title>
<itemizedlist>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/getting_started_with_red_hat_process_automation_manager#assembly-getting-started-decision-services"><emphasis>Getting started with decision services</emphasis></link></simpara>
</listitem>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/developing_decision_services_in_red_hat_process_automation_manager#assembly-guided-decision-tables"><emphasis>Designing a decision service using guided decision tables</emphasis></link></simpara>
</listitem>
</itemizedlist>
</chapter>
</part>
<part xml:id="assembly-installing-kie-server-on-wls">
<title>Installing and configuring KIE Server on Oracle WebLogic Server</title>
<partintro>
<simpara>As a system administrator, you can configure your Oracle WebLogic Server for Red Hat KIE Server and install KIE Server on that Oracle server instance.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>An Oracle WebLogic Server instance version 12.2.1.3.0 or later is installed. For complete installation instructions, see the <link xlink:href="http://www.oracle.com/technetwork/middleware/weblogic/documentation/index.html">Oracle WebLogic Server product page</link>.</simpara>
</listitem>
<listitem>
<simpara>You have access to the Oracle WebLogic Server Administration Console, usually at <literal>http://&lt;HOST&gt;:7001/console</literal>.</simpara>
</listitem>
</itemizedlist>
</partintro>
<chapter xml:id="kie-server-con_kie-server-on-wls">
<title>KIE Server</title>
<simpara>KIE Server is the server where the rules and other artifacts for Red Hat Process Automation Manager are stored and run. KIE Server is a standalone built-in component that can be used to instantiate and execute rules through interfaces available for REST, Java Message Service (JMS), or Java client-side applications,
as well as to manage processes, jobs,
and Red Hat Business Optimizer functionality through solvers.</simpara>
<simpara>Created as a web deployable WAR file, KIE Server can be deployed on any web container. The current version of the KIE Server is included with default extensions for both Red Hat Decision Manager and Red Hat Process Automation Manager.</simpara>
<simpara>KIE Server has a low footprint with minimal memory consumption and therefore can be deployed easily on a cloud instance. Each instance of this server can open and instantiate multiple containers, which enables you to execute multiple rule services in parallel.</simpara>
<simpara>KIE Server can be integrated with other application servers, such as Oracle WebLogic Server or IBM WebSphere Application Server, to streamline Red Hat Process Automation Manager application management.</simpara>
</chapter>
<chapter xml:id="wls-con">
<title>Oracle WebLogic Server</title>
<simpara>Oracle WebLogic Server is a Java EE application server that provides a standard set of APIs for creating distributed Java applications that can access a wide variety of services, such as databases, messaging services, and connections to external enterprise systems. User clients access these applications using web browser clients or Java clients.</simpara>
</chapter>
<chapter xml:id="wls-install-start-proc">
<title>Installing and running Oracle WebLogic Server</title>
<simpara>Oracle WebLogic Server must be installed and running for you to apply many of the configurations that accommodate KIE Server. This section describes how to install and start Oracle WebLogic Server in a standalone Oracle WebLogic Server domain.</simpara>
<simpara>For the most up-to-date and detailed installation instructions, see the <link xlink:href="http://www.oracle.com/technetwork/middleware/weblogic/documentation/index.html">Oracle WebLogic Server product page</link>.</simpara>
<note>
<simpara>If you are already running an instance of Oracle WebLogic Server that uses the same listener port as the one to be used by the server you are starting, you must stop the first server before starting the second server.</simpara>
</note>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Download Oracle WebLogic Server 12.2.1.3.0 or later from the Oracle WebLogic Server <link xlink:href="http://www.oracle.com/technetwork/middleware/weblogic/downloads/index.html">Downloads page</link>.</simpara>
</listitem>
<listitem>
<simpara>Sign in to the target system and verify that a certified JDK already exists on your system. The installer requires a certified JDK. For system requirements, see <link xlink:href="http://www.oracle.com/technetwork/middleware/ias/downloads/fusion-requirements-100147.html">Oracle Fusion Middleware Systems Requirements and Specifications</link>. To download the JDK, see the 'About JDK Requirements for an Oracle Fusion Middleware Installation' section in the  <link xlink:href="https://docs.oracle.com/en/middleware/lifecycle/12.2.1.3/asins/preparing-oracle-fusion-middleware-installation.html#GUID-A3738BBA-5FD1-425B-91EB-7CB22187C700">Planning an Installation of Oracle Fusion Middleware</link>.</simpara>
</listitem>
<listitem>
<simpara>Go to the directory where you downloaded the installation program.</simpara>
</listitem>
<listitem>
<simpara>Launch the installation program by running <literal>java -jar</literal> from the JDK directory on your system. See the following examples:</simpara>
<simpara>On UNIX-based operating systems:</simpara>
<screen>/home/Oracle/jdk/jdk1.8.0_131/bin/java -jar fmw_12.2.1.3.0_wls_generic.jar</screen>
<simpara>On Windows operating systems:</simpara>
<screen>C:\Program Files\Java\jdk1.8.0_131\bin\java -jar fmw_12.2.1.3.0_wls_generic.jar</screen>
<simpara>Be sure to replace the JDK location in these examples with the actual JDK location on your system.</simpara>
</listitem>
<listitem>
<simpara>Follow the installation wizard prompts to complete the installation.</simpara>
</listitem>
<listitem>
<simpara>After the installation is complete, navigate to the domain directory in the command terminal, <literal><emphasis>WLS_HOME</emphasis>/user_projects/&lt;DOMAIN_NAME&gt;</literal>. For example:</simpara>
<screen>WLS\user_projects\mydomain</screen>
</listitem>
<listitem>
<simpara>Enter one of the following commands to start Oracle WebLogic Server:</simpara>
<simpara>On UNIX-based operating systems:</simpara>
<screen>startWebLogic.sh</screen>
<simpara>On Windows operating systems:</simpara>
<screen>startWebLogic.cmd</screen>
<simpara>The startup script displays a series of messages, and finally displays a message similar to the following:</simpara>
<screen>&lt;Dec 8, 2017 3:50:42 PM PDT&gt; &lt;Notice&gt; &lt;WebLogicServer&gt; &lt;000360&gt; &lt;Server started in RUNNING mode&gt;</screen>
</listitem>
<listitem>
<simpara>Open the following URL in a web browser:</simpara>
<screen>http://&lt;HOST&gt;:&lt;PORT&gt;/console</screen>
<simpara><literal>&lt;HOST&gt;</literal> is the system name or IP address of the host server.</simpara>
<simpara><literal>&lt;PORT&gt;</literal> is the address of the port on which the host server is listening for requests (7001 by default).</simpara>
<simpara>For example, to start the Administration Console for a local instance of Oracle WebLogic Server running on your system, enter the following URL in a web browser:</simpara>
<screen>http://localhost:7001/console/</screen>
<simpara>If you started the Administration Console using secure socket layer (SSL), you must add <literal>s</literal> after <literal>http</literal>, as follows:
<literal>https://&lt;HOST&gt;:&lt;PORT&gt;/console</literal></simpara>
</listitem>
<listitem>
<simpara>When the login page of the WebLogic Administration Console appears, enter your administrative credentials.</simpara>
</listitem>
</orderedlist>
</chapter>
<chapter xml:id="wls-configure-proc">
<title>Configuring Oracle WebLogic Server for KIE Server</title>
<simpara>Before you deploy KIE Server with Oracle WebLogic Server, you must configure system properties, security settings, JMS requirements, and other properties on Oracle WebLogic Server. These configurations promote an optimal integration with KIE Server.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>Oracle WebLogic Server is installed and running.</simpara>
</listitem>
<listitem>
<simpara>You are logged in to the WebLogic Administration Console.</simpara>
</listitem>
</itemizedlist>
<section xml:id="wls-users-set-proc">
<title>Configuring the KIE Server group and users</title>
<simpara>You must assign users to a <literal>kie-server</literal> group in the WebLogic Administration Console to enable the container-managed authentication mechanisms in Oracle WebLogic Server.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>In the WebLogic Administration Console, click <emphasis role="strong">Security Realms</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Choose your desired security realm or click <emphasis role="strong">New</emphasis> to create a new security realm.</simpara>
</listitem>
<listitem>
<simpara>Navigate to <emphasis role="strong">Users and Groups</emphasis> â†’ <emphasis role="strong">Groups</emphasis> â†’ <emphasis role="strong">New</emphasis> and create the <literal>kie-server</literal> group.</simpara>
</listitem>
<listitem>
<simpara>Navigate to <emphasis role="strong">Users</emphasis> â†’ <emphasis role="strong">New</emphasis> and create a new user.</simpara>
</listitem>
<listitem>
<simpara>Enter a user, such as <literal>server-user</literal>, and a password for this new user and click <emphasis role="strong">OK</emphasis>.</simpara>
<important>
<simpara>Make sure that the selected user name does not conflict with any known title of a role or a group. For example, if there is a role called <literal>kie-server</literal>, then do not create a user with the user name <literal>kie-server</literal>.</simpara>
</important>
</listitem>
<listitem>
<simpara>Click the newly created user, then return to the <emphasis role="strong">Groups</emphasis> tab.</simpara>
</listitem>
<listitem>
<simpara>Use the selection tool to move the <literal>kie-server</literal> group from the <emphasis role="strong">Available</emphasis> field to the <emphasis role="strong">Chosen</emphasis> field, and click <emphasis role="strong">Save</emphasis>.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="wls-data-source-create-proc">
<title>Configuring JDBC data sources in Oracle WebLogic Server</title>
<simpara>A data source is an object that enables a Java Database Connectivity (JDBC) client, such as an application server, to establish a connection with a database. Applications look up the data source on the Java Naming and Directory Interface (JNDI) tree or in the local application context and request a database connection to retrieve data. You must configure data sources for Oracle WebLogic Server to ensure proper data exchange between the servers and the designated database.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>The JDBC drivers that you want to use to create database connections are installed on all servers on which you want to deploy the data source. Some JDBC drivers are installed with Oracle WebLogic Server, such as WebLogic-branded Data Direct JDBC drivers for DB2, Informix, MS SQL Server, and Sybase. For more information about JDBC drivers, see <link xlink:href="https://docs.oracle.com/middleware/12213/wls/JDBCA/third_party_drivers.htm#JDBCA231">Using JDBC Drivers with WebLogic Server</link> in the Oracle Help Center.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Navigate to the <link xlink:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html">Software Downloads</link> page in the Red Hat Customer Portal (login required), and select the product and version from the drop-down options:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Product:</emphasis> Process Automation Manager</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Version:</emphasis> 7.10</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Download <emphasis role="strong">Red Hat Process Automation Manager 7.10.0 Add-Ons</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Complete the following steps to prepare your database:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Extract <literal>rhpam-7.10.0-add-ons.zip</literal> in a temporary directory, for example <literal>TEMP_DIR</literal>.</simpara>
</listitem>
<listitem>
<simpara>Extract <literal>TEMP_DIR/rhpam-7.10.0-migration-tool.zip</literal>.</simpara>
</listitem>
<listitem>
<simpara>Change your current directory to the <literal>TEMP_DIR/rhpam-7.10.0-migration-tool/ddl-scripts</literal> directory. This directory contains DDL scripts for several database types.</simpara>
</listitem>
<listitem>
<simpara>Import the DDL script for your database type into the database that you want to use, for example:</simpara>
<programlisting language="shell" linenumbering="unnumbered">psql jbpm &lt; /ddl-scripts/postgresql/postgresql-jbpm-schema.sql</programlisting>
<note>
<simpara>If you are using PostgreSQL or Oracle in conjunction with Spring Boot, you must import the respective Spring Boot DDL script, for example <literal>/ddl-scripts/oracle/oracle-springboot-jbpm-schema.sql</literal> or <literal>/ddl-scripts/postgresql/postgresql-springboot-jbpm-schema.sql</literal>.</simpara>
</note>
</listitem>
</orderedlist>
</listitem>
<listitem>
<simpara>In the WebLogic Administration Console, navigate to <emphasis role="strong">Change Center</emphasis> â†’ <emphasis role="strong">Lock &amp; Edit</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Under <emphasis role="strong">Domain Structure</emphasis>, click <emphasis role="strong">Services</emphasis> â†’ <emphasis role="strong">Data Sources</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>On the <emphasis role="strong">Summary of Data Sources</emphasis> page, click <emphasis role="strong">New</emphasis> â†’ <emphasis role="strong">Generic Data Source</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>On the <emphasis role="strong">JDBC Data Sources Properties</emphasis> page, enter or select the following information:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Name:</emphasis> Enter a name for this JDBC data source. This name is used in the configuration file (<literal>config.xml</literal>) and throughout the Administration Console whenever referring to this data source.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">JNDI Name:</emphasis> Enter the JNDI path to where this JDBC data source will be bound. Applications look up the data source on the JNDI tree by this name when reserving a connection.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Database Type:</emphasis> Select the DBMS of the database that you want to connect to. If your DBMS is not listed, select <emphasis role="strong">Other</emphasis>.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Next</emphasis> to continue.</simpara>
</listitem>
<listitem>
<simpara>Select the <emphasis role="strong">Database Driver</emphasis> that you want to use to connect to the database. The list includes common JDBC drivers for the selected DBMS and any other JDBC drivers that have been installed previously.</simpara>
</listitem>
<listitem>
<simpara>On the <emphasis role="strong">Transaction Options</emphasis> page, leave the <emphasis role="strong">Supports Global Transactions</emphasis> option selected and choose from the available transaction options. You can also clear this check box to disable (ignore) global transactions in this data source. In most cases, you should leave the option selected for optimal data efficiency.</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Two-Phase Commit:</emphasis> Select this option to enable standard XA processing. This option is only available when you select an XA JDBC driver to make database connections.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Logging Last Resource:</emphasis> Select this option to enable a non-XA JDBC connection to participate in global transactions using the Logging Last Resource (LLR) transaction optimization. This option is recommended in place of Emulate Two-Phase Commit. This option is only available when you select a non-XA JDBC driver to make database connections.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Emulate Two-Phase Commit:</emphasis> Select this option to enable a non-XA JDBC connection to emulate participation in distributed transactions using JTA. Select this option only if your application can tolerate heuristic conditions. This option is only available when you select a non-XA JDBC driver to make database connections.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">One-Phase Commit:</emphasis> Select this option to enable the non-XA connection to participate in a global transaction as the only transaction participant. This option is only available when you select a non-XA JDBC driver to make database connections.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Next</emphasis> to continue.</simpara>
</listitem>
<listitem>
<simpara>On the <emphasis role="strong">Connection Properties</emphasis> page, enter values for the following properties:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Service Name:</emphasis> Specify the service name of the database to which you want to connect. This must be the same for each data source if more than one is provided. This field is available only if you selected one of the available service-instance connections drivers for Oracle Real Application Clusters (RAC).</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Database Name:</emphasis> Enter the name of the database that you want to connect to. Exact database name requirements vary by JDBC driver and by DBMS.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Host Name:</emphasis> Enter the DNS name or IP address of the server that hosts the database. If you are creating an Oracle GridLink service-instance connection, this must be the same for each data source if more than one is provided.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Port:</emphasis> Enter the port on which the database server listens for connection requests.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Database User Name:</emphasis> Enter the database user account name that you want to use for each connection in the data source.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Password/Confirm Password:</emphasis> Enter the password for the database user account.</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">oracle.jdbc.DRCPConnectionClass:</emphasis> Optionally, enter the Database Resident Connection Pooling (DCRP) connection class if required by your environment.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Next</emphasis> to continue.</simpara>
</listitem>
<listitem>
<simpara>On the <emphasis role="strong">Test Database Connection</emphasis> page, review the connection parameters and click <emphasis role="strong">Test Configuration</emphasis>.</simpara>
<simpara>Oracle WebLogic Server attempts to create a connection from the Administration Server to the database. Results from the connection test are displayed at the top of the page. If the test is unsuccessful, correct any configuration errors and retry the test.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Next</emphasis> to continue or to skip this step if the JDBC driver you selected is not installed on the Administration Server.</simpara>
</listitem>
<listitem>
<simpara>On the <emphasis role="strong">Select Targets</emphasis> page, select the servers or clusters on which you want to deploy the data source and click <emphasis role="strong">Finish</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Return to the main menu of the WebLogic Administration Console and select <emphasis role="strong">Change Center</emphasis> â†’ <emphasis role="strong">Activate Changes</emphasis>.</simpara>
</listitem>
</orderedlist>
<simpara>For more information about Oracle WebLogic Server data sources, see <link xlink:href="https://docs.oracle.com/middleware/12213/wls/JDBCA/toc.htm">JDBC Data Sources for Oracle WebLogic Server</link> in the Oracle Help Center.</simpara>
</section>
<section xml:id="wls-was-jms-configure-con_kie-server-on-wls">
<title>Configuring Java Message Service (JMS)</title>
<simpara>The Java Message Service (JMS) is a Java API that KIE Server uses to exchange messages with other application servers such as Oracle WebLogic Server and IBM WebSphere Application Server. You must configure your application server to send and receive JMS messages through KIE Server to ensure proper collaboration between the two servers.</simpara>
<section xml:id="wls-jms-create-proc">
<title>Create a JMS server</title>
<simpara>You must create a JMS server in order to use JMS.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>In the WebLogic Administration Console, navigate to <emphasis role="strong">Services</emphasis> â†’ <emphasis role="strong">Messaging</emphasis> â†’ <emphasis role="strong">JMS Servers</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">New</emphasis> to create a new JMS server.</simpara>
</listitem>
<listitem>
<simpara>Enter a name for your JMS server and click <emphasis role="strong">Next</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Select the target server chosen for the KIE Server deployment.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Finish</emphasis>.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="wls-jms-create-module-proc">
<title>Create a JMS module</title>
<simpara>You must create a JMS module to store your JMS resources, such as connection factories and queues.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You have created a JMS server.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>In the WebLogic Administration Console, navigate to <emphasis role="strong">Services</emphasis> â†’ <emphasis role="strong">Messaging</emphasis> â†’ <emphasis role="strong">JMS Modules</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">New</emphasis> to create a module.</simpara>
</listitem>
<listitem>
<simpara>Enter a module name and click <emphasis role="strong">Next</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Select the target server chosen for the KIE Server deployment and click <emphasis role="strong">Finish</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Click the newly created module name and then click <emphasis role="strong">Subdeployments</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">New</emphasis> to create a subdeployment for your module.</simpara>
</listitem>
<listitem>
<simpara>Give your subdeployment a name and click <emphasis role="strong">Next</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Select the check box to choose the previously created JMS server.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Finish</emphasis> to complete the subdeployment configuration.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="wls-jms-factory-create-proc">
<title>Create JMS connection factories</title>
<simpara>To enable messaging with KIE Server, you must create certain JMS connection factories for sending and receiving messages.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You have created a JMS server.</simpara>
</listitem>
<listitem>
<simpara>You have created a JMS module.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>In the WebLogic Administration Console, navigate to <emphasis role="strong">Services</emphasis> â†’ <emphasis role="strong">Messaging</emphasis> â†’ <emphasis role="strong">JMS Modules</emphasis> to see a list of JMS modules.</simpara>
</listitem>
<listitem>
<simpara>Select your previously created module and click <emphasis role="strong">New</emphasis> to create a new JMS resource.</simpara>
</listitem>
<listitem>
<simpara>Select <emphasis role="strong">Connection Factory</emphasis> and click <emphasis role="strong">Next</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>For each of the following required connection factories, enter the name of the connection factory (for example, <literal>KIE.SERVER.REQUEST</literal>) and the JNDI name (for example, <literal>jms/cf/KIE.SERVER.REQUEST</literal>) and click <emphasis role="strong">Next</emphasis>. The connection factory automatically selects the servers assigned to the JMS Module as the default.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Finish</emphasis> to add the connection factory, and repeat for each required factory.</simpara>
</listitem>
</orderedlist>
<section xml:id="jms-factories-ref_kie-server-on-wls">
<title>JMS connection factories for KIE Server</title>
<simpara>The following are the required Java Message Service (JMS) connection factories that enable JMS messaging with KIE Server:</simpara>
<table frame="all" rowsep="1" colsep="1">
<title>Required JMS connection factories for KIE Server</title>
<tgroup cols="3">
<colspec colname="col_1" colwidth="25*"/>
<colspec colname="col_2" colwidth="35*"/>
<colspec colname="col_3" colwidth="40*"/>
<thead>
<row>
<entry align="left" valign="top">Name</entry>
<entry align="left" valign="top">Default value</entry>
<entry align="left" valign="top">Used for</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara><literal>KIE.SERVER.REQUEST</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>jms/cf/KIE.SERVER.REQUEST</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Sending all requests to KIE Server</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>KIE.SERVER.RESPONSE</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>jms/cf/KIE.SERVER.RESPONSE</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Receiving all responses produced by KIE Server</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>KIE.SERVER.EXECUTOR</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>jms/cf/KIE.SERVER.EXECUTOR</literal></simpara></entry>
<entry align="left" valign="top"><simpara>KIE Server executor services</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
</section>
</section>
<section xml:id="wls-jms-queues-create-proc">
<title>Create JMS queues</title>
<simpara>JMS queues are the destination end points for point-to-point messaging. You must create certain JMS queues to enable JMS messaging with KIE Server.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You have created a JMS server.</simpara>
</listitem>
<listitem>
<simpara>You have created a JMS module.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>In the WebLogic Administration Console, navigate to <emphasis role="strong">Services</emphasis> â†’ <emphasis role="strong">Messaging</emphasis> â†’ <emphasis role="strong">JMS Modules</emphasis> to see the list of JMS modules.</simpara>
</listitem>
<listitem>
<simpara>Select your previously created module, then click <emphasis role="strong">New</emphasis> to create a new JMS resource.</simpara>
</listitem>
<listitem>
<simpara>Select <emphasis role="strong">Queue</emphasis> and click <emphasis role="strong">Next</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>For each of the following required queues, enter the name of the queue (for example, <literal>KIE.SERVER.REQUEST</literal>) and the JNDI name (for example, <literal>jms/KIE.SERVER.REQUEST</literal>)
and then click <emphasis role="strong">Next</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Choose the JMS module subdeployment that connects to the JMS server.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Finish</emphasis> to add the queue, and repeat for each required queue.</simpara>
</listitem>
</orderedlist>
<section xml:id="jms-queues-ref_kie-server-on-wls">
<title>JMS queues for KIE Server</title>
<simpara>The following are the required Java Message Service (JMS) queues that enable JMS messaging with KIE Server:</simpara>
<table frame="all" rowsep="1" colsep="1">
<title>Required JMS queues for KIE Server</title>
<tgroup cols="3">
<colspec colname="col_1" colwidth="25*"/>
<colspec colname="col_2" colwidth="35*"/>
<colspec colname="col_3" colwidth="40*"/>
<thead>
<row>
<entry align="left" valign="top">Name</entry>
<entry align="left" valign="top">Default value</entry>
<entry align="left" valign="top">Used for</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara><literal>KIE.SERVER.REQUEST</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>jms/KIE.SERVER.REQUEST</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Sending all requests to KIE Server</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>KIE.SERVER.RESPONSE</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>jms/KIE.SERVER.RESPONSE</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Receiving all responses produced by KIE Server</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>KIE.SERVER.EXECUTOR</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>jms/KIE.SERVER.EXECUTOR</literal></simpara></entry>
<entry align="left" valign="top"><simpara>KIE Server executor services</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
</section>
</section>
</section>
<section xml:id="kie-server-wls-environment-set-proc">
<title>Setting system properties in Oracle WebLogic Server</title>
<simpara>Set the system properties listed in this section on your Oracle WebLogic Server before you deploy KIE Server.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Set the following system property to increase the Java Virtual Machine (JVM) memory size:</simpara>
<screen>USER_MEM_ARGS=-Xms512m -Xmx1024m</screen>
<simpara>If you do not increase the JVM memory size, Oracle WebLogic Server freezes or causes deployment errors when deploying KIE Server.</simpara>
</listitem>
<listitem>
<simpara>Specify the following system properties for KIE Server on the Oracle WebLogic Server instance:</simpara>
<table frame="all" rowsep="1" colsep="1">
<title>System properties for KIE Server</title>
<tgroup cols="3">
<colspec colname="col_1" colwidth="30*"/>
<colspec colname="col_2" colwidth="40*"/>
<colspec colname="col_3" colwidth="30*"/>
<thead>
<row>
<entry align="left" valign="top">Name</entry>
<entry align="left" valign="top">Value</entry>
<entry align="left" valign="top">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara><literal>kie.server.jms.queues.response</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>jms/KIE.SERVER.RESPONSE</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The JNDI name of JMS queue for responses used by the KIE Server.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>org.kie.server.domain</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>OracleDefaultLoginConfiguration</literal></simpara></entry>
<entry align="left" valign="top"><simpara>JAAS <literal>LoginContext</literal> domain used to authenticate users when using JMS.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>org.kie.server.persistence.ds</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>jdbc/jbpm</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Data source JNDI name for KIE Server.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>org.kie.server.persistence.tm</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>org.hibernate.service.jta.platform.internal.WeblogicJtaPlatform</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Transaction manager platform for setting Hibernate properties.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>org.kie.server.persistence.dialect</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Example: <literal>org.hibernate.dialect.H2Dialect</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Specifies the Hibernate dialect to be used. Set according to data source.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>org.kie.executor.jms.queue</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>jms/KIE.SERVER.EXECUTOR</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Job executor JMS queue for KIE Server.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>org.kie.executor.jms.cf</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>jms/cf/KIE.SERVER.EXECUTOR</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Job executor JMS connection factory for KIE Server.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>org.kie.server.router</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Example: <literal>http://localhost:9000</literal></simpara></entry>
<entry align="left" valign="top"><simpara>(Optional) Specifies one or more URLs for one or more KIE Server routers (Smart Routers) that the application server is a part of in a clustered KIE Server environment.</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
</listitem>
<listitem>
<simpara>Set the same property values in the <literal>JAVA_OPTIONS</literal> environment variable:</simpara>
</listitem>
</orderedlist>
<screen>JAVA_OPTIONS="-Dkie.server.jms.queues.response=jms/KIE.SERVER.RESPONSE
 -Dorg.kie.server.domain=OracleDefaultLoginConfiguration
 -Dorg.kie.executor.jms.cf=jms/cf/KIE.SERVER.EXECUTOR
 -Dorg.kie.executor.jms.queue=jms/KIE.SERVER.EXECUTOR
 -Dorg.kie.server.persistence.ds=jdbc/jbpm
 -Dorg.kie.server.persistence.tm=org.hibernate.service.jta.platform.internal.WeblogicJtaPlatform
 -Dorg.kie.server.persistence.dialect=org.hibernate.dialect.H2Dialect
// Optional server router, for clustered server environment
 -Dorg.kie.server.router=http://localhost:9000</screen>
</section>
<section xml:id="wls-stop-start-proc_kie-server-on-wls">
<title>Stopping and restarting Oracle WebLogic Server</title>
<simpara>After you have configured all required system properties in Oracle WebLogic Server, stop and restart the Oracle server to ensure that the configurations are applied.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>In the WebLogic Administration Console, navigate to <emphasis role="strong">Change Center</emphasis> â†’ <emphasis role="strong">Lock &amp; Edit</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Under <emphasis role="strong">Domain Structure</emphasis>, click <emphasis role="strong">Environment</emphasis> â†’ <emphasis role="strong">Servers</emphasis> â†’ <emphasis role="strong">Control</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Select the server that you want to stop and click <emphasis role="strong">Shutdown</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Select <emphasis role="strong">When Work Completes</emphasis> to gracefully shut down the server or select <emphasis role="strong">Force Shutdown Now</emphasis> to stop the server immediately without completing ongoing tasks.</simpara>
</listitem>
<listitem>
<simpara>On the <emphasis role="strong">Server Life Cycle Assistant</emphasis> pane, click <emphasis role="strong">Yes</emphasis> to complete the shutdown.</simpara>
</listitem>
<listitem>
<simpara>After the shutdown is complete, navigate to the domain directory in the command terminal, <literal><emphasis>WLS_HOME</emphasis>/user_projects/&lt;DOMAIN_NAME&gt;</literal>. For example:</simpara>
<screen>WLS\user_projects\mydomain</screen>
</listitem>
<listitem>
<simpara>Enter one of the following commands to restart Oracle WebLogic Server to apply the new configurations:</simpara>
<simpara>On UNIX-based operating systems:</simpara>
<screen>startWebLogic.sh</screen>
<simpara>On Windows operating systems:</simpara>
<screen>startWebLogic.cmd</screen>
</listitem>
<listitem>
<simpara>Open the Administration Console in a web browser (for example, <literal>http://localhost:7001/console/</literal>) and log in with your credentials.</simpara>
</listitem>
</orderedlist>
</section>
</chapter>
<chapter xml:id="kie-server-wls-install-proc">
<title>Installing KIE Server with Oracle WebLogic Server</title>
<simpara>After you have configured all required system properties in Oracle WebLogic Server, you can install KIE Server with Oracle WebLogic Server to streamline Red Hat Process Automation Manager application management.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>An Oracle WebLogic Server instance is configured as described in <xref linkend="wls-configure-proc"/>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Navigate to the <link xlink:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html">Software Downloads</link> page in the Red Hat Customer Portal (login required), and select the product and version from the drop-down options:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Product:</emphasis> Process Automation Manager</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Version:</emphasis> 7.10</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Download <emphasis role="strong">Red Hat Process Automation Manager 7.10.0 KIE Server for All Supported EE7 Containers</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Extract the downloaded <literal>rhpam-7.10.0-kie-server-ee7.zip</literal> file to a temporary directory.</simpara>
</listitem>
<listitem>
<simpara>In the WebLogic Administration Console, navigate to <emphasis role="strong">Deployments</emphasis> to view all existing applications.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Install</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Navigate to the temporary directory where you downloaded and extracted the <literal>rhpam-7.10.0-kie-server-ee7.zip</literal> file, and go to <literal>rhpam-7.10.0-kie-server-ee7/kie-server.war</literal>.</simpara>
</listitem>
<listitem>
<simpara>Select the <literal>kie-server.war</literal> file and click <emphasis role="strong">Next</emphasis> to continue.</simpara>
</listitem>
<listitem>
<simpara>Select <emphasis role="strong">Install this deployment as an application</emphasis> as the targeting style and click <emphasis role="strong">Next</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Set the application name to <literal>kie-server</literal> and set the security model to <literal>DD Only</literal>. Leave the remaining options as default and click <emphasis role="strong">Next</emphasis> to continue.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Additional Configuration</emphasis> section, choose <emphasis role="strong">No, I will review the configuration later</emphasis> and click <emphasis role="strong">Finish</emphasis>.</simpara>
</listitem>
</orderedlist>
<section xml:id="kie-server-wls-verify-proc">
<title>Verifying the KIE Server installation on Oracle WebLogic Server</title>
<simpara>After you have installed KIE Server on Oracle WebLogic Server, verify that the installation was successful.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>An Oracle WebLogic Server instance is configured as described in <xref linkend="wls-configure-proc"/>.</simpara>
</listitem>
<listitem>
<simpara>KIE Server is installed as described in <xref linkend="kie-server-wls-install-proc"/>.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Enter the KIE Server URL <literal>http://&lt;HOST&gt;:&lt;PORT&gt;/kie-server/services/rest/server</literal> in a web browser.</simpara>
</listitem>
<listitem>
<simpara>Verify that KIE Server is running.</simpara>
<simpara>If KIE Server is not running, stop and restart the Oracle WebLogic Server instance and try again to access the KIE Server URL.</simpara>
</listitem>
</orderedlist>
</section>
</chapter>
<chapter xml:id="controller-wls-install-proc">
<title>Installing and running the headless Process Automation Manager controller with Oracle WebLogic Server</title>
<simpara>To use the KIE Server REST API or Java Client API to interact with KIE Server, install the headless Process Automation Manager controller with Oracle WebLogic Server. The headless Process Automation Manager controller manages KIE Server configuration in a centralized way so that you can use the headless Process Automation Manager controller to create and maintain containers and perform other server-level tasks.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>The Oracle WebLogic Server instance is configured as described in <xref linkend="wls-configure-proc"/>.</simpara>
</listitem>
<listitem>
<simpara>KIE Server is installed on the Oracle WebLogic Server instance.</simpara>
</listitem>
<listitem>
<simpara>You have sufficient user permissions to complete the installation.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Navigate to the <link xlink:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html">Software Downloads</link> page in the Red Hat Customer Portal (login required), and select the product and version from the drop-down options:</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Product:</emphasis> Process Automation Manager</simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Version:</emphasis> 7.10</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Download <emphasis role="strong">Red Hat Process Automation Manager 7.10.0 Add-Ons</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Extract the downloaded <literal>rhpam-7.10.0-add-ons.zip</literal> file to a temporary directory.</simpara>
</listitem>
<listitem>
<simpara>In the WebLogic Administration Console, navigate to <emphasis role="strong">Security Realms</emphasis> â†’ <emphasis role="strong">Users and Groups</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">kie-server</emphasis> group that you created previously, create a user for the headless Process Automation Manager controller, such as <literal>controller</literal>, and a password for this new user and click <emphasis role="strong">OK</emphasis>. For more information about creating groups and users, see <xref linkend="wls-users-set-proc"/>.</simpara>
</listitem>
<listitem>
<simpara>Navigate to <emphasis role="strong">Deployments</emphasis> to view all existing applications.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Install</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Navigate to the temporary directory where you downloaded and extracted the <literal>rhpam-7.10.0-add-ons.zip</literal> file, and go to <literal>rhpam-7.10.0-add-ons/rhpam-7.10.0-controller-ee7.zip/controller.war</literal>.</simpara>
</listitem>
<listitem>
<simpara>Select the <literal>controller.war</literal> file and click <emphasis role="strong">Next</emphasis> to continue.</simpara>
</listitem>
<listitem>
<simpara>Select <emphasis role="strong">Install this deployment as an application</emphasis> as the targeting style and click <emphasis role="strong">Next</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Keep the application name as <literal>controller</literal> and set the security model to <literal>DD Only</literal>. Leave the remaining options as default and click <emphasis role="strong">Next</emphasis> to continue.</simpara>
</listitem>
<listitem>
<simpara>In the <emphasis role="strong">Additional Configuration</emphasis> section, choose <emphasis role="strong">No, I will review the configuration later</emphasis> and click <emphasis role="strong">Finish</emphasis>.</simpara>
</listitem>
</orderedlist>
<section xml:id="controller-wls-was-environment-set-proc_kie-server-on-wls">
<title>Setting system properties for the headless Process Automation Manager controller</title>
<simpara>After you install the headless Process Automation Manager controller, set the system properties listed in this section on your application server or servers to enable proper interaction with the headless Process Automation Manager controller.</simpara>
<note>
<simpara>For optimal results, install KIE Server and the headless Process Automation Manager controller on different servers in production environments. In development environments, you can install KIE Server and the headless Process Automation Manager controller on the same server. In either case, be sure to make these property changes on all application servers where the headless Process Automation Manager controller is installed.</simpara>
</note>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>KIE Server and the headless Process Automation Manager controller are installed on the application server instance.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Specify the following JVM property values on the application server instance where the headless Process Automation Manager controller is installed:</simpara>
<table frame="all" rowsep="1" colsep="1">
<title>Required properties for the headless Process Automation Manager controller</title>
<tgroup cols="2">
<colspec colname="col_1" colwidth="40*"/>
<colspec colname="col_2" colwidth="60*"/>
<thead>
<row>
<entry align="left" valign="top">Name</entry>
<entry align="left" valign="top">Requirement</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara><literal>org.kie.server.user</literal></simpara></entry>
<entry align="left" valign="top"><simpara>A user with the <literal>kie-server</literal> role</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>org.kie.server.pwd</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The password for the user specified in the <literal>org.kie.server.user</literal> property</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
</listitem>
<listitem>
<simpara>Specify the following JVM property values on the application server instance where KIE Server is installed:</simpara>
<table frame="all" rowsep="1" colsep="1">
<title>Required properties for KIE Server when headless Process Automation Manager controller is installed</title>
<tgroup cols="2">
<colspec colname="col_1" colwidth="40*"/>
<colspec colname="col_2" colwidth="60*"/>
<thead>
<row>
<entry align="left" valign="top">Name</entry>
<entry align="left" valign="top">Requirement</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara><literal>org.kie.server.controller.user</literal></simpara></entry>
<entry align="left" valign="top"><simpara>A user with the <literal>kie-server</literal> role</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>org.kie.server.controller.pwd</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The password for the user specified for the <literal>org.kie.server.controller.user</literal> property</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>org.kie.server.id</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The ID or name of the KIE Server installation, such as <literal>rhdm700-decision-server-1</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>org.kie.server.location</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The URL of the KIE Server, <literal>http://&lt;HOST&gt;:&lt;PORT&gt;/kie-server/services/rest/server</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>org.kie.server.controller</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The URL of the headless Process Automation Manager controller, <literal>http://&lt;HOST&gt;:&lt;PORT&gt;/controller/rest/controller</literal></simpara></entry>
</row>
</tbody>
</tgroup>
</table>
<simpara><literal>&lt;HOST&gt;</literal> is the ID or name of the KIE Server host, for example, <literal>localhost</literal> or <literal>192.7.8.9</literal>.</simpara>
<simpara><literal>&lt;PORT&gt;</literal> is the port of the KIE Server host, for example, <literal>7001</literal>.</simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="controller-wls-was-verify-proc_kie-server-on-wls">
<title>Verifying the installation</title>
<simpara>After you install the headless Process Automation Manager controller and define the required system properties and role requirements on the application server, verify that the headless Process Automation Manager controller works correctly.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>KIE Server and the headless Process Automation Manager controller are installed on the application server instance.</simpara>
</listitem>
<listitem>
<simpara>You have set all required system properties and role requirements for the headless Process Automation Manager controller on the application server.</simpara>
</listitem>
</itemizedlist>
<formalpara>
<title>Procedure</title>
<para>In your command terminal, enter the following command to verify that the headless Process Automation Manager controller is working:</para>
</formalpara>
<screen>curl -X GET "http://&lt;HOST&gt;:&lt;PORT&gt;/controller/rest/controller/management/servers" -H  "accept: application/xml" -u '&lt;CONTROLLER&gt;:&lt;CONTROLLER_PWD&gt;'</screen>
<simpara><literal>&lt;HOST&gt;</literal> is the ID or name of the KIE Server host, for example, <literal>localhost</literal> or <literal>192.7.8.9</literal>.</simpara>
<simpara><literal>&lt;PORT&gt;</literal> is the port of the KIE Server host, for example, <literal>7001</literal>.</simpara>
<simpara><literal>&lt;CONTROLLER&gt;</literal> and <literal>&lt;CONTROLLER_PWD&gt;</literal> are the user credentials that you created in this section.</simpara>
<simpara>The command should return information about the KIE Server instance.</simpara>
<note>
<simpara>Alternatively, you can use the KIE Server Java API Client to access the headless Process Automation Manager controller.</simpara>
</note>
<simpara>If the headless Process Automation Manager controller is not running, stop and restart the application server instance and try again to access the headless Process Automation Manager controller URL or API.</simpara>
</section>
</chapter>
<chapter xml:id="wls-configure-embedded-engine-proc">
<title>Configuring an embedded process engine and decision engine in Oracle WebLogic Server</title>
<simpara>An embedded engine is a light-weight workflow and rule engine that enables you to execute your decisions and business processes. An embedded engine can be part of a Red Hat Process Automation Manager application or it can be deployed as a service through OpenShift, Kubernetes, and Docker. You can embed an engine in a Red Hat Process Automation Manager application through the API or as a set of contexts and dependency injection (CDI) services.</simpara>
<simpara>If you intend to use an embedded engine with your Red Hat Process Automation Manager application, you must add Maven dependencies to your project by adding the Red Hat Business Automation bill of materials (BOM) files to the projectâ€™s <literal>pom.xml</literal> file. The Red Hat Business Automation BOM applies to both Red Hat Decision Manager and Red Hat Process Automation Manager. For more information about the Red Hat Business Automation BOM, see <link xlink:href="https://access.redhat.com/solutions/3405361">What is the mapping between Red Hat Process Automation Manager and the Maven library version?</link>.</simpara>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Declare the Red Hat Business Automation BOM in the <literal>pom.xml</literal> file:</simpara>
<informalexample>
<programlisting language="xml" linenumbering="unnumbered">&lt;dependencyManagement&gt;
 &lt;dependencies&gt;
  &lt;dependency&gt;
   &lt;groupId&gt;com.redhat.ba&lt;/groupId&gt;
   &lt;artifactId&gt;ba-platform-bom&lt;/artifactId&gt;
   &lt;version&gt;7.10.0.redhat-00002&lt;/version&gt;
   &lt;type&gt;pom&lt;/type&gt;
   &lt;scope&gt;import&lt;/scope&gt;
  &lt;/dependency&gt;
 &lt;/dependencies&gt;
&lt;/dependencyManagement&gt;
&lt;dependencies&gt;
&lt;!-- Your dependencies --&gt;
&lt;/dependencies&gt;</programlisting>
</informalexample>
</listitem>
<listitem>
<simpara>Declare dependencies required for your project in the <literal>&lt;dependencies&gt;</literal> tag. After you import the product BOM into your project, the versions of the user-facing product dependencies are defined so you do not need to specify the <literal>&lt;version&gt;</literal> sub-element of these <literal>&lt;dependency&gt;</literal> elements. However, you must use the <literal>&lt;dependency&gt;</literal> element to declare dependencies which you want to use in your project.</simpara>
<itemizedlist>
<listitem>
<simpara>For a basic Red Hat Process Automation Manager project, declare the following dependencies, depending on the features that you want to use:</simpara>
<formalpara>
<title>Embedded process engine dependencies</title>
<para>
<programlisting language="xml" linenumbering="unnumbered">&lt;!-- Public KIE API --&gt;
&lt;dependency&gt;
  &lt;groupId&gt;org.kie&lt;/groupId&gt;
  &lt;artifactId&gt;kie-api&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;!-- Core dependencies for process engine --&gt;
&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-flow&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-flow-builder&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-bpmn2&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-runtime-manager&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-persistence-jpa&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-query-jpa&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-audit&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-kie-services&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;!-- Dependency needed for default WorkItemHandler implementations. --&gt;
&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-workitems-core&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;!-- Logging dependency. You can use any logging framework compatible with slf4j. --&gt;
&lt;dependency&gt;
  &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;
  &lt;artifactId&gt;logback-classic&lt;/artifactId&gt;
  &lt;version&gt;${logback.version}&lt;/version&gt;
&lt;/dependency&gt;</programlisting>
</para>
</formalpara>
</listitem>
<listitem>
<simpara>For a Red Hat Process Automation Manager project that uses CDI, you typically declare the following dependencies:</simpara>
<formalpara>
<title>CDI-enabled process engine dependencies</title>
<para>
<programlisting language="xml" linenumbering="unnumbered">&lt;dependency&gt;
  &lt;groupId&gt;org.kie&lt;/groupId&gt;
  &lt;artifactId&gt;kie-api&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-kie-services&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-services-cdi&lt;/artifactId&gt;
&lt;/dependency&gt;</programlisting>
</para>
</formalpara>
<formalpara>
<title>Embedded decision engine dependencies</title>
<para>
<programlisting language="xml" linenumbering="unnumbered">&lt;dependency&gt;
  &lt;groupId&gt;org.drools&lt;/groupId&gt;
  &lt;artifactId&gt;drools-compiler&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;!-- Dependency for persistence support. --&gt;
&lt;dependency&gt;
  &lt;groupId&gt;org.drools&lt;/groupId&gt;
  &lt;artifactId&gt;drools-persistence-jpa&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;!-- Dependencies for decision tables, templates, and scorecards.
For other assets, declare org.drools:business-central-models-* dependencies. --&gt;
&lt;dependency&gt;
  &lt;groupId&gt;org.drools&lt;/groupId&gt;
  &lt;artifactId&gt;drools-decisiontables&lt;/artifactId&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
  &lt;groupId&gt;org.drools&lt;/groupId&gt;
  &lt;artifactId&gt;drools-templates&lt;/artifactId&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
  &lt;groupId&gt;org.drools&lt;/groupId&gt;
  &lt;artifactId&gt;drools-scorecards&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;!-- Dependency for loading KJARs from a Maven repository using KieScanner. --&gt;
&lt;dependency&gt;
  &lt;groupId&gt;org.kie&lt;/groupId&gt;
  &lt;artifactId&gt;kie-ci&lt;/artifactId&gt;
&lt;/dependency&gt;</programlisting>
</para>
</formalpara>
</listitem>
<listitem>
<simpara>To use the KIE Server, declare the following dependencies:</simpara>
<formalpara>
<title>Client application KIE Server dependencies</title>
<para>
<programlisting language="xml" linenumbering="unnumbered">&lt;dependency&gt;
  &lt;groupId&gt;org.kie.server&lt;/groupId&gt;
  &lt;artifactId&gt;kie-server-client&lt;/artifactId&gt;
&lt;/dependency&gt;</programlisting>
</para>
</formalpara>
</listitem>
<listitem>
<simpara>To create a remote client for Red Hat Process Automation Manager, declare the following dependency:</simpara>
<formalpara>
<title>Client dependency</title>
<para>
<programlisting language="xml" linenumbering="unnumbered">&lt;dependency&gt;
  &lt;groupId&gt;org.uberfire&lt;/groupId&gt;
  &lt;artifactId&gt;uberfire-rest-client&lt;/artifactId&gt;
&lt;/dependency&gt;</programlisting>
</para>
</formalpara>
</listitem>
<listitem>
<simpara>When creating a JAR file that includes assets, such as rules and process definitions, specify the packaging type for your Maven project as <literal>kjar</literal> and use <literal>org.kie:kie-maven-plugin</literal> to process the <literal>kjar</literal> packaging type located under the <literal>&lt;project&gt;</literal> element. In the following example, <literal>${kie.version}</literal> is the Maven library version listed in
<link xlink:href="https://access.redhat.com/solutions/3405361">What is the mapping between Red Hat Process Automation Manager and the Maven library version?</link>:</simpara>
<programlisting language="xml" linenumbering="unnumbered">&lt;packaging&gt;kjar&lt;/packaging&gt;
&lt;build&gt;
 &lt;plugins&gt;
  &lt;plugin&gt;
   &lt;groupId&gt;org.kie&lt;/groupId&gt;
   &lt;artifactId&gt;kie-maven-plugin&lt;/artifactId&gt;
   &lt;version&gt;${kie.version}&lt;/version&gt;
   &lt;extensions&gt;true&lt;/extensions&gt;
  &lt;/plugin&gt;
 &lt;/plugins&gt;
&lt;/build&gt;</programlisting>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>If you use a process engine or decision engine with persistence support in your project, you must declare the following hibernate dependencies in the <literal>dependencyManagement</literal> section of your <literal>pom.xml</literal> file by copying the <literal>version.org.hibernate-4ee7</literal> property from the Red Hat Business Automation BOM file:</simpara>
<formalpara>
<title>Hibernate dependencies</title>
<para>
<programlisting language="xml" linenumbering="unnumbered">&lt;!-- hibernate dependencies --&gt;
&lt;dependencyManagement&gt;
  &lt;dependencies&gt;
    &lt;dependency&gt;
    &lt;groupId&gt;org.hibernate&lt;/groupId&gt;
    &lt;artifactId&gt;hibernate-entitymanager&lt;/artifactId&gt;
    &lt;version&gt;${version.org.hibernate-4ee7}&lt;/version&gt;
    &lt;/dependency&gt;

    &lt;dependency&gt;
    &lt;groupId&gt;org.hibernate&lt;/groupId&gt;
    &lt;artifactId&gt;hibernate-core&lt;/artifactId&gt;
    &lt;version&gt;${version.org.hibernate-4ee7}&lt;/version&gt;
    &lt;/dependency&gt;
  &lt;/dependencies&gt;
&lt;/dependencyManagement&gt;</programlisting>
</para>
</formalpara>
</listitem>
</orderedlist>
</chapter>
<chapter xml:id="securing-passwords-wls-proc_kie-server-on-wls">
<title>Securing passwords with a keystore</title>
<simpara>You can use a keystore to encrypt passwords that are used for communication between Business Central and KIE Server. You should encrypt both controller and KIE Server passwords. If Business Central and KIE Server are deployed to different application servers, then both application servers should use the keystore.</simpara>
<simpara>Use Java Cryptography Extension KeyStore (JCEKS) for your keystore because it supports symmetric keys. Use KeyTool, which is part of the JDK installation, to create a new JCEKS.</simpara>
<note>
<simpara>If KIE Server is not configured with JCEKS, KIE Server passwords are stored in system properties in plain text form.</simpara>
</note>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>KIE Server is installed in Oracle WebLogic Server.</simpara>
</listitem>
<listitem>
<simpara>A KIE Server user with the <literal>kie-server</literal> role has been created, as described in <xref linkend="wls-users-set-proc"/>.</simpara>
</listitem>
<listitem>
<simpara>Java 8 or higher is installed.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>To use KeyTool to create a JCEKS, enter the following command in the Java 8 home directory:</simpara>
<programlisting language="bash" linenumbering="unnumbered">$&lt;JAVA_HOME&gt;/bin/keytool -importpassword -keystore &lt;KEYSTORE_PATH&gt; -keypass &lt;ALIAS_KEY_PASSWORD&gt; -alias &lt;PASSWORD_ALIAS&gt; -storepass &lt;KEYSTORE_PASSWORD&gt; -storetype JCEKS</programlisting>
<simpara>In this example, replace the following variables:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>&lt;KEYSTORE_PATH&gt;</literal>: The path where the keystore will be stored</simpara>
</listitem>
<listitem>
<simpara><literal>&lt;KEYSTORE_PASSWORD&gt;</literal>: The keystore password</simpara>
</listitem>
<listitem>
<simpara><literal>&lt;ALIAS_KEY_PASSWORD&gt;</literal>: The password used to access values stored with the alias</simpara>
</listitem>
<listitem>
<simpara><literal>&lt;PASSWORD_ALIAS&gt;</literal>: The alias of the entry to the process</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>When prompted, enter the password for the KIE Server user that you created.</simpara>
</listitem>
<listitem>
<simpara>Set the system properties listed in the following table:</simpara>
<table frame="all" rowsep="1" colsep="1">
<title>System properties used to load a KIE Server JCEKS</title>
<tgroup cols="3">
<colspec colname="col_1" colwidth="36*"/>
<colspec colname="col_2" colwidth="27*"/>
<colspec colname="col_3" colwidth="36*"/>
<thead>
<row>
<entry align="left" valign="top">System property</entry>
<entry align="left" valign="top">Placeholder</entry>
<entry align="left" valign="top">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara><literal>kie.keystore.keyStoreURL</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>&lt;KEYSTORE_URL&gt;</literal></simpara></entry>
<entry align="left" valign="top"><simpara>URL for the JCEKS that you want to use, for example <literal>file:///home/kie/keystores/keystore.jceks</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>kie.keystore.keyStorePwd</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>&lt;KEYSTORE_PWD&gt;</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Password for the JCEKS</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>kie.keystore.key.server.alias</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>&lt;KEY_SERVER_ALIAS&gt;</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Alias of the key for REST services where the password is stored</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>kie.keystore.key.server.pwd</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>&lt;KEY_SERVER_PWD&gt;</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Password of the alias for REST services with the stored password</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>kie.keystore.key.ctrl.alias</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>&lt;KEY_CONTROL_ALIAS&gt;</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Alias of the key for default REST Process Automation Controller where the password is stored</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>kie.keystore.key.ctrl.pwd</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>&lt;KEY_CONTROL_PWD&gt;</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Password of the alias for default REST  Process Automation Controller with the stored password</simpara></entry>
</row>
</tbody>
</tgroup>
</table>
</listitem>
<listitem>
<simpara>Start KIE Server to verify the configuration.</simpara>
</listitem>
</orderedlist>
</chapter>
<chapter xml:id="next_steps_3" remap="_next_steps_3">
<title>Next steps</title>
<itemizedlist>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/getting_started_with_red_hat_process_automation_manager#assembly-getting-started-decision-services"><emphasis>Getting started with decision services</emphasis></link></simpara>
</listitem>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/developing_decision_services_in_red_hat_process_automation_manager#assembly-guided-decision-tables"><emphasis>Designing a decision service using guided decision tables</emphasis></link></simpara>
</listitem>
</itemizedlist>
</chapter>
</part>
<part xml:id="assembly-patching-and-upgrading">
<title>Patching and upgrading Red Hat Process Automation Manager 7.10</title>
<partintro>
<simpara>As a Red Hat Process Automation Manager user, you can apply updates to Red Hat Process Automation Manager as they become available in the Red Hat Customer Portal to keep your Red Hat Process Automation Manager distribution current with the latest enhancements and fixes. Red Hat provides update tools and product notifications for new product releases so you can more readily apply helpful updates to Red Hat Process Automation Manager and KIE Server.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You have a Red Hat Customer Portal account.</simpara>
</listitem>
<listitem>
<simpara>Red Hat Process Automation Manager 7.10 is installed. For installation options, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/installing_and_configuring_red_hat_process_automation_manager#assembly-planning"><emphasis>Planning a Red Hat Process Automation Manager installation</emphasis></link>.</simpara>
<note>
<simpara>If you are using Red Hat Process Automation Manager 7.8 and you want to upgrade to Red Hat Process Automation Manager 7.10, see
<link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.8/html-single/patching_and_upgrading_red_hat_process_automation_manager_7.8/"><emphasis>Patching and upgrading Red Hat Process Automation Manager 7.8</emphasis></link>
.</simpara>
</note>
</listitem>
</itemizedlist>
</partintro>
<chapter xml:id="product-versioning-con_patching-upgrading">
<title>Red Hat Process Automation Manager versioning</title>
<simpara>Red Hat Process Automation Manager versions are designated with a numerical <literal>Major.Minor.Patch</literal> format, such as <literal>7.7.1</literal>. In this example, the major release is <literal>7.x.x</literal>, the minor release is <literal>7.7.x</literal>, and the patch release is <literal>7.7.1</literal>. Major releases often require data migration, while minor release upgrades and patch updates are typically managed with update tools provided with the Red Hat Process Automation Manager release artifacts.</simpara>
<simpara>The following are the general types of releases for Red Hat Process Automation Manager:</simpara>
<variablelist>
<varlistentry>
<term>Major release migrations</term>
<listitem>
<simpara>Major releases of Red Hat Process Automation Manager include substantial enhancements, security updates, bug fixes, and possibly redesigned features and functions. Data migration is typically required when an application is moved from one major release to another major release, such as from Red Hat JBoss BPM Suite 6.4.x to Red Hat Process Automation Manager 7.0. Automated migration tools are often provided with new major versions of Red Hat Process Automation Manager to facilitate migration, but some manual effort is likely required for certain data and configurations. The supported migration paths are specified in product announcements and documentation.</simpara>
<simpara>For example migration instructions, see
<link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.0/html/migrating_from_red_hat_jboss_bpm_suite_6.4_to_red_hat_process_automation_manager_7.0/"><emphasis>Migrating from Red Hat JBoss BPM Suite 6.4 to Red Hat Process Automation Manager 7.0</emphasis></link>.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>Minor release upgrades</term>
<listitem>
<simpara>Minor releases of Red Hat Process Automation Manager include enhancements, security updates, and bug fixes. Data migration may be required when an application is moved from one minor release to another minor release, such as from Red Hat Process Automation Manager 7.7.x to 7.8. Automated update tools are often provided with both patch updates and new minor versions of Red Hat Process Automation Manager to facilitate updating certain components of Red Hat Process Automation Manager, such as Business Central, KIE Server, and the headless Process Automation Manager controller. Other Red Hat Process Automation Manager artifacts, such as the decision engine and standalone Business Central, are released as new artifacts with each minor release and you must re-install them to apply the update.</simpara>
<simpara>Before you upgrade to a new minor release, apply the latest patch update to your current version of Red Hat Process Automation Manager to ensure that the minor release upgrade is successful.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>Patch updates</term>
<listitem>
<simpara>Patch updates of Red Hat Process Automation Manager include the latest security updates and bug fixes. Scheduled patch updates contain all previously released patch updates for that minor version of the product, so you do not need to apply each patch update incrementally in order to apply the latest update. For example, you can update Red Hat Process Automation Manager 7.7.0 or 7.7.1 to Red Hat Process Automation Manager 7.7.2. However, for optimal Red Hat Process Automation Manager performance, apply product updates as they become available. Occasionally, unscheduled patch updates may be released outside the normal update cycle of the existing product. These may include security or other updates provided by Red Hat Global Support Services (GSS) to fix specific issues, and may not be cumulative updates.</simpara>
<simpara>Automated update tools are often provided with both patch updates and new minor versions of Red Hat Process Automation Manager to facilitate updating certain components of Red Hat Process Automation Manager, such as Business Central, KIE Server, and the headless Process Automation Manager controller. Other Red Hat Process Automation Manager artifacts, such as the decision engine and standalone Business Central, are released as new artifacts with each minor release and you must re-install them to apply the update.</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara>To ensure optimal transition between releases and to keep your Red Hat Process Automation Manager distribution current with the latest enhancements and fixes, apply new product releases and updates to Red Hat Process Automation Manager as they become available in the Red Hat Customer Portal. Consider also enabling product notifications in the Red Hat Customer Portal.</simpara>
<simpara>For information about enabling product notifications, see <xref linkend="patches-notifications-proc_patching-upgrading"/>.</simpara>
</chapter>
<chapter xml:id="patches-notifications-proc_patching-upgrading">
<title>Enabling Red Hat Process Automation Manager notifications in the Red Hat Customer Portal</title>
<simpara>You can enable notifications in the Red Hat Customer Portal to receive Red Hat Process Automation Manager updates and announcements. These notifications inform you of updated or added documentation, product releases, and patch updates related to Red Hat Process Automation Manager. With notifications enabled, you can more readily apply product updates to Red Hat Process Automation Manager as they become available in the Red Hat Customer Portal to keep your Red Hat Process Automation Manager distribution current with the latest enhancements and fixes.</simpara>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>You have a Red Hat Customer Portal account and are logged in.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>In the top-right corner of the Red Hat Customer Portal window, click your profile name and click <emphasis role="strong">Notifications</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Select the <emphasis role="strong">Notifications</emphasis> tab and click <emphasis role="strong">Manage Notifications</emphasis>.</simpara>
</listitem>
<listitem>
<simpara>Next to <emphasis role="strong">Follow</emphasis>, select <emphasis role="strong">Products</emphasis> from the drop-down menu, and then select <emphasis role="strong">Red Hat Process Automation Manager</emphasis> from the next drop-down menu that appears.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Save Notification</emphasis> to finish.</simpara>
</listitem>
</orderedlist>
<simpara>You can add notifications for any other products as needed in the same way.</simpara>
</chapter>
<chapter xml:id="patches-applying-proc_patching-upgrading">
<title>Applying patch updates and minor release upgrades to Red Hat Process Automation Manager</title>
<simpara>Automated update tools are often provided with both patch updates and new minor versions of Red Hat Process Automation Manager to facilitate updating certain components of Red Hat Process Automation Manager, such as Business Central, KIE Server, and the headless Process Automation Manager controller. Other Red Hat Process Automation Manager artifacts, such as the decision engine and standalone Business Central, are released as new artifacts with each minor release and you must re-install them to apply the update.</simpara>
<simpara>You can use the same automated update tool to apply both patch updates and minor release upgrades to Red Hat Process Automation Manager 7.10. Patch updates of Red Hat Process Automation Manager, such as an update from version 7.10 to 7.10.1, include the latest security updates and bug fixes. Minor release upgrades of Red Hat Process Automation Manager, such as an upgrade from version 7.8.x to 7.9, include enhancements, security updates, and bug fixes.</simpara>
<note>
<simpara>Only updates for Red Hat Process Automation Manager are included in Red Hat Process Automation Manager update tools. Updates to Red Hat JBoss EAP must be applied using Red Hat JBoss EAP patch distributions. For more information about Red Hat JBoss EAP patching, see the  <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.3/html/patching_and_upgrading_guide/"><emphasis>Red Hat JBoss EAP patching and upgrading guide</emphasis></link>.</simpara>
</note>
<itemizedlist>
<title>Prerequisites</title>
<listitem>
<simpara>Your Red Hat Process Automation Manager and KIE Server instances are not running. Do not apply updates while you are running an instance of Red Hat Process Automation Manager or KIE Server.</simpara>
</listitem>
</itemizedlist>
<orderedlist numeration="arabic">
<title>Procedure</title>
<listitem>
<simpara>Navigate to the <link xlink:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html">Software Downloads</link> page in the Red Hat Customer Portal (login required), and select the product and version from the drop-down options.</simpara>
<simpara>If you are upgrading to a new minor release of Red Hat Process Automation Manager, such as an upgrade from version 7.8.x to 7.9, first apply the latest patch update to your current version of Red Hat Process Automation Manager and then follow this procedure again to upgrade to the new minor release.</simpara>
</listitem>
<listitem>
<simpara>Click <emphasis role="strong">Patches</emphasis>, download the <emphasis role="strong">Red Hat Process Automation Manager [VERSION] Update Tool</emphasis>, and extract the downloaded <literal>rhpam-$VERSION-update.zip</literal> file to a temporary directory.</simpara>
<simpara>This update tool automates the update of certain components of Red Hat Process Automation Manager, such as Business Central, KIE Server, and the headless Process Automation Manager controller. Use this update tool first to apply updates and then install any other updates or new release artifacts that are relevant to your Red Hat Process Automation Manager distribution.</simpara>
</listitem>
<listitem>
<simpara>If you want to preserve any files from being updated by the update tool, navigate to the extracted <literal>rhpam-$VERSION-update</literal> folder, open the <literal>blacklist.txt</literal> file, and add the relative paths to the files that you do not want to be updated.</simpara>
<simpara>When a file is listed in the <literal>blacklist.txt</literal> file, the update script does not replace the file with the new version but instead leaves the file in place and in the same location adds the new version with a <literal>.new</literal> suffix. If you blacklist files that are no longer being distributed, the update tool creates an empty marker file with a <literal>.removed</literal> suffix. You can then choose to retain, merge, or delete these new files manually.</simpara>
<simpara>Example files to be excluded in <literal>blacklist.txt</literal> file:</simpara>
<screen>WEB-INF/web.xml  // Custom file
styles/base.css  // Obsolete custom file kept for record</screen>
<simpara>The contents of the blacklisted file directories after the update:</simpara>
<screen>$ ls WEB-INF
web.xml web.xml.new</screen>
<screen>$ ls styles
base.css base.css.removed</screen>
</listitem>
<listitem>
<simpara>In your command terminal, navigate to the temporary directory where you extracted the <literal>rhpam-$VERSION-update.zip</literal> file and run the <literal>apply-updates</literal> script in the following format:</simpara>
<important>
<simpara>Make sure that your Red Hat Process Automation Manager and KIE Server instances are not running before you apply updates. Do not apply updates while you are running an instance of Red Hat Process Automation Manager or KIE Server.</simpara>
</important>
<simpara>On Linux or Unix-based systems:</simpara>
<screen>$ ./apply-updates.sh $DISTRO_PATH $DISTRO_TYPE</screen>
<simpara>On Windows:</simpara>
<screen>$ .\apply-updates.bat $DISTRO_PATH $DISTRO_TYPE</screen>
<simpara>The <literal>$DISTRO_PATH</literal> portion is the path to the relevant distribution directory and the <literal>$DISTRO_TYPE</literal> portion is the type of distribution that you are updating with this update.</simpara>
<simpara>The following distribution types are supported in Red Hat Process Automation Manager update tool:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>rhpam-business-central-eap7-deployable</literal>: Updates Business Central (<literal>business-central.war</literal>)</simpara>
</listitem>
<listitem>
<simpara><literal>rhpam-kie-server-ee8</literal>: Updates KIE Server (<literal>kie-server.war</literal>)</simpara>
</listitem>
<listitem>
<simpara><literal>rhpam-kie-server-jws</literal>: Updates KIE Server on Red Hat JBoss Web Server (<literal>kie-server.war</literal>)</simpara>
</listitem>
<listitem>
<simpara><literal>rhpam-controller-ee7</literal>: Updates the headless Process Automation Manager controller (<literal>controller.war</literal>)</simpara>
</listitem>
<listitem>
<simpara><literal>rhpam-controller-jws</literal>: Updates the headless Process Automation Manager controller on Red Hat JBoss Web Server (<literal>controller.war</literal>)</simpara>
<simpara>Example update to Business Central and KIE Server for a full Red Hat Process Automation Manager distribution on Red Hat JBoss EAP:</simpara>
<screen>./apply-updates.sh ~EAP_HOME/standalone/deployments/business-central.war rhpam-business-central-eap7-deployable

./apply-updates.sh ~EAP_HOME/standalone/deployments/kie-server.war rhpam-kie-server-ee8</screen>
<simpara>Example update to headless Process Automation Manager controller, if used:</simpara>
<screen>./apply-updates.sh ~EAP_HOME/standalone/deployments/controller.war rhpam-controller-ee7</screen>
<simpara>The update script creates a <literal>backup</literal> folder in the extracted <literal>rhpam-$VERSION-update</literal> folder with a copy of the specified distribution, and then proceeds with the update.</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>After the update tool completes, return to the <emphasis role="strong">Software Downloads</emphasis> page of the Red Hat Customer Portal where you downloaded the update tool and install any other updates or new release artifacts that are relevant to your Red Hat Process Automation Manager distribution.</simpara>
<simpara>For files that already exist in your Red Hat Process Automation Manager distribution, such as <literal>.jar</literal> files for the decision engine or other add-ons, replace the existing version of the file with the new version from the Red Hat Customer Portal.</simpara>
</listitem>
<listitem>
<simpara>If you use the standalone <emphasis role="strong">Red Hat Process Automation Manager 7.10.0 Maven Repository</emphasis> artifact (<literal>rhpam-7.10.0-maven-repository.zip</literal>), such as in air-gap environments, download <emphasis role="strong">Red Hat Process Automation Manager 7.10.x Maven Repository</emphasis> and extract the downloaded <literal>rhpam-7.10.x-maven-repository.zip</literal> file to your existing <literal>~/maven-repository</literal> directory to update the relevant contents.</simpara>
<simpara>Example Maven repository update:</simpara>
<screen>$ extract -o rhpam-7.10.x-maven-repository.zip 'rhba-7.10.1.GA-maven-repository/maven-repository/*' -d /tmp/rhbaMavenRepoUpdate

$ mv /tmp/rhbaMavenRepoUpdate/rhba-7.10.0.GA-maven-repository/maven-repository/ $REPO_PATH/</screen>
<note>
<simpara>You can remove the <literal>/tmp/rhbaMavenRepoUpdate</literal> folder after you complete the update.</simpara>
</note>
</listitem>
<listitem>
<simpara>After you finish applying all relevant updates, start Red Hat Process Automation Manager and KIE Server and log in to Business Central.</simpara>
</listitem>
<listitem>
<simpara>Verify that all project data is present and accurate in Business Central, and in the top-right corner of the Business Central window, click your profile name and click <emphasis role="strong">About</emphasis> to verify the updated product version number.</simpara>
<simpara>If you encounter errors or notice any missing data in Business Central, you can restore the contents in the <literal>backup</literal> folder within the <literal>rhpam-$VERSION-update</literal> folder to revert the update tool changes. You can also re-install the relevant release artifacts from your previous version of Red Hat Process Automation Manager in the Red Hat Customer Portal. After restoring your previous distribution, you can try again to run the update.</simpara>
</listitem>
</orderedlist>
</chapter>
<chapter xml:id="additional_resources_4" remap="_additional_resources_4">
<title>Additional resources</title>
<itemizedlist>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/installing_and_configuring_red_hat_process_automation_manager#assembly-planning"><emphasis>Planning a Red Hat Process Automation Manager installation</emphasis></link></simpara>
</listitem>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.8/html-single/patching_and_upgrading_red_hat_process_automation_manager_7.8/"><emphasis>Patching and upgrading Red Hat Process Automation Manager 7.8</emphasis></link></simpara>
</listitem>
<listitem>
<simpara><link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.10/html-single/release_notes_for_red_hat_process_automation_manager_7.10"><emphasis>Release notes for Red Hat Process Automation Manager 7.10</emphasis></link></simpara>
</listitem>
</itemizedlist>
</chapter>
</part>
<appendix xml:id="versioning-information">
<title>Versioning information</title>
<simpara>Documentation last updated on Monday, January 18, 2021.</simpara>
</appendix>
<appendix xml:id="author-group">
<title>Contact information</title>
<simpara>Red Hat Process Automation Manager documentation team: <link xlink:href="mailto:brms-docs@redhat.com">brms-docs@redhat.com</link></simpara>
</appendix>
</book>